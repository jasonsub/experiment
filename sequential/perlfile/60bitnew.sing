array_A[32]+array_A[33]+c1,
array_A[35]+array_A[39]+c2,
array_A[23]+array_A[37]+c3,
array_A[39]+array_A[3]+c4,
array_A[35]+array_A[41]+c5,
array_A[38]+array_A[43]+c6,
array_A[45]+array_A[60]+c7,
array_A[47]+array_A[54]+c8,
array_A[37]+array_A[49]+c9,
array_A[51]+array_A[1]+c10,
array_A[30]+array_A[53]+c11,
array_A[46]+array_A[55]+c12,
array_A[31]+array_A[57]+c13,
array_A[56]+array_A[59]+c14,
array_A[1]+array_A[9]+c15,
array_A[42]+array_A[3]+c16,
array_A[31]+array_A[5]+c17,
array_A[30]+array_A[7]+c18,
array_A[23]+array_A[9]+c19,
array_A[49]+array_A[11]+c20,
array_A[57]+array_A[13]+c21,
array_A[55]+array_A[15]+c22,
array_A[6]+array_A[17]+c23,
array_A[19]+array_A[21]+c24,
array_A[42]+array_A[21]+c25,
array_A[10]+array_A[23]+c26,
array_A[37]+array_A[25]+c27,
array_A[49]+array_A[27]+c28,
array_A[35]+array_A[29]+c29,
array_A[31]+array_A[32]+c30,
array_A[33]+array_A[38]+c31,
array_A[35]+array_A[55]+c32,
array_A[37]+array_A[46]+c33,
array_A[39]+array_A[22]+c34,
array_A[41]+array_A[57]+c35,
array_A[39]+array_A[43]+c36,
array_A[45]+array_A[27]+c37,
array_A[47]+array_A[19]+c38,
array_A[49]+array_A[24]+c39,
array_A[51]+array_A[19]+c40,
array_A[53]+array_A[56]+c41,
array_A[55]+array_A[6]+c42,
array_A[57]+array_A[10]+c43,
array_A[59]+array_A[24]+c44,
array_A[54]+array_A[1]+c45,
array_A[3]+array_A[44]+c46,
array_A[5]+array_A[22]+c47,
array_A[7]+array_A[40]+c48,
array_A[9]+array_A[27]+c49,
array_A[1]+array_A[11]+c50,
array_A[13]+array_A[40]+c51,
array_A[60]+array_A[15]+c52,
array_A[9]+array_A[17]+c53,
array_A[19]+array_A[50]+c54,
array_A[21]+array_A[50]+c55,
array_A[21]+array_A[23]+c56,
array_A[25]+array_A[44]+c57,
array_A[3]+array_A[27]+c58,
array_A[29]+array_A[59]+c59,
/***************************************************/
array_A[31]*array_B[1]+r59+R0,
c1*array_B[3]+r0+R1,
c2*array_B[5]+r1+R2,
c3*array_B[7]+r2+R3,
c4*array_B[9]+r3+R4,
c5*array_B[11]+r4+R5,
c6*array_B[13]+r5+R6,
c7*array_B[15]+r6+R7,
c8*array_B[17]+r7+R8,
c9*array_B[19]+r8+R9,
c10*array_B[21]+r9+R10,
c11*array_B[23]+r10+R11,
c12*array_B[25]+r11+R12,
c13*array_B[27]+r12+R13,
c14*array_B[29]+r13+R14,
c15*array_B[31]+r14+R15,
c16*array_B[33]+r15+R16,
c17*array_B[35]+r16+R17,
c18*array_B[37]+r17+R18,
c19*array_B[39]+r18+R19,
c20*array_B[41]+r19+R20,
c21*array_B[43]+r20+R21,
c22*array_B[45]+r21+R22,
c23*array_B[47]+r22+R23,
c24*array_B[49]+r23+R24,
c25*array_B[51]+r24+R25,
c26*array_B[53]+r25+R26,
c27*array_B[55]+r26+R27,
c28*array_B[57]+r27+R28,
c29*array_B[59]+r28+R29,
c30*array_B[1]+r29+R30,
c31*array_B[3]+r30+R31,
c32*array_B[5]+r31+R32,
c33*array_B[7]+r32+R33,
c34*array_B[9]+r33+R34,
c35*array_B[11]+r34+R35,
c36*array_B[13]+r35+R36,
c37*array_B[15]+r36+R37,
c38*array_B[17]+r37+R38,
c39*array_B[19]+r38+R39,
c40*array_B[21]+r39+R40,
c41*array_B[23]+r40+R41,
c42*array_B[25]+r41+R42,
c43*array_B[27]+r42+R43,
c44*array_B[29]+r43+R44,
c45*array_B[31]+r44+R45,
c46*array_B[33]+r45+R46,
c47*array_B[35]+r46+R47,
c48*array_B[37]+r47+R48,
c49*array_B[39]+r48+R49,
c50*array_B[41]+r49+R50,
c51*array_B[43]+r50+R51,
c52*array_B[45]+r51+R52,
c53*array_B[47]+r52+R53,
c54*array_B[49]+r53+R54,
c55*array_B[51]+r54+R55,
c56*array_B[53]+r55+R56,
c57*array_B[55]+r56+R57,
c58*array_B[57]+r57+R58,
c59*array_B[59]+r58+R59,
/***************************************************/
ideal va = a0^2+a0, a1^2+a1, a2^2+a2, a3^2+a3, a4^2+a4, a5^2+a5, a6^2+a6, a7^2+a7, a8^2+a8, a9^2+a9, a10^2+a10, a11^2+a11, a12^2+a12, a13^2+a13, a14^2+a14, a15^2+a15, a16^2+a16, a17^2+a17, a18^2+a18, a19^2+a19, a20^2+a20, a21^2+a21, a22^2+a22, a23^2+a23, a24^2+a24, a25^2+a25, a26^2+a26, a27^2+a27, a28^2+a28, a29^2+a29, a30^2+a30, a31^2+a31, a32^2+a32, a33^2+a33, a34^2+a34, a35^2+a35, a36^2+a36, a37^2+a37, a38^2+a38, a39^2+a39, a40^2+a40, a41^2+a41, a42^2+a42, a43^2+a43, a44^2+a44, a45^2+a45, a46^2+a46, a47^2+a47, a48^2+a48, a49^2+a49, a50^2+a50, a51^2+a51, a52^2+a52, a53^2+a53, a54^2+a54, a55^2+a55, a56^2+a56, a57^2+a57, a58^2+a58, a59^2+a59, 

********************** ring var ***********************

R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13,R14,R15,R16,R17,R18,R19,R20,R21,R22,R23,R24,R25,R26,R27,R28,R29,R30,R31,R32,R33,R34,R35,R36,R37,R38,R39,R40,R41,R42,R43,R44,R45,R46,R47,R48,R49,R50,R51,R52,R53,R54,R55,R56,R57,R58,R59,r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26,r27,r28,r29,r30,r31,r32,r33,r34,r35,r36,r37,r38,r39,r40,r41,r42,r43,r44,r45,r46,r47,r48,r49,r50,r51,r52,r53,r54,r55,r56,r57,r58,r59,c1,c2,c3,c4,c5,c6,c7,c8,c9,c10,c11,c12,c13,c14,c15,c16,c17,c18,c19,c20,c21,c22,c23,c24,c25,c26,c27,c28,c29,c30,c31,c32,c33,c34,c35,c36,c37,c38,c39,c40,c41,c42,c43,c44,c45,c46,c47,c48,c49,c50,c51,c52,c53,c54,c55,c56,c57,c58,c59,b0,b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20,b21,b22,b23,b24,b25,b26,b27,b28,b29,b30,b31,b32,b33,b34,b35,b36,b37,b38,b39,b40,b41,b42,b43,b44,b45,b46,b47,b48,b49,b50,b51,b52,b53,b54,b55,b56,b57,b58,b59,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51,a52,a53,a54,a55,a56,a57,a58,a59,R,r,A,B


********************** Word vectors ***********************

ideal A_in = a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22,a23,a24,a25,a26,a27,a28,a29,a30,a31,a32,a33,a34,a35,a36,a37,a38,a39,a40,a41,a42,a43,a44,a45,a46,a47,a48,a49,a50,a51,a52,a53,a54,a55,a56,a57,a58,a59;
ideal B_in = b0,b1,b2,b3,b4,b5,b6,b7,b8,b9,b10,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20,b21,b22,b23,b24,b25,b26,b27,b28,b29,b30,b31,b32,b33,b34,b35,b36,b37,b38,b39,b40,b41,b42,b43,b44,b45,b46,b47,b48,b49,b50,b51,b52,b53,b54,b55,b56,b57,b58,b59;
ideal vec_r = r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22,r23,r24,r25,r26,r27,r28,r29,r30,r31,r32,r33,r34,r35,r36,r37,r38,r39,r40,r41,r42,r43,r44,r45,r46,r47,r48,r49,r50,r51,r52,r53,r54,r55,r56,r57,r58,r59;
ideal vec_R = R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13,R14,R15,R16,R17,R18,R19,R20,R21,R22,R23,R24,R25,R26,R27,R28,R29,R30,R31,R32,R33,R34,R35,R36,R37,R38,R39,R40,R41,R42,R43,R44,R45,R46,R47,R48,R49,R50,R51,R52,R53,R54,R55,R56,R57,R58,R59;


************************** Min-poly ************************

minpoly = X^60 + X^59 + X^58 + X^57 + X^56 + X^55 + X^54 + X^53 + X^52 + X^51 + X^50 + X^49 + X^48 + X^47 + X^46 + X^45 + X^44 + X^43 + X^42 + X^41 + X^40 + X^39 + X^38 + X^37 + X^36 + X^35 + X^34 + X^33 + X^32 + X^31 + X^30 + X^29 + X^28 + X^27 + X^26 + X^25 + X^24 + X^23 + X^22 + X^21 + X^20 + X^19 + X^18 + X^17 + X^16 + X^15 + X^14 + X^13 + X^12 + X^11 + X^10 + X^9 + X^8 + X^7 + X^6 + X^5 + X^4 + X^3 + X^2 + X + 1;
