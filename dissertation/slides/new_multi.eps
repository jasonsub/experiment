%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: new_multi.pdf
%%Creator: Adobe Acrobat 10.1.13
%%For: Jason
%%CreationDate: 2015/1/11, 22:37:04
%%BoundingBox: 0 0 1499 625
%%HiResBoundingBox: 0 0 1498.6801 624.9601
%%CropBox: 0 0 1498.6801 624.9601
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 856 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:CreateDate="2015-01-11T22:35:54-07:00"
   xmp:CreatorTool="Microsoft® PowerPoint® 2013"
   xmp:ModifyDate="2015-01-11T22:35:54-07:00"
   pdf:Producer="Microsoft® PowerPoint® 2013">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>骁骏</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">PowerPoint 演示文稿</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -624.96 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 624.96 li
1498.68 624.96 li
1498.68 0 li
cp
clp
gsave
0 624.96 mo
1499 624.96 li
1499 -.039978 li
0 -.039978 li
cp
clp
0 624.96 mo
1498.68 624.96 li
1498.68 -6.10352e-5 li
0 -6.10352e-5 li
cp
false sop
/0 
[/DeviceGray] /CSA add_res
1 gry
ef
968.1 143.1 mo
1000.02 143.1 li
1000.02 112.14 li
968.1 112.14 li
cp
ef
2.28 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
968.1 143.1 mo
1000.02 143.1 li
1000.02 112.14 li
968.1 112.14 li
cp
.0614376 gry
@
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPS-ItalicMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 97 /a put
def
/FontBBox {-498 -307 1333 1023} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD1638113E4B58C0B5F39100186722805B704
AA3988900AFCFF05DD> |-
/zero <1C60D8A8C9B7A73DB95E4C3B2CBDAA180DE16ED2E0B54D373FA0624F4
D4D6AEC3868DC3B6FCE2354D83BCFB00DD4446A756F968EEE24EB76F936C153C
554CF6C4FC531FF7FF83B6E48CEE21091E0E09B4C454DFC4E65880C366E13FC5
BC8A513523C320C7B30F5347C743B956722220B3BEF7EACE8E5F9F591092F7BD
516A6AD1802BEF3B681970F31BDF1B1A76203F2B6ADF0680B5FEC4F306B1764A
BEA599CAC4C746792036F08DB0B307F28AC5ED1> |-
/a <1C60D8A8C9B7A73DB68C06FC199F1F2F20B1C2E3715651C87BCD4ADD6877
5B4647B129144EBE49EAC15F019B26773F428CC0D1BB4A6183FD1BAD53C3DC7D
C1778E21FEA13949F179F397E1068E68EF5BDF24BE0DC7557B673C23D4A50497
DF80D9C838AB9EEA3C59483A8E7BD334D2361BCA7F19AE87B1D972F7B79ABAD0
7378C084886016D514CC545EA1F4A9EE8851A3C3F902C0F0DCD2FEE069D9BC21
3BFD5E5AFCA4D73D61283DE2191744FD94BBAE1E2CE71F1DD86C9281938B9644
2B456E7FA2EA8852C51CB5A9C2A0AFF4A5706E78B9A6A93AA2E14914A3A3355D
7AE853081C2D03136A31> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/BDIHEF+TimesNewRomanPS-ItalicMT /TimesNewRomanPS-ItalicMT findfont ct_VMDictPut
/BDIHEF+TimesNewRomanPS-ItalicMT*1 
[48{/.notdef}rp /zero 48{/.notdef}rp /a 158{/.notdef}rp]
BDIHEF+TimesNewRomanPS-ItalicMT nf
BDIHEF+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf
976.51 134.18 mo
(a)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [12 0 0 -12 0 0 ]msf
985.51 138.62 mo
(0)sh
1000.02 143.1 mo
1032.06 143.1 li
1032.06 112.14 li
1000.02 112.14 li
cp
1 gry
ef
1000.02 143.1 mo
1032.06 143.1 li
1032.06 112.14 li
1000.02 112.14 li
cp
.0614376 gry
@
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
BDIHEF+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7A73DB6A4A1045477B897A236531EE6744E986B049CB2B4
C1FE00325C8BF061D241BD30B895F448A012FA11CB58DD958F1372DACE120865
7E476E9190270F7FC72B0B9DCE2DDE5E748B644DD70718A6734618F8229BDD2E
5AE0C198797BC9647A1D37D27AAA1BAE3BFBF0B70DB4F621F7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BDIHEF+TimesNewRomanPS-ItalicMT /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/BDIHEF+TimesNewRomanPS-ItalicMT*1 
[48{/.notdef}rp /zero /one 47{/.notdef}rp /a 158{/.notdef}rp]
BDIHEF+TimesNewRomanPS-ItalicMT nf
BDIHEF+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf
1008.5 134.18 mo
(a)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [12 0 0 -12 0 0 ]msf
1017.5 138.62 mo
(1)sh
1031.58 143.1 mo
1063.62 143.1 li
1063.62 112.14 li
1031.58 112.14 li
cp
1 gry
ef
1031.58 143.1 mo
1063.62 143.1 li
1063.62 112.14 li
1031.58 112.14 li
cp
.0614376 gry
@
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
BDIHEF+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A73DB69C12026B750802855EAC5092BB0A5898B5D5C055
BF85280FEB4B1F3E4AFB01B0A8A29DB15451C23681417470B94B4D8D92484A39
334C366B9828F8F838BF53371C17891341B316F197C3AA30247051762DF7F17C
B7ACE84978B012AD0CA07C229C814073CD1F19CA205691988B437B6925EC8729
C2823046BA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BDIHEF+TimesNewRomanPS-ItalicMT /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/BDIHEF+TimesNewRomanPS-ItalicMT*1 
[48{/.notdef}rp /zero /one /two 46{/.notdef}rp /a 158{/.notdef}rp]
BDIHEF+TimesNewRomanPS-ItalicMT nf
BDIHEF+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf
1040.04 134.18 mo
(a)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [12 0 0 -12 0 0 ]msf
1049.04 138.62 mo
(2)sh
943.92 127.2 mo
966.04 127.1 li
966.03 126.1 li
943.92 126.2 li
cp
960.3 130.56 mo
967.03 126.6 li
960.27 122.7 li
960.03 122.56 959.73 122.64 959.59 122.88 cv
959.45 123.12 959.53 123.42 959.77 123.56 cv
965.78 127.04 li
965.78 126.17 li
959.8 129.7 li
959.56 129.84 959.48 130.14 959.62 130.38 cv
959.76 130.62 960.06 130.7 960.3 130.56 cv
cp
f
.96 lw
943.92 126.84 mo
943.92 90.2401 li
@
943.92 90.2401 mo
1086.92 90.2401 li
@
1086.84 126.77 mo
1086.84 89.64 li
@
1087.15 126.6 mo
1063.44 126.6 li
@
1.56 lw
982.02 143.1 mo
982.02 154.96 li
@
1202.58 143.58 mo
1234.62 143.58 li
1234.62 112.62 li
1202.58 112.62 li
cp
1 gry
ef
2.28 lw
1202.58 143.58 mo
1234.62 143.58 li
1234.62 112.62 li
1202.58 112.62 li
cp
.0614376 gry
@
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
BDIHEF+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B7A73DB932C2FC82A99989DF032F3B96F74E4FD610D4D7EAD1
65CCAD2E76B2A6CC2F3DFBFF0B1C0B9D44BF48CB3FF170A4E693C5C3830F948A
8F42699FCF3298C2A75F1FAED4604E407E3AF100C6B0B4756C2BD514B43E0192
9C77EBE4BD9EE28001E2C44CAF60218D0123650471707291A349987DB0110818
7E859F71693579D3144674A7934C045E5EDE7120724A5D81356E5F79B91B8B18
25D4C69086BA872B34D991459251> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BDIHEF+TimesNewRomanPS-ItalicMT /Encoding get
dup 98 /b put
pop
%ADOEndSubsetFont
/BDIHEF+TimesNewRomanPS-ItalicMT*1 
[48{/.notdef}rp /zero /one /two 46{/.notdef}rp /a /b 157{/.notdef}rp]
BDIHEF+TimesNewRomanPS-ItalicMT nf
BDIHEF+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf
1211.06 134.71 mo
(b)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [12 0 0 -12 0 0 ]msf
1220.06 139.15 mo
(0)sh
1234.62 143.58 mo
1266.54 143.58 li
1266.54 112.62 li
1234.62 112.62 li
cp
1 gry
ef
1234.62 143.58 mo
1266.54 143.58 li
1266.54 112.62 li
1234.62 112.62 li
cp
.0614376 gry
@
BDIHEF+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf
1243.06 134.71 mo
(b)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [12 0 0 -12 0 0 ]msf
1252.06 139.15 mo
(1)sh
1267.14 143.58 mo
1299.06 143.58 li
1299.06 112.62 li
1267.14 112.62 li
cp
1 gry
ef
1267.14 143.58 mo
1299.06 143.58 li
1299.06 112.62 li
1267.14 112.62 li
cp
.0614376 gry
@
BDIHEF+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf
1275.58 134.71 mo
(b)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [12 0 0 -12 0 0 ]msf
1284.58 139.15 mo
(2)sh
1179.96 127.68 mo
1202.08 127.58 li
1202.07 126.58 li
1179.96 126.68 li
cp
1196.34 131.04 mo
1203.07 127.08 li
1196.31 123.18 li
1196.07 123.04 1195.77 123.12 1195.63 123.36 cv
1195.49 123.6 1195.57 123.9 1195.81 124.04 cv
1201.82 127.52 li
1201.82 126.65 li
1195.84 130.18 li
1195.6 130.32 1195.52 130.62 1195.66 130.86 cv
1195.8 131.1 1196.1 131.18 1196.34 131.04 cv
cp
f
.96 lw
1179.96 127.44 mo
1179.96 90.84 li
@
1179.96 90.84 mo
1322.77 90.84 li
@
1322.76 128.04 mo
1322.76 91.44 li
@
1322.71 128.28 mo
1299 128.28 li
@
1.56 lw
1138.86 161.58 mo
1138.86 179.98 li
@
1138.86 161.58 mo
1284.1 161.58 li
@
2.28 lw
1146.42 179.28 mo
1146.42 194.22 1140.08 206.34 1132.26 206.34 cv
1124.52 206.34 1118.21 194.45 1118.1 179.65 cv
@
1146.43 179.34 mo
1118.1 179.71 li
@
1.56 lw
1124.22 161.82 mo
1124.22 179.3 li
@
2.28 lw
1003.14 184.08 mo
1003.14 198.49 996.69 210.18 988.74 210.18 cv
980.87 210.18 974.46 198.72 974.34 184.46 cv
@
1002.78 185.1 mo
1002.78 190.14 996.33 194.22 988.38 194.22 cv
980.74 194.22 974.43 190.44 974 185.61 cv
@
1002.66 178.02 mo
1002.66 183.06 996.21 187.14 988.26 187.14 cv
980.62 187.14 974.31 183.36 973.88 178.53 cv
@
1.56 lw
982.26 154.98 mo
982.26 194.21 li
@
1124.95 161.82 mo
996.42 161.82 li
@
996.66 161.58 mo
996.66 194.2 li
@
2.28 lw
1239.18 184.92 mo
1239.18 199.33 1232.73 211.02 1224.78 211.02 cv
1216.91 211.02 1210.5 199.56 1210.38 185.3 cv
@
1238.94 185.88 mo
1238.94 190.88 1232.49 194.94 1224.54 194.94 cv
1216.9 194.94 1210.6 191.19 1210.16 186.39 cv
@
1.56 lw
1218.53 143.58 mo
1218.3 194.41 li
@
1232.7 161.58 mo
1232.7 194.98 li
@
2.28 lw
1239.54 178.5 mo
1239.54 183.54 1233.09 187.62 1225.14 187.62 cv
1217.5 187.62 1211.19 183.84 1210.76 179.01 cv
@
1.56 lw
1284.06 144.06 mo
1284.06 161.65 li
@
988.26 231.54 mo
1015.87 231.54 li
@
1031.58 232.02 mo
1224.82 232.02 li
@
1225.14 232.01 mo
1225.14 211.02 li
@
2.28 lw
1037.94 248.94 mo
1037.94 263.92 1031.6 276.06 1023.78 276.06 cv
1016.04 276.06 1009.73 264.14 1009.62 249.31 cv
@
1037.95 248.94 mo
1009.62 249.31 li
@
1.56 lw
1031.82 231.54 mo
1031.82 249.54 li
@
1015.86 231.54 mo
1015.86 249.54 li
@
1226.1 440.7 mo
1262.46 440.7 li
1262.46 404.34 li
1226.1 404.34 li
cp
1 gry
ef
2.28 lw
1226.1 440.7 mo
1262.46 440.7 li
1262.46 404.34 li
1226.1 404.34 li
cp
.0614376 gry
@
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
BDIHEF+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/r <1C60D8A8C9B7361F365886EBFECCD8473E83DA137EE4FF5446DC34EB9670
2032A1EC6B4D0B80987318881760797A2A703BDB19E24F1B10629EC5D3297F26
5B468217AF43A693E97671CE6B3D388E20C056A563C2FC1423CD8BC8B3EC8EC0
9DC18882E406798A4EAEA9C53CBBD9B8E9BC3831F4F1A6A626135124B3F0C4D3
2FC8873A1B53DB02AD4C1E42492228869E79B5F7AA6DA878613B470F5F6920F4
2F08D0203966> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BDIHEF+TimesNewRomanPS-ItalicMT /Encoding get
dup 114 /r put
pop
%ADOEndSubsetFont
/BDIHEF+TimesNewRomanPS-ItalicMT*1 
[48{/.notdef}rp /zero /one /two 46{/.notdef}rp /a /b 15{/.notdef}rp 
/r 141{/.notdef}rp]
BDIHEF+TimesNewRomanPS-ItalicMT nf
BDIHEF+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf
1237.82 429.17 mo
(r)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [12 0 0 -12 0 0 ]msf
1244.78 433.61 mo
(0)sh
1119.18 440.7 mo
1155.54 440.7 li
1155.54 404.34 li
1119.18 404.34 li
cp
1 gry
ef
1119.18 440.7 mo
1155.54 440.7 li
1155.54 404.34 li
1119.18 404.34 li
cp
.0614376 gry
@
BDIHEF+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf
1130.9 429.17 mo
(r)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [12 0 0 -12 0 0 ]msf
1137.86 433.61 mo
(1)sh
1011.78 440.7 mo
1048.14 440.7 li
1048.14 404.34 li
1011.78 404.34 li
cp
1 gry
ef
1011.78 440.7 mo
1048.14 440.7 li
1048.14 404.34 li
1011.78 404.34 li
cp
.0614376 gry
@
BDIHEF+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf
1023.5 429.17 mo
(r)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [12 0 0 -12 0 0 ]msf
1030.46 433.61 mo
(2)sh
1.56 lw
1132.26 206.34 mo
1132.26 275.98 li
@
2.28 lw
1141.62 289.8 mo
1141.62 304.21 1135.17 315.9 1127.22 315.9 cv
1119.35 315.9 1112.94 304.44 1112.82 290.18 cv
@
1141.26 290.82 mo
1141.26 295.86 1134.81 299.94 1126.86 299.94 cv
1119.22 299.94 1112.91 296.16 1112.48 291.33 cv
@
1141.14 283.74 mo
1141.14 288.78 1134.69 292.86 1126.74 292.86 cv
1119.1 292.86 1112.79 289.08 1112.36 284.25 cv
@
1.56 lw
1132.38 268.62 mo
1132.38 299.98 li
@
1141.86 333.54 mo
1237.66 333.54 li
@
1120.14 274.62 mo
1120.14 299.91 li
@
1023.78 299.78 mo
1023.78 276.06 li
@
968.22 422.82 mo
968.22 463.18 li
@
968.22 462.78 mo
1311.54 462.78 li
@
2.28 lw
1259.1 348.3 mo
1259.1 362.75 1252.65 374.46 1244.7 374.46 cv
1236.83 374.46 1230.42 362.98 1230.3 348.68 cv
@
1258.86 349.32 mo
1258.86 354.32 1252.39 358.38 1244.4 358.38 cv
1236.73 358.38 1230.4 354.63 1229.96 349.84 cv
@
1258.74 342.24 mo
1258.74 347.24 1252.27 351.3 1244.28 351.3 cv
1236.61 351.3 1230.28 347.55 1229.84 342.76 cv
@
1.56 lw
1249.86 333.78 mo
1249.86 358.41 li
@
1237.62 333.18 mo
1237.62 358.47 li
@
1126.26 315.9 mo
1126.26 333.75 li
@
1126.26 333.3 mo
1141.77 333.3 li
@
1311.54 462.79 mo
1311.54 333.78 li
@
1249.86 334.38 mo
1311.47 334.38 li
@
1244.34 374.1 mo
1244.34 404.44 li
@
1226.15 421.8 mo
1157.08 421.8 li
1157.08 423.36 li
1226.15 423.36 li
cp
1162.69 418.41 mo
1155.54 422.58 li
1162.69 426.75 li
1163.06 426.97 1163.54 426.85 1163.76 426.47 cv
1163.98 426.1 1163.85 425.62 1163.48 425.41 cv
1157.48 421.91 li
1157.48 423.25 li
1163.48 419.75 li
1163.85 419.54 1163.98 419.06 1163.76 418.69 cv
1163.54 418.31 1163.06 418.19 1162.69 418.41 cv
cp
f
1119.2 421.8 mo
1084.12 421.8 li
1084.12 423.36 li
1119.2 423.36 li
cp
1089.73 418.41 mo
1082.58 422.58 li
1089.73 426.75 li
1090.1 426.97 1090.58 426.85 1090.8 426.47 cv
1091.02 426.1 1090.89 425.62 1090.52 425.41 cv
1084.52 421.91 li
1084.52 423.25 li
1090.52 419.75 li
1090.89 419.54 1091.02 419.06 1090.8 418.69 cv
1090.58 418.31 1090.1 418.19 1089.73 418.41 cv
cp
f
2.28 lw
1044.66 348 mo
1044.66 362.41 1038.21 374.1 1030.26 374.1 cv
1022.39 374.1 1015.98 362.64 1015.86 348.38 cv
@
1044.42 349.02 mo
1044.42 354.06 1037.95 358.14 1029.96 358.14 cv
1022.29 358.14 1015.96 354.36 1015.52 349.54 cv
@
1044.18 341.94 mo
1044.18 346.98 1037.73 351.06 1029.78 351.06 cv
1022.14 351.06 1015.83 347.28 1015.4 342.45 cv
@
1.56 lw
1035.42 337.38 mo
1035.42 358.08 li
@
1023.66 299.82 mo
1023.66 358.15 li
@
1029.9 373.74 mo
1029.9 404.08 li
@
1035.42 337.62 mo
1083.77 337.62 li
@
1083.66 337.38 mo
1083.66 422.45 li
@
1011.32 423.32 mo
969.76 423.24 li
969.77 421.68 li
1011.33 421.76 li
cp
975.36 426.65 mo
968.22 422.46 li
975.38 418.3 li
975.75 418.08 976.23 418.21 976.45 418.58 cv
976.66 418.96 976.54 419.43 976.16 419.65 cv
970.16 423.14 li
970.16 421.79 li
976.15 425.3 li
976.52 425.52 976.65 426 976.43 426.37 cv
976.21 426.74 975.73 426.87 975.36 426.65 cv
cp
f
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
BDIHEF+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B77FE2C1AAE0EC93E571B636F5347D3714722A84750C1B29A3
9B8539044786FB4D21214EC790263603D768977575E3DFEDEB06ED210B719A19
51D9CD3A1CEDC2DBBBA9F50EB52B23C7BC0E7C5116FC1274BBC998D424E35185
95216116D6B76CDF4E0BCDAF27025304BCCA1980CECDB742C27E839F34D438C5
CC751D1A202A9B0CBB89CFB07DF67AB5E8EE4143A6BB864E7AFD01C988BDA57B
AAFB46475895EDA7DC9A3D645E52BE6B50DA1C1724C629C5533C12A95B43E497
C080A6D8450597> |-
/d <1C60D8A8C9B7A73DB691FFA60643BA6E96E7C7C2DDEF80CD1CC4E8DF6116
160F4B6BEC2C5A3FD0EFF676934C9853DC2AFCDE40FCD6A7962C3CCB0F256744
23D13531F42E3841F98600FD9B5DAA96A9419079DE3DDCAA270D347DBB8C114A
6FB1D82FDCA79BCBEE0518D5F888E4054C9768F6434472E73165A3126D5BD56D
8E1B8CDE44ACA6EF9615CFA40888BA656F1BE25E2866BF1A2FCA5AAAEE4F1293
B59360F147EFB7B6289498A57B7354A472AFD0CD81D495F51B9A26687A9D12C5
CDEBB20FAC42D12F908FE6C73F05DD391AF99090AF4E6EC3C789DC0A2BD1E10D
AD701AF1166FE91AEB4B604D5FDFFD4C81AD27FA4031BCD4AA2A60CE2C008F46
6E3EE8EE5415C047> |-
/e <1C60D8A8C9B77FE2CEBC851BC1D55BEFCC6636F8B07C124AAAAD6AC237A2
E0178B712156D556EE6FB45645CC6CBEAF8E97CBE4F832E2F621B213660DC4F9
A0F0631BE4B937D282930FF5CB48932FE4C3118EA58028F6EA53582C8DE2452B
3135816834C0E4D947BA5BD58F1D5AB9E28423127BFB8D26FB6EEF3AB8E9B9D2
410DD3AF694FFEBD7B7FE682E5B937ACC2C6A43489D3F9EF3944E87BAD6842E7
160B3BC59BD87C15EE67EE949D19E2030F058D91390B17854C6C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BDIHEF+TimesNewRomanPS-ItalicMT /Encoding get
dup 99 /c put
dup 100 /d put
dup 101 /e put
pop
%ADOEndSubsetFont
/BDIHEF+TimesNewRomanPS-ItalicMT*1 
[48{/.notdef}rp /zero /one /two 46{/.notdef}rp /a /b /c 
/d /e 12{/.notdef}rp /r 141{/.notdef}rp]
BDIHEF+TimesNewRomanPS-ItalicMT nf
BDIHEF+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
991.39 222.65 mo
(c)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
1002.07 228.53 mo
(1)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
1231.3 221.74 mo
(c)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
1241.98 227.62 mo
(2)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
1135.03 220.42 mo
(d)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
1147.03 226.3 mo
(0)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
995.21 303.86 mo
(d)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
1007.21 309.74 mo
(1)sh
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
def
/FontBBox {-568 -307 2000 1007} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72E
FEDBB222483BD74F8B> |-
/parenleft <1C60D8A8C9B81F2C3AC09B674C4ECE2BEF4D70AD3508D915EA9A
E12419376F6EEF231ECE8179CA4531F29291ACACE060AEF98AD6F2FFF2BEA533
946FFA1C8BC3953D72A31BB8ABD9782D71B2146F964D99646263E2D414F84FA0
49D36B9B13B7F6C8AA7A4A5EB0> |-
/parenright <1C60D8A8C9B81F2C3CA029BC286E27661FD7F18B990CFF4A0AF
58404A2F35E11D14FBA406192D392AD203A879E34B8FA3132863211808E5BD63
BDAA607B8E04E23E92C61AAA8B57E5E7609689020D20EB927A1EC6CC0BC06B54
0A016D558248DC4A3E8183F5F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/BDIHEG+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/BDIHEG+TimesNewRomanPSMT*1 
[40{/.notdef}rp /parenleft /parenright 214{/.notdef}rp]
BDIHEG+TimesNewRomanPSMT nf
BDIHEG+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
984.58 327.7 mo
(\()sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
992.62 327.7 mo
(e)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
1003.3 333.58 mo
(2)sh
BDIHEG+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
1011.34 327.7 mo
(\))sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
1103.42 333.02 mo
(e)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
1114.1 338.9 mo
(0)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
1162.49 412.3 mo
(r)sh
%ADOBeginSubsetFont: PBAAAA+Calibri,Italic Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /PBAAAA+Calibri,Italic def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 146 /quoteright put
def
/FontBBox {-725 -276 1260 1014} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B7A0865786BC308F2320639BB536432D0898AEB6E2A7
5CF9EC2A9EC0700EC985467C5EB75BAFAE6BE92B47D4665D1FFB7CDD63B993D8
CAF292A657BB84C1D7B11457D454AE84F45E42136F191EC6E3B3983E5AB3335D
EC1B5DA070AA269E3098A95D700B7A877E0B90FEA50C57240FE69A623C227A24
32F0D09A0AB3B37F9929A87FD9AD5B69FC3DDBBDE0A657548A6A0CA57D1D47D5
FE926BE7FF962360C0A9B770C0895EF6EBFFA4DC6BEC37F71748863B9F794A34
58D5F95997EC1E7D14F6BEF0F24D8F15E48015D300AB35CF12A219244AC1E96B
AAD98C9FB5AA9AB620D4759046C90591AD5B5DB9058FED9B2DEAA5C289619C69
E6B8AFBA78E92BA7CAD51162C8E19B9CE3A002008E1F2E7A1C2CA8B94E16AF51
1B72C953877A73A560545823ADD0EF14F1A99CBC77A9AEB372F7F84402780C34
1A1F3B424BB5BB3D045333E21109BF0BFC6DF2C339E12B2157F8A656B74474F0
BCE53FA32D21B2F841C437CBC8FF800542665AE6B6AE1AB4D9D2CA7B4C4D6695
3BDAE1223DC341C8BCCF7DF80B0EAE877C569B5D2FC0CF06741B78357213D2C0
36105C76D1B0229545F400BC4FF0C330A129DED3A7DD021F5A29FF7E933705A9
10D64D991F85DB9CFE06DFBE23A1219DBA72230B> |-
/quoteright <1C60D8A8C9B8707CDC4EAE46E9450EA82CAF3EF4EFC6C32CC4C
6719FC459ACE9302A903D8836EA00BF2313033E23772051CE61A6AAEE24EB811
54CC5EB2B35F7890B13206AF5A2147451EF9B2EA06BCC81BCD8EF9DE08C4EC5A
989EE7EB4D3B4015C9623002C67054B4CECC1D4482CCB21B84C4E4028BBD6D53
75D7F20C9441B50DA7B9EDB87F8A908DA079B476A0DDBFB8696AC5D5959> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/BDIHEH+Calibri,Italic /PBAAAA+Calibri,Italic findfont ct_VMDictPut
/BDIHEH+Calibri,Italic*1 
[146{/.notdef}rp /quoteright 109{/.notdef}rp]
BDIHEH+Calibri,Italic nf
BDIHEH+Calibri,Italic*1 [24 0 0 -24 0 0 ]msf
1171.85 412.3 mo
(\222)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
1177.85 418.18 mo
(1)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
1250.88 396.41 mo
(r)sh
BDIHEH+Calibri,Italic*1 [24 0 0 -24 0 0 ]msf
1260.24 396.41 mo
(\222)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
1266.24 402.29 mo
(0)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [24.024 0 0 -24.024 0 0 ]msf
1003.75 393.55 mo
(r)sh
BDIHEH+Calibri,Italic*1 [24.024 0 0 -24.024 0 0 ]msf
1013.11 393.55 mo
(\222)sh
BDIHEF+TimesNewRomanPS-ItalicMT*1 [15.984 0 0 -15.984 0 0 ]msf
1019.11 399.43 mo
(2)sh
1047.13 143.46 mo
1046.7 161.54 li
@
988.74 210.9 mo
988.74 231.35 li
@
1023.78 299.77 mo
1071.52 299.77 li
1071.52 274.86 li
1119.26 274.86 li
@
351.079 265.561 mo
356.792 266.132 li
362.123 267.467 li
366.883 269.949 li
371.451 272.998 li
375.071 276.814 li
378.307 281.2 li
380.592 286.16 li
382.116 291.309 li
382.496 297.032 li
382.116 302.752 li
380.592 308.093 li
378.307 313.053 li
375.071 317.438 li
371.451 321.063 li
366.883 324.305 li
362.123 326.593 li
356.792 328.121 li
351.079 328.503 li
351.079 265.561 li
cp
1 gry
ef
351.079 265.561 mo
356.792 266.132 li
362.123 267.467 li
366.883 269.949 li
371.451 272.998 li
375.071 276.814 li
378.307 281.2 li
380.592 286.16 li
382.116 291.309 li
382.496 297.032 li
382.116 302.752 li
380.592 308.093 li
378.307 313.053 li
375.071 317.438 li
371.451 321.063 li
366.883 324.305 li
362.123 326.593 li
356.792 328.121 li
351.079 328.503 li
351.079 265.561 li
cp
1.5137 lw
1 lj
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
351.016 265.498 mo
356.729 266.069 li
.0614376 gry
6.0791 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
356.729 266.069 mo
362.06 267.404 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
362.06 267.404 mo
366.82 269.886 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
366.82 269.886 mo
371.388 272.935 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
371.388 272.935 mo
375.008 276.752 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
375.008 276.752 mo
378.245 281.137 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
378.245 281.137 mo
380.53 286.097 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
380.53 286.097 mo
382.054 291.246 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
382.054 291.246 mo
382.433 296.969 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
382.433 296.969 mo
382.054 302.69 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
382.054 302.69 mo
380.53 308.03 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
380.53 308.03 mo
378.245 312.99 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
378.245 312.99 mo
375.008 317.376 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
375.008 317.376 mo
371.388 321 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
371.388 321 mo
366.82 324.242 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
366.82 324.242 mo
362.06 326.53 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
362.06 326.53 mo
356.729 328.058 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
356.729 328.058 mo
351.016 328.441 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
351.016 328.441 mo
351.016 328.441 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
319.661 328.503 mo
351.078 328.503 li
351.078 265.561 li
319.661 265.561 li
cp
1 gry
ef
319.661 328.503 mo
351.078 328.503 li
351.078 265.561 li
319.661 265.561 li
cp
1.5137 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
351.016 265.498 mo
319.599 265.498 li
.0614376 gry
6.0791 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
319.599 265.498 mo
319.599 328.441 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
319.599 328.441 mo
351.016 328.441 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
288.179 281.33 mo
319.599 281.33 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
288.179 312.609 mo
319.599 312.609 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
382.433 296.969 mo
413.85 296.969 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
660.813 161.169 mo
680.616 161.169 li
13.696 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
680.616 161.169 mo
680.616 220.676 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
680.616 220.676 mo
660.813 220.676 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
660.813 220.676 mo
660.813 161.169 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
660.813 240.511 mo
680.616 240.511 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
680.616 240.511 mo
680.616 300.019 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
680.616 300.019 mo
660.813 300.019 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
660.813 300.019 mo
660.813 240.511 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
660.813 319.857 mo
680.616 319.857 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
680.616 319.857 mo
680.616 379.364 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
680.616 379.364 mo
660.813 379.364 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
660.813 379.364 mo
660.813 319.857 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
260.001 171.087 mo
591.505 171.087 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
591.505 171.087 mo
591.505 379.364 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
591.505 379.364 mo
260.001 379.364 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
260.001 379.364 mo
260.001 171.087 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
591.505 270.265 mo
654.531 270.265 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
638.028 264.418 mo
654.593 270.328 li
638.028 276.051 li
641.453 270.328 li
638.028 264.418 li
cp
ef
638.028 264.418 mo
654.593 270.328 li
638.028 276.051 li
641.453 270.328 li
638.028 264.418 li
cp
1.5137 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
637.966 275.988 mo
654.531 270.265 li
6.0791 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
654.531 270.265 mo
637.966 264.355 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
637.966 264.355 mo
641.391 270.265 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
641.391 270.265 mo
637.966 275.988 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
591.505 349.611 mo
654.531 349.611 li
13.696 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
638.028 343.76 mo
654.593 349.674 li
638.028 355.393 li
641.453 349.674 li
638.028 343.76 li
cp
ef
638.028 343.76 mo
654.593 349.674 li
638.028 355.393 li
641.453 349.674 li
638.028 343.76 li
cp
1.5137 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
637.966 355.33 mo
654.531 349.611 li
6.0791 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
654.531 349.611 mo
637.966 343.697 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
637.966 343.697 mo
641.391 349.611 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
641.391 349.611 mo
637.966 355.33 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
596.454 190.922 mo
659.48 190.922 li
13.696 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
642.977 185.261 mo
659.542 190.984 li
642.977 196.705 li
646.212 190.984 li
642.977 185.261 li
cp
ef
642.977 185.261 mo
659.542 190.984 li
642.977 196.705 li
646.212 190.984 li
642.977 185.261 li
cp
1.5137 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
642.915 196.642 mo
659.48 190.922 li
6.0791 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
659.48 190.922 mo
642.915 185.199 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
642.915 185.199 mo
646.15 190.922 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
646.15 190.922 mo
642.915 196.642 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
680.616 349.611 mo
744.785 349.611 li
13.696 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
744.785 349.611 mo
744.785 418.844 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
744.785 418.844 mo
175.839 418.844 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
175.839 418.844 mo
175.839 344.651 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
175.839 344.651 mo
258.666 344.651 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
242.355 338.801 mo
258.729 344.714 li
242.355 350.437 li
245.591 344.714 li
242.355 338.801 li
cp
ef
242.355 338.801 mo
258.729 344.714 li
242.355 350.437 li
245.591 344.714 li
242.355 338.801 li
cp
1.5137 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
242.293 350.374 mo
258.666 344.651 li
6.0791 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
258.666 344.651 mo
242.293 338.739 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
242.293 338.739 mo
245.529 344.651 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
245.529 344.651 mo
242.293 350.374 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
680.616 275.225 mo
774.488 275.225 li
13.696 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
774.488 275.225 mo
774.488 443.642 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
774.488 443.642 mo
151.085 443.642 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
151.085 443.642 mo
151.085 309.937 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
151.085 309.937 mo
253.717 309.937 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
237.403 304.088 mo
253.779 310 li
237.403 315.723 li
240.641 310 li
237.403 304.088 li
cp
ef
237.403 304.088 mo
253.779 310 li
237.403 315.723 li
240.641 310 li
237.403 304.088 li
cp
1.5137 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
237.341 315.66 mo
253.717 309.937 li
6.0791 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
253.717 309.937 mo
237.341 304.025 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
237.341 304.025 mo
240.578 309.937 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
240.578 309.937 mo
237.341 315.66 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
680.616 190.922 mo
769.539 190.922 li
13.696 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
769.539 190.922 mo
769.539 136.374 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
769.539 136.374 mo
180.788 136.374 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
180.788 136.374 mo
180.788 225.636 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
180.788 225.636 mo
258.666 225.636 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
242.355 219.786 mo
258.729 225.698 li
242.355 231.419 li
245.591 225.698 li
242.355 219.786 li
cp
ef
242.355 219.786 mo
258.729 225.698 li
242.355 231.419 li
245.591 225.698 li
242.355 219.786 li
cp
1.5137 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
242.293 231.356 mo
258.666 225.636 li
6.0791 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
258.666 225.636 mo
242.293 219.723 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
242.293 219.723 mo
245.529 225.636 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
245.529 225.636 mo
242.293 231.356 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
700.861 149.977 mo
696.862 158.371 li
704.479 158.371 li
700.861 149.977 li
cp
701.622 145.017 mo
702.004 145.017 li
709.238 162.184 li
709.621 163.328 li
710.003 164.091 li
710.382 164.663 li
710.764 165.237 li
711.334 165.616 li
711.906 165.809 li
712.667 165.809 li
712.667 166.191 li
704.479 166.191 li
704.479 165.809 li
705.24 165.809 li
705.811 165.616 li
706.192 165.426 li
706.383 165.045 li
706.575 164.474 li
706.575 163.902 li
706.192 163.138 li
706.003 162.184 li
704.861 159.325 li
696.484 159.325 li
695.149 162.567 li
694.77 163.328 li
694.577 163.902 li
694.577 164.474 li
694.77 165.045 li
694.959 165.426 li
695.53 165.616 li
696.101 165.809 li
697.055 165.809 li
697.055 166.191 li
690.581 166.191 li
690.581 165.809 li
691.342 165.809 li
691.913 165.426 li
692.103 165.237 li
693.055 164.091 li
694.006 161.995 li
701.622 145.017 li
cp
ef
700.861 149.977 mo
696.862 158.371 li
704.479 158.371 li
700.861 149.977 li
cp
701.622 145.017 mo
702.004 145.017 li
709.238 162.184 li
709.621 163.328 li
710.003 164.091 li
710.382 164.663 li
710.764 165.237 li
711.334 165.616 li
711.906 165.809 li
712.667 165.809 li
712.667 166.191 li
704.479 166.191 li
704.479 165.809 li
705.24 165.809 li
705.811 165.616 li
706.192 165.426 li
706.383 165.045 li
706.575 164.474 li
706.575 163.902 li
706.192 163.138 li
706.003 162.184 li
704.861 159.325 li
696.484 159.325 li
695.149 162.567 li
694.77 163.328 li
694.577 163.902 li
694.577 164.474 li
694.77 165.045 li
694.959 165.426 li
695.53 165.616 li
696.101 165.809 li
697.055 165.809 li
697.055 166.191 li
690.581 166.191 li
690.581 165.809 li
691.342 165.809 li
691.913 165.426 li
692.103 165.237 li
693.055 164.091 li
694.006 161.995 li
701.622 145.017 li
cp
1.5137 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
699.53 245.344 mo
698.576 245.344 li
697.815 245.344 li
697.244 245.344 li
696.673 245.344 li
696.673 254.117 li
700.291 254.498 li
702.576 254.117 li
704.479 253.163 li
705.432 251.828 li
705.811 250.11 li
705.811 248.775 li
705.24 247.632 li
704.672 247.061 li
704.1 246.486 li
703.146 245.916 li
701.433 245.344 li
699.53 245.344 li
cp
699.337 235.425 mo
698.004 235.618 li
696.673 235.807 li
696.673 244.009 li
697.244 244.198 li
698.004 244.198 li
698.769 244.198 li
699.53 244.198 li
701.622 244.198 li
702.958 243.816 li
703.718 243.437 li
704.1 242.863 li
704.479 242.291 li
704.861 241.148 li
704.861 240.002 li
704.479 238.286 li
703.528 236.76 li
701.815 235.807 li
699.337 235.425 li
cp
690.77 234.472 mo
699.719 234.472 li
702.004 234.472 li
703.718 234.853 li
705.811 235.618 li
707.335 236.76 li
708.289 238.286 li
708.479 240.195 li
708.479 241.148 li
708.096 242.102 li
707.525 243.055 li
706.764 243.816 li
705.811 244.39 li
704.672 244.772 li
706.575 245.533 li
707.907 246.297 li
709.049 247.822 li
709.431 249.728 li
709.431 250.875 li
709.049 251.828 li
708.479 252.781 li
707.718 253.546 li
706.953 254.307 li
705.811 254.881 li
703.718 255.259 li
700.672 255.453 li
690.77 255.453 li
690.77 255.07 li
691.531 255.07 li
692.294 255.07 li
693.055 254.688 li
693.434 254.307 li
693.627 253.735 li
693.816 252.971 li
693.816 251.828 li
693.816 238.095 li
693.816 237.142 li
693.627 236.379 li
693.627 235.807 li
693.434 235.425 li
692.866 235.042 li
692.294 234.853 li
691.531 234.853 li
690.77 234.853 li
690.77 234.472 li
cp
ef
699.53 245.344 mo
698.576 245.344 li
697.815 245.344 li
697.244 245.344 li
696.673 245.344 li
696.673 254.117 li
700.291 254.498 li
702.576 254.117 li
704.479 253.163 li
705.432 251.828 li
705.811 250.11 li
705.811 248.775 li
705.24 247.632 li
704.672 247.061 li
704.1 246.486 li
703.146 245.916 li
701.433 245.344 li
699.53 245.344 li
cp
699.337 235.425 mo
698.004 235.618 li
696.673 235.807 li
696.673 244.009 li
697.244 244.198 li
698.004 244.198 li
698.769 244.198 li
699.53 244.198 li
701.622 244.198 li
702.958 243.816 li
703.718 243.437 li
704.1 242.863 li
704.479 242.291 li
704.861 241.148 li
704.861 240.002 li
704.479 238.286 li
703.528 236.76 li
701.815 235.807 li
699.337 235.425 li
cp
690.77 234.472 mo
699.719 234.472 li
702.004 234.472 li
703.718 234.853 li
705.811 235.618 li
707.335 236.76 li
708.289 238.286 li
708.479 240.195 li
708.479 241.148 li
708.096 242.102 li
707.525 243.055 li
706.764 243.816 li
705.811 244.39 li
704.672 244.772 li
706.575 245.533 li
707.907 246.297 li
709.049 247.822 li
709.431 249.728 li
709.431 250.875 li
709.049 251.828 li
708.479 252.781 li
707.718 253.546 li
706.953 254.307 li
705.811 254.881 li
703.718 255.259 li
700.672 255.453 li
690.77 255.453 li
690.77 255.07 li
691.531 255.07 li
692.294 255.07 li
693.055 254.688 li
693.434 254.307 li
693.627 253.735 li
693.816 252.971 li
693.816 251.828 li
693.816 238.095 li
693.816 237.142 li
693.627 236.379 li
693.627 235.807 li
693.434 235.425 li
692.866 235.042 li
692.294 234.853 li
691.531 234.853 li
690.77 234.853 li
690.77 234.472 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
704.1 309.811 mo
703.337 309.811 li
702.576 310 li
701.622 310.382 li
701.622 318.967 li
702.194 318.967 li
702.576 318.967 li
705.24 318.584 li
706.953 317.63 li
708.096 316.106 li
708.479 314.196 li
708.289 312.481 li
707.335 310.954 li
705.811 310 li
704.1 309.811 li
cp
695.719 308.858 mo
703.337 308.858 li
706.383 308.858 li
708.289 309.239 li
709.431 309.619 li
710.192 310.193 li
710.953 310.954 li
711.714 311.907 li
712.095 312.861 li
712.095 314.007 li
711.906 315.723 li
710.953 317.249 li
709.238 318.395 li
707.146 319.156 li
711.525 325.451 li
712.286 326.593 li
713.049 327.358 li
713.62 327.928 li
714.191 328.503 li
714.952 328.882 li
715.906 329.263 li
716.856 329.456 li
716.856 329.839 li
711.143 329.839 li
703.907 319.919 li
703.146 319.919 li
702.576 319.919 li
702.194 319.919 li
701.622 319.919 li
701.622 326.214 li
701.622 327.167 li
701.815 327.928 li
701.815 328.31 li
702.004 328.693 li
702.576 329.074 li
703.146 329.456 li
703.718 329.456 li
704.672 329.456 li
704.672 329.839 li
695.719 329.839 li
695.719 329.456 li
696.484 329.456 li
697.244 329.263 li
698.004 329.074 li
698.387 328.503 li
698.576 328.121 li
698.769 327.358 li
698.769 326.214 li
698.769 312.481 li
698.769 311.528 li
698.576 310.765 li
698.576 310.193 li
698.387 309.811 li
697.815 309.428 li
697.244 309.239 li
696.484 309.047 li
695.719 309.047 li
695.719 308.858 li
cp
ef
704.1 309.811 mo
703.337 309.811 li
702.576 310 li
701.622 310.382 li
701.622 318.967 li
702.194 318.967 li
702.576 318.967 li
705.24 318.584 li
706.953 317.63 li
708.096 316.106 li
708.479 314.196 li
708.289 312.481 li
707.335 310.954 li
705.811 310 li
704.1 309.811 li
cp
695.719 308.858 mo
703.337 308.858 li
706.383 308.858 li
708.289 309.239 li
709.431 309.619 li
710.192 310.193 li
710.953 310.954 li
711.714 311.907 li
712.095 312.861 li
712.095 314.007 li
711.906 315.723 li
710.953 317.249 li
709.238 318.395 li
707.146 319.156 li
711.525 325.451 li
712.286 326.593 li
713.049 327.358 li
713.62 327.928 li
714.191 328.503 li
714.952 328.882 li
715.906 329.263 li
716.856 329.456 li
716.856 329.839 li
711.143 329.839 li
703.907 319.919 li
703.146 319.919 li
702.576 319.919 li
702.194 319.919 li
701.622 319.919 li
701.622 326.214 li
701.622 327.167 li
701.815 327.928 li
701.815 328.31 li
702.004 328.693 li
702.576 329.074 li
703.146 329.456 li
703.718 329.456 li
704.672 329.456 li
704.672 329.839 li
695.719 329.839 li
695.719 329.456 li
696.484 329.456 li
697.244 329.263 li
698.004 329.074 li
698.387 328.503 li
698.576 328.121 li
698.769 327.358 li
698.769 326.214 li
698.769 312.481 li
698.769 311.528 li
698.576 310.765 li
698.576 310.193 li
698.387 309.811 li
697.815 309.428 li
697.244 309.239 li
696.484 309.047 li
695.719 309.047 li
695.719 308.858 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
276.818 199.375 mo
278.914 199.758 li
281.197 200.521 li
281.767 200.712 li
282.15 200.712 li
282.532 200.712 li
282.721 200.521 li
283.102 199.951 li
283.293 199.375 li
283.674 199.375 li
284.053 206.624 li
283.674 206.624 li
282.532 203.765 li
281.008 201.858 li
279.104 200.712 li
277.008 200.33 li
275.105 200.712 li
273.39 201.475 li
271.869 202.811 li
270.916 204.907 li
270.155 207.388 li
269.963 210.63 li
270.155 213.302 li
270.726 215.398 li
271.869 217.307 li
273.39 218.64 li
275.294 219.403 li
277.39 219.786 li
279.293 219.597 li
280.817 218.832 li
282.532 217.686 li
284.245 215.59 li
284.624 215.779 li
282.911 218.26 li
281.008 219.786 li
278.914 220.739 li
276.247 221.121 li
273.201 220.739 li
270.533 219.403 li
268.441 217.307 li
267.298 215.207 li
266.538 213.109 li
266.345 210.63 li
266.726 207.577 li
267.68 204.907 li
269.391 202.618 li
271.487 200.904 li
273.962 199.758 li
276.818 199.375 li
cp
ef
276.818 199.375 mo
278.914 199.758 li
281.197 200.521 li
281.767 200.712 li
282.15 200.712 li
282.532 200.712 li
282.721 200.521 li
283.102 199.951 li
283.293 199.375 li
283.674 199.375 li
284.053 206.624 li
283.674 206.624 li
282.532 203.765 li
281.008 201.858 li
279.104 200.712 li
277.008 200.33 li
275.105 200.712 li
273.39 201.475 li
271.869 202.811 li
270.916 204.907 li
270.155 207.388 li
269.963 210.63 li
270.155 213.302 li
270.726 215.398 li
271.869 217.307 li
273.39 218.64 li
275.294 219.403 li
277.39 219.786 li
279.293 219.597 li
280.817 218.832 li
282.532 217.686 li
284.245 215.59 li
284.624 215.779 li
282.911 218.26 li
281.008 219.786 li
278.914 220.739 li
276.247 221.121 li
273.201 220.739 li
270.533 219.403 li
268.441 217.307 li
267.298 215.207 li
266.538 213.109 li
266.345 210.63 li
266.726 207.577 li
267.68 204.907 li
269.391 202.618 li
271.487 200.904 li
273.962 199.758 li
276.818 199.375 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
293.194 207.388 mo
292.241 207.388 li
291.481 207.77 li
290.909 208.149 li
290.527 208.723 li
290.148 209.484 li
289.766 210.819 li
289.577 212.537 li
289.956 215.398 li
290.909 217.879 li
292.241 219.597 li
294.145 220.167 li
294.908 219.975 li
295.669 219.786 li
296.241 219.403 li
296.812 218.832 li
297.572 217.114 li
297.765 214.637 li
297.572 212.348 li
297.001 210.438 li
296.051 208.723 li
295.48 208.149 li
294.715 207.577 li
293.955 207.388 li
293.194 207.388 li
cp
293.766 206.242 mo
295.669 206.624 li
297.383 207.388 li
298.715 208.723 li
300.048 211.012 li
300.429 213.491 li
300.048 215.398 li
299.476 217.307 li
298.715 218.451 li
297.954 219.403 li
297.001 220.167 li
295.287 220.739 li
293.573 221.121 li
291.481 220.739 li
289.956 219.975 li
288.435 218.64 li
287.292 216.351 li
286.909 213.872 li
287.099 211.965 li
287.863 210.06 li
288.624 208.912 li
289.384 207.96 li
290.338 207.196 li
292.051 206.624 li
293.766 206.242 li
cp
ef
293.194 207.388 mo
292.241 207.388 li
291.481 207.77 li
290.909 208.149 li
290.527 208.723 li
290.148 209.484 li
289.766 210.819 li
289.577 212.537 li
289.956 215.398 li
290.909 217.879 li
292.241 219.597 li
294.145 220.167 li
294.908 219.975 li
295.669 219.786 li
296.241 219.403 li
296.812 218.832 li
297.572 217.114 li
297.765 214.637 li
297.572 212.348 li
297.001 210.438 li
296.051 208.723 li
295.48 208.149 li
294.715 207.577 li
293.955 207.388 li
293.194 207.388 li
cp
293.766 206.242 mo
295.669 206.624 li
297.383 207.388 li
298.715 208.723 li
300.048 211.012 li
300.429 213.491 li
300.048 215.398 li
299.476 217.307 li
298.715 218.451 li
297.954 219.403 li
297.001 220.167 li
295.287 220.739 li
293.573 221.121 li
291.481 220.739 li
289.956 219.975 li
288.435 218.64 li
287.292 216.351 li
286.909 213.872 li
287.099 211.965 li
287.863 210.06 li
288.624 208.912 li
289.384 207.96 li
290.338 207.196 li
292.051 206.624 li
293.766 206.242 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
305.949 206.242 mo
306.521 206.242 li
306.521 209.484 li
307.285 208.723 li
307.857 208.149 li
308.236 207.77 li
308.427 207.577 li
309.188 207.007 li
309.949 206.624 li
310.71 206.435 li
311.473 206.242 li
312.234 206.435 li
312.995 206.624 li
313.759 207.196 li
314.33 207.77 li
314.709 208.531 li
315.091 209.484 li
315.852 208.531 li
316.424 207.77 li
317.183 207.388 li
317.755 207.007 li
318.709 206.435 li
319.851 206.242 li
320.612 206.435 li
321.376 206.624 li
321.947 206.816 li
322.516 207.388 li
322.897 207.96 li
323.279 208.723 li
323.469 209.484 li
323.469 210.438 li
323.658 211.584 li
323.658 217.497 li
323.658 218.26 li
323.658 219.021 li
323.851 219.597 li
324.04 219.786 li
324.229 220.167 li
324.801 220.356 li
325.564 220.356 li
325.564 220.739 li
319.09 220.739 li
319.09 220.356 li
319.279 220.356 li
320.04 220.356 li
320.422 219.975 li
320.805 219.597 li
320.994 219.214 li
320.994 218.832 li
320.994 218.26 li
320.994 217.497 li
320.994 211.584 li
320.994 210.63 li
320.805 209.867 li
320.612 209.295 li
320.04 208.723 li
319.47 208.342 li
318.709 208.342 li
317.948 208.342 li
316.994 208.723 li
316.424 209.105 li
315.852 209.484 li
315.091 210.249 li
315.091 210.438 li
315.091 217.497 li
315.091 218.451 li
315.091 219.021 li
315.28 219.403 li
315.473 219.786 li
315.663 220.167 li
316.044 220.356 li
316.424 220.356 li
316.994 220.356 li
316.994 220.739 li
310.521 220.739 li
310.521 220.356 li
311.091 220.356 li
311.473 220.356 li
311.852 220.167 li
312.234 219.786 li
312.424 219.214 li
312.424 218.832 li
312.424 218.26 li
312.424 217.497 li
312.424 211.584 li
312.424 210.63 li
312.234 209.867 li
312.045 209.295 li
311.473 208.723 li
310.902 208.342 li
310.142 208.342 li
309.378 208.342 li
308.427 208.723 li
307.475 209.484 li
306.521 210.249 li
306.521 217.497 li
306.521 218.451 li
306.714 219.021 li
306.714 219.403 li
306.903 219.975 li
307.285 220.167 li
307.475 220.356 li
308.046 220.356 li
308.617 220.356 li
308.617 220.739 li
301.954 220.739 li
301.954 220.356 li
302.526 220.356 li
302.903 220.356 li
303.285 220.167 li
303.475 219.975 li
303.857 219.403 li
303.857 219.021 li
303.857 218.26 li
304.046 217.497 li
304.046 212.156 li
303.857 210.249 li
303.857 208.912 li
303.668 208.531 li
303.475 208.342 li
303.285 208.149 li
303.096 208.149 li
302.715 208.149 li
302.143 208.342 li
301.954 207.96 li
305.949 206.242 li
cp
ef
305.949 206.242 mo
306.521 206.242 li
306.521 209.484 li
307.285 208.723 li
307.857 208.149 li
308.236 207.77 li
308.427 207.577 li
309.188 207.007 li
309.949 206.624 li
310.71 206.435 li
311.473 206.242 li
312.234 206.435 li
312.995 206.624 li
313.759 207.196 li
314.33 207.77 li
314.709 208.531 li
315.091 209.484 li
315.852 208.531 li
316.424 207.77 li
317.183 207.388 li
317.755 207.007 li
318.709 206.435 li
319.851 206.242 li
320.612 206.435 li
321.376 206.624 li
321.947 206.816 li
322.516 207.388 li
322.897 207.96 li
323.279 208.723 li
323.469 209.484 li
323.469 210.438 li
323.658 211.584 li
323.658 217.497 li
323.658 218.26 li
323.658 219.021 li
323.851 219.597 li
324.04 219.786 li
324.229 220.167 li
324.801 220.356 li
325.564 220.356 li
325.564 220.739 li
319.09 220.739 li
319.09 220.356 li
319.279 220.356 li
320.04 220.356 li
320.422 219.975 li
320.805 219.597 li
320.994 219.214 li
320.994 218.832 li
320.994 218.26 li
320.994 217.497 li
320.994 211.584 li
320.994 210.63 li
320.805 209.867 li
320.612 209.295 li
320.04 208.723 li
319.47 208.342 li
318.709 208.342 li
317.948 208.342 li
316.994 208.723 li
316.424 209.105 li
315.852 209.484 li
315.091 210.249 li
315.091 210.438 li
315.091 217.497 li
315.091 218.451 li
315.091 219.021 li
315.28 219.403 li
315.473 219.786 li
315.663 220.167 li
316.044 220.356 li
316.424 220.356 li
316.994 220.356 li
316.994 220.739 li
310.521 220.739 li
310.521 220.356 li
311.091 220.356 li
311.473 220.356 li
311.852 220.167 li
312.234 219.786 li
312.424 219.214 li
312.424 218.832 li
312.424 218.26 li
312.424 217.497 li
312.424 211.584 li
312.424 210.63 li
312.234 209.867 li
312.045 209.295 li
311.473 208.723 li
310.902 208.342 li
310.142 208.342 li
309.378 208.342 li
308.427 208.723 li
307.475 209.484 li
306.521 210.249 li
306.521 217.497 li
306.521 218.451 li
306.714 219.021 li
306.714 219.403 li
306.903 219.975 li
307.285 220.167 li
307.475 220.356 li
308.046 220.356 li
308.617 220.356 li
308.617 220.739 li
301.954 220.739 li
301.954 220.356 li
302.526 220.356 li
302.903 220.356 li
303.285 220.167 li
303.475 219.975 li
303.857 219.403 li
303.857 219.021 li
303.857 218.26 li
304.046 217.497 li
304.046 212.156 li
303.857 210.249 li
303.857 208.912 li
303.668 208.531 li
303.475 208.342 li
303.285 208.149 li
303.096 208.149 li
302.715 208.149 li
302.143 208.342 li
301.954 207.96 li
305.949 206.242 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
334.324 208.531 mo
333.56 208.723 li
332.8 209.105 li
332.228 209.295 li
331.657 209.677 li
331.085 210.249 li
331.085 218.64 li
331.846 219.214 li
332.8 219.786 li
333.56 219.975 li
334.513 220.167 li
335.464 219.975 li
336.227 219.403 li
337.177 218.64 li
337.942 216.733 li
338.32 214.061 li
337.942 211.773 li
337.177 210.06 li
336.416 209.484 li
335.846 208.912 li
335.085 208.723 li
334.324 208.531 li
cp
330.513 198.805 mo
331.085 198.805 li
331.085 209.295 li
332.609 207.577 li
333.942 206.624 li
335.464 206.242 li
337.559 206.816 li
339.273 208.149 li
340.605 210.249 li
340.988 213.109 li
340.605 215.398 li
339.845 217.497 li
338.512 219.214 li
336.227 220.549 li
333.56 221.121 li
332.417 220.928 li
331.085 220.739 li
329.754 220.167 li
328.421 219.403 li
328.421 204.718 li
328.421 202.618 li
328.421 201.475 li
328.228 201.093 li
328.039 200.712 li
327.85 200.521 li
327.658 200.521 li
327.278 200.521 li
326.707 200.712 li
326.515 200.33 li
330.513 198.805 li
cp
ef
334.324 208.531 mo
333.56 208.723 li
332.8 209.105 li
332.228 209.295 li
331.657 209.677 li
331.085 210.249 li
331.085 218.64 li
331.846 219.214 li
332.8 219.786 li
333.56 219.975 li
334.513 220.167 li
335.464 219.975 li
336.227 219.403 li
337.177 218.64 li
337.942 216.733 li
338.32 214.061 li
337.942 211.773 li
337.177 210.06 li
336.416 209.484 li
335.846 208.912 li
335.085 208.723 li
334.324 208.531 li
cp
330.513 198.805 mo
331.085 198.805 li
331.085 209.295 li
332.609 207.577 li
333.942 206.624 li
335.464 206.242 li
337.559 206.816 li
339.273 208.149 li
340.605 210.249 li
340.988 213.109 li
340.605 215.398 li
339.845 217.497 li
338.512 219.214 li
336.227 220.549 li
333.56 221.121 li
332.417 220.928 li
331.085 220.739 li
329.754 220.167 li
328.421 219.403 li
328.421 204.718 li
328.421 202.618 li
328.421 201.475 li
328.228 201.093 li
328.039 200.712 li
327.85 200.521 li
327.658 200.521 li
327.278 200.521 li
326.707 200.712 li
326.515 200.33 li
330.513 198.805 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
347.268 206.242 mo
347.84 206.242 li
347.84 217.497 li
347.84 218.26 li
347.84 219.021 li
348.033 219.403 li
348.222 219.786 li
348.604 220.167 li
348.793 220.356 li
349.176 220.356 li
349.746 220.356 li
349.746 220.739 li
343.273 220.739 li
343.273 220.356 li
343.843 220.356 li
344.222 220.356 li
344.415 220.167 li
344.794 219.975 li
344.986 219.403 li
345.176 219.021 li
345.176 218.26 li
345.176 217.497 li
345.176 212.156 li
345.176 210.249 li
345.176 208.912 li
344.986 208.531 li
344.794 208.342 li
344.604 208.149 li
344.222 208.149 li
343.843 208.149 li
343.462 208.342 li
343.273 207.96 li
347.268 206.242 li
cp
346.319 198.805 mo
347.079 198.994 li
347.65 199.375 li
348.033 199.951 li
348.222 200.521 li
348.033 201.282 li
347.65 201.858 li
347.079 202.239 li
346.319 202.428 li
345.747 202.239 li
344.986 201.858 li
344.604 201.282 li
344.604 200.521 li
344.604 199.951 li
344.986 199.375 li
345.365 198.994 li
345.937 198.805 li
346.319 198.805 li
cp
ef
347.268 206.242 mo
347.84 206.242 li
347.84 217.497 li
347.84 218.26 li
347.84 219.021 li
348.033 219.403 li
348.222 219.786 li
348.604 220.167 li
348.793 220.356 li
349.176 220.356 li
349.746 220.356 li
349.746 220.739 li
343.273 220.739 li
343.273 220.356 li
343.843 220.356 li
344.222 220.356 li
344.415 220.167 li
344.794 219.975 li
344.986 219.403 li
345.176 219.021 li
345.176 218.26 li
345.176 217.497 li
345.176 212.156 li
345.176 210.249 li
345.176 208.912 li
344.986 208.531 li
344.794 208.342 li
344.604 208.149 li
344.222 208.149 li
343.843 208.149 li
343.462 208.342 li
343.273 207.96 li
347.268 206.242 li
cp
346.319 198.805 mo
347.079 198.994 li
347.65 199.375 li
348.033 199.951 li
348.222 200.521 li
348.033 201.282 li
347.65 201.858 li
347.079 202.239 li
346.319 202.428 li
345.747 202.239 li
344.986 201.858 li
344.604 201.282 li
344.604 200.521 li
344.604 199.951 li
344.986 199.375 li
345.365 198.994 li
345.937 198.805 li
346.319 198.805 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
355.077 206.242 mo
355.649 206.242 li
355.649 209.295 li
357.364 207.77 li
358.885 206.624 li
360.409 206.242 li
361.17 206.435 li
361.931 206.624 li
362.502 206.816 li
363.074 207.388 li
363.455 207.96 li
363.837 208.723 li
364.026 209.484 li
364.216 210.438 li
364.216 211.584 li
364.216 217.497 li
364.216 218.451 li
364.216 219.021 li
364.409 219.597 li
364.598 219.975 li
364.787 220.167 li
365.17 220.356 li
365.548 220.356 li
366.12 220.356 li
366.12 220.739 li
359.645 220.739 li
359.645 220.356 li
359.838 220.356 li
360.409 220.356 li
360.789 220.356 li
360.98 220.167 li
361.359 219.597 li
361.552 219.021 li
361.552 218.832 li
361.552 218.26 li
361.552 217.497 li
361.552 211.773 li
361.552 210.63 li
361.359 209.867 li
360.98 209.105 li
360.598 208.723 li
360.028 208.342 li
359.267 208.342 li
357.552 208.723 li
355.649 210.249 li
355.649 217.497 li
355.649 218.451 li
355.649 219.021 li
355.838 219.403 li
356.028 219.975 li
356.41 220.167 li
356.599 220.356 li
356.981 220.356 li
357.552 220.356 li
357.552 220.739 li
351.079 220.739 li
351.079 220.356 li
351.461 220.356 li
352.031 220.356 li
352.41 220.167 li
352.792 219.786 li
352.982 219.214 li
352.982 218.451 li
352.982 217.497 li
352.982 212.156 li
352.982 210.06 li
352.982 209.105 li
352.792 208.531 li
352.603 208.342 li
352.41 208.149 li
352.221 208.149 li
351.65 208.149 li
351.268 208.342 li
351.079 207.96 li
355.077 206.242 li
cp
ef
355.077 206.242 mo
355.649 206.242 li
355.649 209.295 li
357.364 207.77 li
358.885 206.624 li
360.409 206.242 li
361.17 206.435 li
361.931 206.624 li
362.502 206.816 li
363.074 207.388 li
363.455 207.96 li
363.837 208.723 li
364.026 209.484 li
364.216 210.438 li
364.216 211.584 li
364.216 217.497 li
364.216 218.451 li
364.216 219.021 li
364.409 219.597 li
364.598 219.975 li
364.787 220.167 li
365.17 220.356 li
365.548 220.356 li
366.12 220.356 li
366.12 220.739 li
359.645 220.739 li
359.645 220.356 li
359.838 220.356 li
360.409 220.356 li
360.789 220.356 li
360.98 220.167 li
361.359 219.597 li
361.552 219.021 li
361.552 218.832 li
361.552 218.26 li
361.552 217.497 li
361.552 211.773 li
361.552 210.63 li
361.359 209.867 li
360.98 209.105 li
360.598 208.723 li
360.028 208.342 li
359.267 208.342 li
357.552 208.723 li
355.649 210.249 li
355.649 217.497 li
355.649 218.451 li
355.649 219.021 li
355.838 219.403 li
356.028 219.975 li
356.41 220.167 li
356.599 220.356 li
356.981 220.356 li
357.552 220.356 li
357.552 220.739 li
351.079 220.739 li
351.079 220.356 li
351.461 220.356 li
352.031 220.356 li
352.41 220.167 li
352.792 219.786 li
352.982 219.214 li
352.982 218.451 li
352.982 217.497 li
352.982 212.156 li
352.982 210.06 li
352.982 209.105 li
352.792 208.531 li
352.603 208.342 li
352.41 208.149 li
352.221 208.149 li
351.65 208.149 li
351.268 208.342 li
351.079 207.96 li
355.077 206.242 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
375.261 212.537 mo
374.308 212.919 li
373.358 213.302 li
372.786 213.491 li
372.404 213.872 li
371.262 214.444 li
370.501 215.207 li
370.119 215.779 li
370.119 216.733 li
370.119 217.307 li
370.311 217.879 li
370.69 218.451 li
371.262 218.832 li
371.643 219.021 li
372.214 219.021 li
373.547 218.832 li
375.261 217.686 li
375.261 212.537 li
cp
373.165 206.242 mo
374.878 206.435 li
376.404 207.007 li
376.785 207.388 li
377.354 207.77 li
377.735 208.531 li
377.735 209.105 li
377.924 209.867 li
377.924 211.202 li
377.924 215.972 li
377.924 217.114 li
377.924 217.879 li
377.924 218.26 li
378.117 218.64 li
378.307 219.021 li
378.496 219.021 li
378.689 219.021 li
379.068 219.021 li
379.259 218.832 li
379.639 218.64 li
380.21 218.068 li
380.21 218.832 li
378.496 220.549 li
376.974 221.121 li
376.404 220.928 li
376.021 220.739 li
375.832 220.549 li
375.45 219.975 li
375.45 219.403 li
375.261 218.64 li
374.5 219.214 li
373.736 219.786 li
373.358 220.167 li
372.786 220.549 li
372.593 220.739 li
371.643 220.928 li
370.882 221.121 li
369.929 220.928 li
369.168 220.549 li
368.405 220.167 li
367.833 219.403 li
367.644 218.451 li
367.455 217.497 li
367.644 216.544 li
367.833 215.779 li
368.405 215.015 li
369.168 214.444 li
370.119 213.872 li
372.214 212.726 li
375.261 211.584 li
375.261 211.012 li
375.261 210.06 li
375.071 209.295 li
374.878 208.531 li
374.689 208.149 li
374.117 207.577 li
373.547 207.388 li
372.786 207.388 li
372.214 207.388 li
371.643 207.577 li
371.262 207.77 li
370.882 208.342 li
370.69 209.105 li
370.69 210.06 li
370.69 210.63 li
370.311 211.202 li
369.929 211.395 li
369.358 211.584 li
368.977 211.395 li
368.405 211.202 li
368.216 210.63 li
368.026 210.06 li
368.216 209.105 li
368.786 208.342 li
369.547 207.388 li
371.071 206.624 li
373.165 206.242 li
cp
ef
375.261 212.537 mo
374.308 212.919 li
373.358 213.302 li
372.786 213.491 li
372.404 213.872 li
371.262 214.444 li
370.501 215.207 li
370.119 215.779 li
370.119 216.733 li
370.119 217.307 li
370.311 217.879 li
370.69 218.451 li
371.262 218.832 li
371.643 219.021 li
372.214 219.021 li
373.547 218.832 li
375.261 217.686 li
375.261 212.537 li
cp
373.165 206.242 mo
374.878 206.435 li
376.404 207.007 li
376.785 207.388 li
377.354 207.77 li
377.735 208.531 li
377.735 209.105 li
377.924 209.867 li
377.924 211.202 li
377.924 215.972 li
377.924 217.114 li
377.924 217.879 li
377.924 218.26 li
378.117 218.64 li
378.307 219.021 li
378.496 219.021 li
378.689 219.021 li
379.068 219.021 li
379.259 218.832 li
379.639 218.64 li
380.21 218.068 li
380.21 218.832 li
378.496 220.549 li
376.974 221.121 li
376.404 220.928 li
376.021 220.739 li
375.832 220.549 li
375.45 219.975 li
375.45 219.403 li
375.261 218.64 li
374.5 219.214 li
373.736 219.786 li
373.358 220.167 li
372.786 220.549 li
372.593 220.739 li
371.643 220.928 li
370.882 221.121 li
369.929 220.928 li
369.168 220.549 li
368.405 220.167 li
367.833 219.403 li
367.644 218.451 li
367.455 217.497 li
367.644 216.544 li
367.833 215.779 li
368.405 215.015 li
369.168 214.444 li
370.119 213.872 li
372.214 212.726 li
375.261 211.584 li
375.261 211.012 li
375.261 210.06 li
375.071 209.295 li
374.878 208.531 li
374.689 208.149 li
374.117 207.577 li
373.547 207.388 li
372.786 207.388 li
372.214 207.388 li
371.643 207.577 li
371.262 207.77 li
370.882 208.342 li
370.69 209.105 li
370.69 210.06 li
370.69 210.63 li
370.311 211.202 li
369.929 211.395 li
369.358 211.584 li
368.977 211.395 li
368.405 211.202 li
368.216 210.63 li
368.026 210.06 li
368.216 209.105 li
368.786 208.342 li
369.547 207.388 li
371.071 206.624 li
373.165 206.242 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
385.162 202.047 mo
385.542 202.047 li
385.542 206.624 li
388.78 206.624 li
388.78 207.577 li
385.542 207.577 li
385.542 216.733 li
385.542 217.686 li
385.542 218.26 li
385.923 218.64 li
386.305 219.021 li
386.877 219.021 li
387.447 219.021 li
388.019 218.832 li
388.398 218.64 li
388.78 218.068 li
389.351 218.068 li
388.969 219.021 li
388.398 219.786 li
387.827 220.356 li
387.066 220.739 li
386.305 220.928 li
385.734 221.121 li
384.97 220.928 li
384.209 220.739 li
383.638 220.167 li
383.256 219.597 li
383.066 219.021 li
382.877 218.26 li
382.877 217.307 li
382.877 207.577 li
380.592 207.577 li
380.592 207.196 li
381.353 206.816 li
382.305 206.053 li
383.256 205.289 li
384.02 204.146 li
384.399 203.765 li
384.781 203 li
385.162 202.047 li
cp
ef
385.162 202.047 mo
385.542 202.047 li
385.542 206.624 li
388.78 206.624 li
388.78 207.577 li
385.542 207.577 li
385.542 216.733 li
385.542 217.686 li
385.542 218.26 li
385.923 218.64 li
386.305 219.021 li
386.877 219.021 li
387.447 219.021 li
388.019 218.832 li
388.398 218.64 li
388.78 218.068 li
389.351 218.068 li
388.969 219.021 li
388.398 219.786 li
387.827 220.356 li
387.066 220.739 li
386.305 220.928 li
385.734 221.121 li
384.97 220.928 li
384.209 220.739 li
383.638 220.167 li
383.256 219.597 li
383.066 219.021 li
382.877 218.26 li
382.877 217.307 li
382.877 207.577 li
380.592 207.577 li
380.592 207.196 li
381.353 206.816 li
382.305 206.053 li
383.256 205.289 li
384.02 204.146 li
384.399 203.765 li
384.781 203 li
385.162 202.047 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
394.683 206.242 mo
395.254 206.242 li
395.254 217.497 li
395.254 218.26 li
395.254 219.021 li
395.444 219.403 li
395.633 219.786 li
396.015 220.167 li
396.205 220.356 li
396.775 220.356 li
397.157 220.356 li
397.157 220.739 li
390.684 220.739 li
390.684 220.356 li
391.254 220.356 li
391.637 220.356 li
392.015 220.167 li
392.208 219.975 li
392.397 219.403 li
392.587 219.021 li
392.587 218.26 li
392.587 217.497 li
392.587 212.156 li
392.587 210.249 li
392.587 208.912 li
392.397 208.531 li
392.208 208.342 li
392.015 208.149 li
391.637 208.149 li
391.254 208.149 li
390.872 208.342 li
390.684 207.96 li
394.683 206.242 li
cp
393.729 198.805 mo
394.493 198.994 li
395.065 199.375 li
395.444 199.951 li
395.633 200.521 li
395.444 201.282 li
395.065 201.858 li
394.493 202.239 li
393.729 202.428 li
393.158 202.239 li
392.587 201.858 li
392.208 201.282 li
392.015 200.521 li
392.208 199.951 li
392.587 199.375 li
392.969 198.994 li
393.35 198.805 li
393.729 198.805 li
cp
ef
394.683 206.242 mo
395.254 206.242 li
395.254 217.497 li
395.254 218.26 li
395.254 219.021 li
395.444 219.403 li
395.633 219.786 li
396.015 220.167 li
396.205 220.356 li
396.775 220.356 li
397.157 220.356 li
397.157 220.739 li
390.684 220.739 li
390.684 220.356 li
391.254 220.356 li
391.637 220.356 li
392.015 220.167 li
392.208 219.975 li
392.397 219.403 li
392.587 219.021 li
392.587 218.26 li
392.587 217.497 li
392.587 212.156 li
392.587 210.249 li
392.587 208.912 li
392.397 208.531 li
392.208 208.342 li
392.015 208.149 li
391.637 208.149 li
391.254 208.149 li
390.872 208.342 li
390.684 207.96 li
394.683 206.242 li
cp
393.729 198.805 mo
394.493 198.994 li
395.065 199.375 li
395.444 199.951 li
395.633 200.521 li
395.444 201.282 li
395.065 201.858 li
394.493 202.239 li
393.729 202.428 li
393.158 202.239 li
392.587 201.858 li
392.208 201.282 li
392.015 200.521 li
392.208 199.951 li
392.587 199.375 li
392.969 198.994 li
393.35 198.805 li
393.729 198.805 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
405.345 207.388 mo
404.584 207.388 li
403.632 207.77 li
403.249 208.149 li
402.678 208.723 li
402.299 209.484 li
401.917 210.819 li
401.728 212.537 li
402.106 215.398 li
403.06 217.879 li
404.584 219.597 li
406.488 220.167 li
407.248 219.975 li
407.82 219.786 li
408.391 219.403 li
408.963 218.832 li
409.724 217.114 li
409.916 214.637 li
409.724 212.348 li
409.345 210.438 li
408.391 208.723 li
407.63 208.149 li
407.059 207.577 li
406.299 207.388 li
405.345 207.388 li
cp
405.917 206.242 mo
407.82 206.624 li
409.533 207.388 li
411.059 208.723 li
412.202 211.012 li
412.581 213.491 li
412.39 215.398 li
411.63 217.307 li
411.059 218.451 li
410.294 219.403 li
409.345 220.167 li
407.63 220.739 li
405.727 221.121 li
403.821 220.739 li
402.106 219.975 li
400.775 218.64 li
399.632 216.351 li
399.253 213.872 li
399.442 211.965 li
400.203 210.06 li
400.775 208.912 li
401.728 207.96 li
402.678 207.196 li
404.202 206.624 li
405.917 206.242 li
cp
ef
405.345 207.388 mo
404.584 207.388 li
403.632 207.77 li
403.249 208.149 li
402.678 208.723 li
402.299 209.484 li
401.917 210.819 li
401.728 212.537 li
402.106 215.398 li
403.06 217.879 li
404.584 219.597 li
406.488 220.167 li
407.248 219.975 li
407.82 219.786 li
408.391 219.403 li
408.963 218.832 li
409.724 217.114 li
409.916 214.637 li
409.724 212.348 li
409.345 210.438 li
408.391 208.723 li
407.63 208.149 li
407.059 207.577 li
406.299 207.388 li
405.345 207.388 li
cp
405.917 206.242 mo
407.82 206.624 li
409.533 207.388 li
411.059 208.723 li
412.202 211.012 li
412.581 213.491 li
412.39 215.398 li
411.63 217.307 li
411.059 218.451 li
410.294 219.403 li
409.345 220.167 li
407.63 220.739 li
405.727 221.121 li
403.821 220.739 li
402.106 219.975 li
400.775 218.64 li
399.632 216.351 li
399.253 213.872 li
399.442 211.965 li
400.203 210.06 li
400.775 208.912 li
401.728 207.96 li
402.678 207.196 li
404.202 206.624 li
405.917 206.242 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
418.293 206.242 mo
418.865 206.242 li
418.865 209.295 li
420.386 207.77 li
422.1 206.624 li
423.624 206.242 li
424.385 206.435 li
424.957 206.624 li
425.718 206.816 li
426.1 207.388 li
426.67 207.96 li
427.053 208.723 li
427.242 209.484 li
427.242 210.438 li
427.431 211.584 li
427.431 217.497 li
427.431 218.451 li
427.431 219.021 li
427.624 219.597 li
427.813 219.975 li
428.003 220.167 li
428.385 220.356 li
428.766 220.356 li
429.338 220.356 li
429.338 220.739 li
422.672 220.739 li
422.672 220.356 li
423.054 220.356 li
423.435 220.356 li
424.006 220.356 li
424.196 220.167 li
424.578 219.597 li
424.578 219.021 li
424.767 218.832 li
424.767 218.26 li
424.767 217.497 li
424.767 211.773 li
424.578 210.63 li
424.578 209.867 li
424.196 209.105 li
423.815 208.723 li
423.243 208.342 li
422.482 208.342 li
420.578 208.723 li
418.865 210.249 li
418.865 217.497 li
418.865 218.451 li
418.865 219.021 li
419.054 219.403 li
419.247 219.975 li
419.436 220.167 li
419.815 220.356 li
420.197 220.356 li
420.769 220.356 li
420.769 220.739 li
414.294 220.739 li
414.294 220.356 li
414.484 220.356 li
415.055 220.356 li
415.627 220.167 li
415.818 219.786 li
416.008 219.214 li
416.197 218.451 li
416.197 217.497 li
416.197 212.156 li
416.197 210.06 li
416.197 209.105 li
416.008 208.531 li
415.818 208.342 li
415.627 208.149 li
415.247 208.149 li
414.866 208.149 li
414.484 208.342 li
414.294 207.96 li
418.293 206.242 li
cp
ef
418.293 206.242 mo
418.865 206.242 li
418.865 209.295 li
420.386 207.77 li
422.1 206.624 li
423.624 206.242 li
424.385 206.435 li
424.957 206.624 li
425.718 206.816 li
426.1 207.388 li
426.67 207.96 li
427.053 208.723 li
427.242 209.484 li
427.242 210.438 li
427.431 211.584 li
427.431 217.497 li
427.431 218.451 li
427.431 219.021 li
427.624 219.597 li
427.813 219.975 li
428.003 220.167 li
428.385 220.356 li
428.766 220.356 li
429.338 220.356 li
429.338 220.739 li
422.672 220.739 li
422.672 220.356 li
423.054 220.356 li
423.435 220.356 li
424.006 220.356 li
424.196 220.167 li
424.578 219.597 li
424.578 219.021 li
424.767 218.832 li
424.767 218.26 li
424.767 217.497 li
424.767 211.773 li
424.578 210.63 li
424.578 209.867 li
424.196 209.105 li
423.815 208.723 li
423.243 208.342 li
422.482 208.342 li
420.578 208.723 li
418.865 210.249 li
418.865 217.497 li
418.865 218.451 li
418.865 219.021 li
419.054 219.403 li
419.247 219.975 li
419.436 220.167 li
419.815 220.356 li
420.197 220.356 li
420.769 220.356 li
420.769 220.739 li
414.294 220.739 li
414.294 220.356 li
414.484 220.356 li
415.055 220.356 li
415.627 220.167 li
415.818 219.786 li
416.008 219.214 li
416.197 218.451 li
416.197 217.497 li
416.197 212.156 li
416.197 210.06 li
416.197 209.105 li
416.008 208.531 li
415.818 208.342 li
415.627 208.149 li
415.247 208.149 li
414.866 208.149 li
414.484 208.342 li
414.294 207.96 li
418.293 206.242 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
438.476 212.537 mo
437.334 212.919 li
436.573 213.302 li
436.002 213.491 li
435.43 213.872 li
434.477 214.444 li
433.716 215.207 li
433.334 215.779 li
433.145 216.733 li
433.334 217.307 li
433.527 217.879 li
433.906 218.451 li
434.288 218.832 li
434.858 219.021 li
435.43 219.021 li
436.762 218.832 li
438.476 217.686 li
438.476 212.537 li
cp
436.384 206.242 mo
438.094 206.435 li
439.43 207.007 li
440 207.388 li
440.379 207.77 li
440.761 208.531 li
440.951 209.105 li
441.143 209.867 li
441.143 211.202 li
441.143 215.972 li
441.143 217.114 li
441.143 217.879 li
441.143 218.26 li
441.333 218.64 li
441.333 219.021 li
441.522 219.021 li
441.715 219.021 li
442.287 219.021 li
442.476 218.832 li
442.857 218.64 li
443.429 218.068 li
443.429 218.832 li
441.715 220.549 li
440.19 221.121 li
439.619 220.928 li
439.237 220.739 li
438.858 220.549 li
438.665 219.975 li
438.476 219.403 li
438.476 218.64 li
437.715 219.214 li
436.954 219.786 li
436.384 220.167 li
436.002 220.549 li
435.812 220.739 li
434.858 220.928 li
433.906 221.121 li
433.145 220.928 li
432.191 220.549 li
431.623 220.167 li
431.051 219.403 li
430.67 218.451 li
430.67 217.497 li
430.67 216.544 li
431.051 215.779 li
431.623 215.015 li
432.384 214.444 li
433.334 213.872 li
435.43 212.726 li
438.476 211.584 li
438.476 211.012 li
438.476 210.06 li
438.287 209.295 li
438.094 208.531 li
437.905 208.149 li
437.334 207.577 li
436.762 207.388 li
436.002 207.388 li
435.241 207.388 li
434.858 207.577 li
434.477 207.77 li
433.906 208.342 li
433.906 209.105 li
433.906 210.06 li
433.716 210.63 li
433.527 211.202 li
433.145 211.395 li
432.573 211.584 li
432.003 211.395 li
431.623 211.202 li
431.431 210.63 li
431.242 210.06 li
431.431 209.105 li
431.812 208.342 li
432.573 207.388 li
434.288 206.624 li
436.384 206.242 li
cp
ef
438.476 212.537 mo
437.334 212.919 li
436.573 213.302 li
436.002 213.491 li
435.43 213.872 li
434.477 214.444 li
433.716 215.207 li
433.334 215.779 li
433.145 216.733 li
433.334 217.307 li
433.527 217.879 li
433.906 218.451 li
434.288 218.832 li
434.858 219.021 li
435.43 219.021 li
436.762 218.832 li
438.476 217.686 li
438.476 212.537 li
cp
436.384 206.242 mo
438.094 206.435 li
439.43 207.007 li
440 207.388 li
440.379 207.77 li
440.761 208.531 li
440.951 209.105 li
441.143 209.867 li
441.143 211.202 li
441.143 215.972 li
441.143 217.114 li
441.143 217.879 li
441.143 218.26 li
441.333 218.64 li
441.333 219.021 li
441.522 219.021 li
441.715 219.021 li
442.287 219.021 li
442.476 218.832 li
442.857 218.64 li
443.429 218.068 li
443.429 218.832 li
441.715 220.549 li
440.19 221.121 li
439.619 220.928 li
439.237 220.739 li
438.858 220.549 li
438.665 219.975 li
438.476 219.403 li
438.476 218.64 li
437.715 219.214 li
436.954 219.786 li
436.384 220.167 li
436.002 220.549 li
435.812 220.739 li
434.858 220.928 li
433.906 221.121 li
433.145 220.928 li
432.191 220.549 li
431.623 220.167 li
431.051 219.403 li
430.67 218.451 li
430.67 217.497 li
430.67 216.544 li
431.051 215.779 li
431.623 215.015 li
432.384 214.444 li
433.334 213.872 li
435.43 212.726 li
438.476 211.584 li
438.476 211.012 li
438.476 210.06 li
438.287 209.295 li
438.094 208.531 li
437.905 208.149 li
437.334 207.577 li
436.762 207.388 li
436.002 207.388 li
435.241 207.388 li
434.858 207.577 li
434.477 207.77 li
433.906 208.342 li
433.906 209.105 li
433.906 210.06 li
433.716 210.63 li
433.527 211.202 li
433.145 211.395 li
432.573 211.584 li
432.003 211.395 li
431.623 211.202 li
431.431 210.63 li
431.242 210.06 li
431.431 209.105 li
431.812 208.342 li
432.573 207.388 li
434.288 206.624 li
436.384 206.242 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
448.949 198.805 mo
449.521 198.805 li
449.521 217.497 li
449.521 218.26 li
449.71 219.021 li
449.71 219.403 li
449.903 219.786 li
450.282 220.167 li
450.471 220.356 li
451.043 220.356 li
451.613 220.356 li
451.613 220.739 li
444.95 220.739 li
444.95 220.356 li
445.522 220.356 li
445.903 220.356 li
446.282 220.167 li
446.475 219.975 li
446.853 219.403 li
446.853 219.021 li
447.046 218.26 li
447.046 217.497 li
447.046 204.718 li
447.046 202.618 li
446.853 201.475 li
446.853 201.093 li
446.664 200.712 li
446.282 200.521 li
446.093 200.521 li
445.71 200.521 li
445.14 200.712 li
444.95 200.33 li
448.949 198.805 li
cp
ef
448.949 198.805 mo
449.521 198.805 li
449.521 217.497 li
449.521 218.26 li
449.71 219.021 li
449.71 219.403 li
449.903 219.786 li
450.282 220.167 li
450.471 220.356 li
451.043 220.356 li
451.613 220.356 li
451.613 220.739 li
444.95 220.739 li
444.95 220.356 li
445.522 220.356 li
445.903 220.356 li
446.282 220.167 li
446.475 219.975 li
446.853 219.403 li
446.853 219.021 li
447.046 218.26 li
447.046 217.497 li
447.046 204.718 li
447.046 202.618 li
446.853 201.475 li
446.853 201.093 li
446.664 200.712 li
446.282 200.521 li
446.093 200.521 li
445.71 200.521 li
445.14 200.712 li
444.95 200.33 li
448.949 198.805 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
483.034 199.758 mo
492.553 199.758 li
492.553 200.14 li
491.411 200.14 li
490.65 200.14 li
490.079 200.33 li
489.507 200.712 li
489.126 201.093 li
489.126 201.665 li
488.937 202.428 li
488.937 203.382 li
488.937 217.307 li
488.937 218.068 li
489.126 218.64 li
489.126 219.021 li
489.315 219.403 li
489.697 219.597 li
490.079 219.597 li
490.457 219.786 li
491.222 219.786 li
491.983 219.786 li
493.504 219.786 li
495.41 219.597 li
496.742 219.403 li
497.695 218.832 li
498.456 218.068 li
499.028 217.307 li
499.599 216.351 li
499.978 215.207 li
500.741 215.207 li
499.028 220.739 li
483.034 220.739 li
483.034 220.356 li
483.795 220.356 li
484.555 220.356 li
485.126 219.975 li
485.698 219.597 li
485.891 219.021 li
485.891 218.26 li
485.891 217.114 li
485.891 203.382 li
485.891 202.428 li
485.891 201.665 li
485.698 201.093 li
485.508 200.712 li
485.126 200.33 li
484.555 200.14 li
483.795 200.14 li
483.034 200.14 li
483.034 199.758 li
cp
ef
483.034 199.758 mo
492.553 199.758 li
492.553 200.14 li
491.411 200.14 li
490.65 200.14 li
490.079 200.33 li
489.507 200.712 li
489.126 201.093 li
489.126 201.665 li
488.937 202.428 li
488.937 203.382 li
488.937 217.307 li
488.937 218.068 li
489.126 218.64 li
489.126 219.021 li
489.315 219.403 li
489.697 219.597 li
490.079 219.597 li
490.457 219.786 li
491.222 219.786 li
491.983 219.786 li
493.504 219.786 li
495.41 219.597 li
496.742 219.403 li
497.695 218.832 li
498.456 218.068 li
499.028 217.307 li
499.599 216.351 li
499.978 215.207 li
500.741 215.207 li
499.028 220.739 li
483.034 220.739 li
483.034 220.356 li
483.795 220.356 li
484.555 220.356 li
485.126 219.975 li
485.698 219.597 li
485.891 219.021 li
485.891 218.26 li
485.891 217.114 li
485.891 203.382 li
485.891 202.428 li
485.891 201.665 li
485.698 201.093 li
485.508 200.712 li
485.126 200.33 li
484.555 200.14 li
483.795 200.14 li
483.034 200.14 li
483.034 199.758 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
508.547 207.388 mo
507.787 207.388 li
506.834 207.77 li
506.262 208.149 li
505.881 208.723 li
505.501 209.484 li
505.12 210.819 li
504.931 212.537 li
505.309 215.398 li
506.262 217.879 li
507.787 219.597 li
509.501 220.167 li
510.262 219.975 li
511.023 219.786 li
511.593 219.403 li
512.165 218.832 li
512.926 217.114 li
513.119 214.637 li
512.926 212.348 li
512.354 210.438 li
511.404 208.723 li
510.833 208.149 li
510.262 207.577 li
509.501 207.388 li
508.547 207.388 li
cp
509.119 206.242 mo
511.023 206.624 li
512.736 207.388 li
514.069 208.723 li
515.404 211.012 li
515.782 213.491 li
515.593 215.398 li
514.832 217.307 li
514.261 218.451 li
513.308 219.403 li
512.354 220.167 li
510.833 220.739 li
508.929 221.121 li
507.023 220.739 li
505.309 219.975 li
503.977 218.64 li
502.645 216.351 li
502.263 213.872 li
502.645 211.965 li
503.216 210.06 li
503.977 208.912 li
504.738 207.96 li
505.881 207.196 li
507.405 206.624 li
509.119 206.242 li
cp
ef
508.547 207.388 mo
507.787 207.388 li
506.834 207.77 li
506.262 208.149 li
505.881 208.723 li
505.501 209.484 li
505.12 210.819 li
504.931 212.537 li
505.309 215.398 li
506.262 217.879 li
507.787 219.597 li
509.501 220.167 li
510.262 219.975 li
511.023 219.786 li
511.593 219.403 li
512.165 218.832 li
512.926 217.114 li
513.119 214.637 li
512.926 212.348 li
512.354 210.438 li
511.404 208.723 li
510.833 208.149 li
510.262 207.577 li
509.501 207.388 li
508.547 207.388 li
cp
509.119 206.242 mo
511.023 206.624 li
512.736 207.388 li
514.069 208.723 li
515.404 211.012 li
515.782 213.491 li
515.593 215.398 li
514.832 217.307 li
514.261 218.451 li
513.308 219.403 li
512.354 220.167 li
510.833 220.739 li
508.929 221.121 li
507.023 220.739 li
505.309 219.975 li
503.977 218.64 li
502.645 216.351 li
502.263 213.872 li
502.645 211.965 li
503.216 210.06 li
503.977 208.912 li
504.738 207.96 li
505.881 207.196 li
507.405 206.624 li
509.119 206.242 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
521.496 220.739 mo
520.924 221.502 li
520.353 222.263 li
520.163 222.839 li
519.972 223.409 li
520.163 223.981 li
520.353 224.363 li
520.924 224.745 li
522.827 225.505 li
525.303 225.698 li
527.78 225.505 li
529.491 224.745 li
530.254 223.981 li
530.634 223.409 li
530.826 222.646 li
530.634 222.074 li
530.445 221.693 li
530.063 221.502 li
528.92 221.121 li
526.827 221.121 li
523.781 220.928 li
521.496 220.739 li
cp
524.353 207.007 mo
523.588 207.007 li
523.017 207.388 li
522.449 207.96 li
522.066 208.342 li
521.877 209.106 li
521.685 209.867 li
521.685 210.63 li
521.877 212.919 li
522.638 214.444 li
523.399 215.015 li
523.97 215.398 li
524.731 215.59 li
525.495 215.398 li
526.256 215.015 li
526.827 214.637 li
527.017 214.061 li
527.399 213.491 li
527.588 212.726 li
527.588 211.773 li
527.208 209.677 li
526.445 207.96 li
525.873 207.388 li
525.114 207.007 li
524.353 207.007 li
cp
524.731 206.242 mo
526.445 206.624 li
528.159 207.388 li
531.205 207.388 li
531.587 207.388 li
531.969 207.388 li
532.158 207.577 li
532.158 207.77 li
532.158 207.96 li
531.969 208.149 li
531.969 208.342 li
531.587 208.342 li
531.205 208.342 li
529.302 208.342 li
529.873 209.106 li
530.063 210.06 li
530.254 211.202 li
529.873 213.109 li
528.73 214.637 li
526.827 215.779 li
524.542 216.161 li
523.588 216.161 li
522.449 215.972 li
521.685 216.351 li
521.307 216.925 li
521.114 217.307 li
520.924 217.686 li
521.114 217.879 li
521.307 218.068 li
521.685 218.26 li
522.257 218.451 li
522.638 218.451 li
523.399 218.451 li
524.353 218.64 li
527.017 218.64 li
528.541 218.832 li
529.491 219.021 li
530.254 219.403 li
531.015 219.786 li
531.398 220.549 li
531.776 221.121 li
531.776 222.074 li
531.398 223.791 li
530.254 225.316 li
528.541 226.651 li
526.445 227.416 li
524.16 227.605 li
521.496 227.223 li
519.211 226.27 li
518.639 225.698 li
518.257 225.127 li
518.068 224.745 li
518.257 223.981 li
518.45 223.409 li
518.829 223.028 li
519.211 222.263 li
519.4 222.074 li
519.592 221.885 li
520.163 221.31 li
520.735 220.549 li
519.972 220.167 li
519.4 219.786 li
519.211 219.403 li
519.02 218.832 li
519.211 218.26 li
519.592 217.686 li
519.781 217.307 li
520.353 216.733 li
520.924 216.161 li
521.685 215.59 li
520.924 215.207 li
520.163 214.637 li
519.781 213.872 li
519.4 213.109 li
519.02 212.348 li
519.02 211.395 li
519.4 209.484 li
520.542 207.77 li
522.449 206.624 li
524.731 206.242 li
cp
ef
521.496 220.739 mo
520.924 221.502 li
520.353 222.263 li
520.163 222.839 li
519.972 223.409 li
520.163 223.981 li
520.353 224.363 li
520.924 224.745 li
522.827 225.505 li
525.303 225.698 li
527.78 225.505 li
529.491 224.745 li
530.254 223.981 li
530.634 223.409 li
530.826 222.646 li
530.634 222.074 li
530.445 221.693 li
530.063 221.502 li
528.92 221.121 li
526.827 221.121 li
523.781 220.928 li
521.496 220.739 li
cp
524.353 207.007 mo
523.588 207.007 li
523.017 207.388 li
522.449 207.96 li
522.066 208.342 li
521.877 209.106 li
521.685 209.867 li
521.685 210.63 li
521.877 212.919 li
522.638 214.444 li
523.399 215.015 li
523.97 215.398 li
524.731 215.59 li
525.495 215.398 li
526.256 215.015 li
526.827 214.637 li
527.017 214.061 li
527.399 213.491 li
527.588 212.726 li
527.588 211.773 li
527.208 209.677 li
526.445 207.96 li
525.873 207.388 li
525.114 207.007 li
524.353 207.007 li
cp
524.731 206.242 mo
526.445 206.624 li
528.159 207.388 li
531.205 207.388 li
531.587 207.388 li
531.969 207.388 li
532.158 207.577 li
532.158 207.77 li
532.158 207.96 li
531.969 208.149 li
531.969 208.342 li
531.587 208.342 li
531.205 208.342 li
529.302 208.342 li
529.873 209.106 li
530.063 210.06 li
530.254 211.202 li
529.873 213.109 li
528.73 214.637 li
526.827 215.779 li
524.542 216.161 li
523.588 216.161 li
522.449 215.972 li
521.685 216.351 li
521.307 216.925 li
521.114 217.307 li
520.924 217.686 li
521.114 217.879 li
521.307 218.068 li
521.685 218.26 li
522.257 218.451 li
522.638 218.451 li
523.399 218.451 li
524.353 218.64 li
527.017 218.64 li
528.541 218.832 li
529.491 219.021 li
530.254 219.403 li
531.015 219.786 li
531.398 220.549 li
531.776 221.121 li
531.776 222.074 li
531.398 223.791 li
530.254 225.316 li
528.541 226.651 li
526.445 227.416 li
524.16 227.605 li
521.496 227.223 li
519.211 226.27 li
518.639 225.698 li
518.257 225.127 li
518.068 224.745 li
518.257 223.981 li
518.45 223.409 li
518.829 223.028 li
519.211 222.263 li
519.4 222.074 li
519.592 221.885 li
520.163 221.31 li
520.735 220.549 li
519.972 220.167 li
519.4 219.786 li
519.211 219.403 li
519.02 218.832 li
519.211 218.26 li
519.592 217.686 li
519.781 217.307 li
520.353 216.733 li
520.924 216.161 li
521.685 215.59 li
520.924 215.207 li
520.163 214.637 li
519.781 213.872 li
519.4 213.109 li
519.02 212.348 li
519.02 211.395 li
519.4 209.484 li
520.542 207.77 li
522.449 206.624 li
524.731 206.242 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
537.679 206.242 mo
538.251 206.242 li
538.251 217.497 li
538.442 218.26 li
538.442 219.021 li
538.442 219.403 li
538.821 219.786 li
539.014 220.167 li
539.393 220.356 li
539.775 220.356 li
540.347 220.356 li
540.347 220.739 li
533.683 220.739 li
533.683 220.356 li
534.254 220.356 li
534.826 220.356 li
535.015 220.167 li
535.394 219.975 li
535.587 219.403 li
535.587 219.021 li
535.776 218.26 li
535.776 217.497 li
535.776 212.156 li
535.776 210.249 li
535.587 208.912 li
535.587 208.531 li
535.394 208.342 li
535.015 208.149 li
534.826 208.149 li
534.444 208.149 li
533.872 208.342 li
533.683 207.96 li
537.679 206.242 li
cp
536.918 198.805 mo
537.49 198.994 li
538.061 199.375 li
538.633 199.951 li
538.633 200.521 li
538.633 201.282 li
538.061 201.858 li
537.49 202.239 li
536.918 202.428 li
536.157 202.239 li
535.587 201.858 li
535.205 201.282 li
535.015 200.521 li
535.205 199.951 li
535.587 199.375 li
535.966 198.994 li
536.347 198.805 li
536.918 198.805 li
cp
ef
537.679 206.242 mo
538.251 206.242 li
538.251 217.497 li
538.442 218.26 li
538.442 219.021 li
538.442 219.403 li
538.821 219.786 li
539.014 220.167 li
539.393 220.356 li
539.775 220.356 li
540.347 220.356 li
540.347 220.739 li
533.683 220.739 li
533.683 220.356 li
534.254 220.356 li
534.826 220.356 li
535.015 220.167 li
535.394 219.975 li
535.587 219.403 li
535.587 219.021 li
535.776 218.26 li
535.776 217.497 li
535.776 212.156 li
535.776 210.249 li
535.587 208.912 li
535.587 208.531 li
535.394 208.342 li
535.015 208.149 li
534.826 208.149 li
534.444 208.149 li
533.872 208.342 li
533.683 207.96 li
537.679 206.242 li
cp
536.918 198.805 mo
537.49 198.994 li
538.061 199.375 li
538.633 199.951 li
538.633 200.521 li
538.633 201.282 li
538.061 201.858 li
537.49 202.239 li
536.918 202.428 li
536.157 202.239 li
535.587 201.858 li
535.205 201.282 li
535.015 200.521 li
535.205 199.951 li
535.587 199.375 li
535.966 198.994 li
536.347 198.805 li
536.918 198.805 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
548.724 206.242 mo
550.627 206.624 li
552.151 207.388 li
552.912 208.149 li
553.294 208.912 li
553.484 209.677 li
553.294 210.06 li
553.105 210.63 li
552.533 210.819 li
551.963 210.819 li
551.581 210.819 li
551.198 210.63 li
550.82 210.249 li
550.627 210.06 li
550.438 209.677 li
550.438 209.106 li
550.248 208.531 li
550.055 208.149 li
549.866 207.77 li
549.485 207.577 li
548.913 207.388 li
548.342 207.388 li
547.581 207.388 li
546.82 207.77 li
546.06 208.342 li
545.106 210.06 li
544.917 212.348 li
545.106 214.637 li
546.06 216.544 li
547.581 218.068 li
549.485 218.451 li
550.438 218.26 li
551.198 218.068 li
552.151 217.497 li
552.723 216.925 li
553.105 215.972 li
553.673 214.826 li
554.055 215.015 li
553.294 217.686 li
551.77 219.597 li
550.055 220.739 li
548.152 221.121 li
545.867 220.549 li
543.964 219.021 li
543.01 217.686 li
542.439 215.779 li
542.25 213.683 li
542.439 211.584 li
543.203 209.867 li
544.154 208.342 li
546.249 206.816 li
548.724 206.242 li
cp
ef
548.724 206.242 mo
550.627 206.624 li
552.151 207.388 li
552.912 208.149 li
553.294 208.912 li
553.484 209.677 li
553.294 210.06 li
553.105 210.63 li
552.533 210.819 li
551.963 210.819 li
551.581 210.819 li
551.198 210.63 li
550.82 210.249 li
550.627 210.06 li
550.438 209.677 li
550.438 209.106 li
550.248 208.531 li
550.055 208.149 li
549.866 207.77 li
549.485 207.577 li
548.913 207.388 li
548.342 207.388 li
547.581 207.388 li
546.82 207.77 li
546.06 208.342 li
545.106 210.06 li
544.917 212.348 li
545.106 214.637 li
546.06 216.544 li
547.581 218.068 li
549.485 218.451 li
550.438 218.26 li
551.198 218.068 li
552.151 217.497 li
552.723 216.925 li
553.105 215.972 li
553.673 214.826 li
554.055 215.015 li
553.294 217.686 li
551.77 219.597 li
550.055 220.739 li
548.152 221.121 li
545.867 220.549 li
543.964 219.021 li
543.01 217.686 li
542.439 215.779 li
542.25 213.683 li
542.439 211.584 li
543.203 209.867 li
544.154 208.342 li
546.249 206.816 li
548.724 206.242 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
617.842 153.03 mo
613.464 162.374 li
621.841 162.374 li
617.842 153.03 li
cp
618.606 147.498 mo
619.177 147.498 li
627.172 166.762 li
628.126 168.862 li
628.887 170.004 li
629.459 170.386 li
630.218 170.768 li
631.172 170.768 li
631.172 171.15 li
621.841 171.15 li
621.841 170.768 li
622.602 170.768 li
623.365 170.575 li
623.745 170.386 li
624.126 169.814 li
624.317 169.24 li
624.126 168.668 li
623.937 167.716 li
623.556 166.572 li
622.223 163.52 li
613.083 163.52 li
611.561 167.144 li
611.179 167.905 li
610.989 168.668 li
610.989 169.24 li
610.989 169.814 li
611.368 170.194 li
611.939 170.575 li
612.511 170.768 li
613.653 170.768 li
613.653 171.15 li
606.419 171.15 li
606.419 170.768 li
607.18 170.575 li
607.941 170.386 li
608.322 170.194 li
609.275 168.668 li
610.226 166.38 li
618.606 147.498 li
cp
ef
617.842 153.03 mo
613.464 162.374 li
621.841 162.374 li
617.842 153.03 li
cp
618.606 147.498 mo
619.177 147.498 li
627.172 166.762 li
628.126 168.862 li
628.887 170.004 li
629.459 170.386 li
630.218 170.768 li
631.172 170.768 li
631.172 171.15 li
621.841 171.15 li
621.841 170.768 li
622.602 170.768 li
623.365 170.575 li
623.745 170.386 li
624.126 169.814 li
624.317 169.24 li
624.126 168.668 li
623.937 167.716 li
623.556 166.572 li
622.223 163.52 li
613.083 163.52 li
611.561 167.144 li
611.179 167.905 li
610.989 168.668 li
610.989 169.24 li
610.989 169.814 li
611.368 170.194 li
611.939 170.575 li
612.511 170.768 li
613.653 170.768 li
613.653 171.15 li
606.419 171.15 li
606.419 170.768 li
607.18 170.575 li
607.941 170.386 li
608.322 170.194 li
609.275 168.668 li
610.226 166.38 li
618.606 147.498 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
634.599 147.498 mo
635.171 147.688 li
635.743 148.07 li
635.932 148.452 li
636.121 148.834 li
636.121 149.405 li
636.121 150.359 li
635.743 152.458 li
634.79 157.418 li
634.029 157.418 li
633.265 152.265 li
633.075 151.123 li
632.886 150.169 li
632.886 149.595 li
633.075 148.834 li
633.075 148.452 li
633.457 148.07 li
633.647 147.688 li
634.029 147.498 li
634.599 147.498 li
cp
ef
634.599 147.498 mo
635.171 147.688 li
635.743 148.07 li
635.932 148.452 li
636.121 148.834 li
636.121 149.405 li
636.121 150.359 li
635.743 152.458 li
634.79 157.418 li
634.029 157.418 li
633.265 152.265 li
633.075 151.123 li
632.886 150.169 li
632.886 149.595 li
633.075 148.834 li
633.075 148.452 li
633.457 148.07 li
633.647 147.688 li
634.029 147.498 li
634.599 147.498 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
616.32 249.158 mo
615.368 249.158 li
614.607 249.158 li
613.846 249.158 li
613.274 249.349 li
613.274 258.884 li
617.271 259.266 li
619.938 258.884 li
621.841 257.93 li
623.174 256.405 li
623.556 254.498 li
623.365 253.546 li
623.174 252.592 li
622.795 251.828 li
622.223 251.065 li
621.46 250.304 li
620.51 249.728 li
618.606 249.349 li
616.32 249.158 li
cp
616.32 238.095 mo
614.607 238.286 li
613.274 238.477 li
613.274 247.822 li
614.035 247.822 li
614.796 248.014 li
615.557 248.014 li
616.51 248.014 li
618.795 247.822 li
620.317 247.44 li
621.08 247.061 li
621.652 246.486 li
622.03 245.726 li
622.223 244.58 li
622.413 243.244 li
622.03 241.337 li
620.888 239.621 li
618.795 238.477 li
616.32 238.095 li
cp
606.801 237.142 mo
616.699 237.142 li
619.177 237.142 li
621.08 237.525 li
623.365 238.286 li
625.08 239.813 li
626.03 241.337 li
626.411 243.437 li
626.22 245.151 li
625.269 246.486 li
624.126 247.822 li
622.223 248.586 li
624.317 249.349 li
625.841 250.304 li
626.983 252.017 li
627.555 254.117 li
627.172 255.834 li
626.411 257.359 li
625.652 258.312 li
624.508 259.076 li
623.365 259.647 li
621.08 260.219 li
617.653 260.412 li
606.801 260.412 li
606.801 260.03 li
607.561 260.03 li
608.322 260.03 li
608.893 259.837 li
609.275 259.458 li
609.654 259.076 li
609.846 258.695 li
609.846 258.123 li
610.035 257.359 li
610.035 256.405 li
610.035 241.148 li
610.035 240.002 li
609.846 239.238 li
609.846 238.667 li
609.465 238.286 li
609.083 237.714 li
608.322 237.525 li
607.561 237.525 li
606.801 237.525 li
606.801 237.142 li
cp
ef
616.32 249.158 mo
615.368 249.158 li
614.607 249.158 li
613.846 249.158 li
613.274 249.349 li
613.274 258.884 li
617.271 259.266 li
619.938 258.884 li
621.841 257.93 li
623.174 256.405 li
623.556 254.498 li
623.365 253.546 li
623.174 252.592 li
622.795 251.828 li
622.223 251.065 li
621.46 250.304 li
620.51 249.728 li
618.606 249.349 li
616.32 249.158 li
cp
616.32 238.095 mo
614.607 238.286 li
613.274 238.477 li
613.274 247.822 li
614.035 247.822 li
614.796 248.014 li
615.557 248.014 li
616.51 248.014 li
618.795 247.822 li
620.317 247.44 li
621.08 247.061 li
621.652 246.486 li
622.03 245.726 li
622.223 244.58 li
622.413 243.244 li
622.03 241.337 li
620.888 239.621 li
618.795 238.477 li
616.32 238.095 li
cp
606.801 237.142 mo
616.699 237.142 li
619.177 237.142 li
621.08 237.525 li
623.365 238.286 li
625.08 239.813 li
626.03 241.337 li
626.411 243.437 li
626.22 245.151 li
625.269 246.486 li
624.126 247.822 li
622.223 248.586 li
624.317 249.349 li
625.841 250.304 li
626.983 252.017 li
627.555 254.117 li
627.172 255.834 li
626.411 257.359 li
625.652 258.312 li
624.508 259.076 li
623.365 259.647 li
621.08 260.219 li
617.653 260.412 li
606.801 260.412 li
606.801 260.03 li
607.561 260.03 li
608.322 260.03 li
608.893 259.837 li
609.275 259.458 li
609.654 259.076 li
609.846 258.695 li
609.846 258.123 li
610.035 257.359 li
610.035 256.405 li
610.035 241.148 li
610.035 240.002 li
609.846 239.238 li
609.846 238.667 li
609.465 238.286 li
609.083 237.714 li
608.322 237.525 li
607.561 237.525 li
606.801 237.525 li
606.801 237.142 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
632.693 236.76 mo
633.457 236.76 li
633.836 237.142 li
634.218 237.525 li
634.408 238.095 li
634.408 238.477 li
634.218 239.621 li
633.836 241.528 li
632.886 246.486 li
632.125 246.486 li
631.362 241.528 li
631.362 240.384 li
631.172 239.431 li
631.172 238.86 li
631.172 238.095 li
631.362 237.525 li
631.553 237.142 li
631.933 236.949 li
632.314 236.76 li
632.693 236.76 li
cp
ef
632.693 236.76 mo
633.457 236.76 li
633.836 237.142 li
634.218 237.525 li
634.408 238.095 li
634.408 238.477 li
634.218 239.621 li
633.836 241.528 li
632.886 246.486 li
632.125 246.486 li
631.362 241.528 li
631.362 240.384 li
631.172 239.431 li
631.172 238.86 li
631.172 238.095 li
631.362 237.525 li
631.553 237.142 li
631.933 236.949 li
632.314 236.76 li
632.693 236.76 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
620.888 312.481 mo
620.127 312.672 li
619.367 312.861 li
618.223 313.242 li
618.223 322.779 li
618.795 322.779 li
619.177 322.779 li
621.271 322.59 li
622.984 322.016 li
624.126 321.255 li
625.459 319.537 li
625.841 317.438 li
625.459 315.531 li
624.508 313.818 li
622.984 312.861 li
620.888 312.481 li
cp
611.75 311.335 mo
620.127 311.335 li
623.365 311.528 li
625.652 311.907 li
626.791 312.289 li
627.744 313.053 li
628.698 313.818 li
629.648 315.342 li
629.84 317.249 li
629.459 319.156 li
628.505 320.683 li
626.791 322.016 li
624.317 322.972 li
629.268 330.028 li
630.79 332.127 li
632.125 333.27 li
633.457 334.034 li
635.171 334.416 li
635.171 334.795 li
628.887 334.795 li
620.699 323.733 li
619.938 323.733 li
619.367 323.925 li
618.795 323.733 li
618.223 323.733 li
618.223 330.791 li
618.223 331.746 li
618.414 332.507 li
618.606 333.27 li
618.795 333.652 li
619.177 334.034 li
619.938 334.223 li
620.699 334.416 li
621.46 334.416 li
621.46 334.795 li
611.75 334.795 li
611.75 334.416 li
612.511 334.416 li
613.274 334.223 li
613.846 334.034 li
614.225 333.842 li
614.607 333.27 li
614.796 333.081 li
614.986 332.507 li
614.986 331.746 li
614.986 330.791 li
614.986 315.342 li
614.986 314.388 li
614.796 313.624 li
614.796 313.053 li
614.414 312.481 li
614.035 312.1 li
613.274 311.907 li
612.511 311.718 li
611.75 311.718 li
611.75 311.335 li
cp
ef
620.888 312.481 mo
620.127 312.672 li
619.367 312.861 li
618.223 313.242 li
618.223 322.779 li
618.795 322.779 li
619.177 322.779 li
621.271 322.59 li
622.984 322.016 li
624.126 321.255 li
625.459 319.537 li
625.841 317.438 li
625.459 315.531 li
624.508 313.818 li
622.984 312.861 li
620.888 312.481 li
cp
611.75 311.335 mo
620.127 311.335 li
623.365 311.528 li
625.652 311.907 li
626.791 312.289 li
627.744 313.053 li
628.698 313.818 li
629.648 315.342 li
629.84 317.249 li
629.459 319.156 li
628.505 320.683 li
626.791 322.016 li
624.317 322.972 li
629.268 330.028 li
630.79 332.127 li
632.125 333.27 li
633.457 334.034 li
635.171 334.416 li
635.171 334.795 li
628.887 334.795 li
620.699 323.733 li
619.938 323.733 li
619.367 323.925 li
618.795 323.733 li
618.223 323.733 li
618.223 330.791 li
618.223 331.746 li
618.414 332.507 li
618.606 333.27 li
618.795 333.652 li
619.177 334.034 li
619.938 334.223 li
620.699 334.416 li
621.46 334.416 li
621.46 334.795 li
611.75 334.795 li
611.75 334.416 li
612.511 334.416 li
613.274 334.223 li
613.846 334.034 li
614.225 333.842 li
614.607 333.27 li
614.796 333.081 li
614.986 332.507 li
614.986 331.746 li
614.986 330.791 li
614.986 315.342 li
614.986 314.388 li
614.796 313.624 li
614.796 313.053 li
614.414 312.481 li
614.035 312.1 li
613.274 311.907 li
612.511 311.718 li
611.75 311.718 li
611.75 311.335 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
637.647 311.146 mo
638.406 311.146 li
638.789 311.528 li
639.167 311.907 li
639.36 312.289 li
639.36 312.861 li
639.167 314.007 li
638.789 315.914 li
637.835 320.872 li
637.075 320.872 li
636.314 315.914 li
636.121 314.577 li
636.121 313.818 li
636.121 313.053 li
636.121 312.481 li
636.314 311.907 li
636.503 311.528 li
636.886 311.335 li
637.264 311.146 li
637.647 311.146 li
cp
ef
637.647 311.146 mo
638.406 311.146 li
638.789 311.528 li
639.167 311.907 li
639.36 312.289 li
639.36 312.861 li
639.167 314.007 li
638.789 315.914 li
637.835 320.872 li
637.075 320.872 li
636.314 315.914 li
636.121 314.577 li
636.121 313.818 li
636.121 313.053 li
636.121 312.481 li
636.314 311.907 li
636.503 311.528 li
636.886 311.335 li
637.264 311.146 li
637.647 311.146 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
444.379 282.346 mo
523.017 314.007 li
444.379 345.477 li
444.379 282.346 li
cp
1 gry
ef
444.379 282.346 mo
523.017 314.007 li
444.379 345.477 li
444.379 282.346 li
cp
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
428.894 282.472 mo
433.271 286.286 li
.0614376 gry
6.0791 lw
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
433.271 286.286 mo
436.892 290.674 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
436.892 290.674 mo
439.938 295.441 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
439.938 295.441 mo
442.223 300.4 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
442.223 300.4 mo
443.744 305.742 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
443.744 305.742 mo
444.505 311.083 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
444.505 311.083 mo
444.505 316.615 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
444.505 316.615 mo
443.744 322.146 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
443.744 322.146 mo
442.223 327.487 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
442.223 327.487 mo
439.745 332.636 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
439.745 332.636 mo
436.699 337.595 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
436.699 337.595 mo
433.082 341.79 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
433.082 341.79 mo
428.894 345.415 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
444.505 282.472 mo
448.887 286.286 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
448.887 286.286 mo
452.693 290.674 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
452.693 290.674 mo
455.55 295.441 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
455.55 295.441 mo
457.835 300.4 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
457.835 300.4 mo
459.36 305.742 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
459.36 305.742 mo
460.12 311.083 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
460.12 311.083 mo
460.12 316.615 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
460.12 316.615 mo
459.36 322.146 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
459.36 322.146 mo
457.835 327.487 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
457.835 327.487 mo
455.361 332.636 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
455.361 332.636 mo
452.314 337.595 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
452.314 337.595 mo
448.698 341.79 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
448.698 341.79 mo
444.505 345.415 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
444.505 282.283 mo
452.886 280.565 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
452.886 280.565 mo
461.074 279.994 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
461.074 279.994 mo
469.451 280.184 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
469.451 280.184 mo
477.447 281.33 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
477.447 281.33 mo
485.256 283.618 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
485.256 283.618 mo
492.87 286.479 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
492.87 286.479 mo
499.915 290.485 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
499.915 290.485 mo
506.581 295.062 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
506.581 295.062 mo
512.864 300.593 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
512.864 300.593 mo
518.195 306.888 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
518.195 306.888 mo
523.146 313.755 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
444.505 345.415 mo
452.886 347.13 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
452.886 347.13 mo
461.074 347.893 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
461.074 347.893 mo
469.451 347.511 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
469.451 347.511 mo
477.447 346.369 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
477.447 346.369 mo
485.256 344.079 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
485.256 344.079 mo
492.87 341.22 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
492.87 341.22 mo
499.915 337.213 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
499.915 337.213 mo
506.581 332.636 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
506.581 332.636 mo
512.673 327.104 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
512.673 327.104 mo
518.195 320.809 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
518.195 320.809 mo
522.955 313.944 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
522.955 313.944 mo
554.374 313.944 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
420.895 329.583 mo
457.074 329.583 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
420.895 298.112 mo
457.074 298.112 li
gsave
[.125141 2.69592e-9 -5.42455e-9 -.125371 148.8 446.16 ]ct
@
grestore newpath
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
BDIHEG+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC550D
EC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C6B
177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB33
3E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385FDB
0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E70
BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A29895
DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B737
B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE3272E
F1EF1464C3F0D45D7CBB8749AF571E09> |-
/b <1C60D8A8C9B7A73DB90B311171EB67EB8746E2EC8FC994CCA7A632F7C7E8
F4A5D28D725796F2BC8526696060F460C892CC5686CD97F757C6EFB11E42DD9A
F110BE11F49DAEFA324F62E3046D4E2410C0923EDB87332B0381414594D39992
4398EF0A71772EF0EFEA72F5940C288418E4FCC7A2DE1E6A1AEA513FBDA0D660
3C38C9676D3489A418D7163D5E50FB679144E02901D98844D885CA3AAF379A83
F23AED1F56FC130F21> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BDIHEG+TimesNewRomanPSMT /Encoding get
dup 97 /a put
dup 98 /b put
pop
%ADOEndSubsetFont
/BDIHEG+TimesNewRomanPSMT*1 
[40{/.notdef}rp /parenleft /parenright 55{/.notdef}rp /a /b 157{/.notdef}rp]
BDIHEG+TimesNewRomanPSMT nf
BDIHEG+TimesNewRomanPSMT*1 [44.04 0 0 -44.04 0 0 ]msf
438.31 536.064 mo
(\(a\))
[14.665 19.5538 0 ]xsh
1148.9 536.064 mo
(\(b\))
[14.665 22.0199 0 ]xsh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/BDIHEH+Calibri,Italic*1 uf
/BDIHEH+Calibri,Italic uf
/PBAAAA+Calibri,Italic uf
/BDIHEG+TimesNewRomanPSMT*1 uf
/BDIHEG+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
/BDIHEF+TimesNewRomanPS-ItalicMT*1 uf
/BDIHEF+TimesNewRomanPS-ItalicMT uf
/TimesNewRomanPS-ItalicMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
