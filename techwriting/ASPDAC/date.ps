%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: date.dvi
%%CreationDate: Fri Oct 31 21:14:13 2014
%%Pages: 9
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: NimbusRomNo9L-Regu NimbusRomNo9L-ReguItal MSBM10
%%+ StandardSymL CMR10 CMSY10 CMEX10 CMMI10 NimbusRomNo9L-Medi
%%+ URWChanceryL-MediItal NimbusRomNo9L-MediItal
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips date.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.10.31:2114
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE5858EC32B3B2E79D42750657977F
ACDD2EE5A7C9320D907438DBA63AA05ED410FC7000F53549091BE71BE45DA4AB
A315F95B724A60F17C70833E889CFE7EA206A7ABC4393CB6EF47BE3700BA5638
6831391809EF8384AEA8C22735E8062A9F9101ADD125A321FB65399CBCD9C9E6
0F46FBF271B2B1EC80832CC054BAB5CA80D4561DA0A380D56D5CB3D90AE89A19
48CD824EB1E7AC6127A6DBA3E8EA40F00ADD89749D77EC0EEBE26FD6EA5D8CCE
F7239681B3D94898236AE92FF3912E0AFE84B6C7E08134C158B640B4AECAB5F2
A90028E67D33DF31B461A2846F83D90979BB22618E2A17C5D159FB59D5177E12
EDF1320F596E7A4C379329ADB367F92BF2869A9A97398E0C20F5F017CA9DB7BA
B3BAB72B87A7B6BF4FEBD03132F9075C271F2054078396DF8403DC91461325F6
12CF1421F3099CCD799C2C099492C4F071336D985C0C360B2F5A5877FD00B6F9
2E5911DDDFB31D17A60124EE8DA6CBDA94196D7ED42804610E4F730DAF2F2D5A
B767C320C62543E26534314FACAE006BA2064623902C8AC479EEEBB609E8C3E4
1516CE412CB410BD026231E22A9CD0F664D769E4E45CBB75B7341F06D8E37285
BEAA9AB71AABE3CBFE5A348681AA246047CA29CA6B442FEADE254C7582D32D3C
71B5E645C82E92F057EB5F859BEE23DAA95C575EDAAF9896D6C10980A09DB34E
084C8A754E31B618C6991BAA856CB86877044E10C2F189B284E3195A2DB6B910
2574E2461D2FAE65B7321C0093A2A34996C0B77123503E9EDC623DD02C44FB76
3C550840BDF969582D226510EBF89944E59684EB2E2C463E69702266FBCF8D1D
4C0BE400495E227B9CB21C8086F328782CA7294DCF3ECDC1A62714143A4C1B98
E5DE1DD554FBA60571188A58F0354A6B9EF580689B78A0C8515CA05A35832616
7E0A90F68F3C306AB60AAB20872FB167673F41E8E87FF0111F579CBD0DA68B56
3E35D2EBF9F28B104082E36187373EFC7A33F62D3FE4A390B63A76E9B2531871
6BD59861F51B561DCC115192A6FC22D15A5AF03BA09CDFA66B660CF4288E9D79
26E797256659B0FF64BB5D900990C3CB588E1E18810BCB009A91E5F4F8D9DB1A
F2A063BDABD9C3332F4BDB701BB94B4FD24570B440AE74B8D924E48E7C2DEFB0
53A19E5B4DF39ABF4F6FC6160B5FCCA00608422A3091CD03E726B1EA1D203B3F
C44173460B490498EDA3121881EBD21CB5B571D21A6228CC0A1B035EBE97F26B
0B58179BD22AC950EC3A98458051A874297CD6BFE731C5B413819503111F1F6E
EBFB5628C955F5FCAED76F2402CE351F77E471D1C9821DAD627FF25131590577
5FF9335DD28D85A11BF155765632B34A3AA1DF9C01134BD8FE927E0064319951
E2C1D374C9ACFC30932712A5C3E0FE3C7E355E3356E9135A143F1B4E2738E208
8F44633DD9300BAFC770625A64B2BD20D4F672701310E5D1D5B2DD502802539A
65344601924C473B7618F9B87BF6EB49474FE62891097B9B381DFC9DD22F6CEB
340EFD950B74E614A2908EEA7B0D395E15943D0A9072E2C0E6C91D9141C84281
6A59F02111333723DB78C2C287675D73152EE3C63397F5EA6203C707568137E0
12438B86EAD16D71A0A56D00E6ACE9D80AFF646B05D829DCF08DCE2FED1A17D3
83A7C9E7C2A5CAEB38BDA802E6696BAB17A5D1E5D6C51B6371C642D5588A2945
1F3C8B0CD56806531579F7C0D10A9FBE254EA910522D955C86DDD693B8660BBD
17B2B23FEA57AF15B1720E42C6DE537074C071C50C114AC54C45BA2FEE00D13A
2573BB9243648A1BE2569CF68FF78E4CACACDB34DAD918A30005C31F17781633
6B74AF8B9931BEC0C1892780020C1A92470E3AD7F1BB6EF26C835F13A9C56DED
51DF4A7847C993B88B9FDA9A8955D8BDBF6BA773D06645E292CE26D9DF4BBD4F
3D20F52161853827837C837F33425990818B958ADCC3AE79B5791FF04DAA32FE
54050AA9D34606F16C7763DE770CC33C9ACB60E5354D5A27A687CA6E0FD74A4B
5CFFEADF6AD0BA87B906C09201FF65CE6C3F620BBFAACCBE54DA884B87E906B5
F5285D3841ECF78F0A1EE4A80724DA3A4FD49FFBAA66BE3402A2480A6F8FC164
343A369E2B8947FD5F58A4697234C742685421CE3D57398C5ED6F6B049FDF39F
6870236751D9EF2210E680B4D8A6DAAB758BD7FA7DA9680604E5BF85D1826611
2CA08E8922A1D46AC853F4BDCA37F7FE80D2D27854012E4A8F70BD854EA4C189
EA6939096B56168AEB971AAAFE1BCA667137A76761CBA2FBFFCEAFE3E98D5590
DB3DBC44B3F9D4EF0419CAE23086898BB25A222EEA19C1A760389672933EA7C2
8B31025619BD108B79D51D54E23F401F42165F0D513BB2409CE66BA3E83FC000
4372873EB8B4405A8F5BD88CC2F21D2D60FA4024707869C5FD40D94028ED13B2
5762CC7924D100D3CE0DD32CFCA124EC1FCE4CCE8C137070A18F05CD73809449
BCDEB0AC24DCF63679D46AA8B3A4A5D0DBFA9342716619CD3683DFA7A9D6683E
5A7A03DDB47833FDFF8935F2F004F58EDE6447ADCE4FDA1B734C75C52D16C406
9428CDF68855946014584F7FE49B03F896E0054CFFFF5DA4728BF4CE1D892052
701B48B81F58F5EA344E8EBFE13BAA70CB43CE4A979D8225ED78417648672E61
07EB7B31F81CF52B4136288200E640654E83534EADF05301FAF2F3A859772C3A
545FC20429119FF00C259AA582AF4E3CDE1C99769F4E433D9B178EDCECF142AD
FFAA6DA004A90F53E70048AA8D15A26BFCF7B02ED70BC262D165E99F87CA7424
0EB98F3D7FC0D4926AE43C8D322BB9ECA24A4C45F7DBB0FEAA9A900E3521D6B3
87B52A30ACB29C914B06793F19A1EFBE3BE7D0B8E20CAD99D292C315B12376D5
655121189A833132715762CA7118685814F71AAA08B89E466C7468BCA01BD98B
63EC7CC3AC41DD06C5BBDA86227AFCC1F7796B5F878946C135BFA75A98DB1B57
0F38C49770AE23986FFAEDBF6644DF58A252C29AC821F4584B96B5DDAFA9B3A1
AA0EF6D17FC1E75916753BC8C799497E1279EC783EA86DF307CD54B58C2B3EBB
FD722006D127834B089670E5F1E7BA8BC4A0F6181BB4EFBB8F99E4475181449F
2FCB255DA4233F7AB097EF0108BA3FC12CDA0618870EACB9FE4195DFAB182242
BAE0956D09E388D10DA2F940186E25C9926886E9806C70105DC75259FB1E5DA2
675E4E114F84862E6B822A10A9D364B1CD13DCA3D385B83499C715ECD7598766
B215910F002358D592FC36D0BD482EE9CC338378EA1566839526A5783F250818
078B97D73B1D62A1AAD3D5A9753BFEF23F7B3E6D5BD318C463AA04490B9063A0
E83E3E68109B182720D2B1C13B498F8F495661C0F4E6455B96A6A92FF806F1CB
3B1C6EAC82D9A687B83C572C42DF22BEAE31D1239719186F14EF637FE4E7C7B1
FE8F4F1BD8367D76D467BE95C394A818198D922BCAEEEE371FE17E396B27CEC5
F0554778587FC7D78ACDF317A8EFDFC82C2F57B6411B3AB68F96E3E7CD321A6D
4783435056AB5A0095726435BE6885BF2784FB2CBEFFC0F8248DCD594D34B21C
98E67DE50B6876C3D6D4D4CA7CE0B9013EBE754B104DCFC0719A10CDD9985E19
2CDF4E88876C2DD4E79E23AFA70AB5B4758AF32EE87B8415B881AC15C5C3E1BC
D17A5B961EFB3A8DC987DEDED6F28A240D66F004AD05CE1C551E29B45668DB2B
305C9B1AF5CD5388A0802D80F18E0F4BC8065BAF393FFAB9A4D674312C2033D2
7C78B5E9461FB09B9B2CAAAB70CEB3AFA574C89BC620328211C85656F63A8DDD
97C827297327B7980C2FE0ACB1C34866AA3C5D7408E257EBA3C53DE8338BDF96
CB7BA55FE31BDDBF7807148C0A132BDBBE8A2C21A23E11889DA13E429914F7F5
7132936359A0CC65E5993CAF52902F76F75D6CB46DD20A3C0BE80D45F2C746BF
236733462080FBDC8C5C1DBE9781F45ABA74AF8033A6EF2BDB16F7B0930D6B6E
7CA7FAC8CFB2DFAB8C063D961077585D24E8FBB5E0B0BEE9C4509B23361DD06A
DD25767833B9A770780B311F608CAE7ADDE000297A2672211F0DE8CF7F5FBC62
78FABA25D035FE3A7CC3A4743C0EFE1C4A5E9CADF1E05BC7982648D5C9FB2992
4A9EE1570BA2AB068CCE168552299361D62A2BC2C0DA48EE94D1CEDF1E2D29BB
43864AB5B770A14C98A432AB76C17998904F052A50EF845100533BA5CFB24C84
DA53581EC4F2201CA9FDAE76EF365515188ACE4CFC939AD6D193413CA7EE225B
0137F4637F09952213BE725CC7AEC579B2FE85F7C6AF18D70C4FDA0557567E64
D430F09ACA7BF28984977BA0F5849A5A86729D5640BBE4C30B17AB03262A02BD
8EE077EAD7FDAEFD37AF16007D83714ACA07FCF882ADC4792583AABB279579DF
6741F637CDF8598FB5827528771444B0AA82DD5E00E70EDEFA7405A1D8A7797B
EF021A53BA68C7FF6780C94F1393D1745AB1FD7C728C6112766A3C2E21DFF002
9E45A5C5668F8B084F22CD6A6CFB056CF0F402A73B2C02118259352EFF6D680B
877CE3024C37D532C186F3D4A97603704CC0DDB25CAC00AEB4CF601F6FB45655
8939AB962CB9E16A2400938D226056535EBE5707CF0A8678B54E6E3A103B2EFF
0BB7306D7C7C3F523B2AEC267A5F1E3F99208D8EC9AB27D658C26F635C2984AB
5A4D214768C6DC775BCC616838159AA10D5BD93CFC8B2D836EAE5ED480FB6DDB
24253A62A1B798BFA51B068B6888B76D2233B6FB11794F166254CB3AC8CFB650
429866DBEB8D09E6D03889899A4E8BFC9A855EA4660F928D0AAE8247EEC1668C
8E798398D53E52A5684CAA59C47CB38C8F1009A8AA12A269A587593874C2DC78
0BA989078910F3D70211147751E9F7264D6E64F1B05410ED3427BB7D0704443E
F2BAEB0FB9E3F1C1C14B178E716FEB4644240447A3F02211350E36E1A586A042
9AB336C6B44C0D2977294E704E8695B6DAF079BCA033B6BD3485EB7A78582FB9
373716136C63EADBAB3A2577738F553F81135829F9118F4BFE20CD51190BD7C5
17035EBE97F26B0B58973EA9B5E0D111D9EACF2FA54B223C4F40C139AB891A41
C7D5BA5338BFD58090EA727C3FD9D0C0217C05798787881D07CEFE019518CCDD
A7AD72305F06A98717CDA80C5DAAAFC50E3C6D78D2B5D851BEEC46731A6C29ED
DDCB9089DE5CC2DDB696D3B7DE3B67F066527AE22CC1AE6285DD1AD42E0809EE
65812268D28E7105859262E9368A3AA7FD0207D47DE5EA5591927F5E568386D3
A61FCBE872945A272C75384BE1E85B26AA094704715F1957DE37A2FDE2577BA3
85000D0708FC918D52360CDA828CEDD17CB7D625155CEB6931A29025B44EC8FC
3678FA08027B20FB9649D07F01484F2FD2E1746F290E32434FCD4D15ACF0708B
EE3FE9948D3AE141749B47810558D71D592735C1C86EE375BE7413B2CF462660
0B115CD043EDE5612AB895CEE0909DA8D165408CD5C4C34114EE4D7FAB4C37B6
A31CB829C4BAB2DD04B1A7097DEC24C6429C13482667116522F94EDC99DE551C
A693362BE4D277E12829BC466E13D09841B5D9AF504BE4EA59E9C2459EEA5AC2
C678E3FA30CDFC5AB855D56C1AD8374F9769A6B575A1DEE5AAAAB4F716DCEBE0
0FAB8B0B5522294CE3164F8446679FCC7AFF5BF49062CEA58F5C661A895AE753
8891536066F8416FF5E357FC34CC34D6B68ABE2FB2C540A7123BBF90D2671F65
90515B96CDD1BD2C1396BC15503CAA4CCD3CE28E0361801BDC5DA98887B2C39D
B84A0A4DE7859C7DA394ACC497641ECE12AD8A7D62AC5F8E6BDA0577FE64D581
35390A37A1570CB25B23B747B236F3F2606A3FF6E487A78069A068E7AF13A8E9
31545D422493C3E2B5187E26E369F5367687A52D55B1636092FD7EFE7D9BDC28
7FA97D0495E28CC1A5F4C1B37022E32CC045B04A3609BF4B15DC990DAC03884E
79C0D930DE7C4FEC7D244AB3CA449709DA84D1B70D330D4DDD264FD3C7453EA2
92BBC6F33628CE825E163FEA3BE751DD3859C99C38A5817C8C965A593B9D9DBC
5013FB08C673603BC3946900C72DF7CF454503703E08CFF94634679185DD1260
C67D7A9BFC8533FDC27952B08A5ADA04C276873F17FF9859E31BCB657421E04C
0914C44CE56AF229D2CAFAA9F401092E1814D53EB57B30F6D4898DE502EDDDDD
7AE2A28CF1A20F7B73911F39D6E41D4A1AB7C9950EC394D6BE34C01E2317FA5E
3C8FEB7D74A3D875D745EDF39BD1323666BFEB2D21AED685780F3F5984E25CDF
67D68214B348BA512C2801717CD6767F1F300497631F0EEA00F1D9DD0E0ACD84
2798644BCBF438904BB943CBE573262285C15426E4FA49EB96536A8D23C79A72
4C622AE3318FCE184AAACF6A4ECA514EBD386E8AA15CB61DEB0FF267AB710D3D
204B6DA8169FB86641C1963F899233942239F00DDED4C9F0AA8C34AD1BFAD47B
5A0DA6BA65A4298F59E7D0055DD7605F9D2051E60AC847D16346DA185095B15E
D77C6291B18D211DAE437E3381FE06E03BA9F1BC28D527BFB50F1A7BFA383780
B7E6235255F3B9781519418354B3C9D4EEDFE9BAF1A664285A9A8EA08171D1D7
42344C2C9B7168C610BDA943E7D65F285A7C4D903A367C560301FECB941D5E03
FF9D8078B10AEB7EAB2391C4F3CB8B839B0C980422DA61DC804D61597138DBC5
3EBBB04E2154870321384AE561C808C2BF7BA4505E1500DC431853A25EB01A2C
E19C9C2B3C6CF526196078DA5308CAA348B0B8C3DC060C0B56DB9DA44156457B
E9C0BDF4FBA3E11009D568750046F6031D643DCDCA0FD8808BFE15A1C12D0B23
A95AD7CA9B8C5E7CFF085B9D03597AC3B18B05B7D271BEF9B8173A6C4D76B765
1CE6A10AF87B6F4ABF634907D8EA78CD3C943B33E970BCCCEEE1624689088283
6514F59717BD1562F9D7168F1C926D8C31F61643AB3EA3495B62BB88EB5CF1A2
A4EFBEC7201D8C219F4CD2C2244A3B3C19823A7743E01A39404A7AFD66F6745F
03EDBDB1D377A4A8DC96827DB59F96C820D0E600BD53E47ECC94F669CFDF8861
9637ED78B114BDD5E7B600CB25C68F4299FCAC010B8FE3FF2195677F733CCBE5
E171DA6F7BBC9BD39AC3F00B1265E228569A5283A557A996D0EA15A6C8815A66
967B7593749E6FDA5D5AF706F0A30AB0EF438151C7D39682CE210CD9BE936956
2AAAFE1CE74489439E161D2B2E070697BF4C9EC5371513272676E77C060E44A9
8F15E122C28FCA6876C9CC2D7F026F5AC7D74A40E982BD00846A4A1C3A7ADB46
EC1F31A784F396D8E9DCD2FD95205F9CA472C147F70294AD2381EAFDE5644BEC
C1D9FE47146D27B5AD4C2BF68A35BF1765C50ED947CD59D486FB83C87148A357
0E841A968C8DE9FABDE5E5F8F66E8C07CC430D70EB815B198890C950FF79058C
180C7FFC2AFD82B5B60629843AD4FFEE693B2A38F3993D1FE2BB26051A52CB04
6D495B4FBF4925CD19D64497DDFA62CF9AC0C97D5F071D09521770EAC39ED55D
AD0AFC096CA09A2867CBF6B7B13E36E87A9E98C3454042EC793E3FA835D08DD6
40042633C380FDCE29791780255FF8C2D5C87CDED04E974DFB454F13C89713A9
2C60589A4C5112A28EABF956D39B97EBBE095A59FD1A671E412A59585059F6EA
6BDF9C26B463655E59D5876C9CC79CB3A18494C9F554A5C666A66B68CCC4A17E
B3D1E8F9372DC104FBFB70954CC5422380591538A0F01BC8D8F85EC9A20945A9
EFC0CD7D2EE6AF05EADAB4F213039CAE00F9DD9AF54ADCDE13D65A474D7BA736
99644215F65456B522ED5041B145C036E6AC402789DA8A35B556426602C8E9E9
A8C0B359FC8A6BE24847A544DAA7C81748D360EB6DBFBDB5B9834EC15C047FDC
B4E0CC99AC20DC2E5746E25CD771D0452943086457A0A9E830C0658485CA6302
6EDB4E04CFC5CF8008EFBE2143D2DEF2EA1EFADA732F0927DAABC3A7415ABB98
FF3F85E682ED86806B91AF07BE979CAFF92063E7990549759D405C2A5F034F75
2FFF1C372E4C578A05101BC2253223AD5CECAAEF096BFBC147D116913234A429
F9D0B47333F36F96D6641C19DCF72A684B377B8FA4B44F2A64034ED4D313CEEA
4D0018E4F64A28A14CB436F6AECB8AB7D7B3EEDA7B21ABFC202C2D918E6E34C7
A75C3FEF2E1A6B9D8F8B71BF6B10F85CDB5BD774DA3CC97ADAF7906E41E413BA
3A39A762993592AC2A1CA8941998DC9AD1BB6A51A910DA34C98420DEC152B27E
057DEAEB31DC51313CA1FC2925F19E2392252B00CF5D47C3B1BEE03E99841742
F8B32E1766E71407D53CEA2E36A81DA64411C9FA520B0936F08F785D3BA0A9B4
1999D1A92525A7658E14811E92B5C62BC739F5308A5C440E7EFD5B72D739E4F8
79BCD899E67E424EB899973B81A674F20A43E9DF7C790007FB6C0D53C496E7B3
14AE30215F2F51249932F35A8D8CB8C223254E819873C1F5131B25F62DC4A7E0
6D4DE2D5505C3562657CC9ECB222300417282319232BAFB9A6224FC39F35AC5F
1F43601BCC7F39E89FD7D5E9EEF2BADC6B30CB9800A890813A2FB66AA150BA9A
0DDBF61CDCE362ECCE65D92436D4D6F9D1395FC6E21518DF676C6462198469E5
BE6C0EB9A45039DF6D551CD057E1A29124C19C66CF58A120845765CABA4E7E0B
EDDCACD6F81DD78465B66F7101D3C649FFD6CD5766060F14827115033098F8FA
87DE05E922FFE97A2AB3BA1E28BA7893C85EBADD6B78C9B469AA64F437DCB0E2
2DFC18BBDB6FD96DA0E84929889561DCA8D857FAD9E38D889D05418DF3C50785
B2D63B4BD8D5BDB57EF75C59ECB9340BFC48FCACAF32BFF0E52BB8B1924F0579
237FD8009E2EE6FE9C5D91EBD5F19DB93531997F0824EB9822929A703A21EE0F
079362726D7365E9F141CC3CD40F45B96F9BE182F9638DDC47B08EB0CB42AEE3
9CA3E37D6F92F88477C73B3E51C9FD432F22ACF07C736DE82B83A97CC24B0518
5AA799C8DCE2F84990C558F73833C2B9F8C69CD1EFF2AD1DC774C01A388ED08C
C17AE7B315CA2DE5053534332D73A7ECF6196EF62C535EC31D894F640EDED376
61B34FCBA533918CD171A4ECA01DEB949284599D0788337E423B8C3737EF2693
503DA543AE91A060F9A09FA0C35C994F2A3141D86FAD8C683B9124E0ECFD66B6
5F95BF4F84144CBDB1DD04EE077E8E6567BB964D3A414744779BD6DC52D34210
15251DD086A8D2A91C2A290F89A668E456DA34313B8604F17B678AE6EB13C53D
9A3B896762452E38A84703E2672949369F968009CF30275E26F19746CB319EE9
D709A6E8E5F3879805D13FB270799FDB98850AC56305CFBABAC4A17EB9CE2C7E
3E02F715161E7C7DBCCC1793A1285D1905BB1471ED972022B4D84CF007C1D9B1
D4473004F5426F7148BB8FA709AF1344271173529372ACD9ECCFE19EDE2E31F8
37DF86F1800F59C89EF6401111FEA0A0E00D41AC69A342C663C6FA515C70524A
18934B83061A329F302AF6853E5EFD0C47DF785D9DD932D6CCB6FE2CA626967C
B9E8F2DB5B820312FAF3B6572992B6C7F6E459384F67FFBF07644BE345E19815
46D7F864EDB9EA89799B406D2C95E40FD4C806A80091CB012F9555CE8FB489DB
C57875F149D699C7D3726CAAC20445696CAC804213673D0FF5A37BF55F89455E
6E32D6DD28FE436358FF63AB9E4EC3DF2C412ADB25C015D9A215B891B30E00E0
6AE1793C354016F9412B8BDC72BE0B4252C18E269DEC712F257777F31756EF92
614060BA7102EEAE0B4C7493C507F7ED8E3F38A2461495E9887990FCB959CC10
9A11271A7AF51D21DE873984856426D311AB14C27B10CDF6C8B01F1DCEB1349D
281DAE94EA782930E55B902ACC35DE776E8002F87F9D589857A392D2738F8461
A7706DA806A585CFA82CF91854D03F7EFB871E197B41944D209715BA228A7791
A2D625F5B5D0E5B1CDFF372ABB383135DB8A63EAAEC5125D9643E7ABA2A9DCE6
E1B870FF9CDF4BD63FB2598613AEF85C7FBAAEED4EDEEE65AF650BD1E486F211
758473AB814D32BB2F773775E91D854866D930691210DB6330E098642BD3EEC9
D167480508F5F78B8AD7C9651D495890D1B677A4BDB36EF4B50A0D70071D6372
4F0DB92AD644231317D64D6FB22971887E0A00795C3711F658356EA3F4B970A5
94F67A09B6F758CA8C54F3482F355282CA32F37D5D70232E391D4F312DD1EA9E
FC4B400D3EBE8240ED96852989238FDADBA401129386F857AE24F9D5F0D65542
DF47BC7BBAD66207649DD0ADB75770688524E03E2B8F5DCDD2991F446868844F
99DA56D55EED5FB7A31704E08504F525DF166B4FD25C379EF2A66F4CCB29BEFB
B6FCE597C3F22D5F252AF6D62174ED5C933E8C85AFF9F3005EE0C0A94F11DFB3
1FFF741056B0E0627A9CD4DB3D3DFEFDD21D733DEAEF95F4E335CD3222BA2478
63369889DAF8A3F4E16E2C59CBADBDCCE20808A8745D3429475F4E89AA03D33E
A5A61BB6A1D0581D68597F6E303AC6AC247E5219877A6F063DBCEFC121C5716F
0D293AC76CB2D61CD51B3091A1C07689E86710374D0FEEFB49435046ED74D38C
57E81F57F496BDB6A40CC2FA15DA6CB711D6191430A422D9FF73B9466F27976E
8E5B4BDE9FB4F683CB9FAD3D9C6DCF6AA1D3207080C82821E673CCAD009613BE
4A3E0FBC6C241786076F1F53CE092880A351070790C12668D96C827D82DC4F14
637E71EB29B04AE95E59DCF7E38BF93A153B0082245B574C006312B2520EB158
676700958F17D09D8B0D4A2F4F724CD8658D54562D358ED89B9258E54BFBC605
749AEAA4C17D53E4CFC61294FD1879342CCBEB8E9541684C6B20A9D10DD7DE7B
B431A5E38F917A76B86601B3DDC9B5878F2C0B66DD0A1BD4DEB275DC95B0922C
4883800E71D010174FFDAFE4EA44C6E2E473372AA499E6014E29417F2C96F01B
38384433720BCF4230ED7F62BBB495276C4D1F33346F73D6AC437F1D48C22D24
FA15FA08E73C19673C57E9E8410793CD9379A031565E5AD66D1508F616AAEC31
663FA5FC5A51D3C1504EA2C1F36C92C6D2AC9F10D14EC183298277594958908F
522066BA347C03BEF3B0585CF4539FDC66915E221170704F302802E09FF8F579
B59309F9142F9CEB88DC7864A8BE81E0C03F8A6ED17FEEB5A6BAB42836948887
26133B0393316DE508679B11650697901D5FCF5FADC38FFCD3BEF82E5D15C8D0
9D13B0A98AB430342A8C76E4521EF45D34C5ED609E3E4DFCD5EFA08E9868B20F
475C9BE97979168A96E280CF7DE23EB8526813890F9C9E1A4FDA3C4F786F5ABF
B20CE24ED96E7EE72A3AD5AC654B29BE5C5D7121A30DD12D6983FA9D95A67EE2
C1C07595C0A0E79877302C030D29FEF6FD6AEFC263C2A95E45CFD44846BCAAD2
6A9254F99DBAC7890C3C137160E088B2080BC8E66F2B16E9F39EBCA1A51F7608
27A721D6B92B183D31032AC8A1BB775DB20C0CD191469152487275BC82B9211F
4C98E20602B36CDCC01432B0A7D280DFAB8B0B3A4CBC722BEAB822CE10A475D0
3842E1E3943949B1CC8EA52AEA6BA3479DACE417CECEA2D8B957007E66CAB48B
DE536F0573DB32DA9DF6C99069F162BDC50774DD5AD8D8F257466803DFD55DAD
E2BE95CBFB6E9A4406CE004CAFC6BA27D325DF0DF6B0A1BE2CE8DD38E27D05E8
0130E417D915F1B4B6C6C1A31AA9CDD0FD33CD22FA7701FC1DCCBC272D030F66
70C4C2F1EDAF23F26BEA2D7C01E51D12E9BEA0E57AB5CCA048A1AEA30DAF0B94
7C2884055F651E11ECF2A65673B3835CEB2EAB22D2B74CB6E2881ED900F59825
D71AEEB316431E629B6246DA4B173E61879C48F6B34D06B112C8D4B7A07895FB
592B70D96E3F2EF5D976A0689E9EA2871C6C43EDDB37864049CBAB6CF4D29FFA
DA86B2C55D3E195A13BD10638D8471EF80438FB02DA52997D43ADD9D8E30A172
D59CEB63338D52AAA02A40BDBA5FF88D862E238904F0928D97C2A77894DADB21
6105AC441F7544C3EA8EA2C6778463735B05E0FA606348288CB8E6058FB02AA1
47B30FA99C4C8C7BD336D401F5DBFDE3DB3136A8F00C1F2396D00025D84A37F8
8259548245BCCFDDE56BD3998BA0614001C00F5D36C5A8CBF1DFC11F715B1A29
5D231BC8DE5ECAA91A388956E233994DE3021D1A139645D058D79F8D4191493A
350748D01CB5BAAD873A839031C81E373C26C2B8B8A2A90B6D6C9B00B56052E8
DD12547E9A802E30C66C2A1F2B5485CE009359767694AE688933BA0DF5CFA2DD
C1AA1BB5BB81CDFB6AF440BFBD7D6DC4A59A6A3159A52B66D0669770313C4DF9
05519C7C247C4B99A5BBB4F12FD9992BF8674D7D7AB477C002C39ED8CF3C27E5
7102781720932E6441E3A54474E96780AC8E18456FC58102BFD0E48771D4379E
1D0FF101D2E1C969964909B6BFDF9308B3D27260F059F014B9B42EC8B0253308
7E98A8C640833625BBCA7DA0794B0DD3F0C745509C8589242006D7C3E7739FF0
655A2EBE37E5B125D4DFF11B0EA6601D83CFA2183777A7E7878C6ED56E0810AE
5994B981AE7B6F030E18F7DDF584A826D6841809D5F0B52D59E6AF662CFDA9AC
18A33D86DAECDD79FBCC7A4425EDDAA7F49257148F05FF52FF6C69F8AF8CFA76
772D207D8683066FD5D51EDEB31497CE32C03711927D4E8BCF6DC82DF9608B80
D8E86E8DD5D22C5577F1642F97707FC865779AFB6056DBA877CA9E70640BD629
CEE07E06DF83614E2E11CBA56062181F7B311C151C1AB52B85053185AE6C22C8
003DCBB1BC2A0A854BCB960FFB6B386EC6C824E12B441FCB7E8F298366DD49E8
06CA50E5F8E84DAD66AFC7C34EF6224DB7220E56116092B4E90E3DC2BE1C1DB9
852E09F6D888BAD33B17D20083C672244CF0006A3D296585FC6AC72AE5CC0426
B90414FC98F0F03538A96A42A3A8FCE69EACD24CE09C15068B650147C6C269FE
13DFE8C54063AFD716088B6E8FE0CD1702C2C331273579AD42FED7E0558C96A7
E0F31A48B1DD6F27D321F6F925E7D20391C80E22541651CD027D2DA9E0008A55
CE3DE1DF680F5CF4F36C2AB8D492880EE1A59B557505A1366EEAC194EA9254C7
2F56FC9AECBC0ED14AA09DB7EA0FDB1228C5AE5EC4E335FAC98BC185514EE689
11836C31A194D49642882A2E37FA9BA5169CC1883221A72B42A96FCE10AA27A3
700E11D4079A79913F88EC7A053C4B7D89D269A9CDB18DBF7655DA1AE89E0DF3
5C6B43C7C81B91358CF6517C9C418DA0920FE351FB514D0FEFBBF1F53606B848
1ECD5FA685C54990CA64BA4DA424125D1735CDCF888572C3D4E2F023082DB0AF
CD9F09D428AA79821303447C940325E2C4030CBC3EB5F48C5EC53F4CEB73912C
9B769C772FB4880C0EC30396B3D4677A6D2AED73403C90884F55AF936438B218
1123236F5F33E63C9115F80624303534894DF0C0E9BE921645F4589CC0FEFF6A
275954542D25731A4AEC505B1920E5B08CD99F543A5C18B87ECCE3A0213EF561
629AD5A15927D02945DCBA64EC32A542EF4166BC16EC17989C10DC139F073EE9
4F5ED7B734278171EC98E1A9FF855B4771249BC09203C4967CF285C092F0E05C
D457CE0342AD2CFE20765D9B8BD7D1EC6A3ECE8816AA5CE27A1E9A639CAB4694
2C745ADC81157E739C254AD43C83BC623D906EC7632CB075B9D013C9266B223C
04E50883439F728D188C2A7C21AC4202513FC31FC8D802F72E19167C0322F52C
3B92C29F8FD050130FF7C7D8E4379E76FEB47665EED274860C3BF880DC2F6C80
CEC4A92BFEFE4740DE3A050C1CE357809009A494D8D1825243A8D79563EC2EB7
85193D485D01B3456DCDC99BA9CE2DA27A30C48C2822AAF799C7BA511AFC3AF7
177E7D119187D31183CA904BF972BA947DE56330953D943A53FF6F4D4DD95E21
79CD1D70E7085E2CCE44265EFE6485F6B840A1009452BF086EA835F99AE0AE42
1D0B583CE26E7F1E23F0E139BA03B56B4F220560CE72BB55B8C00778E93984CC
B5E4C8DFEC0195E99B6E47CBE1D39D168818B4B39116C0E58457A66912291DAA
0915E7D640105F39CEBF291CB6B10B7AF374ED78AAE5E44725359EE84142D94D
034A8D5B69C16F750F4788B6B3C3C2776D4DDE25BD6A27A57DF0B4CC9D118666
C78DD383D722EC2C91238DF1AF5D2E1BC3888224F96AADAB604224E142F3A047
FCE19EEF33CC0AF6A8C1095C81DC1E52C828A7A115597CA3B656689AFDD90C8C
EF6056EC65CE4A345F755D52E5B899AC1C55B507A6B130EE52B355A1550F8ACC
4BE04A7D86AC781BD5C69282459F75D8303850C2464162F3A43F1B61C6E00DC4
FDAC16DED3B38BF4D070186A164867BA24B083E54D978815033E1504815203BE
D8972AD2BB57CC4A75299619D40FE9083B485D1AA0B5BAEA7CB0CD71D60ABD95
81F43C55334F65428AEF68DB0DF2F2FFE1CE6AA84C367D30F9667A114CE6D058
71EFC4BF4EFD38463ED7B60904293EB1A0EF00234ADB2283ABC6B0F42956D517
643F994B045BD17B49A95C81230389A7BB931FA4FD49EE001D6A439BCB4BAA5B
FEE9EA67F042805FDB427ED172AF78CAD68A33180FB8C9090B96611977BA81C8
DD4997508D9D2BAF778E8DD3C9A7D67D5F10D5737BB76983762AF4FBA0409CA1
F34238E1B4DF358347C9A6A4C1E98C164A48663A198D2885ABC5C2D88068F8A5
AB508D70E2ECFBA1A8CA8C890F578D36B9B7CEFC8C3328D924C810CC17A2F6F5
3ED462599B6C90410A03E15410025282126540D1730AC2CFF0829A5FDD8CCFFA
DDF144C8A65472464F12F5287D5505753F154A05A742EB8A12B0D5677E1727BA
4D81EEE3664FB24D30431A639294C3E33E5A7EA46E852D78D68B347A9DF817A1
94FC01218A68FF8FD5BAF4E097F7B2E17F68744226296C385085FE047A26B2E5
B2C7A49B7991FA427EE4B63FB99C7D38F60DF05AAE387A87AEE9F0E059C31679
E5F36F0C305F19719C362FE6C3206B35A123FD7755524B9A07BA5B22ADA42576
6E1E3EE60ECF659F62A2BC0C99138A50793D4823A313E74C40B3800FB7E72B61
D4FB22D1D547A7BB3E81326B870D902E8DCAFF7828D18007C535229CF2916878
216C4F4D666E32AD7FEA58D72B186F703B7275BE53F559FC8C7F2FF1D4BDF6A9
66838C3F156C86FBED9411EECB76F8BE06B4740A53665D07F11F2720313CE9F2
5B789C6B5E6B55D4B8F59E59E3448A801699826FE8A7CA7F4366712F5C674C06
6D2B4E7AB66D96A8C0AA38B03DED3772ADA80F21B7A8BB3E14CF0C3072FFF2AD
D97586587AEA87A1F0A2F4959C543B44C96A2EF52BFE067CD49B8D9DC485E29D
FCD2D06B99CF305121E01F5303B88925FD5E6EAB02BAFA9FCB48A38849DF5BB6
167229F9DC2096AE2089CE61F95C6A900B91C4303863F00D29E819B62FEF65AE
AC8C661C52A645A638D361BCA38326530BF4AFE848EEA978E1AD9ECCF1018279
B5F92E52B07DA792815D9824F488CC084C3718A88E27534849060F9196954234
2174D3E2B31056F217B2259CFCCFAAEC67EAADB6170EE5A8E1CCE437B1074496
0C6C38E5E9B211088DFD707417E53314C078D91BCE4F6E6BF9A4487880FE26F2
31E3CAD59B8A79761398D31DC9C2960C948A92014237B310EEB4117CC5729031
8625E7BEA8B9591B661400E45123197753E6BEF06946E31664AC6BD3E9066ADD
94EA6C5031C3C0FD6080534DA24A869048C358214CBD133335AE4D1233AE00BD
B4D4D40F80BCE763C2E75A6F44E4CF7669A9CFE05F6B735AF53E516B58B38D46
97241DE44EFEA539B9D8CBC8582AAF84405D645725079756EDA80FB77A10D987
BEA03972A784E9876D21C91F7232D338AB6095999E149DBDFCFECD3C2984F9DB
6DE0610A9C03DBC54FB5E6F1127C6160E413E464AC4EF508210635A0AB07848C
958AF6AA746F66E94012F6086D865C491E31575E01C294AFF07FE8676FF5E688
D092C25182D356AE7E663E81752CB3403F9DDED1A02F6E1D4D18A80EC1C890CD
16C980D435EDEB61826EFE3D658EC31B6EBD4B0A046DA31953423F4ED46D7A42
3123B5AF7B16464FA233D209F22D14C59E1E7B2E51A53121726C17807B3B73A0
6F2F34D7BA0CCF47AC23C965B48EC71E48073622F3D6BAE26288D28B2242F411
D25ECE6C23023201A2E32B30E5DB3BF250C956172CB5EC6B1AC9A627D36420A6
9A24BEEF22FC5B5B861929E4E4E93D7E61A211030997A2F013356378DDF126A3
A21A0D5A80BFCE131DCE3F5B17D6E3F407265BD4B78D0F09C29A0555C25DCFB4
009473695805DB035C072736690D3B88ABE163E89989A078760C46797C77AE28
6B4BE18CC7B7FF984408562330CD175CDFD79C41EBC1479405477294C4DC58A1
6B7BD5665E7E8E7DA435E235C96E0A1ADFDFE2D9BBEB77DBDFA7A2D6908FE9E5
7D9FC18D059EB580439EAA066BE1E037F982EB34AF7310E52D33DC848591CAC2
1819B95B11065F88E0973BA3D601F63136758CE7624160AF047D1FC03853CE5E
A4DB31527F602861B8BEDB4BA70A9B80E06408FE933EAE49BB5801C9FCFBAB71
B4D09FF87D6AE4C6F51B43AA6213374C87F207AF7C048EA77A05F8B383F4FF4A
7C158AF14AFDF1C34835B97E3ADCFDFA6EE25B9F78BD73D380C572776A69075F
4BC71E8BB2E46C49573DCB3FF27B717F27DB1F4C5BEF5A589847292610FF5AF4
BE0D98624330D5775B2F9EE24718CA564429B760000657F1CD0C94FAE862B791
4A5807E75CA3FB368FB8114AD9FA5AE5853CDD37C1F7B159A13BD236D4275A41
2945C26F8444F742E8F8DEDEC25228272457BA69972A57559DB3C7C5E91DC50A
C64D43282F5E5BB844E16C267512E5FC902A9FFC7ACEAA89D9D6BE3222368DEB
BAB00AFC1D90E9D50FE9FD7EBA8865A3A090466EBB95F181384825C0EC36C3A8
418B72775FB9757CBD261ED57BBBB9E4FD3690E649C7C578E8474F13C86B0722
FC94DB929C8DF334E8E371118060B00059C8D950C6508F510C2603D494CF3DCE
0B45648DFF5CF3952414E93BD830E50D630D6360484234296A3CD04E7C65DC14
379DA0A0FB8911F9A358EE3F614C6503F41B0DFBBA22E62F63CD69865AF20158
B8A70DC2F60F1A3A008710CD9B53402F8BF211FB30D8723FE349E5CE186A6C5F
2EF472FB4332CAF4150E09ECF3236F2A20B65758B1C462CA222A585802C69C17
B5EA95C51A86924621569B7F2EEBC36D3E6793020231FEB5D5AE87807709427E
006ED09A1E096D6C04B1B2C6AA012952CFC4AED19CD47C6BCBCE98791014AF60
48D356A7895909EFB6AD5F161A0A748D19504B3D096C8128332F03DBC3278071
9898870965FF8AAA7397125EC4386252476549C47361F45B4ED5492982159423
67C7928582FD29E1603D0301DD6D52E1CED4D57A8BE7038C3C3492C914196FA6
59F0A88CF30FFA3D4EEFF79FCE486D9FDA902ED43AB1B2097DED7E05CDCA85AC
1827512E664F4943F856DC2A5C2C533BA4E10837B4D590E00447D09DD28612C4
0F570CB7ABED5A93443C70E420D77F15073AFF2F692166FEB595CE1E02B23DE4
3D40312ED8AF815B0474C282A2F2036429F3E7F453CFAC31B58F0BF18E70338C
A8CE6274D61C9B9048FFEA5D952F9223A71B8D273418140882FEF8EFAE20E8EB
FB4FDC4D72CCE6147C4E603634A820A6E376B951E163A56410DE2CB058756015
E75BA5E809CEEAC6B233844A8AFC99172FDC8AEF55BFEF2EA27560855E87D030
8D9340A4E51B6DCA71BB04D032344578F93E9178B9AEBB92E42BC70D7C87ED3D
5DCD020E196606F6528F8332383568F2771230882140E5E926C59004D6E07F6C
D8CE5983E90481F6C08522E84027372BB388D73EB155C86F0661EBA7C24CDAF8
9A53F5D042551B93AD90773F03A4E1B62A6AB7BBD540EC8636F398BC25C3B9FB
DF345FB7293AAEB8CCC96F77CFAEA1E3D9952E3EB4A6D1C794C99B9567939438
875D9C4BBF0F3510E482B8F1F7BB311C4FA4C469CC3595FEF4FE3EBF5F4FB738
9B3AABB0E0A58C5D1AAEA50E83DD2A959C692B091409E8AE0295F09C9377A9C0
45EDF4D85BB731CC3DD290360D3D081F33A8180DB50A52202C669CE70BAC7E59
31DC84657A624748ED476604521DAA53D376EB13AD1A757CD972285968B08C50
C334442AABE4C9317B138B06D5044A775B8711246D2A9042A215C587F3EFD8BC
395AA895B13E2695451ABBA6F34A3FB5200774684F3618BF4C044EBCF26BF154
10906D1DA831E008D282017AF5D781585C76C197CDA5B0E9A6059781D137D90D
7CE6A44FD19EF61AE8EE05A285984B02DB760DC73CD4FF10C28D0EA923867477
2A265C5F304ABCDC6039738639498A74735A4458FF91B81BECC8798DA4D0F67A
A6EB740B8D3660ED4B97D43F652EF3C13EE3B4408AB01E9A0688040A0E52A2A2
96B02137B3A5FF85B67C09B417514FB5838942BCD40FAD46A43B6BB8A61374ED
C509257F88D729A5359CACB1869AEF633A021CF8C44BE27926DD610A7757AB0F
BB70A6888E6901365DB4CE7A8A5F7FB9B7A9ECC6776646CF69B8D0E63316AAA1
6E3542095F941A848F68860F196046548A864B4429872E1C710BE4D01F21674D
F1823CD9C4701E2F327ED45E9E69AB4CDA39FE3468186ECD90E268F836A8166F
173414376D320D0034D53D4B967B59802DDEE61AEEF9862229E54BC3BC3E6E69
A79637E46E70A82B01D34C74C05670E771B96E9DEF3EAEC6D529D37792DB3347
DFB4AC9ACFA7EF9AEAC4A37C79DB6B7078A43AE17516232827941D9FC761A5E1
BDBDBF2374E2E43E6951E6A17FCA7CB92A9FF077DCCE1F1CEF6143435F317011
DFB67C9F112664C7A7D2BC7AFFFA93031173A7F0143A38D7569D436D299E7B66
4067812268E6C6F60AFE678485A259D14149B7BFF5EE26943422BE36C7CD7154
890DE52D78CA435D023EC0C800CCAC0451B76F588AC9DD650063F7445268FD69
835951FCC78C8FBA1A9EF1A877541312332A953AE958CACF685B1CF8A67C5567
78CF7957E885E308D4A9D13D15D91570B298A2A5F88DAC2F1BF58E2830BC8DB0
6A9F2F9B289307D7E0608EF7DC3322C82471DBB03819F7EA8D168565D493D136
EDA91648F3E80D344B5FE6F8959641DB86CA789E333D89AEA5412511C489D505
28D1ADB89578CE23226ABF623CB06BD3BD31A05504504F212BACF53011EEA178
C5D72F2026A8E2A3B8A7C5A150EAB1A5E4FDD215012EA2B3218148D31CD1E47B
E3CF89EA086091759DFB842A30C33FFCD133B074FBF6DD8995428D817BA1549E
5048B73A887247E22E5984AC472570E9FA69530D329F490BEF0C4E2A7E1DFCEB
7E5BCFED94DB2F0F49AFBC11419F6A38F2F45E0D90C13434D2CE77274585A82F
8176ACE0B950839DC543F462DCD9D2CDF5C79636A0CC9F3F4A516892C15FA569
1D21C71CECB979C6F1D8D2F27510E502254F1ACF5286817112BC27A914571161
8576E7D1E2728680685F6BD8950AAFFD97068A4B6A6499871BC98C63718A4038
47F39CE5E2A3A921D10E7C24717D08B86039D75082FAD489626DF75B25CD850C
9FCF40E7E8AF2530B109E599ECA0F74991944496D6329661ACF15A12BFB104CA
AB9038A569480B032CE5B94977DAC70EC3CD0150325201175297D571FBDBD36B
BEEA1CF22AAC0DE7FF50D5EC12FF9E12BE4EE21BCA9105921D9D9A22DADDAE02
E5474D3559A81369B0510DEDBB57F260EA0C43A88CF97E2002A1E5B0249E2893
B59E81369BBBC0EAEA46993B25746683181641E9479EE60BE20BED9F608E7A1B
1418DF9B0DB3F9F2E65DFB24373377F4CCBCF2EF4A28CFFF6E6A50ECDC0587BF
27FABAB3C46B3E6E8D96BCA4994156FF248E84166BCAB0BB284687CAF5AB0A38
048A1B3DEE8E3F24B340B5CD65E29B793554EA4CF8ACC4AAB7B1052CCA95CEAA
B36A6F25C049C3AF6EF6976883B2A5D683C86E5E759464CFDEBA94A0B969496A
0C34A4C8465DE2F896B2ECC687A900A2545C5190F0253D81C49E44C0EB951297
22E0339C646A8B391E22E3CE8ABCD6A0B1F268D76B41CE8B1AB89D4C45C1398A
35B507D8EA09F452DB95EBCAC671DC045F49F2FCA2C70FAA178D156A506D42A8
FB03184F4E83370D19E3EC1E720A9BC0AFAE59202C67F83F4917D8C1D18F0327
8B19CCAE0E8491078F20AE0D7AADBE52F421EC7C9642D0B4727CACD93ECB1580
B8E15B895CFEEFF34404740765141DA5FCA30A5E37904774E8FAC8656D94DC92
70CA7D54959E3EFBFA64617634F8A2B735A77868F9C133EDB97EBD373E094CBA
9EA237A9FBA876452EBDE0BFD0C15C6317C5B05C03223E6627DE4FF3B7AC3F45
9EB716B4C600907BE631DF832998F0A517074267557E018E734B961B502C4A96
C2E28D4DAC2CAF6C4924C28FA548A84507447CCC765EB1A8B0C29F870752D0D5
BBFED624CA5C45458BDC94B41EB70093103C0EA5D4A6AE15E0D5B9886892C43A
5D5477B88454C69EB1E0BF50A969796BF3E8AAED7C35AE003A094656FC1EFB78
1EEE89C4EDF47F6852A9245F44FD7F6BA7615716DB5521DC710173C8D8587BA3
C294B953B13693438EF129872D6D73D37C6172006DF46F82DCCA36C1527CDE7D
A690C4016C75ADE6A4C6C1BB69BE5002020059C65B3980BAA08865E9673AC16A
E8B5518E5A86B3CFE1E224454BC5878DCA138E2329E81AD66C16ED488C146BE8
463EDE7FE660F2F0D9E9D682D9414A3F53A2B4B9D1C8B30638AA95BA0BB08CE2
AD8C37F4180CF3DC984053D20961AEDFE379EA6814FC3AEB700E26159E52223F
E09D0BAD792818D2641A43BFD92321C2B7DA6FFB6D567AEF67B1B2AD1F9BA9EA
10706A84E46B9B9839294CA382570B86ADC2C0724D4463103F95F6314D6303AF
6322730126415BE8B02229F3F9B4057C6F78CF2A110221F6319AC333583A2952
36C06389D04217D6C7E161A7F0EE61A4686B271EF4AC5A22BC6760FC07F861A8
250FA143F06B2980C495149E44465E8DE5ABC12974FD64527C1829FF01FFBC5F
331C82C8F192CF8861A8836D75DB0FFF4EABE6379A40B89BECB0F975570788B6
8A6993AC536A5F90BFF49362C9FBE6F6FA25B6EDBEDDAE38AF899603B1810315
EFAF2124B0AFAAC25755250202DC0EB04265F6AA18E48E33402B11FFA0A22557
2C15EFCA00523439CA5FA4A427781F43A8462C5A0B4102ED11638C3F4169D7F6
ACC00641DF4F23655B8DB922C2DE8B77380DA90038B4897CD0CFDC44F47EEBC3
C09A35BA74A5184A64AB25E8AA29D1471F677B7B5401E815AD4009DCAF22ACCB
6186030563B475976022C6CE1C88F14128F1DFAEBDD4F48FAA9D38D97C6F1962
DA3DDCA0A9BE3318C47F584449706AD840AF75A765C6983E98DB5889B3DA10FA
F80813DF6A37D29D8F29E7B4EEFA79042EA43034C5087B6C25685EB98389F70E
60CE19AA95682AB3BD762EB16F88C38539F62A87D24A1EE7EA0115F00B359F26
18FAB79B57217A05AA9B17DF01ECBC71D55FF40076C3046723635FB5BF1CB842
5B3BB2F4E4E4867F83E49D0B34398B25205EDCC4247563959AF9B69598DB2D7B
66587E578C48620D779E3604F15C3F85D879D6D0381FA63ADA68C6D0CD32965D
5802A7F6D9A96A972C8725A2DB9EC1AAAFE3A6040A2B05F3963C7002ECFC6799
3FDA419B488FDFE3F3EA93FE08E4D0C5A13A7C3D9D9D4D6BB7022241AAF679F3
3689F7EB47307F3169C9AF62A224D7259D7AFC83CFF584BE41A43E98077F9CE8
6170976302864F4C474BA104A9FCC073680F2FE87BE9E4B3233DF0D1098DB4DB
2B893A51D0AD7BFE7835DDA4F235FDE6D3056E39E42738595A9D05A8E2BC005E
79E30574A4F7024A649CD1E474320368D7AA0E85E5385A0F267BF16410EFEF36
2FB5A723C80EE091FB49DF92E4DCFD000D164B38112D6BA142287CF0BD3E9460
DEB99560063A8E11166F395EE63ECCEB9DAA6DB92AAB418CF0EE7950B6A9EEC7
77F6BFBCE7C04B956FBABE476CB83D0275A9F921F6C7AFC544A7BE65C4D6F714
FEC2E56A79A400FB7AD12A10C0E2D08C36D4F76E939EA1ADA239EE9EE8E6F9CE
4E27B85DB3979ACDA88A77BCA02AFD01BC42367050F1F1459CFA3A53BC041821
1BDE245A006B2092DCB569381CF577B55335BB077D07E39417CBD069F229122D
994F94E7207784E382DED51AC501C6D3E77939E0F20234C56F44F772CFD7701D
B434730B404267E5DD9F576CB4A438C85980B05389CEEAA7E5438218322F185B
38DCC529AABA86C5E24DD137D8E96A70AC857D2E76BB97BAC8DE71D5C04E6067
996621305B88C3DA5E97F88A86FCC764D47D764980094E5F2D8611F01487527D
317C6815007F46F5666148E3CAA720DE09043C7D321059C48808670AB2D0172E
6525A448240B941369AE268DF18624A0699F6CC3D148A7339E32E0AC6C720493
A9D11C4296EDC963F5A038E1E45F763B078D0626C14A0FF8F368727B9FE93494
44E91F3EFDB264B9C2ACC3F67A4952FF1C44B3444ADC932D3E40BACD235B6AB2
6DB9D8AFCD1DC6BCEEF8874D8E074D70598F172483DF7B68764ADFAAC6ABA431
E749F8F7FAB02545374E7A9A203B439A6005ACF43FA7AAC7D30F41690704838F
B662DC90467205205D085E98CDDC2E8ADFD577A42641F249D3E429E9EF1D8D47
EFFDF9780E5B2E6615B0644D124DC4E5A7AD51EC2A3A0901229C955A2B61CFDB
C47C1F88964E6FFB1D901DAA2F845A19B2629DCB7E2F2C98D9A1BD95437875B2
509DF09D452468BBFD378102E1A9B36825D62BC8F214B492399E7213B5713BBC
88F9097EA713D4938878F5354845CB093C082B779EFD76E8D9D8AA6D2852E19B
AE11949C9838C2D3B929BA79023635B86A99CEC9EDFFB659F42DC8BE239BC792
E75C8C389FA51B764434BA4C2999917118A0FE338A3990D98FD0CD9C3B7EA8CE
640FD3014C5CD292DD5F07EC36976C1C6EAC1327A7BEFB5E4C4A601F94BE028A
2503A31FA400DB25AAC7FF1EC282F852696436B7118F7EAC42F2E29603705D3C
AC8577FB40B5127BE6D3CAF8FAAE48DFDECB5F035E447FA54128A0A2B1F8068D
C8427421152899F4B5FD2467AAB2410006FCB153CB73A6E773D2F49784F0A543
E75C52F8D1B30DBCBEA2AC0248A829C8C0229DDF918AB3188E5D90D46FE78F88
17945B257D0C52B9846070484EA3CEBE8974B1CAA799270497C44D0C5D3434CD
3F21F9BA472E87BCC6DF8CB07B2BB9788903A7F83C1DD65C272B239F7D994B84
CCA401CBDF50FC00C2F42E57521C236603A1B790B5CC822477B1BE510B9959AB
47EAD65AA869771A01C874E5187A33817D44D2AD23855A3BDFECDDD2AB94B088
E43A19A62CFF57309CA85F9FBA42A89344EB147A632FC0D2CDD0285EBDE29A5D
CF5A8934DB634D76BCDE963FD910D54AD3E0DED3DCEFD023E7D5D46E3BCC350C
F5BCA1A97620B88B615AAA50EA68AAB5139C3F87041AB65391AEFB9BA612F77C
6FA56D8EACE7B38E324C910A143C466E887F4039C5BF84A2C59ED986D0049493
323E4D80952D39D12A852396FBE7207056E7FB350EEE8077AB14015B9595CDB6
4548BF7F6E5DB643A59878BFC265E37B9928A3E896232E2E5606BF0377442A27
370F124EE52AE5D41B40A2501F5BB3A4A1E3A2079CAB0C5BBFC622171FD3A27A
6FAAA51179C51FE9ED0F7735C0A97D39C4B591005929D619CB1CC8C71BEBD837
A32281298746EC4FE6967E7375C656645614FEA1BCC56ECBF29EC7F4F2313289
2C5E57849AE75E2248A4200D6475D1DA4AC2CC5CE92BEBEF1216D4A5BBA60E07
071AB3BA46093088B7860A5827DE715EBF675573E396768F14D6488831AF0A09
D7C271FD4CF8332270543449BB3A83B9116DB7F348A9CD3DAA43C73D12C22BDB
81C37E933F49C6095F2CA03DCAA1B9FB85CCD7646ACA34760B390D4050CB6A99
96010C6B5606A7C92D49B00418F17624AF5CED94EF50C047C8BFFCD80A714FA9
764D1F1D95712492B8ADD6D756EC5B94EB2797F86B20BFEA22D1506B0F84D8FC
8A560BB13C87F43B45F3F4D80B15A0764CB951685764E5773217B10414464383
A6ECDB9C92E9666119909CC4CF486DD47EA9F5D014E61B68B5D8D2BA0F0F0470
2BDECEF7D5EDE3A6DF8E10DC47D4227B16CDC05A0B070065E67C79DA6C0B74CE
66D87DCBEA2E893E1D1045F1C79B45BA1F23CE4FACDE8E09CBC71E43BA5E2B46
A4ABA8F17399347177E2751E260214FD0114F3DEC81DC0F541420761E64DCEAF
B6666DA6376788D1DE964A04EC91B6C8CAD658A110001ED02594A77EA7E7AC6F
5D237C96F3BB21A6D03E746E74A1B24FA365D148CF851E497D54596E0F0D1E80
B893F4388B329AD2E657F218886DFA43D6BD4CA174C9E2DCD603504B209D4307
7B17EB0A2AA02522F67CDC7A9A58E5BD6AFF6D51AED667A158A7D4E4432AB1D6
0D80EC5F0C68A948BD98DCA324FE1FF36B9AF4128961BC191CCF2B10C44A375C
9FB0A42478C63C348942D69228DCD44506C093F15F3EBC5C4A4915062C4F19E2
24E9D306E08A1AD7EB423BD93C53D0CE9FD3AE8B163CAA5AF9D0086754766B95
C55D04B94F5EE57F206CF3EC4563E42D5DB0A1DE3C4028767E576327E5D4218D
D608C7E38A876E2E14E36CD047F410CD1709FFECD5F069FBA8959E92CC6ADD1C
DEF38B40F21E9C11CA20AC8478132A187E98AEA528AB85C6DC3A6D640B388177
81F04DAEEEDE2AEDB80718603BDB73B5CAD98FED1AC7937F8538038B8C7EDF59
404C1BC609D345F1561FF23C7EBE6EC1B72CBD3DCFE04EDDBE102724E8CC22A0
0FFAACDC578E39B50E5E41619A0D65D03D02E69C9B8DB202D0B963C816B171C1
A497D3B0A41396F2C30E7D1E7AFBE3686E479E080890999593DC59C00021FE58
BCD6C5990BC8E36E180AD00BDB28D6DA49A32F48CB052F5CC07008F2C8405BDD
2CEBF6E20B365EDD7ADED3C5B5C802F9D9836CA412800225DD0087186EB85016
5180924E8AC66C742EE3EFBF84A9F22815A406E6890C95CB706F94BED5F025DC
318CD141D73EA2C16BAFFFCB0905E3B54DB14001D86A9A4413DDDC34C2D7114F
5EA636C2513340A07131FEB7351DA760B6C2B75FA2468731CCE5485ED359970C
C74AE8A08E283804BB7AAF5CF983535E1D9BBBC08862989A959380A1D2BC7CA7
DC307DE77C5D1BB85C7918232FFC8B872E85A86697695DB0618B051BA8EE1039
D9C7BBA1095D460ECED1A645F75DDA1288532BD0955C4B62F02D070C350200AC
03C846E520468523200536B95AE35D7555ED5E58D2EA63A659843E720B731B12
18E4B8533F584191D18AECDF181EEDED7DBAD6C2DCC5D05184B56BE9EC61528A
A8B55FEC80F85BC1C67DB81E73531EDE11D3D9035D7D923BF90A91275A5C3047
FD86DE2C5D44D48C8A7340173980C618C1814F112E95C7C7B413C31DBF13862B
9933E0752214C0C6859C85DB11FB51129CF680D6E6CBB40136B3F35813EFE1B4
20D327F2CEEA48ABAEFBC21529B6671ACB8EA31D560E0A5EDB3B8E57BC55C712
5EB8283209910CC393BA92FCF756A74C5DB846AE5A08E2A30738FE9CB3A0F113
4D33D3052FB3743A87509CB00BD92AF78A3859B0C1B57854488CD0AC47B1DA5E
76CD34B53188F308B9DF1EEF91C6022354C9F6EAB30ABA78611347CFBA396A67
1C9BB1B172E91DAC4EEE5D23B5621092A5848C46B1F8FA9C9A88C1B0D550992B
4DF9AAFF7D9B172B5440D6A5BE5664D1E6B59378B85AFE1ECDC7F788DA54E27B
9F19852BDC1B63FD7AD6CF033DA3B821D96E9FF4C4EC420E71ABC0387561CF27
C70BE06042E0A3CE2A7A34D932B0290A01D70A618A3C6D549ACEB48B450E48D1
5869EF43C96A87557D548079AB2634EC1CDAE17C0B107163A0213F869E958F12
74ED2234ACD1BB57B32621EECC3678B9948243B5E3E781F585BE312CE15EBEAD
3FCE9DB8B680804B77321701AC1840C58F2DA4B491536CEF9D88EF246619AEBE
C87011334058B6953134E7BC634451B517E5760F750493009BA9363E2F0706D1
2167B29125B6F19CE563C06DABD6EEC2728E923D654B9DAE1176C7724CEED038
5BAFDD5D13518453221C488CBF0B1BA883E893DE66023BE1E4374DD50C07C331
ABAB17A6D3925D74244F76C0159BB48FB8994EACC807833199E1C20E70750318
8845284598225A9D479F2379BAD0BEC10DB4164546108137F7BF8DBA9214DCB6
74015A9D9D1D165838D3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 62 /greater put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D91051800EE6C54285
AB0594D87D05EB4CB44FFC094DA0072AE7D4BF2F4F9BB812FED256B937BC2574
8C529F97ABAE081B0702A3349EC9A6641770F5E9F75CBD40A2C2BA1DBD67A5CF
D70BE80E6FEA2DEC57585BC12DD19303032F784B5EA8A81B9F57068AE5ACBBA1
C21A4A35D152CC0ACE378141C63C115DADEBADA821BED2C4F19938C22C4CFE00
FE33327DEC2DF262EBF6BDC9C4DF5EC10D8B8CB097B2686FFBAB8685CFCE055F
5CCDDE665660B49B57EBCBFEDE36CA7C0F256FBD50B4E60527DE0C12E0D572C1
CCF14B3CCF9DE77B0F15CA23F737D807E2CB59BD54A27689FC57DA0C377EE8D8
1928A501881351D99E6F81D21E1663E5B616262D611F8C3DF4CB00108965FF74
FABE052DD335CEADD4C722E72453187F0460EF744E3AF8023E233F2CF66F1434
D2E90A24A396A82FA996CE093CE9108D9C191C8EED60727A88914CF9E1D6726A
F641B3BBE8D46ADED4802866F88B3DE762279AFF6DD386091DB21DE18029AF2D
35E66AA3B72C48227684922E51D1E7BAE0510AC9DBDFC02880C4397FA5D6B45E
0F3C90F8A85B8A7741A3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: StandardSymL
%!PS-AdobeFont-1.0: StandardSymL 001.005
%%CreationDate: Thu Oct 21 1999
% Copyright URW Software, Copyright 1997 by URW
% URW Software, Copyright 1997 by URW
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (001.005) readonly def
/Notice (URW Software, Copyright 1997 by URW. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright URW Software, Copyright 1997 by URW) readonly def
/FullName (Standard Symbols L) readonly def
/FamilyName (Standard Symbols L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -229 def
/UnderlineThickness 46 def
end readonly def
/FontName /StandardSymL def
/PaintType 0 def
/WMode 0 def
/FontBBox {-180 -293 1090 1010} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /alpha put
dup 98 /beta put
dup 108 /lambda put
dup 229 /summation put
readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA4706D91AF999C9244BA4C770
FE5B3485F083B758947E4EDACBB478E55F1EDA6FD43755F3819F9292072ADAED
FDA1ABB92842199CF874FD0D8A6429D69D5F1E8BB56FA51E0B0A12874786CC3B
1C24C9C608F40C7774946DE7D3EC6F234B793C9170E9678D19994D61A213FE29
925028E208DEBAE41C0BBCBFE69FF9920D5473AF395F9D07E27F7871953BCF83
0D8E781B183FAC31DAA08488CC639C348BCCB2FDEA9BF11CFC9CF589E0E5D912
9471AF733E09424A60685F4516C1BFC2912883835D495AFD44781CE0FCE03FD1
AEFD4190D530C243E82BACF9BBB7135AA21AC329BD25AFEB5284D0FEA70F0757
7047772298ABD77E1BC00DAA5CDC0B8C239EFAD8A783A1260C2C8114B1CEF1FB
FEEAE79B4EC33824BA74E4BEA34BA26730DC2B90DDA59868D0D53327118E0A9C
CF307F710DEBD7CE9A7888FE9B339E1561B4B83F838F8D9C615054192F4B8452
5908F8BAA5220EE28F4222C1FA5A97DB983BCF9F584866482CA7EC79A4AC1199
8E071F5260F6478E070D0EB84A342890283F5B5640CF3C44AA2A1724F5F09186
1086C71F7953533AC56D6265200EAB54BBF0FEF8154EC13229A8B2AF4E6F4449
04A576D348562D512556AF95293C7D115FCAD4853FE45A542EBA44901D183A7B
C46FDBE9797ADCBF4D6FA08D72895C28AE4FBA5DF746313DC684FE87E65B2DDE
FF0D7BD00F5641F8EF4F5D843381D6F1FCE86CC6CAE184B13643AF1D5D415940
6AF2B20426CB232D719AE12C53BB3F06974C660A27F619ABC0E116C9775FCE5A
EB0EC686802E49EDA9528B7D8F8724EADAB1EA2DE9F0968D2279C49A48C6301E
226CFE1D3E3239CADEC5DB6BA74C7DC0D0D0A183BD254DBFAA7388CF2CBFDF7E
B96A2E6C2297EB8656E59E82D8B8D8D9C3E702B02A14F4AE5073FF6E47EB223C
4A252260FB1B900D564658F0A4ACFB0CFC3F7D2668AC317CC09C742C6BC2F91D
9E724CBBD53982E2FE82CF72A27FA3E1E9BBE4AC0AD95EBAE53E28EDB2678C3E
34B413B868F016B702D8EF62D1CAA336732EE5F578302026F8541CC2EDFCAABE
8E6BE1F2BC739461D428AC3349407EEAE1774B790CB6222E108C959B8B1F730C
EA3CF50276E7EB96907824B42289A545F3AC0F4EF1A383E2112FCC451CDF5508
519B9B58B5BACA7207A8E469C5995FE6DB087505FCEF1F9B81B0F74665A45FA0
AF22E8B530D6C6977137319321BFDB6A526B7AEA07EB604F57A83A6CB987E1C0
442D9FBB38539AE5B64C3EE50E338BD4134C8C65B2FBBE4C4D1209DFEFAE4490
769652E33AAE83E984389A3B3720FF0128C29E7F9F572662F53AA09B15047916
1D8B2F5FDCEA0020FDC7A6C4FFE0C1EE9442889AD25165226B49D7050D44AF01
708840A77AAB12DF037473065B62E9F3775CAEDAD95275F29F181789FDFD6693
9DCC18BDEB94FE8B9E0C176BC84955402CE2D267B6F66D9465907BB3E7B2C6A1
C6134BF0DEF1E84FC08DEC39D507B7E8BD7F2A2B9EC9144800C3756DB044E20D
49152A88334556AA32F3DE7B37876ED3B746B667B1AE6D03DCDA9E151D279C26
09160715F06663CCA773B05D32160590FD481316C1E1EE4D59F98C4B03FB771D
559CE42EC9E463AD955334B2DC5A8F772138B71477715A00DD0F80EBFEB84321
F101828E8037B9D012B8BC5C0BF83214AC8519F181F4BE8DEC03BBDA3D6D48A2
B2910FD57E8511963A4E5A3B237FDCD1E2B7B83253A236A328D734A998D922C3
64410F36236567E591501669D0E4640F2E61A6A5DF2934029E5F5C65D8D565EF
69973054C785231D04CFC2C81A203248B1A250C7FC386929A39D2BB84CF2C552
D51CFF6F30EC499F673A2F8F3BD8ECA21F97A0F984F440B9BBB1A4A00CCD73AB
3DB313292A7B555B6E3578094EC496D48101D74B7B3F3F1804508CFEB4D83480
D3FE238A8173CF5E3EBFE3F9D8DC44DE62498C210A73AE0C6D7DA781D92960E0
B0D4F950F8894013ED148FD57C29B1E868EC13C2934039A6FC670A55BE2F1278
17EB7AB3E6D37E36A8A6339CDE7C7CB538061EE8B2D0C1C3C377996588D9798B
34D939FE4B524950E3398B46D27291445DA7941CD0201D3E95E8C1580BD4149D
B65F8D44E796FCD51B85CE11D2326AACCC69D7C5F18284036F8CE4AC5F50D3E3
894D34CB555EA7C3A23F7F457E8862082D1D3D93AEA5073DC1DEF1EA53D149B8
686E642146DF57236EA4FA9E927298FD37CC660432BC95C7479E056DDBD9D98E
7BB16FFBA85368DFD0E75FFCA3CDB236726338132AD15C57B09847FE6B7BD549
EA906DB2A8F6C16AFCD432629E0DCBCFA738B5E17B7CC9C9372D7BD802D89A29
2AA0F12FF7FB3B4C153F0C20CAA349098724246301D0FD7DF0317B93962EABD0
FEE91916A408EBDF6544C071256AA54FF58DC8FABC8BFDC2349F4B169BB39CF3
BC385B9C808B0BF5A7474F77D062F6AAE96829B95089A9BA4B23F0E30DD064C4
6EDBA702E276066A585DD64FACD698E203E2546FA4640192549DD9EAA07CA396
C6D9A5FB18E77ABFF1DDDD9CB729B3CBEAA307303E853111DD2E716E923B10B8
EB17BCAD08EC65A8A27597451744AD30C4C78E136783B5C8661FF8FB30F906B4
217C385C933BC16DD1E0A4C6145108DED1EC435C04F7DBC6BAEBE97E9966C70A
9F102F11C7E6DBDD969C7E72ECDD4FCACAEF0B9F05F6CC0ECE8210A162607682
660551C021F167D42FF9193DB0B56589A17C0A37FB969C16589917C4C286A451
8A81526F84DA60E62880BD5962B794034C60CDA86677896D97238826FA751AA3
1618A73BD74BE8C45C494FA0999BF1041A4DCB013DD7F6DF9CE7C9268DE6F8C1
4DEB31DD6F2AEE55D4D8D375422341B600E2165F3AC40B70D17BC41E9AFB83A4
1C58BD6B63EC1E80A7D546379E200264E1773C9ED75A93971EA127A5EBAECB17
AD297F53F4ED371EB34F8D646D5DEAE48278530183E4AEFCABC3CF510B4F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-MediItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-MediItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Medium Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Bold) readonly def
/ItalicAngle -15.3 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-MediItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-200 -324 996 964} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E1D5D732CFAD353E3B2D8
C2EB95195919264C4622E31A19D91AACFCBE5948640C6FF2ED865A61A34D5621
EC8F97345E25F89A2E3CDC64953A73D32C60044ED8C5175D7C40116E16BD025B
405736F8A4BD8D4070948E532BB7864341D6A02CAC612A639B6C94EC233CA648
C252709BD9C80F0E8CE48CF2F94766DF957F078F6AF4A7E5204102810F649186
3B67F9B7D04E783DD36176EBB99E92785F84225B659973AB97B63EC6FEC3D6AF
6C347303452A654C465952A3F0AFC0A74C9276CA0F262DF3ECE72D0E56057A6A
DDF6B9B6D3F64BC46336C8F8AB296E0A502A1B878052317E8F659881D1912278
082486870DC26891FF364E75D72547966C4B7E6C131EA1F71CD02B64104F7513
BA1157E65EFC56F23EB9E296D425562037559648C23DE28D468F61843F23F63C
10081F3DEEE3EBBD10B8E7B4B1B317B6B2116698542675F81AE47CF56F910DFB
878926D16FD18854090DB163B6C3E719A33B542AA70855DC846B98CD83DAB916
91691E259F7AEEE5B3F25435146E8EE16B5E46EC7F62E5B4298AD064A0D66991
3290D798C4CFB5499D96004311B4707DF64CF43724242FB88A88C5E2B53D2976
7F749D893DFC2D5A4280C4992FD60CC672FA505469184B21C6411C916339E7D9
64BCD55D6974362B0939449BD1355F7B99F07D6F3EE674328D1C485299EEDF90
5D5A5284EAD4B9606E8A9E381D623E38C74FD6F93EFBA70FBBCFA73565884CE2
39A5B4864E4852B6EEA8D2EAD8A396C424B4D318BAEC8AAC9CDE1863337C98C2
109A91C2EF30C929EE3F3BBB33E361EFF2812778CCBFCD2E7FFFC7F1F4406F15
BA868C0A90877010683689700681F7EFA9C6A377022865638E3B3CE101B3AF4C
FC4A583B396FC778023F828FCDA979E25395FD87AAFD437C2043CE2D2CE8E377
29A8A22744C233F003CF9B1F0AC9F14D7A18792AB7BCB19FAA799C43F169D85A
8B71DE94A6C86576516AF8C0C52ED945EBA1A211764CDA0AB26FC8966A3BD796
49BD8A846E6BD353A1F2CB59C30FD2970B441E2D4EAD03842D2F748160303B13
4CBED6282B404FC9114F28D5B7466F76A8368D8F95434D74CAD21F2BA386C49D
D4B88BC6F4D49FBFEEAB3F2E9FE6A9BCF8224C5747F1FC0A88D9E1C5058E0071
3382AA80998CECE22CC3CEF548C0A57A88150633F3F937E960692774B9DE40B5
05BBA69415BF46169186702A6823A8FA6643FCD7F55E72948D2DC55AFC5016FB
2C400AEB0AAFCF9F9D25AB74D45946C4D4099FA355E9B8B8BECA6430A9BDD541
BB58FF5F7DF72EB99C527153EC20A9D8AED089AF77F0C5D896228A3AF8A9632F
5FDDF5DEF3AED93DB4833D4DE82386676CAE2D18BE7ADA8CCBE3F6B306D1B8B9
8BA21C7367442C2269BB28689808E7996210F99DE85EE281228C7336E07F1728
55C42CCAA23DE753C7B05268ACB4D8529212CD42935F13BAF38E3BAAA063840B
26EBF6A5D43602141D991EA23BF95C4A3A8932F7D47100FF8A7D4BDE1BC7B1D8
DA99E95316FFF4261FB4AB31058AC27B6BF81C806E4AE102F5299CF5F46587C6
53E59E17F19D5369D2B471B96F06D4DB2CC78FB024D8B8C93B141878557124DC
C582B1430A73587F1FD58F0E75AE419A2BFC5FC7EB2C6DF873174345CA9B25F4
91371A1350855C80703DCFD1BFDEBCC3A12114CC920D6060DB63D12BA9E46F12
CC16254F52A26FE47FE41504D3E851A0665FA8D0AC986594E4C39B51275186AC
69DD79D334C81E1D6C857F8F2867BB8860B336478C35E61015488F6FCA13481D
F1722D50ED1F69EC3BB564F7F7E2715F34151D0BD24017EFA1DED65711B579E0
B60F46E5970879F606DA8804A0A299086D15E11748BC458ECB282D3F091E9FA1
E349FE97857C9B6DE42D88B0BF013D76201CC9AB52A92CF959CAFD2E6790AB45
F6927C7E9523D8C197BF4B50A727E315F880432D749F104797F3CC4E77F6BBDC
352DDD6E3A3EE287FF27B773081FD97FAD69A0B5EF27684A63D7FB96EA45D895
9C5D6BC328B9DB6DEAC8754AE29EAE5AC87616C0C26855C79BA1C113BAB6AC38
D8E043118CF1325D3CDE7E1671BAF4DBA7011E44B25280E0D55FB56FF4E234A7
D47A223E170F6D341B2BDED5E5EAE49A38ABCF7A3AA6989667F17FBA10C2EF19
C1679C5AACA4F9EEB15E13927363D8BBACAE4B22606DF4F87EC63BD74CE95045
343063B7102FEF09C25D849D7DAE91025A4C6D38DB17F53A95AA78AFBB5DC894
8D0468E70A0DFECA93149D65C68CB2FBD751726395EEC09F5AF3D6AFB7F965EE
2D11FC23F3DEF204E895B8F66CF0745CAB4068CBE16E2B79AA362E40524F69A5
3E53B860719FF104040FF2A25399BA8CDFA85E1E9B8163B23440457B886316F1
B408A5B60ED6EDC56857F05D41112F42CB9955D6ED7BB2DF1E3AAF5C41EBE3D6
131603EF1AD7BB91A4F35FECCDBED653F730852B641E72BC01C639A25CD25664
886D46FD31A07B390F3CE60CCD246ED0E1CAD11EC992E57075394491E440BC1F
AC67742DFC48851F1C3BEE244542BFD2849D498C239237ECDCB23458C38DAC2C
6C39954AD292E79A639E800958B0297376257C038B6FC5BF776DB24668F0F459
4572EAE33CFF791C93B3630A4587FF778F661590642D1B53CB86D766A0A87352
E69E4370442D6CA86D083E18D9F88CF84367777739FC42EE3624CA9754C4B6A8
B33BC05A3C739C32F4F4AEEF704A5E8F6E9AD1631F9E304203D290D4A2FCEAFC
B4B635CC9D88D8EF06C084C8DEA328EEF4DEADA0A4DCB35B6E639BE11546E2A3
5A49E51EC3FC5572651F60F8FB2D5F605E33B1B0E50850E22FA52D5BD2F0B2A9
39B2F3D5A4B79E0A69C8474708A59B385E8A28F9064B77946A2B8283B7BE5DC9
E87761BA2A9E0C8F267FFD45A46EADE40E7F5F783714FC32F2D4EB6CED82A8EF
986F4F2410AE706A5CB0F9911209F9EBA3959B77B84643063E841FE84C02C664
4B37DBCE8B5124CE0257561D748D47FA09A7879665222E9FC3404EDC5EE0F293
CC283BBF2267DB3022F28B702C7664016B95BC8494F39103211869A0B7CB8862
985A0F17E1A710A073DE76B119E9595236B0A373B912D3FFACAEEB4EC89057A3
3BB7C694049D2FC0E5D7151109DA06CC7E24799FDB98850AC564312CC787C1F1
9B923A37FDE7C43B6BB0C8CA4D1CA3655170437D1AD9B992FF3092CACE0E6A10
1E1F33F9CB7EBE0CEEADB782FFA929E83E3A8E4FF1964DD14DB1BAF1054C5CC6
5BE7017223DEB980B829E667D37B53E7DFC146AFB27C32BD7A3AE60ACBA39AB6
15F9544205300AFD3858A5D2AB819201A05B39F1A395E36E27BA7034DA37877C
27AB769D8181EC2D288635D505332BE2E7EA49AABA75AEEEC5DDE1D8BF68483C
3D200A0A47F07E81764507E20FFDBF8DB53DFB40774016028CEDA22379CE386A
13FEB9568F66F15D2B2A9D71A2E9B6A34480102661BF79A0F1C27F54D9D00AED
B0EA3BF05DF426810EFD59CDAE3C17E2F46669AEBD10054164C253326CCDDFC2
8FB32AC6A369680233B5F831A18369FB3E983597014EDA4FE2BB6704E49C9536
3916D0E6AAD719A820F2262ADF2ABAE1E46EB10E83A53DEBED0BAB636582D103
823BEAC6FE0A2813A35866BB2E0CA34E3C531D23DBC3035A95679F52ADC07666
AEF9D1AF88BF14CB44C210BF44141C72291EBB1CC8A3775A2941761F9BEFC4C4
F3F399B9DE9AC0FC22638B420E51BC2300C56A6A6F548C00CC350393BCBC720F
9E6B3F82991460CA91AEA1010266862CF39FBBD0AE4E315727F0F6830CF54FDB
4619E5041C903E5C751FD49EB0953A98326A173AAF253182F633114C6D75A23B
26115CFA861B111332B5457E6E48141D589DC27A511C295AA94513E439B6E142
30F8F509EA438324E0D81EFF47133237D50A20492A138B6E9EFDBBFED7C6E5EB
B5E6F271B926021C6C3FF4E61AD789E225B57B9E23A524F5E2B7F58A41368DA1
3D9F1EDECF2AE45B8BCFF7FD8CB02B2A4F2B1BE104AE4BA485C00889D284A7EA
5DC254F946C6A38F4E9AF9F9423B2E8A6C5C5484B2E6F95E1A1DA71A90DFA4A6
84B5BD9C3EB002C36232E460230CA3E338A833F77C9D8AF1F9EEDD5A72D15EEE
13EFBCF69202AEACB626B1B328BC7EAE00809AB9D2A943AABE2D90B928545B49
091D168B48AAFEDC471ED6488AA685D04243BF460051DA59DB1197769BEAF49D
19F0841D5E8EC7CCEAA4D28DDB32B011D589068ED009D8BE872C3B9C1D668068
2CD9A29A5D9628AC64E5A6007303A2EF4487B33F62F3744F0C101D3764B8E90B
0582A65028B3D4973117339DEE0925C4197E4CC3673B8E17C878D0178F65510B
B2F7A14703ABEB06CA597747162265E24432116142AFE27956E86C9B55D1618B
47C0C15F4513C821E0FB660B93CC8C0BD8CEFF9F31E4CC546B32EB6137A6B916
B884A94703E79C04FF94C5059BAC10947BA16CC916C66B17FBC9E366920714DC
A45294D21EF1B3082D159051407D7C2B1CC3D8A8E589C4A4C52B093C8698F388
4E16CEBF56D49CE921742A12D11F083A6DF8ED299BAB67B4EB9A176802ABC157
CDC683990EA69614E770566CD6F21BF74F5BF076049BAC620D7C544BEF828A51
B8FBC073C8C79B30EA5D28A68CC2FA966F0EE721CBD8A6C6E6EB913B048A51E1
4C827B5CD6956F4B75F6AF4C0EBFFF388981A8ED13D504E6333A3CBB8FD912B7
2E645EBB50EF5B8A3F20E022A98780C18A0974DA547823BFC627DAE920FF71C3
E1008DA6ECE2D7A2B3116EC411F853362423AE9BED2157AE455140DF5B3C8CFB
567F783E2C08721359D47A85D0F951FA892320C08D8EA06D8E31CC893DD77CD1
22720515945253BE085A89CC5024A9337C3EAF5FEE2AA9B696C37EC402F2A49B
BD7503AD090FB4AA42ED70CC628DDEC1EDA67EEF8FB207ACB09AE1AADC1FA7F3
6EB65422CF0A428BDE2320F7D405DBF67A2374FFBE7180B2E3DFE4D3967A1044
0C49FCE51F0E17ED4A043124FE60C9C0315DABB67C05B70EC670E711E2A3FA81
9AD231F0F34EBB08F503A370282C261FCC26BA689B4176BD30ECBCB11C5CAC4F
813FA9F89C36C98101B6FD87113F3E5B311E4E67BEF457481D3D50FC16D52564
9D797EBDEE9C608612E95F6E159DA2DA771D0908FFF9EED1191D4C3E2E91D752
7F809CD602E852949299E85924D390EAD66BAA9E39356121BD658D38B134755B
DE0D726B9DABE1FEBE025F57EA00760EF15139D32106011E762C1651099B7A55
1426924FADE65D632875AC8BD1ECDD99929CEB23B01D711D71A9A2423E3406F6
D79509F0462AA8FA3A00505DB667F80F4FD191DF5CB22186ED42A946874E6D06
67D57BF07B8EE29A47F18E3C524844931F97E861D329CCB5DF618EC31CADC534
D0294AFAE417BCFCCBECDCB8C6CFA755831AA734588F2A17FFE1A3A660F888D3
2AE9088E7695DF12535F392354B1997D3A0DEDBBB8ACB04AF33EA93C1AA74D34
B4620942AA99CF8EC08CF47CC04970767A55DDCAF1925C3BE1C67CDD21BC33ED
2E3F691D60B533FCDB54D07368A1911E8777492BA2C6FC7879F2A1C2B5C63162
946575797935EF373ADF99E210A4D6B20AAC695AE1966CD01AB7D9850269D1EC
60D3E735741493DDF7CD2B166F57E404A8EC70F9F26D51555B55F8E7AFEB8926
9F25522F64B5411CD82F0CDED369BC6549D8D0256595A8D29C0E98D40CA8E06D
78405DBB56FE1FCAF07694981E08B258E1F1DA5B86BD38EC4A59A2AF15CBF8F0
C4557C6A880242AE015219DFD0EF8F826DDEE878E238A3AD7D54C5C11278EDF7
1C45C0A3051D1C9EAA52F81722E79773A95C0C3E33D38626AD2B99B93CC43012
AF340059F58F64FC141C2B6F09B7C4A088269352EE1623E1F10D89E83611D6C9
23608513E76ADB10C1E0A952A3A408AEB962723E8BEB74F10EC20DC510752B67
30BB83A5DE63F2D3549F43C37A559169B09542147F849000035FED8B0E7DB931
1934ED7C1E74E5D54E58ACC39E7593DD361913862AA1B6C4C813DC72D7DDD34F
38A0F6E650529A568F66A773ED695588D7914A09C01C848EF2FE36B36F9968B5
CF9FDBFA11DCA0E08D087C4FE8830492A232441928AFE6C02A531DB33EE368F0
F87D85C8463F5E79ED0B4849C417D86F25FE60AE5F5F4F3A4191EB5367DF6D1B
4F7AEBAFD4A601129B6C415AEB73989372B41AA71B05F2E629B58E72111DCD8F
81C142E70727135081A6E59277A2B9292179D1FB6B1EBB6E9E3041F970A78297
207E566F3D5DAFD60A92841C54A105C02648740C199160C218FDDA99F73D7A5C
B00CF7CB7A54C5495838D7C11E930480076241D5380DEBB20AC73DD5042B5A81
D8B4842ADD573BEF2ED585512C66AA69E96CC522EAEE9C17582F9BDF05ED9DF7
D381559EC45F9835234E1D0247B4D041902FEF98E6B170469C3378D351024653
D623663F0C3CE8A5946BC6F84EDFF3ADFDE37CC5A8BFA27004F390A9E7BC9219
C07405ACB1E7F0998740F627B096F2BC91AFF565EC80B531C4CCDE8E30FF5A06
35997288AA244B3925AC7852F784A117617CEF422F7E209C19161FFCFAD9CBA9
F6359E57981BA528840E4C5F98BC050A5C19D339591115B4B81B0A67ABCC01E4
432BE6C56F3CF416A851B73B8D65B5F64777F8FDD45418BA7DEED9C3ACAC1F7C
1C713806FC125843C10F6B022695445B95A6A7487485A275D2015FD045FA7B95
DE5A47A7CAEF9406DA16A1BD6B4FCEBD109B366A8F2005ECCE7B2ED90343D23E
006ECB282D4B24B83A75006A44513AAB8A076F4A6739934FC130D6E2C53C02EB
B7C59A47E26416D0C02BCC703B3D6E17881259F7EDC36C78E30CCCCE4EEBEFA2
169FA75AE50BCE17279C25478E0A63F78F3460EDD4F64B4D2A5B3E6608DF7007
4E35E35172BEC6F4580AB5F541431E0E308514B36169B2851293F533161005D9
0CA384045DC239D4F6BB914E2CB403FDA02619818663488538FF139A3634B9E4
06CD8AE0F36B68AA8C5FD2E0E871DBD2628AEC086AAC4EE7764362A220AAA68E
2CEEE203C7902489D4F4C60229F08D9D387798ADEEAA19C84EA3105EEE9257AC
0765A9BB0D3E758ED1EFBD736B633C8ABF3817168828BA1B8F6D211148FEFC69
658175AB69C72C13AC5E8C97D0283FDF16898E28BDBB4E975D99697D88EC5151
E7249D4E654B306672481FC77B5C6D7843D0CD59C28E408A90652A072C0C6DFB
D2AC4CCF96760637BF1042155BE10CE6C23670D05CAC62BB742CF9959C79CD89
BDCD75208FE1C2C4F3C49E106EE07FFFD5903750FD2A2503FBA51E74E926B8B4
6312F7CB19B8E434469F02DD11E15D135E7C5993CE98B4C11B95A472CC978A2A
77A6AB771DD8B5D1B5D04B0C547EC11D0268BA8D5BECFB462DB91909B3FA6FD9
D17936C691852A9F4B56B8DFF9184336333A801BB8C79D4CB74ACA861AAABDE1
6598A6B72510413ABB56509215D1893F86779B381901B0ACC846F9D651876AEA
9D50CE5F0FD1558C04FE2ECDBEF837AE974E0265039B663EDF0EDA6D39EB2349
C1E7CC96F0A565C9D05B901A38DCF0C86D0662954D2CE0CE474B3AA855488C48
DA47754CEDB9C903357E755DAA28372B2414BFFA10F2769243F54F45082FAC62
CA114474CC2FFC938D958AC4CACC54EA8099BDB79FC1B03655CD314BF6EB60DB
41486B2D12BE6AC7AC81C4AD6C3BA5F0CD203D571CAAE8A119C9CAC8C7253F7A
63613A55FE2FF769FD8543F04F1DA320C5F5FBD877D8A2C229D1E282A57166B3
59D2C18A3BE3602781A91BE77FE29E50E181D34B012475D372905E1AE40BEC32
B682276C0D9508B3887D60B327197EE8DCBECFB41C6DB983ED05E70F36B5EF9F
70580378B06E10D1EA5E435BA70CA87A6573594F2ABE4691BD4AA9DDEB7B0864
0B739CEB596E78378CA8DAE74C326B331155B9DBBD9FCFB61BE17C5B003F3ED3
E41BE61EA4B6CFB5065711234DF38D6A68AE4B656DB7543F923C2EFFC81CBFC2
A10DAB09E6AA099643CE57B3B4E7DAF3197B14D8BF93F3DA0571F948225DE8A5
E0BDF3A7A96B47E5853E0E3DD3B9D48E6784EB9D94878DA2598C9422463D8B6B
5E21C9A1906AE22D93AADE54E2DDD115B3A74B5B53F02CADCBB1B48E13E9A598
07A89A87F9602F00F98D6F3985C729D0DAC2E068E1F4A6FB444C2D161CC49B57
1F39813569019DD32EF4C30AB7D722556AC53FE1DF918CAE3AAF404452A49D29
EB1CE12BE8444AE966DD1763B8F153555AE4144BCF36C882CDDDC1D890D4D0E7
E7866A49847319D9932BBF08A96D591C50F8F9320E028EDE06CEE93FBE27D004
1A474C8ED8A45BA9935C2ABBDB12976402AC6338FDFAF0312BA6106EBFA3D2D4
D1D2411EFC5FB8C4C3FD178B900F216983BB3B6500DC78C603366270AAD3819E
7CF0F5BCF7AFC4DA8229F44F42E787A3DD5D9C31F13A01F9D791B2795D9DD932
D6CCB6FE286B1986F595E08DD960B7EFBFE04BCE5B2D832A54F9832B592CBC98
09C64C51CCB375BDAC52176132EF99D755DA98844956F44010A14DE29AADF0AC
9FBB508FEC3C808634FCB14DA2180A8F1B8BFD8D4A53555978CEFE58011B6927
D3E026987F3779D46886297CD56188E7D62F1ABBA61D62647E3D63BE785D2111
7C5957A1BD4A684F77E1890CA962BE6E651660EBA06A877B695E87507F31E0E8
C4505DB5A3FC7B37F1B4942451967294B2C2060C4DD8A5C653AE800B7129F738
5C3A02433F5208507F2CCF0ABC429A3670C6ABD8C6FA28750D4A8A84B3880DC5
A601CEAE82AE53CEF56D2A7BA23E979496FBC8315446606A8D52B8451595798E
ED62CC0E524E5D9C84ABE36E59DD3BE2FD8C7853E5573D30CBD27D95B70666E7
0D92442BB7BC12109375FA2922B9B0DE57A2BD6B3BDCD78D676E71B6C58A2383
E1232F439FCB99E7B0DDF6AB55704468322C1877FDA64CC2521F99F087A7F012
3C775888369A2C9DCD5C84B83D3931B34101C9B05F834A7E6405FFB3BF630869
BBF99057372B1D9D53C4D7D6D8C2CAC45E0776AB56ADF03AA1A29207B2B7D3B2
A17FC4BB0D03B482D101E70CC0EB3F79D652FD68D9D2055620FF769A46DDE816
D2F68B698C470286AF7966247B48A9C20191B24E20E699456316C122E8190CF9
9082FC5A3B3510FAEF1953AF4D44E10E15CEB0DDF9A3963D0B1191D7894BF0F9
0C28CFB57F892E93A6C61650B0EF08A07F4D56F54C14FE5E2B401F7543097F0D
909C6C24B40FCFBCAED6954AC7C81FBE4536782ADC13B285F589ECBEF511BF94
ECA616382D6FB3BF02EBE1495822F1569A6BB21F7A1792569FF51554EF4EA690
77BD50F9AB4FEE8B7C7C549892A27C3FDB0D5ACD4FF7004F834576EE28364118
37436EA0234C4189DD84172A7ECFBE3CCB693098BB543A2B628FFA483B8DD447
7E389B455900B3C7D0C3A60DA54D5E6191DEE4A781443A0734B3AFC5A5AC699F
6342E03A7B81E345FCFAEEF8956064945A225A0C3C6B272261C1E9AABA557553
E805AA56FA6FC67C3DA50C7C818D6C4D419E5960DB10B3C55C7FBDB7F09E4FBA
5573AB796127499F19A6569766BEFC51EA0D6A343D36C6D0480352B03AC204AE
0155CB58EA6D87C005FBA4E1DEA01CECFE88D3FDD6681984F107BD3D99FCE4A9
D1EAF964298FE02360E11C7AC0394DC3422F9B7A11D6ECEFDB92B4F3C0DD1598
1B2DB958E7BDF66BE72D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-Medi
%!PS-AdobeFont-1.0: NimbusRomNo9L-Medi 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Medium) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Medi def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -341 1000 960} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E178732AD0E135F772215
EA7EB7EA7641D31502E1BB9661E7B0E875AEE90400138F2AAF4A8686C73EAA44
E5CAB467770A3D12E9807BAC97B24A8EFB0E276760F4F51EC7123C43BC6F8DCF
9A2F496A9172813FB461FD870763306B45670653A9780FF409B734CFA74C12CD
150B03344295918C4ED893FB620A9499404B83C71152BF2F2DBF769000D116D5
EE264C016EE3E1241018F59544CCE53E5AEC124CF6C59A4D7D7D511ECC9AFD49
6608ADDD237358D7CF8B4D1C5BD1158CDF2D6469D9BD6E6D9762ECF34D1C3C27
5F69900E0D12AF9B21F153585742E999870BEE3DFF6309CD82968EBB40D9C269
CD4306654AAB6734151132DE4194072485FD082FBB6DFCB3FDFF9E1FC88D9483
8AA64B5825293978C70C9EC095B18352BFDC34B4BE9C939384E3281BCC6B1808
A6B61EC4E47BB6AC14B105FFA7ED6AE99A1CA0B360D1A5C24E0FBB55C66F5811
A5CD0625654654651979A8C4C3612054181CD300CD42D1D9CAAA589118D6C7CD
5EA8A9A0C639D5539430D40318F4B739DA281ABF2BE2765D44F45B218BB192E1
9EFBDDF7777E8730FA7DC0651BCD5D68EB743C51D9CED55403021D45F77CAB5E
7E892B3D1F875DA86C030A2387487DBAC8795749E849EC93439C9E22EB20D11D
07DA0F09EE9356D55B8D0D8555F1B0EC98C72863B376D3436E10DE2FB1AB9453
DADA019DCB64F6D059AB3A95B28B94435004C9A8BD3FB80E2B9DE0E330D03622
3AD965B4283E6DC880A2130185CDABC053C52693CE3F50557F524D7CCA9BE05B
FF9597ADF5D1C432C00C0B0D8EC2CA8436685B4BF3E2105B89FA6CC787B77637
248796C2F43872B3BFC8011159C22EDB7149AD8932360A88A223CC638BED257E
04908032ADA750F17279F7331189C322CB5ED9B66E502945BEB1EC68B1C7BCC0
2322EFD669C229B28CE1D0CBC0005FF967D0A4383E29538AFA13D41D484D739E
487D497DEAD8F661847A5D82D77D91219ACF666E565292384728E58E1A489054
8C3E34B413A6A550C499218E7FCF43694CBEAD016119CE85515F5EDAE3CD483B
A0F32743E7A189708AF0CB6FBAB22AC8F23604FFECE038C838472CA40ADEBF08
47AB1D450E07F9D51828D25DDCA679E3FAE54634A37AE1A5A778365C5A2C8A27
64085AC775AC132CCF27CA164C4721F67B63D52E388B17122F15E5DF391674CC
B6C9EDE307D79E390068970FE0AB210337558544E8CA59BD85F4DFDA1A69D18A
95EF6E1C8A6EFEBAF9D3D0CBFD6FA67EA64945440BE6F34771C491C607BFB199
7469D73961C0E8DAEC14FC13ECF37514DBF9C5A991943BDBF66C0ACA84BEDF8B
54AFD478D9695FCAA0E4FA51CC6C3A84D3D5904EBBD089B189203DF7239A2394
F2B5338FB0603488E278EE68F3CE7397B142062BCD6A62AFF936B2ACEF919E57
21FA55672F22685B5305F5E84900C327E20248F7DDEC431EDFEF8F922EFEBD58
EDDA265414D834391381C29CAC17FACD0A2F071460BE0D3DC7F6450E768DDF4A
D39B8E27065A8D236EE9643C209A36CBC8AB1D87C7B3FDEAEBE82AC779558FA9
15EFAB7C582B6CFAF3F8B174B1223D531067BA929EABBE1404DC599682276A0C
03309EBD39951A398883FC919A711E8E891F64657D64B43EAF4ACBAC482D06AF
D458F0DC3F4885030096DEA6AF7AD28E2DD526D66EF00BB3F4970C162A20E2A0
3AFFF9D6B0AF70E1D643784CCA5F0B76FA16D597879F762BF7CE394D18DC76D2
06301A735F3377789FDAFC843F9B3B635BC7871DBCF2B8BE5E7E6290AB1C4B10
165DE8C3E9109949A8FC60CB19EAADBDA8CE8FA7FCCEDE1BD4B8566A268801A7
2428B8193F4A9F02506DAA39886CAC4D93D6E6823E197EEFB4A340040C1C50BA
4952CFE767074B3615FDB279B9BCC0993871E9718A75DFFFC74395B532A58983
B7E3AB32A13A3DC4FAE0E34E485C31FB2952DAD2A611798A9B23C8C0EE5E1CDE
0C9307615D2E9E878FB834D9FAC1883222A1C90CA4E940136520C8AF7DC481A5
C5E4287325A010FC44DCCA752F57806D70EABB20327400158978ABC35805453F
84CC5EEC991A5CDC8C33DADDDF82939669A03C2A9AFA9544CC0C8E8B145BCD2D
46280FDDDFC1EE81028E13027F26BABF3AE38AF0FE01279F319172E380341CAA
C7984BF444AC5EABFAB89FB9C1F083274F2033FCFCE759E760131E50759E39FF
EB314527A827D08C98A3F490025B20ABE6A0B3533F67CD3D525C0F83815521D2
FDA1F2DDCD2D3526DEE0330C8F87EFD416FA8C8149CD697F159D058EE5105A5E
3235507B52A016C9C16937CEA1C949AF5B91F19A84D8B63A12D9DC4B616EF854
C02734C9D5B9EDC5D370EF0A74E7703297F61DBB277EC1D81975029926144231
BA471369220A7AE2BD1B6901AE6B5AF5A3C40D943010F531A61B6E2781DBD371
D53A5084E433EE940C59A0EB619BC897B30FD5E46760B59C530C3F74D227AD6A
D788C78BE9D6B1D1497D4AED6895C9B1B3226572F0812282E663EFB42449FFF7
715A0A7FCC98B8CF90E541C28BD2146EA238C53D55F0BBF983893B2A291E44ED
F3C8E24B6C3B810F597F13BCF4EF59E932B4466C509BB5BC7D669663013EB5F7
3CDC43330645397267FB385C61FFD2575625B3AAECB7D6EF6543CDADF57BD66A
C0D339BA55BB19D351232D56C4495DD8C92695818BA4C567BB01A81E463E6897
CCDF13AC67995A2F6FA5C947874692D7E9C233C599332440DD16BA528ACE77D0
0E5CC57B2DB9F7C9347752ED000B3E308134335320B3A5245CD404CA0882D516
E8B39F96ADEAE247AF7BB6B4BCA5718C788DF7BDF83F62DEBD773A88D52044F3
04896C736B69014FE466DBC564819CDB32D07673E221C872CD894C96F3C7F54D
E88F3B2346FD3ED5406B68B436B62CFFBDFC350D923102BA14C88D51048D38C8
1F331FEDB9CF97785515A78B7B03336A3EF00AC044A759C63317878DFD90365F
9807DFAD6005AD7854E0DBC15B5BA96DBA77471C44E4E2A2CFCD7FD5D9287F14
E24847395FADA29F513FC31FC8D802F6774B62BD92DE482C8FB5537B0556A6CA
A26DA795E4268316C9A36E053894012AD89232512E1FB2D410C3641A9D8FC581
9BC49A9F2D4A6D49F020525420CCA0A9284B31CCA193CCEFB368617FF55BD259
BD4975C91E5D83A087AF33FC4D314B6A2A1ED7F7BB63D8D7C336F3A3F3AA6067
4E1D09EC5FCC01AF9474CE5FB6E24E5D010E09DA23CB50B06221E6D1D56354A1
FC913DD3B86749ADC71E9957105362AE9A5A8DC6A08E80DDF60EA36EAB16535B
976153315553F3C5C3BE5A8690F5323C48054E47E3F61DD358C69835A3191174
4DE97DEBE396116230FE735694C8333BFBE1B3204A978CA100066CDE17ED245D
82EBD6D8A0E6E054309320787DD65949AE1B082E3F5B20BF645BD2A7E6A98671
47A165FB658A4E7A74EE6C22C2737A810763C90AD1FB4BCA7B685CB9BBF818A2
3335AE8361D986175B5BE21B36A7B71D790A819B52AAAD0E40CF3686B20B7662
677D7CAB52F67FE6FA5406F7AA6ECEE25D4CD13C3EF5F30EE3651F994D945C2D
D173063CAC8A08B49FEA8FB95DECF7FE3D13FB23021370A2F04CB605A095B72B
0494E77923E352BD29CC5920E6CED50F3FA8594F613223EFAF6C118DAE59E0C7
9F8CCA62680A74F03B3BD5C85EE3998EDAE42A5C96228E4A34E37D43013331F4
9D9D37A0EBA33C28466029687E54807D17E681A241920E62DD5F8A9134458888
3DCFAFC0B0D1440F99EB62A50B0FACD6E9EF0C868502B30ECEFEE825B1DBCE08
3EAF79FF7EE7C29A506D0D7A87B1996EC020957B96CBF058DBBB664880EF896E
9AC26855590527273BDA2356EE583E2371EB340771526DA0BDC25954C8EC519B
80D7EA9AA2D2759F2544D6C7958E10F349BB115B469461AAD95F8190C7A839DA
BEE457CBCE23D0A435A25F8633E17E517B1AD4463F218E298799B36EDE529939
85AFE04F638E88524BD98D835473155597A9CC171D6DEA6D2D5AA9F5893ED1A1
6D50D3D34316A7A4393F358A1F0A57044AA6A13F05A3581E8127C5663D02A300
8D9542F00B3342404EE1EDA5646127E2CCC2232674924E662B27AAB6D57C09F2
6B120EE0D8EBC305A07052BD82AF003A0EEBF1D6FF3BC6AB38547FFF70A5B6DF
BF7DF68BBFEE25456BADC1A9AAFF850E0AB280F71DAE9C261CEE766AD94661A7
B76369ED1EBE44062A4CDE2D730986E5040F6515229FCDB2A673E0E21EAD52AE
A144894A538EDF6DBDE6568E3BB27503D19B9630A35525AC4F5AE49EFA8A22CF
E0CB7993E8F0A4C52120E07985A187CE7E99C055BADB667DB1018416E7FB1402
3F405FFF1FE0ACA49F9FF46C7B4D722455D0278D6F09B8DF311CD16B40EB4BE7
2BA1E3134EB90C5B9AACE5807F35454EB98F9D7F73D5EADA8262D674E6B8F152
E4C362DF1D4AE6A73D8E7942C3B7B2E000979E292B3B57E1F7A9FBAE495A2A25
D5A813D4F8158F4177AEF0B44D466103BDAE0D6DF3697FF03C1966B70D7882E0
121A128CF3F3B5E6428E1F6EBFFD0F3A2BF0E6BA1DE5D3B93CCFFD454B0717C5
CC75BAABD10A0E8E06F1934736F8BF9AD49A10A4C6F8A1762A5B0D48FB75CD72
BAD117EFCE8ADF16A6EE79233938E978BDF45C9B464B9DA1290584B298711CB7
177474AA83D699485A7E03E71DA50FB2096EE5DAC923CE65DB4E027236EF014B
547DB1B0D870632416E4DA652DA713A2C749F75BA912618C93EA79B24F9D04CF
52CD03FE1443D2EDD434A5A7015666DC9D3912596A14999869877BDE3054D4E2
3785487121FB3EBFE75CCE348BDE69BC5452348C249E2FDA21FFFE307C7807A8
018C0DF4466C5096C589BC74CA5561D282F7E936041165CCD42C4DE04C4DCE36
91E448041BC368978C8DA729A42A64DE37D8A03CB0D2F1AC5E0C0A1F3A4BC8FF
07C952E6A9E22CCA4E5D29D66351D42EEA1E967AB34072DD5D688BC2666920F0
6E4B92ACE56EA2A8321579B812EF2FDBE5AEBBE09E7B0CF33DBB566679B35C34
D4D8A942AC70FBC64D9E5611DF9EC68338193D049010BBB50404503357729D4F
C5E2226AC37204346C083172EBC3DBC27F7E781713D5DE3E2EF43D7BBF9757FD
5570CFC5980329A197531AAB5F8EC42E5A582564C996ADA0FAB8F42D90434A48
E3F4993DDF5FDF93C9E21EF341B5900ECEE7FEDD7AF1AD89A2C4DD21BBB14360
201FE1F3BFE28ADE72E1F7E45D55CA2034552666DFE5699BC069A8BE8F827227
EFB37969C2356F93886BBA7F4D3D2A68B2366102ABAD3D8ABE1CFB0A9DE4579C
41F23C77C5072809B2819B32478FD58A974363AA88E82FE046C615B231FD5B77
31010E08A50DD46A808D21F713D83149911CCE2064C0AFB4D935B09F36AE2112
010094DC211CB2CB94A27524A4C2516A8162338F37907319AA5E3423F9BC866B
6FBB910B766B0D34F1514593F396B2A26C9B94BC551A93A978A6810A6F246C5C
0259E2410A72D950C9A90DADFDC11833C939D0C9EA1C718232391934FA35C825
C0FCD9F2CCD287346531420847FDECB667D6344DFC50A6DAFCC37D6FED5503E2
5738CFEFBCF081E46C55D9E7AA3C194B34B72A72EA85547426FB8DCA85CED8C1
79E8DA15A087BC5D021B2F4DA417B2CC983EED1EA00FE4561A01D6D6BA03548C
ECD9D12CA669D16A0C25A85CF598BED63D2291EA1B94B91F3029E27BB6169116
E0B71E4D789273CBF0FD4C582927E6F48151E720E33CA846C5DEDB87DF0B96BC
386A0DC2B658C25806C67763358A957CEEA1B900DCA5B54A71495EBECDFD0353
655C34FC4FC12054546DF2D32C346D6A519A905729065C64F749ED62F64150DB
3E2C7FAB2364309B748F4AEAACEBDE3D65EA27051F5F105F7E6D1D0E6E1A2290
00717948C916DD1F8EA4B4F3EC8FAB91B2DB66AB7AE631B795406972E0606436
9D48C9DFBBED3D9A0556061C5274CC617CCB4BC953420C2803596A9BC3585C4E
F0CC4F058C1AA34B006078B31AF1647DB2339D25BD06B169AF5703F015A210D9
182678AF5F984DEA53961B7FCC1B88807B579BB6A0C8F69CD919E311B6ADE903
B4730BE32F3181F98039645643E15D25917F38DFFD8BD08F5F842AF43D57F707
18498FD85E7A99EAB7423DAA55598949798F63224FDA1E2B53192E3BCE538F58
048FA4D8A6E16965289FE28186AFEEC45CF8F5AB034EDF79DB1832B5F108ED16
9B04F1A408C2B2CCB63E5307AE41E89FA500D68BF7A4DAF9253DA8F8043F3003
44F32EFC6264375BEFD663C5F21C125165A6507983B4F3E713B1FB95750D88D6
28814DA7F9A3B711FE5F7E13D6E20F68B3949B170BEBC15F22EFE2EE812C36C1
E2B485259EA075F6AD16F508C3423FD37E586D414CA713051C833391E39B70EF
E85C3E8E2BE2BD3EBA1E7898D816DC6A00064D707702C595BCE043B2247F982A
93BCFDC711ED02E4D634814F5F8E00FD4B73B0A6FFF989929A1556E1653DD015
11DD52EEDB12E24404694D39E05F5E2A6E4A977C20F6129B26D00CCD375BC4AB
B849F8035E51371E491EF8BA19771AEFEA2FDD6E298DBE9D055798C4142A827A
F3B6E7A57A68AC5CCCBE989F253C99F7080FC69BA5818D6019FC1622A8F4DB0A
5BB8168AEDF8ACCC903F9E4F68810E8375909EEAEA346CD393A26558288338EE
31ACBC6C2192C650F73E891463471EC2BA6D9A02DCC9785F37DF53F85E3E023A
8446E5A68E2736167370CA415638219C94B2E4802C8814DCAB358D4F205B421B
8081DB43E209944209DAD2B14BBA989404CC74F80C19BF25B8690226C381A1DC
E021A81A0D6CD8CC2C9C42E0C46DAF0588E5860851EA408BAED10B26FE23F483
0EFED869E76E23267B3C94C528F18B6F0A59D6BCD12359E46C2F0027C1AD897A
2F462615444CD10C5CA7B1BEF1BD028D133F28AE513664370C778D6A5D412D16
05B65B5550F6CD05B6BA139A251BCF348F2A19EDEBB709068CE066955FE3BBC6
4EEEF192FAEA9E385213EEF587FE0830BA29EB33432542E0ACBEBFF0AFB2324B
0C3D2039FDA78228FF7F0C9094DAFB8CFBA90B2B5A4EBFF4319C13B4A2394E07
671EDDD247A356EFEF533BFE36683CFAD11D9336B859C6CE1F06A36D26E80224
B80DC4D6CD15C4295F2798EB98BDB6933A59ECBF7AEA1BFF3480ABF207B26295
4341735FAF0B2FC4B2636699F62C2DE7E4E6314E503FE6A14082FA1F2934A6EB
CCFBC26B35BF2496636B826E97FC91A0A25FC7955B4348ADDF7CDF13C268F621
97B85088749F3CAFA40A6A3223D4CED495D6234CF4A034CF2FA7D9FF944DCCE9
2FADA46EBE4A67787104B8F2098A92C807BEFC56908B359302BDFBCBA4C19D6D
9B23549DF69555C9B7126C21CE1181E296FE04E542BF2F2C49F413FFA2FDD0DD
F0A49EBDFC7F1BEB846045871AF6D7D534BE8AAC1F252D00396C5B695FABEE95
EE2CBF5010E5E251A4215D6024ABE415398CF620966AE780E11E32F4F69BC108
F653AA6489438DB40582AFDBDCA6D7BFCA7A0DA5253E35687F3DBFA6D708150A
3475FE492BC0D19A8F8AEE1CD1F7F6D1A4292B8614C040A796828470886AF588
695E8551A88F5416F452975F44BFA8ED06D1144DD5A9AE100CAD80E76617954E
98B783439F6756AB0D1D5EF596474822EC1E6F8A564E5588C1B3C26A19F6D5C8
47C84253F5C91DAA98B4675FB0576610A37B6F951FC4064D8B664229472EC016
6803871ADEE2CB17531576B0C51DBC7C723D9A826025EED1027787E23EA17CF3
3246227FFBD27AE03EAB68BB926C483E82D0214DCF87F7825A5CFD16D9AC881A
EFD43E59986BB958F748F4CF03AEC9E8AE2B5AEB269BD3F956758B46126F79CA
A469F7113EB247276BC921C531C33C64C5E9FF1469468866A0698E72EBE7FB11
3663EA615983FCC785224576E9E928A02E13A44A7E650A11BE0C3F9CF0F3B9E5
59727DD5308332B7A2261C366C8A11F098EDB80F8AA0E9EB7CC504A8B2EDA408
6EEF2FEB500C2C5AF1427197EE6637F539123745CA8E7D46F4D1F8727B7F021B
CE3FB62CF3D855FF25F5E0A79AEEF15625EB7644E1AB35FA3515F5BE16817ECF
497DDC81DBC7BAC0AB21DF14947CFA3DFEBEB43427D4B8A3BADD191A0720E853
FF0603877722871CDEA1DB2820B53B2D85412A6B40EF8129335C9340BA899EBE
5BA3C093FE5D92E4657F3885E9F5719403C66C213DE093B66808DEAA2C9A3911
4D8C445ADBDDADE18CCA758B4C0936D3A03EF24ECB0739B62C6654BCAC572DE5
7F0DD163E5D269D40557E0784EE5F62E5F2CE746F68FFA74F2544EE4057E2489
33C671ED5C88DC5B02F9291EFAD5549A4BA9866D7626F92BA099FEC7524EE553
93019E6E900C6D46A831F2AF3CF505CC94D5018EBEC48D51C674C81B6A29A095
22F9C979230DF7CDA88D209EDB8C15D41FE2A301BFF36BD2C7EEC39CFE18B2F8
F924589A64127BC951DB04055489DBA72C24342D68B5C88DA1BEA7043AEFBC3C
263A0DE6080975E31FD7764794CF1E5D77CF1700323489C7DFEB4B7AF909F18A
9D030922CB57C70763B2676327EC212DBEF80F9865CDBD6441A8BB508BFE4472
8714E2A1A31368CDCB906BD6C485107680E5CCE12DFC18BBDB6FD96D53CEB809
BCEB184AF69CAD243A8D036EE89251243053215DB1D8C1E41016F1D8AEEABF35
ADBFCF366596F5E3DC4BEC30136B8BBA284914A449D129C90A05B4082DC1A02E
A0E2E87060FC7E3CAC7FEB9554FF0F25A13DAD43232F7EE4D840B4362177E187
D95EC08325BB6A68D73736EE2874EBD426E37B2AB09A445E8F64F293AC397201
E04A676205A3D794B7D2AB60DE170BD68494C1F45182EED27CA9EA568EC57FBD
9CA3249960384EB4B84EC4C71E91D872B1DB3B7EE414019F1F80F97B5B0D1A55
372FE6709B59AC41BD4E256544F1895D35F7EB0263EF32316CD4DF45E5F9969A
64D096AD70CABD8E491D8F710C5F31260C5AD761E6DF3CFF05D370F2E2D71D2B
5EE0C3F03A603A161713216AF978408978B4A1B2D58C58442527FD1B230401A5
50980BF4686B531A1FA87B4E08CAE59E83838F3F296F21EFF9785316AF2CDFF0
8305D406A92BC9B83858EEB1CEA62AA27DA04D2DC9F3EB1838B3E3E370977998
36678B42338EA9E707B012A05E5D0590980C90EA5E1117A71B2B84765F4E7619
4F348E5D45CD18C61CAC91FA54CD13DDBC3F4E65A4FE2BC27FCCBDBDE9BF1DC3
D520D6E60A7CB0853077AEF7EFBFC0DF68098EE546547C9B492CF616FBD612E9
9556D1B20FF13CBB5C9D920C9F1DCB777EC513D8C384449A71FECEA0936B6432
01F5FF97132482EDDA171CF503ED8AF75BF77B4636CC6AFA25159ACBAE9D1E21
4C2A1F3E7AC6DD8541662099AD63DE730376A2830793F91312D58C194008EFEC
DCE3B7D6F6632ED0A431AC2163E04A69A2408F5B2F0D09F4D63DC36BD196D7B4
3490E92B2585A135E58A9B2C1CD3BA6BA55F62098BB0EC42ED6A71D4987B304F
2DF8483F03605C424EE078502EEEB6EEA01E9C81F34C5E86486DA39E5814CD15
B7BB5936A1319D8203BC0100AE61928A400716941E031544EFDC481B342D4E52
AE6CE9C42D6697CB15892443B4C5D50A99EF413238185DCB7F7381675C6C803D
7B4E089FA3F65F54A4892BDC149A5E495384FFA51656249E43D6CAAE1AD78774
A2910B7541BD97CB5809490F41A1D549E4C0AF17159A573BA03D14FF6BFACE7B
76FCD310C9F785B14F4A6BCFDA43B4AD32C96402544F5D5639A33908587A4BC9
270E74F946EA19C26B90C948C2F5AE6A788D420A5EAC84843875E19DEDC88B0A
21BA6B908524F6643075FC82A9F543B15BE352AA7512B2196DE14DC6B5314926
64CBC414542C08E499292BE8621BD09E03D8A06C69DF62019778A8FC793B6CD5
F76076F89430754FBC8FF1C547E01A2D3DD59235692EBFAFC4B160BF58729154
85D0787829345016FE5920F65DA4F3BCE0C4946EE50FD57E5910ABA4C845191D
5C9907C1C2E169FCD8CEEF6F7A8F0302A8DD2AEC11EC8778B2DC104E45B02002
1C4685029542956A10C17570271ABD88E85DC18C50AECF9FCBE7552858B4FED9
9B5E68E90E43EF4C6D5FD6998095B12FA671C84FA85FF22A970A1C0A1F8A4056
DAD83D1334B897E2357F70056FC4548934CB5658186E8C55015514C3F1E23FD6
4ADA3731E423E559A90011A5FB7CFFCC2C3C346101C3F773EBFE79F579F12923
18A6B8C516E19A40F78B91C1E744F24C2EAEAC475A790F9C30E28E6921F9CDDE
08778336D16910CC4F3737EA673A4E84021CE744C5E4B1C88C100666CFA8B089
D94AC240A0E3A738340E87139382BB15B1A61D980F5B205587EFEB21109414C1
615EEF0BCEC0E51215997A1EB7E69FC67765E9BE6628929E24D38A620464A715
4889DBFF6A61F916F62CE5D56BFE142DE343308AC37460CE2099273F162250E9
005DABB0F6591611692CA205820B7AAE55D91D4D4F3B63955FC2535EC8DD7F73
534251B5D7D7E29BADD0539A78332B9D43A7CC7C235E025F835048AE0B2CC90C
02FCD183AC447D98419AC60A7E1B691C834D4497591D67168F271D768D136245
B2452BB78B487099E023557661ABB023DEDBF90AE331CD0D0242CB381B6297DC
B741741690C4232EAA05505670EBC3A5F10924D8442BC6CE11456B87B9373D18
D4D388FD76DC5EA1DA04A777B592881D7805CD7160594161F115905F2BBC4059
5051CAD05D51E8AD4D2FCD609735A34559AE2D43D9CEAA466CD3E1670740D0AC
28B4F6D76AD782F7349B8EE87FD8557EB0379575668C0C6C8DC6EBB0328CDC51
1C976AE8DE921C8A6BF2E74F890E9C15C94487CD80341A8CA251D28EC23B77AC
8CFFF5F0EE71A167C2E6E60CCBC27AF9923844C1F00841649EE0773F559A2CC0
993D0D65BB85481EBE3BDEC44405F997DE051693F6C5BE98E35A2321D70B230F
87ECF8C7AA35BF508CC2829116C9DCA71DE553154B1A4F86030BE12F885E9DBF
A5C0556DEDF1254317587304E5C87D9E5BB94D7CA31F4AA353EC01B6E0284B69
0B545E647B20FFAB10ECFB15B40092DC0DE1564EB3D3EF894A4BBCCB11F794A6
8B824C3BB528982511216EA41823C40B55BC36096F7F24E175CEBA41407C8054
A0F2048863DF645A5DDFE89CE2ED3C76FE3AE9B0AB5CA616814FCC0ADAEE95DB
651FE60E879F38F774FF7B87C8A1352B5D5B8D1648E962A0035FBAFA732E73DB
C4D082390F7B803F0787C7205256AE79AEEF617A9EE53A0E6F599AE75B2733FE
7522074A9CD7833792E5513419A4F73EEEC366306F9F76AF8F00A2FFF2DE64E9
B2D2356589DCE28B62BF33C01B96C7993C41114FA5242AD70C22DAFA8D3E665A
D0D416545222627945FE070E37A8278455D07E1ADF6BA88E73C95AEA672769F6
367091BD71D7EABB69610AE809F7E5C6A9ADE0A67A0291A91E9CD2FD60514CA2
ADBA75E7143885A5C1559611EDAEDD2B6BF59CBDB86CDD8F39E47C29D66866B0
A2FFE379FF40D788B372705310FFFCC46C5988AB40849F6B594ED28599F1FE23
FC36ACF56CC058EC37D56CBFD768B8F6F6E955E311291965AC1B7A6946432F4F
132AC75A0DDFB6F7F2D8EEE7A5A28C71833BB4CDBB303B5724D495C898E642C3
660BA08BE1C296CC92B20D8C56F6A0CD3CE47123DF3C60302B4F41AEA37CC7D5
3ED82B06CD72F3A4788EC38B6A23834B055D2852CDD022F1F4B7BF2BB48BF1D7
6EDAD9095B02836384FB51D58FC0ED9A2FA7CAE9AC0299ABDB41650F1439B9CD
4D030048D16BD816C1755414026C8BF8EE35119C43CD7F74466FCE31AEE58069
BED7D9563941A68DECFB5AE2E3BEF7CE0E01F764EC4EDB61DB0E09402AE11454
508A4E0C773408443BC37C470013649C7D9712D9756749D494B85BDA342B530D
E707DAE7E09AB07BC8841207A219F455B7B6964F2A636857E2372CB39344A751
4B7BEBF253A1D0A79AA8520BCF6C11D753691A1D4C21F275AAB1DFC9BA612BBD
8F7E35103B10C1B755392E78D2978762478935CE129F4C49B470279D01546F93
4DF29DED63A828DB20CD2786D0224314325C663C3EE020B572E59D366B9F1AB6
F56F0FB22C0C0BF51EBB7F592C0B2C9A1D81E72838664FDD51870FF2B9E120D6
A880436F0A93ABCC1C5E637B0CDE922C5F2542014252C557C72DC9889E13896C
431754DEE2CBC6BE80F29EA1BA840806A501CCBD7145220CCDDC938CE145CA33
2C50138F75D1E77D242D72826F7FD2D35DAA27D6342246D31260C2D6433F881B
B24F6D399C06421967246E662BC738C699AFDF917FCE7FDE14B5C0914D03D384
9619EB4D84418E3AB3A7E9FF83FB84615BC0E470C476B89B07770EC7CF897BCA
A60CC3A05384DDDF9BE4D02BB2549014540AE46A3BBF2B8B22DA31A80B9413F4
161762059C41823B6FDF3162607E7574A9B6A83C3840C41E19DCB61FB80E5F63
40658338FAE60432A0737AF2896F534173C3BF1CEF2E38F165BACD849EB3D8E3
663DCFCE996292584866C59F89120C7F7467EF5233674B8151788EAD59FA4EB3
1DE9E1E863BC6A0FE3AA19A7DEF7D20E47268BA34DC4091910CBE80DE6415E5D
DF9EFF877E2EAFB378C9DAA196425B8922EA0C6D88BD6976A281956880E67603
C151E5AE4D6724A63F639532E3F99FB22A6FC4A5D058732B0931AC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusRomNo9L-ReguItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-ReguItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -15.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-ReguItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-169 -270 1010 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E134D4CB5ABCED39AC635
DA001E9934C198A7F9B9ED0028A85E9AE00421DFD8EAA3BB3B4B4CE45D209303
237BD51809FE4D880900B1EEB236ACA87B9FF6EBE6B994A60AF5D67CCC42BD56
77295C346EB4C62BDC1EF22EE07DAAD928DFB73455F091F32408ED6430B97417
683AF27A03718A156E3F6E7B6E4F2E8177503CD82DDBF4557A3CCFF4C858AE7A
F7EFED6CC521A28342436B953E4650B5792BE85EA2F989EB6D986905A61FA38B
96E1BBC830B74469150FB0B598A794FD80D10870084A877273A9502C3456E5EF
74350E6E3BE5863E8BA185EB59FB87B36566AF71200B6ED389D1287D4E925E33
B2383ED05D87D48586E698FBC5D562ED9D8A09EC3EAA1B1F300224AF20C23F26
A2EADC74562571DA84B3914D1D80B127C6FF4706C7046BBB372A0013E0AB94F0
C27946583871D272BF4F20FA84E89D745DE7BBA885CC09BA72E0F530ED4EF7D1
864B3C67007ED98800284235372F0A70C912E21E851AFBF812165B8DF912CD1A
013E271F0B347967876C68AE4C4107EF8AD1F170916210034C66394A9D971B68
FBFC1131E37FC178EB97C1B2A0F573ADD9D7C0BF944E6529734DF8A7EF54485B
A3375CC30E9E328943733CBD352BC15B06C85BFB4A96994291C72A0EAE84FB01
0F1B24D0125FB8C16D60561DF8BB7AA7DDFE9549AFB70C1E89424214609FDE41
9A142892E30F02754FD234CEB3C59A2A04C06BAB7AE40E8FDEC50559B8347684
391C750987802D5452C47C1E0B5F222DE9A0EEAFEE19D796FF375A1E1EF0AEED
1BCAC4F485FCAEE18AEC585D1A9D80F41871DDA45FEF1EAE82C5893118987BEB
4D9E345C27C7419FE65E4853B40537D822E34FF1E0BD2819D21EF607981259E8
9F1040A2D708D7463858AA5381759AC49DF4DDDEB209A278FE60BD2508ACA0F4
6A249A05B652E4C7BF1B676943CDC463BC437B72E3747BBC85EDFCD485C8E14A
8E690B5DE0D85B364074F070B57D33653A97A6473B1C561CE8C4F1CE8F5E6577
753611F28C96AF1B81D93D7CEE755D41C6192D9FF95C88A384578D427FEA2821
534EDE598078BF655B057AEE9ED51D2A2202D7308D7D6A39C314F2E83B15178C
BA8107608BAFC9DB06F114DA1547F97C577EC66CEFBDF346148A60B459B9CAFC
6ACCFCA617E5ADBAD2561E2DFCDA5CF3344F0B6B4314B9EEFA480B313069B0F6
A6CFFBC9863633009A906AC037ACB099FF0E59F1FE947A31A763F7DA756E19FD
9BC73FA3DA92729A7DA60F246A41AE4B047288450BC2005DAD85B7480DC99F31
167D12429A48637DB317EA32237EA13BAB3751E9579C8219DD72D005EB5AF605
87D4A26FB7E1C09ED409A37537DEFEC58AF2BD0F42E89A1923604C1C63D0F345
46B5678CC353E83E704DB8B9F65900ACECD700739F954AD5CFBF3A492F2F74A4
D2FBF20E45EBA5D846EF69573C5C757A1F14502D06086CE3AD3BB9DDE9851808
334DD1510066DFB9782EE17D8B2225DD8537468D380D92E1739E47167A0AF9F1
5A33360DEA36DDEA3AF6D0325E404404B0B244836480F5C02A3B5CC0FD8F5932
C6DA4ACA73678AFE982C7C8890636CDEFDED3CA00B86C57DEF55F8D0662E48F6
49117CA18CA484E11F30598F44A65E2D914CD12860F931703DB69B14ECA94EF3
571938E1721511171B2040FB6637140BE927369F803A4FF311D7824A829FBDDD
A0902ED149CFF1997CDC6886A867E872C8D4DF6C5E1A644D9C19E85BB497BA99
7F45D3092719498F9F5C6E7C9E45C24B6F174140CC21F37FF38C44E91999660C
726430CF07401A9F0E1BBE099D5B762FF3130D9CBCEA29F7F89A45595018AA82
5D0AC755E85FBCBBA5B21239888374E1524AC5AD6D8F41605C223FFD739998F2
E779BED51F12B88649B7F017F89BD6F795A0E4E6B18D73ACDCD154E24E73ADC5
8A451A0BB582A022944E02CB6DFD5D5D5A748C350ADBD4A39D34D0C5714622E7
5955FFBE17488448E7EC837B50E3291DF9ED878238DE3D4C65A18310261D7F3D
4AF115492C8F03055C40CDE35107D73288EF401A9B1F48963D5AFFC65E4A63EE
476E239D75409AD68AA03C6A85739E00943EB97BEA4FCD37A409B181149506C3
5D03A042D7305D797166FA44DC926495BB05B058933856FC36C5AA11F7289B8B
87D1713D4C03853DCB7E5B1C68AD03AD7F76BA82E9FFA1D9B9DBC98E1F59DAFA
32DD5F13FF405530128BDB6370FA6152AB34C2854B8B5230799117B45BB185EB
7D3520192E5AFDE5C74BC2A4827253F72C1CF0B3DF42504CDA85843C438E3AB6
D13404B3EDAE94D13744154EA1C3FC9CC0998C4F2C4775DDC42447D7C2687990
9E83C2E2D739722909AB8CCCF9D44ECD29E70A1826785081DD27383E2720241C
E5B53EC115866BDB1BB57E2CDBA9D9ECD28995D3E0F087B8821EBC31533A9AB5
B473FDF9E03ABDA42D7470A3A2AF50FF646823C05C463335A28E08AF7422311A
39259202AEC7661F72CF9BC326B897A1FE852B945B17BEA65090F19556E56267
35EE984D75D6C088333D581BEEECE345BB2FBFF2741AA88DAF174AE969A2F7BA
B1556B14B7DD96942A8919C3DEA6889A208542BEB711CA08D0AC4BFA35CA05B9
58061405D49D4C88A379687089035A0F4E496364192ACFF38BDE4B01A2535C1C
3757BFE429D57F4D1A6413CE1020E85CF8427D4D4079C8F6D991CE40A29239F7
1C30DC6967D0DCFF519A033820B0553B2F5995E0D3E847360F5C5B3C1E18C97B
0F785A2DEF48B5E7FB398EFE811BF29F0F5122D2AF31919A47FBF7A7E2B21395
BABB4EF63DF1C3863B24835D50C691CC91A8E871F14A55D1C83A31511E5F77A8
561FC3B716A82FC2EF5A973B027DBAE1C8E075529DB48CD195F1BE6FB515312A
345F0DFDE9891209A41B05B15F2115AACD569DA26E336290D22E8F2D15E9885A
1701C54A52C36A448D07501C6B42EF5890D646D6097ECD2371FAB2D8B9D2AED1
885AD5A2058199B31DFD60800FC08F2C0B8180E5389A54B8DB82A939E43F31FC
6E363F1E05B58EBD69BBF4716019D131ED8B94E20CB5AAD1335875151454E1ED
13B2B621D252FE550053E109DFF130ECDDAC6EEE875241C7A6E15392B3E04D23
7FD100033229A76D4AD01406640F5DF6C4AA3EC703DEC74719AC35460C03E86F
811C91415520EF14429AB8FA9A5FA3D8378691D5B8848F53054E2AD69FAE9FCC
6406FFCE111D9D9652BDD053FFE120C493DFF9FD4972DAE07BBA157F6CEEBB7E
1A4F11954E11B36A51B6A633EF95C95E9A39346F13290FBE7E63998F74B32F2D
C260B30EFB3F532DCC169AA235F41FD300D2FC0C9920052B5D82E1D4126508DD
4E9128444FB074376FACD7601691D26750F4100694C2A304427CB015B612B0A2
8954115804129E44ED88DA6BF5482782DE09709D47FCC9569856312BB436A9F8
7A34650F4CF9330796E5C55B5DF0C72BF7055BD8802D7AE65AAE0928917BC496
D6AA58B83EF3394E2172E7992C4453B3A91AFBCAEEC0FB3F3B7B1D94767C3DAC
45E4D8F3BBA2D26D9260C8BDEFA31D2191ED96A20A1AF74E76D6269CE227CCDA
761EE868D810BFFCF97D06071C5B50BD64C4AA8894BBC649F5B05DD113C77DBA
059D516C1E87CED11A6CD5AC087C1625158642575D2F3E68F6E461BC738A6293
B88D0BDCBB4DB840A11EA4BB8B2A51EC364937FAFA1514D7A7E2FC165E33EA8B
6E3D26FAB85CE144D79437D8A28806CA08F55471F0624D4D29B082C90DB0FE0F
BBBF86582579C4C79A9FF1DFD2EF620595E4FBD172EEE28632EA15F48A32C78A
FF6CD88E5A6C75A057E5789E58F29B1F5EA5C309CE20F06F2D780F4A9CFBC616
A9399DD009E47E42BF7D6AE9A3D699DFE54AC9E82587E9C155A3E6ACE4D9C73D
061F01E799A168B432A9A38084B0409CD781925B65E3E464D54F0B8C4780EE64
0EA5AE4BA9913A3E0E41F87ED35486F265D20D7E6B8C4F8728AE29D8BCB44FAF
BE880B8E044E46621DB25D84A1204B9EA997A0F8638DA5522265A58C5022830C
570327CCB89B0EB07A93FDC78B253A3412BE37F7E23F1A02A082444E5EE17335
B14E1952AB1DEB6A3E1BF76F90C6477B98B68DECE0CB623982F5ECD71C11D301
013D5D32DADF9CB69F174B4B0F14CC37E22BB6010C13E6BE27EF7FE956FF983B
DA016D8374D4187B60A228406628835B6E3566AF291277E78930401AB2DC997B
301D525F2E6C45B51A4531C254588E710D838D5904F28B83B1F5E70947A0607B
F67FD6D5E380140E55EEE4389162117D365B6545253FA6B18E7A581C8DE8FF30
D556075FD53CB2398FBCB39DB944D7B4B835FC8646657FE87EFB947F6EF31DCC
61CDDFC39A2771858E01300D51C912BE7CBA6297E68387A161F72C87566D8421
87A9B2C04618D40E0CFDD1B23AA85A32326726F417E95A8E1A84BA0C4BD4A6BF
0ED7AFB4A1FB529CEC4BDA087768EC44A893A76E1A4AEE01871CA966E2E755FF
986BC49BBBD96F70C6D02EBA1FD4BFD989F39F4D4B208968D8CEF3E41AEE4647
5BA8FB1896E774F8916725C3FDAF054D58B9354B677B611E4D59ED3564F2BFFF
47BECAA40699209F5E17DFAF885B51B1C91F24C32B6C0377A3049EBE1944427D
3635AAE16D383B9D93FCE915262D7328C11427488F58CE16033C831FD70C5FF8
018A5234A8AC19BFD1F9EE5839E8A4F53DBE3356BE4375C41903F3C4577B0998
8210EA59D9332AA7A68DD5EE7FA549A8FE26CD6046ECF782E678F1D5DA70E6A6
015FA7B0D959337BFF94CA852FBD37C01B4E96A56E2311496E142B3B6FAC66E1
C52F35E403C40982C10BBB710B55A3980B9D5E5549AACA9124BE08E82AF29EAD
0B933E4894AF9BD0A7C2666ABDAFB038CB0801BFA89E6933D06001F8EC55CB18
14FF21A07D23CA421D1140EB55D57B5DC09C95C92E9A008EF0849A6887BFE8E7
7B17095D09843D030F724352B2DF600A22A018C4E22BAADE1C336C653EBAAE4E
1328D688D9F3FF6A2E8F91A73426113E2724406465B0963603FF1281152DAF07
4CC2D0E4EA5CAE78F3934EDA79EF283E1E79EF9719EB7BC3F16CB4E192F7A18F
27D7FCFD3990E0E505F5962671CAFE193FE1B423CA39BEB609213CF15E6EF9C2
F09FAEC2FDED69434823C81A42B9D8F15E2E57AFB070CC8165541D0EB393022F
24CFEEFCB46E6DD65747A981438EAD81C85FA3CF7A54636764F90484747EB6E2
36A366D8046477D04EBE503E5BEFD663C5F21C125165A6507983B4F3E713B1FF
E7ED6C07D533D00EB4386870643CA83B5ABAE16CA0EBE2EB78B30DFD071C1E0D
B93C1EE96A8C4EA48561CDA210B279F0F086050DD553553B3F87AC2CACF43257
5EABEE5A3EFD38C40BC3B14D9504DDBD0985505E15C059A26D0CF0B2BD75AFA2
3034015006902F2E3071066237CFA55D6F5EEE9257AC0098A22145B175021256
F3966F06FA3BD9500A2F279539A35982E78CCADCFD0E6D57D459ED8F7F8B7866
E6D32025B1988AD3D4E3C376B5F799BF1C6415820EDED6EA52F144237CAB3726
CD9E35D7B8A46F134F25CE8ECF019D03431CD0B4D71CC53998D09CA7C10AAF5A
BD3E7EC22C2F93F3A93538574B89CAC24F785F0A82CD82AEF929B12E14284D3F
693F30DBA748A64B0F1777F3260D7C9FBB4061084799CEB2122B9A7847E3456D
3F4595F9B02A50E1794BC9FCADE4A5E1BF47046C0021F290EF1AAE5E467962F6
4C384F497857E7D6CE0B4C348E92C648F11008E40C5BFD076E985FA632D10859
693CFEE38518819916B9749AAD0DF47722E48B590F4D1DF77BE0995FE3DF695E
984ECEA0E378035951E59FA698B4855DCBF359C9F9DB031DBEF3B7B96B29D89F
0A283552FFACE1524810AD485D58BEDE1AE5A6DBFF5A6C63D8D595BAFDF168DE
4FFE4770E2D1412BA704AB2C81845DE64C387F3AE3EA8386A9CB5709CBB58CA9
8954123ECF3A49397E241F49FB97F33B3BA4FEFE3D52148AD0F1C8B8B3873F10
DD19B813E15DA188FEC8BC27F761240BE476D80CD1A96A3131E15A731DD1156A
C74542B942B0A4F70B64F7A89EB8D386563DB77C65736CF4DE904FB5AE36286F
C74158421FBEBB2A75EB16BCD26BD752DE5BB21DC9C7FCBF815D30B199A8A506
B9DE4D054F3B943A621AB4A04E5063B1EC1606AB2B516787BD4341B92479E72A
ACF9ACC43D315448D09F8AE5C4472A15B636F7BCECEA17F062BAED6954DA9032
B1333396FD545000E364E7E6A79BD28B7CDDFBEF79999598E57464E82D184CF7
6BE6CC5E571A46D72EC70202899C79E9AAE60D511A68A3F2EA6D2EA9EBE4DD2E
4ACA345BB401A7B127F68F2914EEB8A10A436108F0D6B87BFF46E7E197D8541D
72B9EA959D5184ECDA1CCEF25EA04C7CE94F4F89832323F8B8FDCF3090E9C66F
8BD36DBA309AFBA191F7F54B21DD7097DCBDE8C3D034102CC129046F95E4D378
0DE51849A96D8704376E2FA72E23C3C9D2F0728663067B6FC2992CAEA6E29C7A
284872F13C0093326341846E0338E713865DC2A7AA924FF280F1BF7E861AFE69
5B439AC34ED278A0D5DABB7B102348C08AB6F43F7EF7F2E24461AF56F587343A
B6A2F261BBD026180B517837886CFAC077EF784B2FFEB233F2A375F86CD53E8C
C9DE6BA6BC8B1E855B4099406CB7BD9FC83B986CF2AB652CFEB4A93F89AC1D71
81D637A568C6601BF18D2D00361043E5DE9DB6F1156B5FE38641FD4AF77DE055
2ADA3E14BC80CA8114B15C0C85BADD65E1E4A6C20556D78AD7C127E2C9189347
8EEDACD50FF85BDA356F0BFBDC899722C14BEA02A3CB20B642F70881746086F4
BC94849DC3DE0E3B0EEA87B61086485AF7A5516F88EE449A2A8ED43F05AA32D6
332D6F9C875B0B6D9616106C787248489F64B41385DDA6AEE0EE63D06B45610E
77CDC998DBBD0394DF4745B2F72AD4D306293AB31E6E5F4EBE89FB98F3B6EDB9
11A821E64B23A9DBEA7D3542BBCB4605A95541C761F40241D40FDD69557B1793
012825D4F87C5A104D18C621D859943D7F632C89E288479664226DBB6F1171F9
EEBC7E1273D85C9D65F5C97BA8936194BEB61340EF3F8AD3E1BBE0CD051CE8C9
D1BB679CBABE491D55B5858C180BF21F75593A9599EB63B781E608C040645DDE
154E57C8448937EE5BEDD1E7A394E9D5DAC7E554CFEBAC03FF2EAF7A40FBFDD6
5554004D2D5678A3A61E64412C1155458A22214E87274DCC828F06B993385305
FC5775F61AA96A98D73FAECCB44168743CF152A5328D170C106DEAA0BB7ED399
FAFB8ABE0A2CF70467645A22FCD942A5A2269B7FFB1CF855D4A634FB6F24BF86
4FD9E695D0E2DFC75C0F145FBE4B9A9E23FE182F7AF698C99FAB759496BFDAB6
1F5D21DCEEDA37879BB2FB82B1D1E2EA6993D8D1C2D3424E9CD58A176AD51CC4
E7E29F7793803691B049B98C03C79A52BC0338C7ECAE46C7263C0974252D47F1
C1154498E077AB1452C72008770C57C80930414696A46626CF5C825046F3C12F
8997F1A403D841609F18B83C7F0DD201D74F2FF6D0F366EDB142D77F60A27BF1
08430D8181AB5F25131E978AA3DD52017F412F2AEA47D3282B8DB08399673F0D
82EDFEC9CC771AAF91D19ED4969F1D40F1889E8E0804005E6B66CE4C74DE27DE
6E76A599C925DDA2F98EADCD7BEA270D51D5C3BF4C66F9B8DAB6B8BF61EFF848
5D13FAB8E12493618E19185D7A204D28DDC3485F7BC811ABCBABA85E2A5626ED
03AE270DBC32CA2C62ACACEF625667369F00B68A98B4D1BB943A2DE65BE4EB08
56DA7D90FDC52083730FD5424A323E4B80FF87E8049E4DBF7A564BD5097D699C
08BAD2DF38CD652F4013E27B0650F38CACFE8FE973F8BD5CC38987979E72721E
EF51BDD2740F55F4809761E22E0CCF83DCECADAE93F3F511F8F4265357ECF91A
391B80530C21A9BF2F4841144E5B06E3583F5C997211E5081EB83561BD97C5E7
35F069C3B10D43136404E769109A3CE8A24D0D4BAD47CAD5EE287FF010AF55A4
B864B822E4BEFD4251983B8F945E880366229948BBD4D4887ECE540BAB65FB6F
4D4970B9CED6E150529A568F66A77364BFF7CC88B585679EDAA4E57C12397559
63EB52FE36DC2A60CA49616E5A9AEDAD6A07D6314A16CA5DE4E679629E85F81B
70709073BA30CD686BFDF7E14308D7F16F91E177F05B9451863354B5AB867398
BF4F9C8945A8A56CD3A2BD1F60148D9D6873D205638D44322502D578710D2ADC
893D0C929965A5F86393343A1ADD11CA287C6F11B430DA86C9CA20492194854A
808D39B9DE6059645DFFFC0AE8932A64517528D48B8DC7A6C9F63592C6DBF00F
483103A054A2A5C46E545971733044D6473DF9A7D5C9912B286CB4EB6CA0D55A
AAE50EEED2997384CA3A8DC92599CBBA2933A288E5A5969634E3FDB778B81D27
3F16073EE27E36871104DE516004135071E37FB79963A6CB1750A89A69041D57
8A8449CD64C08621A50CFE4369045E3EDDC06601DC85368B34761F028DC0FBF6
A71F9F287ED772FB13EB97F55761ABA5D52C0084CB8EDC4C87B86022439E1A35
C8D44C9FB899B6331E638E9F256CF998E0B1452C1C0EA28DEEFCACD74368BDA9
4FA4F70A9D15050BF7C3888F926BF6B4036A6BD40583521ECB47ED66D71085D0
A04140B24BB06A3CC1A984CC9A15294FE7712EBBD3AB54B54C8246CB93D1E4D3
6496E6A1D7D31C3D1CCCC4152ECB4F9647DFD8DC16C294C45B3477A7888761AF
5DDD0DDF614940EFA790BD589485AAE9E57C84E71B2D7459BFF038777D6333E7
8317ACD72DAA3164FC6D24A091A75B5745DFEEF5C1162900B5F1EF5A755B301A
E48959C0ABC289CDE655EC5D586D483DA699A7905AADE0AEA770C4DDD15EE0B8
E2162E2995A172303428643E8ED2186229ACB97F4131C504104FF01A8CFAF768
C039E7977C7072B2BF73AD056BB8DF48B854EFBAF2E4B94F254A4A88392C7FEA
3631EDEE561B6F60D7B81DFAE90FF32D3C4C196352F3E2E9853686E2885BF7FA
7CD40EDC0255494F41CAFBFCE1E6747E9CB3DD18BFCE5F0C91DD1A0C44CFC720
390C3EBFD7DEC5DA02D391338FE0EA5971F7D5A370375EA6DC7892933079731B
3E3C83CA192C39CCBAA0ED665CE873BCFE5D0981B5DF98F590A2708E33447BE4
2DC6F76AB1ACCC064A7F5D1D495D1D004B3AA0690A419482FE6CCB07B5F96318
A21350BC6CF4B18AFBCBAE34EC8AED3C9ECFE3DE89D2D0735E2CED6368F574AB
F21E2359B4DF384960293D71261F0CC8BAF289B4C3C84F3D397E25A739BAA9CB
16DA646CDDCEEAD68660B58E578554F5FB6BF4F99F1C0F99A4C42A371CD27952
414BC880A0D22A9BE7DBF19B92CB860B0027B52023BF8EC14B92CD54A0B8F1F5
3E717D8970629B276A711AE96D1CF490E79A14CFFAD1807EA1DA1EF3B249A956
95D76B85F483B91C0C2A3687F93225C67419E88D5EBE4F39B23E922517FC1163
A5860DCCB313205455E92DBCF922C2C5F5D4AF7B046D11F677FEC0C632D8FB9D
752C15D7DCE35C0616D2AB62148A95E39EEA97A8F016953104BF24A95B8974FF
A5B7FC7F12FC905E2D6DC01373CEE447EB9FF13E29DC064F3C402B23403A5994
C784C543A42FB16B14E7E94964C611BACDF51B442C1C8B1F14E0AD47EA610A5F
23C8FC8F813BA8526E4246B18FE0747FE062454662A35E66D8110105DD4A9AE6
F2D154D712CE9166A4B5B4841E6D396F4949B87753E467B245049B94CB358716
B957EAEEF62D9E03AB3AE26CCF2E6E90EB832C4C485AA946B52C4727C5450226
1DEA420FA239CCBD5711618A63B0967AC05473C3646255E70F701932FAB732C8
1F7FE425818D92B3776BF790ACBDD58886EEB8635839431C5483189023BC5087
FAEB5B5459D04D80359E15F1087A3B1600337DFD2F8925282A209E9D8BBEFF1D
6EB103A26001D2CF1FB2D2CFEFC30203C05546272DF59AF897B01A520F623763
970478739C4534E735DE55E4857D1DBAF703F372040B6FF1382B9A4AAB676B1F
088A1806D554E87FE2E1D9D01BE71C338C7F160D8D7DE0A6EB7D2163D732B1C6
0B8A9BADC5E161B5204DB23F528BADB11D0DB56C0E29C5CE72CC503CD77C1A7A
482C9C6132A3CEDFFD2AC54243073414E491672826D0223FF94B73ACF1F7D238
3BED6A17188360AFC84BB2DC2A8A827456EB8AAA0458FFCB32BAEAFF539ACE92
8AF90A7C42E27E0496655548F644C596564FBAB8BA0AE3AE68B2144ECC3B2197
E0521FBCCE66108115145D88E0138BD21449750E0CF629C0225D4706919F03E9
71CFEAA94BF810638191F8520BD1EAE5671E8CEE6FF9E09ACE0796BD66D278D8
FBDE2EBBAAC14C2B53C7B9E5626C344E8B8EB4066E88343F87B031BC8F4915F1
CEC036B7D7C87FD67A605E0ACAE07F7271799D750582C322D736E329386D5D9B
01737A30B8AFB14CF85048789BE208261F0EFE8770E194489B1FD064D4C4823E
397A29D76BBE86C4BE8A473BD20F64E6705636838768BE6E4E0116CD08A59EF7
AF7641D2E4CE4306EF0D05BB2ABD5F18B92FD4C8C69FC12CE5D0BF53D4FF2FD1
01409F3089E6AF583DBFF564FF5FE8BF412BE811FDA050F00D8F95167AC0AE72
F0ADC61DC44592C79E0A405493D03119E67727E0B47958AEC8ED7C0410095AEF
38C072237385F3DAA29F7B066D2AC979DAC82C032711FBE06B3228D7B177780F
232B8DA22EAD42F94B2BC6F068660D18EF3384BF708DCBDAB522E1F4AF4D93E5
174D7B154EB46E84E385A9143111682831293FBD4B8FBA1B6D5F1CCF350E3930
ADAE5249B3D5CAE21946019F2EE3E543B75A97A7BC1DACC19FB9A1A169D9F8F2
887E2FDC1C59B19B20990536E070A5FE6EC8DA98AB3689280D104E3A00C31FEB
E6C306378349429FC6672BC7F4CEE4F3C210B4997558505AD00E89C612063020
5575306092C7F10D9E2494A23DD8965EF96ECFE82904B44503ACCE14F3FC6C61
3E33A6ED191B20E87D5E3E2BA06800374C86404EDEB82DCB2AF510A35630E2D9
97202468CDDD53A8DC5DB2CBB3F878701822A9F2057FD0007D1CBE5FE4E2ECB8
91EE84B1AB092BC46D3D72DBF4A0960790485372B219651423A2AB7CBA04422C
E1EE9BCED2F9ED18B8A26187F6738DE448BDF5083A19705A33842506DE5AACB3
B40C2AD6E19BC2F75B2262D29D155FBE69CF4409047497982E13AE7670096F21
68B6852B84A789872053E99307015838D27C570D98EB5E6B11E32332F4D29D1C
8A9D894BE1D4B03498CF87A13A3A9771054905A58B78CAD093CEBAE1F023C147
DA33AB3D45654D54C8B79A85B48B3B1BE170DD66BDC19326DF7C86688FAFA81F
F6DB401C624EAED3CA557EB3AD753EB21F23D947FC50FC7C24662B5DC9195EA5
82B58AFD60C1D04905519BB0C8190FA17AEFA4A32710ED0AD45F24747C603242
6D3A136ECBF08BAA4051D825D512C6F5B230868A44331AC21B97734E69083FA1
EEA841E5ED4DBBC73231DA05B8B2A0D2A1C178D8850D009A8B3868F4A84AA68F
D6EC4244035422DED8F12369496F57C21467F2115476F0FA7CDADA08B64A9F6F
716CC234C4F66BFEF1D4A2292C962E535C4110F79E883209F4867EB6BD2E3CCE
0583851807CAC6349A8030F02D59E9E3CBF88413B74A66B44F62CE8F3C35A9CB
12B8590631C81482322563D8C3A6D57A51C52741BF812CC86D9D6B1F53196BD4
FE76F0A90CBC58D064D0484DA84DF20998014260A53269FBE38672FC59BF467E
F00888665716037A35F574BB08A82641F3636C82E0C406F44E6E4321BDBF12DC
D48108E909E7D9AC7D0D814B5D5F8F5AF589D7E094DA3786555D0C046A427ADF
12887396BACA6164963C3AA18EF7AE2BD8E0268E609584BA33ECC4A22BF19436
2C862C904C6646E450C3BDAEC83305660747C0A48205DD807BBCFA889E3DF1F3
A9B58264C7659D431D416274BEA717043740561888CF924931A24B62D57D3887
204302AD80B6BB6EC73304F7A07119C1C0B22C68FD70E972EE164F6BD2127F47
880DC9D6F83DA9EC2DC0E19FFF0DF9E2E43297386D247FF6AD292F55EB8BCED8
E0F75797A8D577CAC5417480046B28175A0E7D978742CE145E51412D33C25E56
F2810E9F0642E0D29476BA0BC6DB59314AE0FB3513A9AD8CA4892D103A1F8AC8
8267A1B6600190E9D8DBA9FC201267E825C3F5D1A08FCC2DFFD2DED749E872ED
DE16E83C7C6381716EA9FDA8379DAFA5415D1C2836D436C207FE22D4E3D4FAB8
CF81FA7AE59FE4B6FDD94287A9082124ED1AD4B59F7AC3F3BBD8BB0D8452F4D2
44BAA16CEA30C229A79189DB7A40E39B899A7A8B565A44996A18D5909E018340
477402CA73CFC7A2564942BB59054C869B254D39333C47A03616E42058B0F8CC
6425C030371091FDD988F5D4C05348B811342DD3A2B352DF1DDAD4373D11EEA2
A32700D13B25BC43FCCBC12AD7B5C18B93B871697F1DB6E55F2EBB231F88BFE9
882F3847AAF6C026611795F807B89A0FDB65A794A20569BBC5DE72DED7D2FB69
E0425E6B527C4E25D28CDE453EF7A4E09A60E53A9FA6483A5FD23A4327D12507
EAC72A7668ADC777FA4B1A187D0EE152ADFFF6FB35CB22667E746FCA5970DA6D
17FB4CBB5D6143C9E43A678E7BB8EDE27BAC378DC6B03FEFDAF3BFA182C822EF
38549060D2BFEEF8BFD513B0380993B8D52A6546D694EF1741C0DC2BD6D790B5
9A00348EA1FA8F9014EA33005D8179AB78843AA41FD2A7DC02364A482DBD19C9
131208DF1B5D8B421D3A618AC618A6BD6E4674AA50C5C375FFC27A27B59664E8
569F108FDC15ED58731AC30EC303E3B31A77ED18E144743051BB8D07C4F1C54E
24B71C822123137A729B752AC02791E6A79B61AC53AC06AEA244279051FAB840
6A0F28CFA21666532EE83FAE343882DF730B44975D1D9E462A9EC1EA6E6644C6
835774C46F2D05819223DF3F537836AA0FA0F0EEC153AA340A05E68E72D0C478
170AE6909CF90340E154566E5DB739ADF0B5B16B62BA1AF34517EA36F962AC2F
38BD96B11A68F7E82CE8CE7A7220FD0E0E3395554C842AC62EAFB5D2164E4B75
E8F68A178623F5A220BD5EB8D0F4A4BC021B66CA54E2FAF8C80E2E5736D8E1FE
6315BBC6082047192706CB0085D0C2350E5F09C31E2DDA5A85319FF59E1FB277
5237E4943789EF003A6B0B4C305AFF3024A7358B3B052E8927EFE3C4A77D58E5
9F6A6FF4B9D9077297050E24893C527D7AB1F371010EED1EF9EF90B88D730734
9D6F3B151FE3E8C45AAAF3649E23401BE41CDD15B3DD9A31D8411EF2855927DC
F221B0CF23168FA07614425CA36488FBE8D4718723BBF59B0981D98CDB0A5B6A
6DB006DDF1D707183E4C2D09772658702C39E98FA71F0400A1949CDB436334AA
9A59B0F3959C17DC6AF37242576CC6394016334C0A574C9D62F6C4BBB34ECC9A
E1140A2F28C2353E88B786F9E2996ACF6120447F5659246884C290A6FBC943E2
C5EC508B2E2FF21241F38AD1DED1FD9A99EFEBF9FE759AC5B9BBAF42A7C8A896
B7ED88F457E227B35BB361DB002D3C71CD3F541927DC4BA828A139912CCB9985
E705BBB79D629CC358F1F6CE3FF3BEB4B39CB6B8E91D8C56A4F5F40F5E004226
E418879C844D44C9E90381837B395CC13B96C49C8D035DA66AFDCA53C97A5A34
6C89FD1547AAA5949718E08D102973E9486A74697435BD6044C38CC8E381F697
99CC29FB8FD2247A4CC2D96B3EF00FED1C052FA2DDDA43DEE822B6C0ABF5E252
A1107CAD6E976237500D0865A17EB811019714272FDD4E20F0E65305C4171CE1
E6EA84223436FFA4A72F0A4C293169A4B82269C88A7D33E42CFB9511481F5FD3
0D796D4FBB8F6AF3679B156FF4869B731B11330B2CCC8B32FDFA8FE3F7394FD8
AB33F25E9BBB97CA9B0F524D9C98D9871974961A538C3B5BBF54149E5F08B2D5
4502E28BB4507FE386E29CE74478BAF4FC37BF22F977A69B789101C0C9207DA7
EBDA863EA4EF6E0B47064368148FFA413D50A3FEBAC36DDE75A07E887383C3A8
B168FF8DD6EC7495FE9B2F9B7E99FE2F90DADB21F0509EB8D6BA2AC2A3A46F73
CCE5E95F78F0EEFF5F12AD8654F2E72626B4F6591258BF2E863013BD2AC15EAA
0D51BEF6241DCF4F141E088685A747445B65AD542477F33FD129F018065907CC
895C2DC035E3F9D9550729045416710CCCD11982FCDF0EC26035C815DE94FB38
27CEB8D96B2E258808D6588ECE68EE6165C473FFD2D908023F875DA1673FD6B9
4354DAAAA1D0EAB200B8CE2A213884A30AFBFD0A24DAA96D49BC7A6A177F5C15
648503911D6A98550FB20373FC2923D0E70BF4BCE7ED5800F893507830AD708B
90E213A6D1BFE54062ACA076317BC970CFB75ACD939B1769890E84A2FBCF9ECE
E228E02B4DFA9C84D85C9D69997CA8B567C454B83452AC257411EC9908C9909C
187A8E0EAAAAB6E7DCBB7C429935B3F2082B2D0929B65327D6A204F7445DD811
9662F78FC9C9CB27884F0D8E008E14F5A194E1BE258856E7A06AAABAE74AB358
4C9D7D2ADD51110DE4F85E72873C4445F689DE64FE83CAB403273974A70C5FE7
60DE9A83BEF509A3EAA3441E823371B39192AAD318AB3F50579D0B121CD06DB0
A7C7946D32FE4ADAED9479CFAE09C9E7FFBB00B13EF21186F763E0684061E48E
44E42B420A7D91BA1AB92678522E532D48C1BB1C850FFD302B718C1464D59DE9
81352933C6704FF0878711CDEF6ED783FC77C647648E559EC8D4BE5006A73A9C
0E3F21A7EEB774403CB06B1567C1F9C14A477DAAFBE3109460B98C15F53FF01B
562B92C3B36D918D868715D5B2282D991DB17E09805FB4D5C76535068992DFE8
ECAB2712FE490210083B421FE53A0A42D3AB886A9197B5321595E9C28298BD61
926C19B39C4CE800D8D379CE8B716878066CEEBFFE7BC24FFCC6E90C5FB091BA
A726B2F1E35529628FC3DB39C2721920D2C14358D85694C62CB940CC7763A89A
DFF73889100EEDEDAB19EF1603373D7AA81C247E1330FBD5F03A70B273507CCE
E5A0B861DBE3062F4EBC4405EA977C73DB6E57152C82D8672D885EB20B7877B0
E70A5D68B72F008A5AEE7FC1E434BFD62D54C17FEDD11F6DCAE631EB4C8CBBD5
2126589DBF7D011076962FD020E9CF2F190763DD63A72D24B6B0058C09DAC6F9
6E5C574D24C4B2F007A2F20E98C9B6177B942898E607A891E5DFE6FB3CA6988D
18A3496238B2A28449A779364DE53B316369C899E23E4997D104899E7FBFC657
133E16CDAF5325273C8B65182197DD5AE428A5F2BCCFD4912B8C21A88EE4C455
47A16A6DF5E7BF672C972E1C0FA63BC33ADE1F8B49E1A60424040265EF4559C9
D8F448A6203E24CFB3D0B5E6988521927355F5DC83621E02A284C5A11B250C66
0DC9BCA558E75E12EEA11C245CCBE8B2D7E08E795230F77B54BAEF655255F4D5
E1CE1C4C331B220596B399875FA383E6756C7DB6303048D09790D49181FC7054
ED2E26BE8155BEE41EB993496C4C8A26136672F193A2F5B0564B47246CCE46EC
4807177622861A59A82DA8609446080D4EA387FF3B22859ABA09E2D790D5AFCB
CE76C9719D8D2B15B29C8019AB917E3E322B29A819D8DF06921BA4B34EF8FDCA
66EF805C25E742E66F13EF864493D463467655ADBDD95E980720822A93771748
33183EE547C4AAD963F4A86AB214C305CCB3A4E8B038E0D3800FAA3CC2F6EC1B
16B72E9AF995E5F04733F44568E2E17613658D5889B0B7FE00536A30C44E3DF0
B4DF1586DBB42B47AE3F1F745325FF863E1BB47F01D219ABB5BD489BAB4A7544
42E699FEA96FD824AD728DA93190997647BCD02C857E97910AE9BFCA5FEFBD83
2715676685F0B4FC8A122D509D634DA18390CF11D011758BA222DDA9C358993A
832CBDF094E30A4AA70BD61E1264AC81D92FE6E7284FC10AF3AB4FE0B513E4B5
C43271552515D8577F49343ED2083EA048F7AA46292D230F6DFD850A3EED915A
DF6C58EC0BDE1DDA0E4614DB94C9D754614F83E1C91C250FD52BAFE774A9237B
031747CF2D35B2875A44EF7DAF7FE7ECC798527EB9DA44AE25417F2EE0E5FDD2
3183C494130A91A5941FF500371775BC4C28894713DB9EFAB1FE02B222710E49
B02ABA11D53BEB168DAAB7775296187C49E3AFA0AAC27304DCC943F16FAE5997
84B18386A41063D3CDD2DD1207104A89A2D35754B787D2A5D14E854AC35F7466
81A73E48F561B9FB300B5350AF1B6B598987E4E7B2BF5280E373DECBDC089F28
875A1C0E412C2F747A4EE39853F3FD398B5DF0122B7A5430367C43A702BB44C1
B9A46581CA7D1A00F31996B1064D44209AF8EEC768C737D5DF2D68D35C2D3CF7
7C4A1F356CECF9900E4D820B087BC0FAAF3113D089D7C8C67AB418540C2B1C06
FE2B960B272187F754E0476425022321505CB0CEE9FBEB4BF716FBE8D423F563
CE7EB28E3DEB309EFC9B2B75A4CBC972B7628F4EF2041871CCBA64A1302602E5
547B0CC18429EEE07B70F293F03465E1288A1C09D57028A96CFB98379A2DC28F
344987F7074DB8515FF698FE9CE93D0CCD267BE38EE25E0FA6D0A784E5607464
043DD9C06F1BEB7A106FB6AEF96E543207AECB61985D20BEF41ACB4E41150CE1
AAE24B18F35C868456936ACE9C2A0AA16D828ECB1FE50DD6D992528987C2A418
BFE6000F3E0B751F2EDC8E2F96EB664D22451DE70D9C7CD6C129F2A6A035BC1C
CCA6AC84363B3E400768A23F696285BE60629BF62DD644DDC5F1CBB9B6AC77D7
C942C2B80E94C9F4B83152C976016F16D48D8BEAEB21A1F8F4046F4E5FBB7D7C
89F24E1D7F5F8353EF7D95D2164121BDEA673FCDFF2E48D690AACD96039F6EAE
380A39C7D24397FE80FDECEA96455E54F094A163B98802666609504CDD18DEB0
32DD290B02BB79DBB3EC55E1F756B3FC3C323A4C663B14401BA0EE90F4CBFC08
17FEB2C5176CE1F7723A3666494EC2A15203F78370204B2885DD31BF1979785B
4B236CABA1A25E493CA68D8EB841E7292414044646B2795D62C12E6340905141
2CEF3183D694122CD863A79D5108D80D3BB3B556C4F72A42D8F24D2D0F3597AD
6027EBB651A9A9440C7F1F6E1915C1C4917F54B2F92FC190D33A11E7713342CF
114103E6E3F239D55E1AB926E5F1B1B803143F911367863051D8A74DEA2D1037
9866B44A8CD302623D52D3FC439A87A4AA174A390CF2E59EC7EFB0E402FEE6EC
FB4783407DB57D2AC8E9DDC61C92DDBF074F622DE2AC3503B7571732D19F6599
67E4AB76FB939C01890F451986B66E104B14300F825E783DB2AFAFBC73A5569C
ADB7048694E9D8DE740E648C44B22C5E57F01D7AF7FDD7F50E06FD100FBEBBCE
9B277E1E5288FCBC89B0CCE6F0E25BCDAE1E7B67C8895D643B4E0DF2BD818A99
94E045AF80EE4065AB733B74E400378B0E76FB0F79D982AF89BE361903C7E934
B90C86A13173CB7909B5DD474BC859CBEB62772B951A16DF432C6B5E0729A175
2FE2BB4E9E604CED53079A99D0593B3F14CF64C626882AE8BB116707CA3EC4FE
BD2ECE4FE44617FC4D17637FC3124087EDE3A666FCAAB1E01F4619F671605FAC
4708447EF32714D5E0B6DE69ED609AA2D679A4E20EC0884AE8A2F23BD06ECB26
1618D46445ED6415012C0852597ECA312E624C555E00B189717637F4F62A76A5
DE6EA825EA2AC6BF9947E3822315DCBDFAD5B03B31E2785A459371F82E3953E7
BB0485E709EF998B0B9D719DED88E3D893002C330536A2FC2A27DF61251F2B6C
732925CF478F5620176DF7D228C38F1CBF3F6471586878F7A2B8F3F718B0D37A
D657A61BA09552D42300E05E8D4F02749E57103C40BE8BB62E69DC7FEA300340
90BE7C76FF26C64B5E8A4D5F03A24926CEF69010953BE575524BEC3B97FA33C7
49238B4CC8803159D3BA2EF8B5DC71C517B67C2BD821F796B6C8E8332FAC724A
6E9E3C6D9383B0BC4CE627C36B9CA0B44D1B4B5D868D9BB19483ABA2F3A50CAE
3D8D2452E50A0F69194EE3192D071935C011440FC842577BD9EF11B96621CF95
3036E9F9A085948D80AFBFB5D1E626B5B5A5101CDEE7C9907B808F091EA6041A
66AB49987F2AE8BBBFBAB0EF132483BF3D01E8ABDF47AA66B616DA37A01C7FB3
C3C2E5E43553AE4ABBE7D81A9B0F839F51104FA7450A736104162024899D0A8A
139098593028670D86F8975EDEBCAB6DE62842EAF6E08A14CA0EFE6FA7E1EED0
65B839367816990914DD07D20D1B8CC784846EDCB94DC81750CACB6E1BC53DE7
D2103FAF88C57F4F801D7A404870356ABE7D522B24D61819BC8515959B9CAD8D
C3DB4E55B68B8D9954BBA5E012C292C67922914D2ACB47B78AD52656C5E62C3D
691567C4AFE4B61F792F7A41BBD62A3A30D03CFE5E94ECFFA4E0106742F09E79
D222AFCDE421C2CF21AE15A8866651575FC4A3EE100C4FB41936F969D1196BE6
15F21E4507A8B44FE0BA0E0E99A87E421986A31D75F735AE05529319853BEDE5
0C7DF1C6D3CF7EFFED46EFF11F079FEC0A86639ED12FA2BCBA743AAC8EA14898
B0E908761865F16012959990A0F63FA705707905A4917352A6358A4A7CB7A829
A631B16593B8520D4D72630B19558116F630ACD88D719923980A98434BF306A7
31AE247D6C3D7964DF53A78096BB2DCFA3BE2698072B419AF28536460476F83E
C246A33A2FFB2DC895291E3DBE8BA232652C8D494DB49F31172578238D7E928D
D3BE99419B577E9494FB8B76693EC5F487509F339755411F13153DBF72B55295
D9839484F82CB34E0BD05E780D7228DC35C3DF75B8501DDD80B37EC333E51D4D
3EF037414CE1C3AF9E9EB2799BBAF5DDAD3AD7A1B38E564C35C7F103E5BBB623
5AA70C88D32FB33066681B340B69E571399BC793438FE7AC86BBD910D74E6ABD
E10F2F1FB6B88D448D56B44907874A1B286B06735A41EFF3C47EF870779D64E1
32C25120CDD90E2774DA2AF7FBF0E9B65B68D3785A96F3946EA0A0C4FDBADCA3
1F49E2BB9652AE5E003DF5364F0D8DEFA59E45A2B5111068E590D12CE4E3442E
4064E247871B75741C087A39EFEB48E368E7FCB4F89B888E90E77E013D0E37D1
647A666224B5CCAD2990E5C5F1DB2EA96B41066DE9EDF5A36BB8CED0E01A3D3C
5C85AABEBF117E7E78F3D0672C589554BF954DCE949AC1F58349584AC6F550AF
0D8CDB8400DE6B45624BC18DBD649C21D9AF2B4DA406C86F80E057491D0AC7EB
B3FC3ADB587959D05FD4F8C5683DEE4D4D0213CA6DB5A97EA0B631FE7987DCCD
8EF2FDB5EC5041D1869DB6138EE03C4A5BDAB772A9D10D9C7193122206A570BE
918073D89DA1A5EF780CAA0B78E526A54FE6E660D493499C1535703639D7E68D
9775ADBE930E7BAAFF7E630EB94038A858E6950DF748EFCF68CFEB1137AE5FF4
AC508E6CCF024042EA93D7B3B5F4B1DF0105A3B0365462DA630BF9ED2E88F7E4
F9CC03EDCC99F53B2AAA20A462A4CA628DFF95AAF385225F125EA3A6988A12A8
8AA27E873E8FE6FCBD0A39AD4C444F9410667922D3DDE1BD8516A63F9B1E2716
3DCCD955C484822EC39CE093E0B21AA62312C14EED386FA20A77B1C772DD8143
2DD35E85932F0942FD0EE103A02E2ECB8B1376E7D3ECAAB138D939A4E25D0EF8
626FAEB3D21A87609029D733B3274D4732409E8961C864897572EE36C3C8B727
C9D9205F2C4DFD92D65645A6AE6DFE9F795885022184585125FCB7491553B7EE
050B6E65B61943B6CECDE38567A3674CBA7A196CBCE12DF2BFB06CA814AD9383
A15879127365190014879DD57C17658F3783D72315976EB637DA3FF3D45C2A99
56D5DFD4F1B5BB983B8F5323C05F7D14113BFF985E35747166C027B8865A70B5
EE6CA26C49AA104B5C1F9F0ECB028EFB583CEDD9027455B71476CBE2159A8695
E370914426A9BC10119AF275885526E6DB078E273509C1666D6480B51F8E8451
802D48BDA5E7E3114FBD9172E3BEE5BC4EF6252F9DFD232EBFE26B8186900145
8A8402A98DE5EB6032C01C4F468F9B0CD0CBACDAF96433BE65FB9BD224B5E17B
8AC0AC098D35C77CA5B48AA4D803FDAC69A5BB65B83BB8419790407A7FD9CCEC
4B46E5E579E4B28D3DDCC44F9997C463E8E7FD487B9F7FB17D6A107F9813312D
B573060A7E7391A535D5306A8A8165EBE6B2FFE8CA4A5073993F0EB66E552AB0
8DE8544F39428EF307FF7B91859FB96C65792CA29A7D82BB077F42642E902305
B6589C456E4521897EF27018BB40A19A987C8C167AD48ED9613FD9355DD02AD8
6DCDBF0CECC8FF091743AD674126D743632E0EC21FBE5C4A0D57C6BB34E8C6B7
0857F2F0F9BF4D86CCBDEC733C8B9BEB150661E149D64E236D097A42D1A4A4AF
20F3593C78D7527245EF061E35C95AC8BF8C25BE70BDA4351CB31A8006D4DB4B
16DC5A1A8088AA4DEEA41A342816905770009AFB9691B86D846625EC78B7D085
39BECC2A82871173F180212D2B984DB23CE3DFFC521420D28757A0B964DF58FF
DECB21BD2D72EB89BBF31A03E97E40C2A1EC19277A7AA7E252B890E3B6F5BDFD
ED1FE1A3FB7A8495E6B6982140D6AACD02691CF790EB99F5D90361E5B3C98F73
2FECD2F5D842D9517954D4897338AA3D2C768A3116A2D7C1910488409AFC3C61
8A03FE8780FAF54D3F3FA6BE67D298399AB1D75D9707BB3AC490CA99B0A75457
BA6800AE048FD369DB3D0D0629D011BAC170056B0AE7930CDDFDA7A353D0CF36
E49FC12649553B5B52F9F8B46216B2EB0FC576EB41061407AA47BA3E05D57277
D48783B8134B927467A32C200C89A4FE5B49EFD4D8CF71D812D8F961E54AF2C3
D16D6A265043F2EF49C2D514F9DCA5BC28D7E82EB5583E01E2FE6B3D7938DC5D
FE6DD293E3438CCC14D905D5E365158B0C80754D9DE8A7718A64C5FEDF123AA4
FB3B8EFE4F031717BAE13BCAFBD5E99B64F6CCB45272FD3E9099FAB09303F703
3D3EEEAAA8A77C343B645717B84BA5E9D7EF3A01500A603B28674118C8E772C0
2A221973EC81EBC4A5F016D2D71E75369C16CD1F03B4F1750ED881E74EA9E1D0
4B69B6E7BB6712BE7362DAAAFE7ED28BA8A0E9F46E165C74003E6B6DAB5C9971
A09C16BDB16C7BEF9B96E5F609DF563430102AE2E2EE2CCE836D710830C8F531
063295D0376CE14BF0933743D23571481A96C4618CB3B3BFD8BE7938866A90C3
132F638CE4637E23E5E09D1D85942792220F1F151FE340300ECFAAFCAA5F0192
A04338F81FA8752ED3A74CFB9FA15E86AF25FC8429DD7F8A65A7A6B5945B450A
FFC01CBAA10C003245F51ED271003CBC5C9641BC236AA280BF5B276F8C8A7E35
1F82312BCD015FB7C67B28EB0551FCACEEDE0EB4143D0E034C55F8E6344ECBA0
629DEB16A59AD66B3E7756FEE9F8D4019B4D1EF71C01184E9688A7B01C5714B9
D0178568639AEEFD2B4A13B3B4891F94A5DF164C2977E6D1FC851C1AEBD133FD
34279F814C322891B8068DE1B0CA4C2961E75F286D13B034D9CB06753618A374
051DF4BE378B90D15047B7A1DC93CDDCEF38621E9C7EA8334DCC81CA66BEFE1E
F24C5100B190E3817CB8E40CD6C4FA6941F1AB3762F7C4B14B6B3E983921FF94
B0A8AA991F5C25F72D8AFC5775A0365329E5A987AED5FE4C5AAE4166B7AA3B9D
068B2888A66EDF4780922311D158D086F057AECA7534031EE5CF9C6F37A67FE9
68009E5E053DEEC937526816B75E72F96779EDD6F2B93099D532AE42B3741244
DAF8C37CBE374788052B2FD248D432F47BF52FE022FF88E16FDE589D42187CAD
07BD00CCA51EBCB2EE3968C7C55A833DF9F48E88FFD99EE6AC6E940020CE8E4F
C853A356CC1BB75F61FB6E00260EDCED9AFFB88E358D175143EF3B555194A602
C8CF1A5BE8F75430C8633DA5AC122B0B4BC52AB14F565634BE5F08A353F1E932
2EA9D87B12BBA05DE3CC4697693B9D95C51D0181071FAF57036752F25809EC9E
706FCBD2FA15C13FDD05D8101B984F60CA8D75878FE417114578C1B3D05FB0CD
A45A10989364831A5BC26B5570E9B3C4CE22FD4851D2283111B57B4EA63DC2A3
0A4B37FFADFC16DBAAAA2C22F0C21B79A1148D380EE27A523289D317E2C171C9
08494C95774038493156301A8EB727E4C044F6D8A5652F525CEE2E257257EB9B
98BCE8F7355D99AAC601872E5E99744678F745E4F756A857DCA3B4E2E456AD86
3FC42B1592D110C7849A1A6FBEA7B9EEEC92946F282811D5B92C0D963D19B677
C2599BAA264A382C067335AA9223431F3934F9C38CCE83304AFD6057A9347BD6
AEAF3C076BB6A46CAA816F279D50991E4D1BDA2BD844547281B9922096C0DCB0
7189239583F0EF3705425B0C0AD058F0E841A01889F2604C9A6AED0A986ABEDD
F60774F17E5B851F6A9ACD9DBBF6286732431C0F59E82E84F4D105D15E316056
BC6DFF51FE9141B2B89FDEC926589C834D16AACB8F8122C8DDD9D18C0A5405C4
99F188E796BD4E3FBF9CD93E1D3F585F615954AB47026E7BF6DF36AF5EFE5BC6
D4420989C7762DF8B72B7B63941244A98D8FF85735BD0D54E355498C24A2BEB8
325B48BE1E4FFAF6AD70E3E44E43167031C3BABD3A2014BFC8A2E7DD1719CC53
CE45B62FA5E6BCAF126DB67B3E374CB28BDDF6AD0927E398D4D40AC62722EFEC
6BBCDB1427BDCC8EF91ED80C0B52B0851BA0ACE0F5FEB464A2724DA42C716A53
8801D8F04FBDBC551A98388E1EA531762AAE5FA9F93F543D55FFB102418D277C
E2CE3C5EFA976F30A86D2911FE9E1C781C3CBE64A7693E0ACDBED60438F45FFC
76CAF271FFDE47566D942E09BFD1779C829BA0F99C9D40E797D509E2DC19EC2E
BE938501262524EC21FD40AA3772886C08F602CFBFA0156EEF57898272F29567
9E9A1CD9797E1933E04C1DBCE839A85E0907E23D4A5AF3930EDACA27D672D113
F4A73C3FEE0C3A41EEE29067EF5DBE3B981C0335F840ED03174225CBD9E6E76A
168950
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 66 /B put
dup 70 /F put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F488FEBDA
2A35D17E7688FF0EEF8B75BC48D8161D8019F411F4EF08B12C71F7C49A65FB22
2406CF1EE84B5AD0377BDCF969B43B0F361FDA5C82902A87E208B9C0B0A118F4
09F8DAEAE7FCA4E259856E7DF849F818785AD589B451B5B6F02C0DCA22B640D8
7E79D24C2B8F38438B6E4F1428A4501D64AFD7C9D8F85A001F14A3AAD849A80E
1C1A551889A3D80A08486C27C0F914E665E9D8D06B135D3D678385BAA67E8874
3D7EE30E15C1651991A6A9CD12066878A8DDE53F7627C5EB24D7FB1AC128604D
C225404F328F262D3B5D3B93ADDCB366B3F06E7E7F6D9B01F10FFE1C981EB012
2C3515BF2776B5B833FA120AE40438023BDA6569691729EA004A3D96F0FBB300
F4075A43A1EB5BA0431C918A879828150795CF2BA78D4E5E231A47C10DE60A53
9D53983C4875D056EC205D49A85E987FF8BDE5D7CC3F8237B92BBC76D930D325
F563905FE0D98535B2AEC8B617E5DE1450AC0E79000CC6A6A6BA86F7758E5942
EEA673F31E8E07AEDC43477620BA1D9F1DF68EA942FAA67B7CBD3B61431CFD7C
C5657591ACE4B10EE386592BCEB5BB9CE6AA04EC128C60A00A1486A56C470D27
71F7155A6DD0C8B8A9DDEC6CB94A8C699D97DE9088782DAB1E74FF19363D6C58
8829BE068AB63384C8CCF88F0DAD8440067D2DFF37B269FAFD07D833653FEA7A
1BB56967FBDBB8B01CC609C90A51D9902448C43BC00CEA139D53DF44D496134A
9FC83AED388056BA96719384971397A954F09B5AD4FE3071CBF78B77B171FC91
8BE6096EEDA9253F287745F16E5C0B80A746AA884D8D8A8C6967B2FCEAEA7EC9
5AB2A56B04C9D8EE3E502BCF9F1E45456DACE0516869C851503ABCE1682D8786
26C470E66F928C7CF3D2AFB4240B3B9187D12EB5DF82045F8C1FA72B61B0FB41
58CF55C1E87A9AA954CF0FA93682A66F96D7D18029195917F99DDB0AB5C04F18
2CB9AC474AF93114F1302F64C51D4CAC7C1539B1FB07CDE78981D73918731299
AFDEE83CE57F68CB0E81EBC5FACE3A729AA2E7284C6F76012B7972B1D9281EEE
4367C05B7C8E4A50F6E5B64DF5D843B05146D519BEA5A3D077E4870993841F0C
0387575B0536C6FC87A7248AEB500E9DC7E1FACED40741EE740CB939BC84FFAC
E55D10F11DAD2B368D009E6FA9BC925208A3CE5AFC053652042F31A1063B6233
696C2C00143983D69AF32AD65AAA7200DBA131F25F9909B7EBD63A5AF1D2ED27
193246433CE764F3F16CCDFE3602DA9812AC42C517DCCE67B9569BE25940CC54
C9AA78F90EFD17B24C5A3334D68968B1A282022E8C24E4B0B312EBA63F928518
9A025E66877FDCFD1B954F1DC5BE2E4DE7DCF8A4BB7E1FA9FE9F1779CA92BFEE
BC7F06C3BF95C9569DFA2FC917BB94DA98592BC213E21E2566DDA39C672A8108
8C637F52E30327BF195043DD8FFC931145A07D5BEC2688129547F1A52245CDD3
46AE4DF6EE0B29DC5BF5F1D19D397DB789ADCB6A50CE0E60F4F3A20F18E05451
4D6AE92A983B48C2E364AEEBA0E6B41AFDF6CEACB8CB5CA2CE1F34A6C5440797
20CD69B6EC8C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: URWChanceryL-MediItal
%!PS-AdobeFont-1.0: URWChanceryL-MediItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Chancery L Medium Italic) readonly def
/FamilyName (URW Chancery L) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.0 def
/isFixedPitch false def
/UnderlinePosition -120 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWChanceryL-MediItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-133 -290 1078 913} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA416923E30E611A07BA888B9A
A14C123E9100D381D7202B676F49F6297EE316B100D3203CC3645D13A2A7F381
8DA64047103AA4AE95F9D51FF5388B2E41562BF2B3831FF9C0298FE248158584
0D0CF1D01824C3999015B0F644B4AE3EEFB4013C6F1E9B191E082EBA5422B54E
0AE065E7D7B1EE92285A558F51E220E5DC1749E3BFFB0B88A184B40C98D7EFA7
6CBE9DA5E76E571779FC6CABBB82D87170237196C6A18486F09F889B0E1AFA6E
1636983A1F75630532D7EEF1CDB91E20FAE8BFC172E3D8477EE3DA85B5D08776
E34FBC1DE60B2B8EFA991E9DA1FB75B8AD18364EC47D3CB3B3718CFD3798D12D
F9A7B8FE7E13D63953DDC37BACB536DD9EFDB06E384FDE6EBF414482A882C8A4
2F026E2CDD1CDC31C6DD0795FA7F9BE600E1E4BC5F18A6DB3C36B4DC1830019F
BE81062640B2493DF0985A63028B3FBEAD554E672AD6799A17EEFD7A87A0182D
C55F54DE6D4F65F6E346CC63C9D2EFA1F6E90F6B0F018A347C7DEE11895B3C4B
47974064FDD11EC2F5E667BBAD7BEC80DB95CF231804E3DBF22D3F8B64A5D180
BA682C9B06BBE452E566F3314E38BCE882913EEAACE68C33F23E6A427674A79E
C2F27B12E066A1E79685E35493E680D8E54F4030BA6F9926AA1B76D4D86DD3E3
630D8546B07EC89ACCFEA0DA270E5414A9DDE85D2349C2477B37A8FBF037A81C
35BA6DB556EE8B6787F6D756FF8DAEE968E3A3C33370F185D81248138FF7489D
B42839A7E3F5FB0892B7089196D31267F988824841D160A02D2250BD264AEC1B
31E28928FA613178D39690A6837951E14AD8D8B381ADB87410D39B1AFB53FF26
672119982327F7C62159B5F7B7B6F2736BA10051DCA921FDB38FE741A465AF4E
C1608ACFB6628CCA8460E79EE999CF4BEFC449EAB2BC05E2D7C91369649C7138
F93E6242662C223D1BB1F4754C413FE36A9B5BCDED260450089DCDCE8ABF3F5B
187D8321A0A29820C7F5479B666AAED6213F250818078B97D3F5F7774FBD8968
43C02A96EF970A15EB26263F9CB022BE279817C2953CC1A3A315B0C13D0BCB69
F6829987C0FB82F30C8A53FC6F8B065C026E72323894D5B24CDEBF3CA3B92941
4B1B29EDB53F00CFCEF86DB4F0C718F59BB20B7D268041C60CBC8641FEFC5BC4
25F817C4718C0547FD9B19E74D0E18F6908E4528065B0475F3E95AB26CDE6158
3C22C615534E88BB52B21DF296E51991008C03514B0F8F4C05D9FA435C6E341A
E169A334736D24CFEC8BF8E7F0206FF63B61F09CCE03F54E22E2B141D5417FC4
E56B370A532047DE3B58792D4F9ACD92ED5A79AE617B77D886B36E1ACF2BEE89
93C4CBE39FBE83BD728E3724990B905661B217EFAC4D403595265F0306D9CB3B
26CB5F05EC5FB7FE0B28A607D5242312EC254311435101EEE86C74025C3205DB
72BB08EC68B2FD291F98C0B5DDF3DD266EAFD252116A288973A1161C9352D9E6
D6F665336ABAFC5054A24CC597B395DF8F165DBFF17AB9A8B582A7829DF67E37
A242C5E0FDF6AFCEBB0621A8ADE756E24F7092710495D7A30239E7E76EFA9CA1
8600157A0999E1DD8C3FC2A00E05F0D6076A34A4B833ECB05E6CA636A9B0CDA1
509D95CA8A85A9EAA164A4716C503964A237BC0486514F6952862F207136E1E1
6B417A7DED108AA48B64CB919B27CD7107D4222DB031074C99972D0FC17976DE
B8C98ED2B30FFC89509DFFBE1F52E1CF2600212964DB2ED1CF81F3E927856884
C3C5F2385EB8D49CEC9F91A24DD05CE41B0B5C871E5F55C5EB4BD045A1578D2C
468943D6E24E9447362A57927C9FEB68B1A69C58D01E8E6D9649B7E19A3D8394
24AF93DB66C9EEAC533CEDFBAC45515C67096AD6C9347F4BBFA6EDCEC150E185
F340E1487F925BA47AE48EE1510F829A6F41DF91B4797AA2F09C511ACD77C70B
70DA176A704954281D77A9EC684CA9FCCF5BBD5AD39DE7B9B0C4313BAF218B48
8FC2EE0FEF96D00DB48AB499448FE9BE44259BAFAD9E6E315AAE264AD4BAA264
66E7D0843711D05D3856ADE2FEA25498A0FFAE830D13605E269186ED5048CC76
8BB8F139FAB71834D2BF6EFAC3CCC40D3EF3B2E2080F148443167C8D6163DD18
5B9F341733DD7D909095F94F916AB2ECFFBBC58151AF05AE335200711ED945E1
8B4BBE4349B6401B0A31F3DBDA75E9AC62446C061296402E64C1A1D3241D90E8
850AB5144766498457EB73E11595A287935F0E7AF6D49CB9DC59427AA75801EF
639E374EEE370AA99FEDD2330BA2F38CDA9EA0AC1EE47B0A9D7413E0EBA099CE
FFDA4D1AC4528AF6B5E307A1436E23478AD56C865CF48739976AB5AC152FA12A
6E3AE5A35132E206921E3123164FD0AAC0858943DD30E62A3288EBFB3C67AF74
0B3FA1B24F6630F31E90646C138D0BE636CDDE883E1CB4ADF94B4DFFE102DB0D
EDA8573FF718CEF0E2EA461EF974D242BF0ADACC45454A7BC5A29688E833A340
237E6A7350C05092185185C0DC11E591E92E88BF0E7927B92E17E7B9DA23A959
20BA23B66124203536CB04FCAA433B9C6D4683C02F02777853B47DD59CC84615
4643BDCD7C48863E5A74977F936EA40B070524C76749AAC7760A44DEB1D6EC88
90F4A5090FB17C1F17D4BB2529C81CC95BC6636A8678C9FEEE3FAF4B4ABC9198
8432BF3E266C7E76C0E758B49BA91CDD5B32B1DC5E7C2ED1A7ED75698AB03929
BAA7D6002720AF0089F623639FD3511FD8D2BE14D1DB5138D126CFBBF05F1A63
3938FA1F7518F949B81B39046A34DCDBD02621AC20ACFAB65C54852AE7864766
CD821AF3AAE8945D037F78D6C568F7140361C400F5C62E9FC8B9E84BF464065C
C9706434B1263DA152A5C611A52AE12A46588DF13131F9DB843754DC77164C5F
6B43342A87FF745965DC919A12B63D749475B16D071E432931CD32FB8C360C24
FBFD400EB598347DCFF0347BA4273054B8062D3DF6FF094944AA7C50481FF312
6BAE5309893814BA28263EB863D5E2B8BBEBD4A514626C26F052A95D65D942ED
54E36A68D5C5E6EC8DC24FDEB0B8D539D079FCDC56E9BC4B1B59C718FB751B46
C7972BDAE3C044E0BBD0FFCFB0E5B5B63D78163F227F1385113B9D2A2F0C56DB
55B7349853DAC31AF82047C67E367D2376B73CE5E992441F404095D3732590B5
E767CC184E9759AEBEA33FBFEA0A81599002E066EDFD837C54B7985532A77E7A
BE61791CDA031BD6C638971FF77622866062969131FEB33226989D59C19520CB
E7228870D2168A99303C3809FD7FDDAC9BB599A95E1F1CFD654ADAF5DE725EBF
118381D0B4103EBB92A3F801177BDE9BDD61E288E9C5DC9FC8B7B93CCD6D4F24
070097AD9B966A19934FC4CA5417866EC07D54C89A8053FB4C205413CA5F8091
717834D15EAD8CAD4CCFE92F79019521AA7072575852FF66ADE17A55B76D038F
FC64D4CDA9D2C72DF5CFF0E84F05543BAF5C0E25FBBA5BD84489379218C0E4B6
DAF3EC66FA0B727FC6AE134C01819BE812383104BF4480ABCFA0B54EB99FDFDB
4E0A76BB8581CB84D159C175485B80A6C5183D4525B3629229E9C332C74BB398
B50682EB172AF785309A86BB40E157B7D8F248BE4E26746601530E5DFF5859A5
1DBF625D59CF3FF2D7CA9C4F672C37CDED2C60E4232862C16D1DED41540927EF
5A0FA16510FB9F6D14FC983E99D27F9136D4805841D729698CCA8E164C0B4F01
9F2DC10AEC6FDA9DAF9BDC42C781963830BAFE4D6CD2356A3D2733FE86C94B03
2DBA0F9B5D7C90EEC6B06D7DB4B3BE25B00FDCD6D67E6DBBABABC6D3F0780DBC
B0F20CB1BF9E89AAD463996718C19D155A62D7AE82EAE4C82760CBB2437F1CA3
F620E8BDA5924EDD97DBB2126D6285FDF29E19D9B48709CBCAECB30FDF85C8D7
EC43C53CF333A79EA5E3D73F78E9ACED9637C539AE998D80E1F477E895E36ECD
8881C06314B934962984C7FE400CC2C7A21F5A74905ABE9530283E6BC72AEB17
EE83CF122B2EB701AAFE06CBC8EA4DBA45FACDA19E0FEA3B9160D7F036B7A36F
EBD489C0E4B284FFA332B3D433E41B15E83D18817B3CAD46646300ABC90A568A
8D9E05D7B835FFD07328565672AFE4D260B3C5CBCDD213EDE23F140863D5E14C
5C8B11895AC0E79C0B211C49EDADB04416310BA1C06DD22A6A57ED89C7614DF9
5303ABFD4B57CAF14B34FCA46ABD97B5AEA02A3BE10649E8888FCAE17B8C982B
8395B1F8ED435BE07E5CFC49BBE2E39A2B8DC8849E90F329A9EF4B08231102E2
17DCC7FE8006D584CA516A265A9132694BF1A6C96DCFEB8325D16EBE294FADE1
BBF4EDFAC6E27801964CDFFFCBA6443B0F4EAF0AC1C993B6CEB761AC8A4993D3
4A1E767263341FBF43B26DD53D90D015838F8040DCE919A3AD39BE75464D0A77
BAE28D7E749E011F374A288D4BB5035839572274D05E250335E05CDD95E3BEFC
41E38347AED4C6DC5733FAEB94966600A8B720DC21DE0755EEE6F50AB91EE549
676700958F17D09D8B8D37746E5AB46052350D29FCC24D88653589B431FB84E4
DDB650C2F783594DE6123A8607F749259471945843331BB382EFC1B0C4158381
665BC49BA3C89C2AA19CC20F76FD420E7D6384152EBE72A36876D66694E3DFCC
DD4A5F9EE70883FDE7049305116AA7DFF807FC5D5BECFFC676826DBFC268474E
AC975D37E8382128ED3AE89F06F2EA57E3A7A6688008E2CFD42CDA32888E0742
B960442432CE407A290008A59367E2D88CCDBBB6AB1C2D00FC9C8741F3D55558
ADFC1C8605A06F35A986459EFDD766A93F05EFA90864CA6025F1F7DF5240166D
84A2C48EBA62A63C347D512DAD1E994E0AC449CFE000A0ABE41BAB5E0DDF8496
09B9D0745B7C302BEDD3B24A29EE505F477B50A2864C72187FB7C901261200CC
A4C3C1E2E75C3F360F37CCD87F4959A848F44635369EB96E6A51C18E0BC43469
21EA3A8BE3B68263ED89F7500B393E531E77C5D38E2FA764893C50807B43CA26
37C3F3A7BDC6A6F5F6AFFD8F05E6C0D35AE05E917CCFDA2CC8A0B7F38655D294
B0431FD4355629B72074227170DA5BB2AAB0A433C40BBADDCF27BE2841C8BA4A
FEF3A56D526D19F9B74F63D4F5A8FFA56B5A2FA277CF28F9A99CC73A88230863
54F120209525EE410DD0FCFF05F44CEAB58944C13B7E8245C53EDA8A03F07FBF
5EDD600BA420B5206F1B0F80562423418F533BC0EC6E4C75D695826A465C98C6
BE7DCF77D3C5C7267BEFE1DA4A93BA091ECD7E827B5D2F2B0EDF9E72731DD57C
1EC8E7980CB9D402596B15D9FFF7FAAC14BFC5CC0DD2233D277FC7EAC0857483
53B112EA940F03E3B96E29AAD4DE33CD6D813D15C64A96C35A011A9FED1247E7
1FD16B344C7D7006A0AEA392562BE3B4C7C79E1DD372B9ADC7C7C1EDA83A5A22
951EACE7F8FC51037D01A9C3B2F58D53800484DD75B9BD8B861072D60EB5F36B
36A65A6A3BF09E5BD6C5F6B71D080F1A577029C91D6747F83DB2672BC532B206
EA97EF31295CC62F169334E5CAE8D655064E811043E3A6540E7D5138141CF9A8
93BF59A3FEE34A9A0EC9698928702251D55F3A116C25A9D5F3B64EA1865C1A94
A2A41CD91D0329FD8D74A03CCDF062A15ED99130EE3CBFB248B22513F533FC21
9F692C8CA4AF5133EF6D0969CAAF54CDF89BE2657C9AC898713F641A1D3F5DF3
7928C242040BB7854D978850DD845F6273E88E2CBD50483C1A7A897A92032693
77A271E37C3D5936C94F0101BD1E33270C4B0BC86BD6D74ED2D6580C0F052C74
6EB5D2ABAA61B61736526C0F765B09EEAF178E8E3A3C25EBF439F0E451B2D47B
BB63F72FCA9757A22C55C4439BB1C92E0EA1A7411CB12CA874C6FB9EA6092244
6FDF844E53EEE07E1A49C299003512E2C205E779D84688A328EDCD87B76E9232
AA5A0A8314BDEEFEFDE18D24719ED080E8CD74AE5A04729D6C0082982B7CA8C6
955FF68787E2A1BD8CBC5D386A7B4CEDED3D6620314C6C0A6EF90E2870D1D9D9
844FA77C39A6ED7F9773989121274B761B5E82850DFC48CE3224EF717514C5F4
CD172DB9DD3009759130151FD21DB42EDA16BADD6B8325F2944977ABA7335BD2
FACD0EEF45624A7AF43E12E0B012478971EA4AD2501063A4C4264BDE3A47F794
5FCB6827023B5C28E86CE6B00BCFCAEA7D3243D1C839B4FBA409BBB953D4740C
781BB338CA0B1D2AC7402601593AB07C038139AD99D221A22E172AB43316C7F9
9586E4A0F09CB9EB1E20331378
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 2 /multiply put
dup 18 /reflexsubset put
dup 20 /lessequal put
dup 26 /propersubset put
dup 32 /arrowleft put
dup 33 /arrowright put
dup 48 /prime put
dup 50 /element put
dup 56 /universal put
dup 57 /existential put
dup 92 /intersection put
dup 102 /braceleft put
dup 103 /braceright put
dup 104 /angbracketleft put
dup 105 /angbracketright put
dup 106 /bar put
dup 110 /backslash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1491
307A6D9A2F2BA5099C8A07762E70BDAA74BA5E2BAB260C1352107EB8A96523D9
4BA3082B99772D585329AB8645C3BBD11D72BA01F95CCF11C6DEBFDAAF7F5C4D
795F99DAE6A8D59462D759001BBEBB59AB0C322EFE02904D82B424649C2FA593
0E23281DECC5AA908E54244566055D418602EEDBE78843300158908F77C0AC75
9562065826D34C38C598D8626BFED7CB672F132E065E2C27932F709935988376
94901EBAEAEC410E2B36575A71EBB8954C3A90EEC264E6115950FC91D0D54999
323D8B4FF8129A8EEC3900A00CCB026E6943BE1728BCD3F6C1BFD503D55A6A7A
6376AF4D646B2F31B1AF935446DCC68233C72AC164BB393DA250B0B423D32887
C680509C862B6F49EAEC995036CF797BC11DD87159241A7503B1FC87023766D2
E1CA46A71DA0AC435AA605DCDE5787C049DF79FFEC71606BBD1DC1211999B979
383D4954C959537D1AC094D4A11B25507FDD6BE1C67225B4769A8DEDF80314FD
F45F05106C613742833B9715A7D4383536D46E9C603E538A3945D764840825FD
AE4D82892290A829ADBD5DB592168BC86F8D2CF4F6C8398B295FCDED9C05EFC9
524F431C4140A35CF347DAD461D5A3C405620ADEB446FA6C3215E759FCC55111
BC4E81205EAFF46EEA77C3C613ED4CC1C79F188D504E15DA2367C5513A5AADCA
ACFB26DC8E75DD413871CA57F5EE50369754EE56D80115FD7E625A355CABE0CD
1C840DB995B3016654976C7348EDB83A3CD93AF58ECC8481F4E88A46D6F6264B
B07C680D96EC5360A10B10B2242283780D77955247668B0EA51CB72611CEFB61
B08F44C6F10E47BA470063B77A55D73834E011119BB3FDEE22450A2A5678FB50
E50C5AB899E5401BF8EFDBAF009369B5193C21467C3014F538E3EB7B9032106B
1EDE92F1D893BE6128926B894C92F62FC514505BE94706322F0D10DB54D4F572
598D5658CE59DEFA06F9DB874BB3A888E0E9B5BE17B7A394E10B9BF30EB3BCFC
9B68D5246926D2DE27AF3BAA6E8DBCD5E49C4CDF1E3D4EFCDF42FABBBA859168
CCD41DAD52547179D6841AC8D92FA833A3AA66D4458265C57F73E036860EF447
CCE43223DD3D3DA59A804DC4D521ADAC97D25269EF2A3183204C152BDCAF2750
6506D4EC63F6431805A4DBC5F2A9CAD0AD3773A9555F3E3F7ACD54149AEA2CEE
4D957EA3F9731963215A208DCCA0410C738016296866ABCE6396DEA1E515E1EE
8192E50CAAFECD2FC0A55FE948BB3E71EDA6793C201DFCF6802AF09DE09E902F
E935DDDD900A842A153ED1D0F36BCA584011B54B209B0DE65289737EB95A8A2D
66E9ECDC55767C6EC7CA150382F6C6553F53AA8F96728A4FBEF5CD3500BE2F0C
5C50604DF861909FC008166E22E3573A70059F5C803235E73D10097CBD270C6C
E53AE2CA684290A03D787A477C2EED1BE064AF5013BEC5F3F79C30DA4BC89CB6
10CB68E58802959391F9E800564C3D8FEB1ECB2D7A47FFE38977B4E7AF165F06
F3C1BCBA49FEDAE91B0F52CFC327F02990FBE16AAF2064ADDE10D062F5778891
8FAED4ADB672E5584DA64912B928F1DCA94FD8BF9DA211D81552780DC4B754F3
182A8457EB2DFEEAAD1127D37ACB1C4F618091208229F570FA64CADEF70ED098
87AE025674DBADB1F6254535F21EE4F4D931D7EDD8AF5D62234591DF404ACD12
2D1D8A14A05A7C753018AF817122DC057E924DD19BEE8708FBD43AFB247AA339
CCE3C9613D193EC660843929C76F4131D10588D382D2831C68B18FA6D1E58191
7CD7BAA7481E2DA09EDF6176ABEF4777079E54C6BB663B00C39DEFCFB391EEA0
A01FD6F10EC77D07859F98C77489E8F5318B75AE51033739982FEACAB43ECB55
25AB0C7363EC47AD47CAD5EE287FF0B33887359AFBF3E532CE9B40A6A1A4AF81
86CEF36B458899168CE563BB13C2B36B24365AAB390F49754EA53C9AE16A8A45
5AC7FB87F9C5B78E3DE79455D5A0EDDC593C4218C32B578DC98FC56D4D4DCC56
BB24A71B15D09CB78D7E52F8266D8CD36DAA103888751413FDF234870CE1ED52
DFDE8BDCE3EE0A613DC1B771D2FD939A412797F5F634BC7890A8B2E5426319F1
2FE336197861C3BD951021C7D4AFAEFE32A2A453C028D2EE0009A3DA5B0A3F22
5A19A82E66DEDCA6D59D9A9D30F093B8CE55CAA04D2205A657F7EFEB1EA8C616
81A2F8A1556D0272FD1B8220A275B9AF3B041B07277C793EFDFEC76E8AB4E9C0
1F91DF136DC7F1533E5D52A1EAC50E9F136536187987A22A1DAE940315A4F18E
B204C40EF838DB2AD8E8EADD9662564FAD82DE2F811404B7BC39CC235F43411E
66CF534D08FD569885014838E71D890ED654EEF842FAA37A27DCA0E14AD0A995
733A908F76BBC7821E85D17BD059D1774E270C1F8310ECFD3993A351C1BA69DA
0622981FB73EE32DBE7FF0975E062ED9D1C8165C561C6DF9AEE271CE3C9C3D16
2A0B24F6E3717799269131FB0EA376159C2EA38B51765A29F402BB1C0AA446CA
B8057F4E55F89B00573C00CC5148240ACD1430FC917BE3C2C7C6C494223AFF7E
54DB8C3986EDDA40EA5E0EB6F0973340E01BE6590538959BBEB1473F0FE26E05
F78F80ACFB34C38724885C8B9744D0D9B5A10F4CCECE26412DFEB18093CAAF4D
01F8C69C4F1FF47AE380AEBD315D81863394E23B430CDC520B58B002DEDFD06C
33288765CE66A9A7E2D50DCE6D541DC5D26E15B52932C4EFAE92A0EC0ABD452F
BEB619B33FB5D2640746F4F856A31F90C0CD6D131EF17B9A5CE665BB13E8AB8B
4AF0CBADEE09F429AF000FA92161B91DCE3B9DE84B41168DCD250972C172C7F2
E79F4422B1E355CA41673B333262CE71FFE76CB2D847D0E2566890D485C7840E
2617C6CC5388D9E451E5B597FD53A3328FDA257CA65A642057CD42A2DE890E1F
92F381563689BCF31979CDAB018FFA504B951AAAC0EC3ACB2E2DF39601EF9CD5
C06273BF8ABCB0F13447684808FC84CF623C16D4FE370CD2B777C13DEFAB9B67
2588D5CFB0A08E70F16F5BA1A1BB05D160A05FF42CBCC14461871286DEC901E2
2152FDFB96B855685AC05CDABB4B6B27DCA3D07EBCC198C52D6EB50A3BE1BCC7
FEC9E7E02B2056EB7216FECC081557D55F56929695A2E21F1C6036C926BF4C3C
707A3CA13878C16EA563FA43E6CE92776C163A2D49A622CC0CA7F33B311612BC
0E48C1DD33F440D5C2CE38EFAA64E081E185B715A2EE71C6DAAF8E5678B4F89B
D64FEBC0722CB14FEAA3EA69BEC8AE5943A27367244E5A4DC35092B2482372B2
C20ED8951EFBD4D09F4CF942582F46809E72E0B7DF28750B401562E1E9005407
C8909705B2E1CBA8B412F5B6ACC0EF3DF890D708984519448CE6D3EA3347B32D
2E3A78DBD535D816DB5CD1C4EE50C4A47976E882B0E7A262F4498B05C5F7EFD8
89C29BF45F27AED739C6C4DB2190F1514157D77327AC4D5C16B90A955B7710DE
625BF246CB9A2AD7C1A7B8EC4C3F13B51F2D1D7B9C65C06F84A291CBEA71CB83
AF4C76BB0F15FBD59B2DE1ED7FE7E40BABA248217B0F7D45FC320166C94290E2
95CB3FB25B02724592E5832849D065E39605926AE3F9A0369528EE215F6BC27E
8E8CDB06CD49C75A64EDBC1EBD3ACD48C60F21418D6029E52B8E6CC22F2A5690
5D9EAFCBEC51A09C135D039E916AB1D3A3F58337BEC5E027602FCB3EB7D000DC
55B6ABE8CCD1FB4DED12EA12494AFFEA235166862A749BBC857D61F7E382F1BC
CC232A2B4B5891AD3BAE1462F220D8E929BDB6215ADC939019D7C445D793DEE9
E5EA11E770F266E7D0E4EA7556A9EE667EA57849FCCF4D8537C79DFEF373B7FA
1CBB2D75CFCB00368960F9B4154574B54AEF8E91434DB910EC392BEBA7779330
5B1713FE3A53FAAEF38B65EE1B8BB238C39B7FF791C63A1FF8B35419184C0C0A
E7DE8225F14DE3F1E4709C386176FEC093199483DDC78D8382400D711F3B2CE2
F4C43F14D296ACFDABC534ED29A8F8717EB86533458B269DD499256645E5CA90
8EF84A63FB1E3301F35F986973
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 61 /equal put
dup 91 /bracketleft put
dup 93 /bracketright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E0B5622DF6FC4BF52147208D9A91EB49B03BB40DE7F8FBFB566F251942C8FFB1
1DFA50465919400C21CE4724D12E4EB47AA5F392BA927329DBCA28A78FC1DF2E
6FF27F4E4E3F8971D7BCB5F3FBF8F30C214A26E5E32E0E8CBC71BF20AE573BBB
163DD66E89F2C4E2B1A1532AE81C060146F755A1ABA3F1365FEA30B403DE7B22
76F43ED8EF5C8884274EC7FD5E57E10CCA8B09C0D3FAFE7F9122F1F259E133CC
DF1DC4CD54AFABF522EB5F04445F241CEA612AD474377E241B56E22412356E46
2A7E818027FFB057270EBFE11971EBE66E203F3FE3B48BCAB8E6DC985E41510C
37D22F2AB42B414279EFFEE416CF4B52A51B214D3F826575C60D5D4C4CDAF96C
2A8AE2BAA62C353B3B81BA71CF70354594D933D4A6BF0124981F4156244DDB78
9330619D5B18F788760796E2BEF60B790CE855AE62039F6E23923F4DD6309DD3
E47CF1FA44EF753246BA20720ACB9D861F331CA1739CE12AF94A7F3B9119027A
D8275C9A1B5B84158686025BBE2AFAB98AC164C9FF51091FD936D27583C816D0
73CD893B009FC205B27310E65C1ECB79F35C1F9BDF4D32E3AECF0E6F4EFE0D61
F15C34E770DBBFD4E49ECB5FAEE2F5EF559C1C677C648926B5CD10691FB92B0A
A345AE441E622CA540193951C15763CBFF6A344893E0DE5A50355054738D70B4
DC61569A9CB25021A1AB26F7C1DAC7BA99E4416C6B379D9487FDDB85B3F7617F
747B71E7FB759E402F8D559FC4AEC1D1CC40672A120DC0E9B50E4C603CDED14B
3FDF8501E76B80E3B89A010793F4E2895BDDB400214CEFC5AE111A59FCECEC01
F1ED67AAF9B8970DB7AF25E32F81C637405E3292C48DAAA023A3F56A2884B8E8
84D9F426AB774A7BF5190A15EE9BE0C7219D5A81242E3E6C280CF6E73BE0C3AB
BA0621D15EB0B957204CE3CF8764FDEFC911B5E379FF2A5191D8A7F3F060D1FE
3A087D7E9CD5DF45EB900CFCCEBCDA451565EECF00E5EB279F9AA6E2F0C79EBD
F0075A6941D1B39FA89EEA50FE11AC5FF0A590473E33BB560A349839F83EBB58
84FA406ACF07081EE23B0ADD014967C6F33BB023EDBA0192D2F7D229905B2783
CB6F2C6544FEBF93BB0FE0320DDFC90E3FC09BF16EE599334EF23956BECC8431
C1B68717673328AACCF795D5F5EFCCD9BFCA0968381F3AE06B1468849270A5C9
C75EAE740402DED7F97F1134D15742D94C8C8CB48E3C9B06E2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 8 /braceleftbig put
dup 9 /bracerightbig put
dup 48 /parenlefttp put
dup 49 /parenrighttp put
dup 64 /parenleftbt put
dup 65 /parenrightbt put
dup 66 /parenleftex put
dup 67 /parenrightex put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A2E41F936C4994C7CDD10544220CB441EBBE8B2E16CCC
5EFD929FF07EB6396A4A03E60F4ADA3F4EC9DBEC40634000A00FD02267EAF688
A36AAEEA8277CE7C6A00090A973B9EA365BA0898D52920374B86D191CC27E7BE
0538ACEEDA4D3AB2B3E7EF15157FB4518E5F5ABA29943100DC9776D886295D55
E47D1905E2BEB07286F13E92BEC6877051CB669FAED7B154E2F75F2F871443DD
52E44630B71E25E517C60BC448891030BAE0D3B1DF3EB13D89860528B5728B79
42163227EE715A2BE64BA35E7DA03560E06391BDE90E07BE10303AFE4F439520
72A70A9063F875956BFFBCC0160B36E216805858D6978EC4E634D39A9F7520C6
B86340B3D4B28FE4B522C5EFE292025E580B6EEFD0B5780847CF5CA17278E81A
E363E47D86E06271017804DE2809825F71550E1A12900455611BEE9DF61BAF5E
D8B4E4889135009421B5D033153C408ED9FDB75D6733A216197E8C75710F5CE3
B24B842B0FA2D6C22EFC92127372117F26639F5DB3E56536AD790E8C334346B0
FC0B8FB3666BBEF97057A67682520EF57FEF1C0177E13E302B9CFBECE8DF8899
1F9E8E852D08FFC54B818E484C28D592FA59D84D1CB78423D5BDB02D5BFEB552
DFE48B8DA91F410C4110D669D3D7FBBFDA984C5A64F3311E0026403B2C48D969
24E0936851B64FEAE2C6992BBD1F5F0C716FC7A9E4E84C25DDD0CF8BCC816AFB
1E0D4E596B9A2EEE56C744DF12802CB4B24C3C59453B113F2E499AA76810DB92
5C408B0269E18FCD09BC0FC3F374E74EE7737672FB72992BA5BF47977908E6BB
E1DA0FC3F9497013ED217D57E13814E8A4A7304CA1892F0E5A2CE72061759678
99DE74031C8A0BBA8D3BF7C3D6BFD91E72DDEB6A529475F0C1AE65780CDD0887
36E36868BF1873AC40DC81157ABBFE2B9FCEFAB36B1993C36E83F88E6EE6746D
30E1518B94C813AB60311B8D9EE77ACD7E603116B6EB6F1CD55938E4C90620DE
5FCC4C22F1D62BEC5076CBAF0BCE12C5C9D1CBAB8271E652ACE6EAB048D1AA1B
5CC3CE9878844185E0AEDFA53FD886CF61DBE49F9BC8679977469FFD5E52DFF7
365865F4E03811D2273A1C0C3B6789705F183D2F95F192A2575BB9284F2AF36A
3C97EC525DCA9E0F591FDF51B5BE3E856A5C6E28203049FF90A64F1C3FE99DB9
F0FE2686695A92AA587A4EB6B77713262B425291AFE5078172FB164440B1D6DC
54BBB1E0D528186AFBB06F9FA30EB78770AC6F2D8FFE0B2E1B9A28D9D2C422A5
C60D393CDCB5C68ADCDB243641E4D494E11376F176A8742040466C5166EEEEEB
FA3E4BBEA491026EF7BC668D08F9E9348438448DA515AC78D4584C5F912CBA1C
84227A9C0D84538C3BB51F00AAD01854FA7279BCDD7CAD6A32084EBDFA50F320
50EFADE219BA3AE5C91AED98CAE5C549354E5F4A09B900BB25239F905BA416B2
1C2B601AB6EB69E7BB75C0AE82CC74548C8F75C4B4F6CBE0D0D1AF84AC575023
86E93F101711BBEBD3AE87B2882FD20593790884926D46B488F1FCDAE565AA6B
7D5FCE8722D801922FCACA6A6696D3E770472F330E28220580D20C1011C26A5F
0A2C4506EFA59EBD19CD701DFFF4DAA5BEBA2C48A11650348428F13FC2661ACC
3533C9B883ACC0CE3E7D651D6BA339B707ABC5BAF42D23B5F6ECCF0A074C94A0
CA91F0573F625E7A53BCD901437A5FFF3C255C7932C7145AF2C20773ED1F340F
34F3AD561C22720C0C849104165E975C9EBE0A99792014C6BB04E79407801C04
94F4E887AC74B7A0D4FC288B3283F7C7EBB681B57E332C596821BA10FC6FEA45
C01B652052DA4BCC0DBFD8E4A8629B4BE626EB0591714E8A21A734D55CA4B681
DE96488302CE98CA8AB345345B7E5C9F6FAA26F55FED3920DBE0D567EE1136C8
D7F03360C248424C65947A851D451E529E23EB1169E1CECA5D2CD7852D586CD3
7D94BE068C1510D04F3E2A4CDAAAE288
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (date.dvi)
@start /Fa 170[38 2[35 3[38 1[32 2[18 1[38 5[38 65[{
 TeXBase1Encoding ReEncodeFont }7 53.134 /NimbusRomNo9L-Regu
rf /Fb 197[18 58[{}1 66.4176 /CMMI10 rf /Fd 207[21 48[{
 TeXBase1Encoding ReEncodeFont }1 41.511 /NimbusRomNo9L-Regu
rf /Fe 134[37 1[55 3[32 32 1[42 42 46 65 23 2[23 2[28
37 42 2[42 94[46 2[{ TeXBase1Encoding ReEncodeFont }15
83.022 /NimbusRomNo9L-MediItal rf /Ff 139[20 5[34 4[17
105[{ TeXBase1Encoding ReEncodeFont }3 61.4362 /NimbusRomNo9L-Medi
rf /Fg 148[18 107[{ TeXBase1Encoding ReEncodeFont }1
41.511 /NimbusRomNo9L-ReguItal rf /Fi 185[46 70[{}1 74.7198
/MSBM10 rf /Fj 183[57 52 71[{ TeXBase1Encoding ReEncodeFont }2
83.9849 /URWChanceryL-MediItal rf /Fk 145[37 4[29 29
37 37 9[50 58[75 75 31[58{}9 74.7198 /CMSY10 rf /Fl 138[42
25 1[33 1[42 1[42 1[21 2[21 3[33 3[37 12[50 1[54 2[58
1[71 50 2[29 58 58 5[54 6[25 8[37 49[{ TeXBase1Encoding ReEncodeFont }
20 74.7198 /NimbusRomNo9L-Medi rf /Fm 207[16 47[45{}2
58.1154 /CMSY10 rf /Fn 139[16 5[29 1[16 26 16 16 2[16
4[29 22[26 74[{ TeXBase1Encoding ReEncodeFont }9 58.1154
/NimbusRomNo9L-ReguItal rf /Fo 212[45 43[{}1 58.1154
/CMR10 rf /Fq 162[21 1[21 29[58 17[58 1[29 29 40[{}6
74.7198 /CMR10 rf /Fr 196[21 21 58[{}2 74.7198 /CMMI10
rf /Fs 134[33 4[21 1[29 1[37 37 1[54 21 33 1[21 2[21
3[37 37 12[42 37 46 2[54 4[33 2[54 4[46 46 65[{
 TeXBase1Encoding ReEncodeFont }20 74.7198 /NimbusRomNo9L-ReguItal
rf /Ft 158[47 97[{}1 74.7198 /StandardSymL rf /Fu 134[37
37 54 37 37 21 29 25 37 37 37 37 58 21 2[21 37 37 25
33 37 33 37 33 12[46 42 50 1[42 54 1[66 4[54 54 42 1[54
50 50 54 3[42 1[21 21 5[37 2[37 37 1[19 25 19 2[25 25
25 36[42 2[{ TeXBase1Encoding ReEncodeFont }49 74.7198
/NimbusRomNo9L-Regu rf /Fv 134[29 2[29 33 18 26 26 1[33
33 33 48 18 29 1[18 33 33 18 29 33 29 33 33 7[37 2[41
48 37 33 41 1[41 48 44 55 37 1[29 22 1[48 41 41 48 44
41 41 5[22 22 6[33 33 33 33 18 17 22 17 2[22 22 37[33
2[{ TeXBase1Encoding ReEncodeFont }54 66.4176 /NimbusRomNo9L-ReguItal
rf /Fw 135[42 5[37 1[46 42 1[69 23 3[46 2[37 3[42 10[60
1[55 1[60 5[55 2[32 3[55 2[55 60 15[42 2[21 46[{
 TeXBase1Encoding ReEncodeFont }19 83.022 /NimbusRomNo9L-Medi
rf /Fx 255[39{}1 49.8132 /CMSY10 rf /Fy 214[19 19 40[{}2
49.8132 /CMR10 rf /Fz 202[25 2[25 25 49[{
 TeXBase1Encoding ReEncodeFont }3 49.8132 /NimbusRomNo9L-Regu
rf /FA 26[85 229[{}1 119.551 /StandardSymL rf /FB 188[73
73 73 73 14[73 73 38[48 48 8[{}8 83.022 /CMEX10 rf /FC
207[17 46[17 48{}3 61.4362 /CMSY10 rf /FD 139[17 24 24
31 2[31 1[17 27 17 17 31 31 17 1[31 27 1[31 8[38 3[34
4[44 41 1[34 5[38 70[{ TeXBase1Encoding ReEncodeFont }21
61.4362 /NimbusRomNo9L-ReguItal rf /FE 185[54 70[{
 TeXBase1Encoding ReEncodeFont }1 93.3165 /URWChanceryL-MediItal
rf /FF 145[42 3[23 32 32 42 42 9[55 34[46 46 5[55 16[83
6[65 5[65 1[65 15[65 23 65{}17 83.022 /CMSY10 rf /FG
162[23 1[23 29[65 17[65 1[32 32 40[{}6 83.022 /CMR10
rf /FH 87[28 16[83 42 1[37 37 24[37 42 42 60 42 42 23
32 28 42 42 42 42 65 23 42 23 23 42 42 28 37 42 37 42
37 3[28 1[28 2[60 78 60 60 51 46 55 60 46 60 60 74 51
2[28 60 60 46 51 60 55 55 60 5[23 23 42 42 42 42 42 42
42 42 42 42 23 21 28 21 2[28 28 28 35[46 46 2[{
 TeXBase1Encoding ReEncodeFont }76 83.022 /NimbusRomNo9L-Regu
rf /FI 87[22 15[22 66 33 1[29 29 24[29 33 33 48 33 33
18 26 22 33 33 33 33 52 18 33 18 18 33 33 22 29 33 29
33 29 3[22 1[22 41 48 48 63 48 48 41 37 44 48 37 48 48
59 41 48 26 22 48 48 37 41 48 44 44 48 6[18 33 33 33
33 33 33 33 33 33 33 18 17 22 17 2[22 22 22 1[55 1[33
32[37 2[{ TeXBase1Encoding ReEncodeFont }81 66.4176 /NimbusRomNo9L-Regu
rf /FJ 193[65 2[23 23 58[{}3 83.022 /CMMI10 rf /FK 26[59
120[46 9[46 52 97[{}4 83.022 /StandardSymL rf /FL 145[25
36 1[22 14 14 105[{ TeXBase1Encoding ReEncodeFont }5
49.8132 /NimbusRomNo9L-ReguItal rf /FN 194[48 17[48 1[24
24 40[{}4 61.4362 /CMR10 rf /FO 171[38 6[55 19[31 31
1[31 31 31 31 31 31 31 48[{ TeXBase1Encoding ReEncodeFont }11
61.4362 /NimbusRomNo9L-Regu rf /FQ 185[51 3[55 66[{}2
83.022 /MSBM10 rf /FR 87[28 16[74 42 27[32 37 37 55 37
42 23 32 32 42 42 42 42 60 23 37 23 23 42 42 23 37 42
37 42 42 3[32 1[32 2[51 69 51 1[46 42 51 1[51 60 55 69
46 1[37 28 60 60 51 51 60 55 51 51 5[28 28 3[42 42 1[42
42 42 42 23 21 28 21 2[28 28 28 65 35[42 2[{
 TeXBase1Encoding ReEncodeFont }69 83.022 /NimbusRomNo9L-ReguItal
rf /FS 134[46 2[46 46 25 36 30 1[46 46 46 71 25 1[25
25 46 46 30 41 1[41 1[41 8[66 2[66 56 51 2[51 9[51 56
66 61 1[66 12[46 1[46 46 46 1[23 1[23 5[71 38[{
 TeXBase1Encoding ReEncodeFont }36 91.3242 /NimbusRomNo9L-Regu
rf /FT 169[72 72 1[55 11[72 55 2[66 1[72 65[{
 TeXBase1Encoding ReEncodeFont }7 99.6264 /NimbusRomNo9L-Regu
rf /FU 166[58 3[58 49 44 53 58 1[58 58 71 49 2[27 58
58 44 49 58 53 53 58 65[{ TeXBase1Encoding ReEncodeFont }19
79.701 /NimbusRomNo9L-Regu rf /FV 198[29 29 29 29 29
29 29 29 29 29 48[{ TeXBase1Encoding ReEncodeFont }10
58.1154 /NimbusRomNo9L-Regu rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 4063 -307 a FV(1)-172 -58 y FT(F)t
FU(O)t(R)t(M)t(A)t(L)34 b FT(V)t FU(E)t(R)t(I)t(FI)t(C)t(A)-5
b(T)5 b(I)t(O)g(N)34 b(O)t(F)d FT(S)t FU(E)t(Q)s(U)t(E)t(N)t(T)t(I)t(A)
t(L)k FT(G)t FU(A)t(L)t(O)t(I)t(S)e FT(F)t FU(I)t(E)t(L)t(D)g
FT(A)t FU(R)t(I)t(T)t(H)t(M)t(E)t(T)t(I)t(C)j FT(C)t
FU(I)t(R)t(C)t(U)t(I)t(T)t(S)f FT(U)t FU(S)t(I)t(N)t(G)e
FT(A)t FU(L)t(G)t(E)t(B)t(R)t(A)t(I)t(C)1706 59 y FT(G)t
FU(E)t(O)t(M)t(E)t(T)t(R)o(Y)1716 255 y FS(Xiaojun)e(Sun)1497
366 y(A)h(Ph.D)f(Thesis)g(Proposal)909 478 y(Electrical)g(&)h(Computer)
g(Engineering,)e(Uni)n(v)o(ersity)h(of)h(Utah)1589 589
y(F)o(all)g(Semester)e(2014)-109 1020 y FR(Abstr)o(act)42
b(\226)g(Sequential)e(Galois)i(\002eld)f(\()p FQ(F)1219
1043 y FO(2)1250 1026 y FL(k)1281 1020 y FR(\))h(arithmetic)g(cir)m
(cuits)h(tak)o(e)f(k)q(-bit)g(inputs)f(and)g(pr)l(oduce)g(a)i(k)q(-bit)
f(r)m(esult,)g(after)g(k)q(-cloc)n(k)-192 1130 y(cycles)28
b(of)g(oper)o(ation.)e(F)-9 b(ormal)28 b(veri\002cation)e(of)i
(sequential)f(arithmetic)g(cir)m(cuits)i(with)f(lar)m(g)o(e)g(datapath)
d(size)k(is)g(be)n(yond)d(the)i(capabilities)e(of)-192
1240 y(contempor)o(ary)g(veri\002cation)h(tec)o(hniques.)g(T)-8
b(o)29 b(addr)m(ess)f(this)h(pr)l(oblem,)f(this)g(paper)g(describes)g
(a)h(veri\002cation)e(method)g(based)h(on)g(alg)o(ebr)o(aic)-192
1350 y(g)o(eometry)21 b(that:)f(i\))i(implicitly)f(unr)l(olls)h(the)f
(sequential)f(arithmetic)h(cir)m(cuit)g(o)o(ver)h(multiple)f(\(k)q(\))g
(cloc)n(k-cycles;)f(and)h(ii\))g(r)m(epr)m(esents)h(the)f(function)-192
1460 y(computed)30 b(by)h(the)g(state-r)m(e)m(gister)o(s)h(of)f(the)g
(cir)m(cuit,)h(canonically)-5 b(,)29 b(as)j(a)f(multi-variate)f(wor)m
(d-le)o(vel)h(polynomial)e(o)o(ver)j FQ(F)3499 1483 y
FO(2)3530 1466 y FL(k)3561 1460 y FR(.)f(Our)h(appr)l(oac)o(h)-192
1570 y(employs)37 b(the)g(Gr)356 1571 y(\250)349 1570
y(obner)f(basis)h(theory)g(o)o(ver)g(a)g(speci\002c)g(elimination)f
(ideal.)g(Mor)m(eo)o(ver)-9 b(,)37 b(an)f(ef)o(\002cient)g
(implementation)f(is)j(described)e(to)-192 1680 y(identify)e(the)h(k)q
(-cycle)g(computation)d(performed)i(by)g(the)h(cir)m(cuit)g(at)g(wor)m
(d-le)o(vel.)e(W)-8 b(e)36 b(demonstr)o(ate)d(the)i(feasibility)g(of)g
(our)f(appr)l(oac)o(h)f(by)-192 1790 y(verifying)28 b(up)g(to)h
(100-bit)e(sequential)g(Galois)i(\002eld)f(multiplier)o(s,)g(wher)m
(eas)h(con)m(ventional)d(tec)o(hniques)h(fail)h(be)n(yond)f(23-bit)g
(cir)m(cuits.)1626 2020 y FH(I)t(.)45 b(I)t FI(N)t(T)t(R)q(O)t(D)t(U)t
(C)t(T)t(I)t(O)t(N)-109 2168 y FH(Galois)d(\002eld)h(\(GF\))f
(arithmetic)f(is)i(part)f(of)f(modern)g(abstract)h(algebra)f(about)g
(computations)f(on)h(modulo-based)e(\002elds)k(and)e(\002nds)-192
2278 y(application)26 b(in)h(areas)h(such)f(as)h(cryptography)-5
b(,)22 b(error)27 b(control)f(coding,)f(VLSI)j(testing,)f(etc.)g(In)g
(most)h(hardw)o(are)e(applications,)g(\002elds)h(of)g(the)-192
2388 y(type)h FQ(F)31 2411 y FO(2)62 2394 y FL(k)122
2388 y FH(are)h(widely)f(chosen.)f(Such)h FR(binary)g
FH(GFs)i(are)e FR(k)q FH(-dimensional)f(e)o(xtensions)h(of)g(the)h
(base)g(\002eld)f FQ(F)3040 2400 y FO(2)3075 2388 y FH(;)h(this)g(allo)
n(ws)g(for)f(the)h(design)f(of)-192 2498 y(ef)n(\002cient)23
b(\(AND-XOR\))g(arithmetic)g(architectures)f(and)h(algorithms)g(for)g
(hardw)o(are)f(design.)g(Due)i(to)g(their)f(deplo)o(yment)e(in)j
(communications)-192 2608 y(and)i(security-related)f(applications,)g
(there)h(is)i(a)f(critical)g(need)f(to)h FR(formally)g(verify)g
FH(the)g(correctness)f(of)g(hardw)o(are)g(implementations)e(of)j(GF)
-192 2718 y(arithmetic.)e(In)g(most)h(applications,)f(ho)n(we)n(v)o(er)
m(,)e(the)j(datapath)f(size)h(\(bit-v)o(ector)e(operand)g(size\))i
FR(k)i FH(is)e(v)o(ery)f(lar)o(ge.)g(Most)h(con)m(v)o(entional)d
(formal)-192 2828 y(v)o(eri\002cation)k(methods)g(are)i(unable)e(to)i
(cope)f(with)g(the)h(lar)o(ge)e(size)j(and)d(comple)o(xity)g(of)h(GF)h
(circuits.)-109 2940 y(GF)e(arithmetic)e(circuits)i(o)o(v)o(er)d
FQ(F)881 2963 y FO(2)912 2946 y FL(k)970 2940 y FH(tak)o(e)i
FR(k)q FH(-bit)h(v)o(ectors)e(as)i(inputs)f(and)f(produce)f
FR(k)q FH(-bit)j(outputs.)e(F)o(or)h(e)o(xample,)e(a)j(GF)g(modulo)d
(multiplier)-192 3067 y(computes)33 b FR(R)22 b FG(=)f
FR(A)14 b FF(\002)g FR(B)35 b FG(\()p FH(mod)27 b FR(P)p
FG(\()p FR(x)p FG(\)\))p FH(,)35 b(where:)f(i\))h FR(A)21
b FG(=)g FR(a)1545 3084 y FD(s)p FN(\()p FO(0)p FN(\))1665
3067 y FG(+)14 b FR(a)1786 3084 y FD(s)p FN(\()p FO(1)p
FN(\))1891 3067 y FK(a)g FG(+)g FF(\001)9 b(\001)g(\001)14
b FG(+)g FR(a)2258 3084 y FD(s)p FN(\()p FD(k)q FC(\000)p
FO(1)p FN(\))2439 3067 y FK(a)2491 3037 y FD(k)q FC(\000)p
FO(1)2624 3067 y FG(=)2710 3073 y FK(\345)2769 3033 y
FD(k)q FC(\000)p FO(1)2769 3092 y FD(i)p FN(=)p FO(0)2890
3067 y FR(a)2932 3084 y FD(s)p FN(\()p FD(i)p FN(\))3024
3067 y FK(a)3076 3037 y FD(i)3097 3067 y FH(,)35 b FR(B)22
b FG(=)3312 3073 y FK(\345)3371 3033 y FD(k)q FC(\000)p
FO(1)3371 3092 y FD(i)p FN(=)p FO(0)3491 3067 y FR(b)3533
3084 y FD(s)p FN(\()p FD(i)p FN(\))3626 3067 y FK(a)3678
3037 y FD(i)3734 3067 y FH(denote)33 b(the)-192 3203
y FR(k)q FH(-bit)26 b(inputs,)f FR(R)17 b FG(=)388 3209
y FK(\345)447 3169 y FD(k)q FC(\000)p FO(1)447 3228 y
FD(i)p FN(=)p FO(0)567 3203 y FR(r)599 3220 y FD(s)p
FN(\()p FD(i)p FN(\))692 3203 y FK(a)744 3173 y FD(i)792
3203 y FH(is)27 b(the)f(output,)e(and)h FR(a)1449 3220
y FD(s)p FN(\()p FD(i)p FN(\))1542 3203 y FJ(;)9 b FR(b)1616
3220 y FD(s)p FN(\()p FD(i)p FN(\))1708 3203 y FJ(;)g
FR(r)1772 3220 y FD(s)p FN(\()p FD(i)p FN(\))1883 3203
y FF(2)17 b FQ(F)2006 3215 y FO(2)2041 3203 y FH(;)26
b(ii\))g FR(P)p FG(\()p FR(x)p FG(\))h FH(is)g(the)e(gi)n(v)o(en)g
(primiti)n(v)o(e)f(polynomial)g(used)i(to)g(construct)-192
3325 y FQ(F)-141 3348 y FO(2)-110 3330 y FL(k)-79 3325
y FH(;)36 b(and)f(iii\))g FR(P)p FG(\()p FK(a)p FG(\))23
b(=)f FH(0,)35 b(i.e.)g FK(a)i FH(is)f(the)f(primiti)n(v)o(e)g(element)
f(of)h(the)h(\002eld.)f(In)g(the)h(abo)o(v)o(e,)d(the)i(elements)g(are)
h(represented)d(in)j FR(standar)m(d)-192 3435 y(basis)g(notation)e
FH(\(denoted)f(by)i(subscript)g(\223s\224)h(on)f(the)h(bits\).)f(As)h
(the)g(datapath)e(size)i FR(k)h FH(increases,)e(combinational)f(GF)i
(designs)f(become)-192 3545 y(prohibiti)n(v)o(ely)26
b(lar)o(ge;)h(sequential)h(GF)h(circuits)g(are)f(therefore)f
(desirable.)-109 3657 y(Sequential)c(GF)i(circuits)f(operate)f(as)i
(follo)n(ws:)f FR(k)q FH(-bit)g(input)g(operands)e(are)i(loaded)f(into)
h FR(k)q FH(-bit)h(state)g(re)o(gisters)e(\(\003ip-\003ops\),)g(and)h
(the)g(circuit)-192 3767 y(is)31 b(e)o(x)o(ecuted)d(for)h
FR(k)j FH(clock-c)o(ycles;)c(after)i(which)g(the)g FR(k)q
FH(-bit)g(result)g(is)h(a)n(v)n(ailable)e(in)h(the)g(output)f(re)o
(gisters.)g(Data)i(representation)c(and)j(circuit)-192
3898 y(design)c(for)h(sequential)f(GF)h(circuits)g(is)h(mostly)f(based)
f(on)h FR(normal)f(basis)h FH([1)o(].)g(Data)g(is)h(represented)d(as)j
FR(A)17 b FG(=)h FR(a)3187 3915 y FD(n)p FN(\()p FO(0)p
FN(\))3299 3898 y FK(b)11 b FG(+)g FR(a)3474 3915 y FD(n)p
FN(\()p FO(1)p FN(\))3586 3898 y FK(b)3632 3867 y FO(2)3677
3898 y FG(+)g FR(a)3795 3915 y FD(n)p FN(\()p FO(2)p
FN(\))3907 3898 y FK(b)3953 3867 y FO(2)3984 3845 y Fz(2)4027
3898 y FG(+)-192 4044 y FF(\001)e(\001)g(\001)k FG(+)g
FR(a)28 4061 y FD(n)p FN(\()p FD(k)q FC(\000)p FO(1)p
FN(\))217 4044 y FK(b)263 4014 y FO(2)294 3991 y FL(k)q
Fx(\000)p Fz(1)388 4044 y FH(,)33 b(where)f FK(b)20 b
FF(2)h FQ(F)871 4067 y FO(2)902 4049 y FL(k)966 4044
y FH(is)34 b(the)e FR(normal)g(element)p FH(,)h(and)f
FF(f)p FK(b)p FJ(;)9 b FK(b)2094 4014 y FO(2)2127 4044
y FJ(;)g(:)g(:)g(:)h(;)f FK(b)2334 4014 y FO(2)2365 3991
y FL(i)2387 4044 y FJ(;)g(:)g(:)g(:)h(;)f FK(b)2594 4014
y FO(2)2625 3991 y FL(k)q Fx(\000)p Fz(1)2719 4044 y
FF(g)33 b FH(forms)f(the)g(normal)g(basis.)h(Standard)e(and)-192
4165 y(normal)21 b(basis)i(representations)d(can)i(be)g(deri)n(v)o(ed)f
(from)g(each)h(other)m(,)f(i.e.)h FK(b)g FH(can)g(be)h(deri)n(v)o(ed)d
(from)h FK(a)i FH(and)f(vice-v)o(ersa.)e(It)j(has)f(been)g(sho)n(wn)f
(that)-192 4275 y(architectures)28 b(for)h(multiplication)f(and)h
(squaring)f(can)h(be)h(ef)n(\002ciently)f(designed)f(using)h(normal)f
(bases)i([2)o(])g([3)o(])g([1)o(])g(as)g(sequential)f(circuits.)-192
4362 y FO(1)-157 4392 y FH(.)-192 4554 y Fw(Example)i(I.1.)41
b FR(F)-9 b(or)28 b(a)p FJ(;)9 b FR(b)18 b FF(2)h FQ(F)713
4577 y FO(2)744 4559 y FL(k)775 4554 y FJ(;)9 b FG(\()p
FR(a)j FG(+)g FR(b)p FG(\))1044 4524 y FO(2)1095 4554
y FG(=)18 b FR(a)1220 4524 y FO(2)1266 4554 y FG(+)12
b FR(b)1385 4524 y FO(2)1418 4554 y FR(.)29 b(Applying)e(this)i(rule)g
(for)g(element)f(squaring:)1264 4760 y(B)18 b FG(=\()p
FR(b)1472 4772 y FO(0)1506 4760 y FK(b)12 b FG(+)g FR(b)1683
4772 y FO(1)1716 4760 y FK(b)1762 4725 y FO(2)1808 4760
y FG(+)g FR(b)1927 4772 y FO(2)1960 4760 y FK(b)2006
4725 y FO(4)2052 4760 y FG(+)g FF(\001)d(\001)g(\001)i
FG(+)h FR(b)2346 4773 y FD(k)q FC(\000)p FO(1)2456 4760
y FK(b)2502 4725 y FO(2)2533 4703 y FL(k)q Fx(\000)p
Fz(1)2627 4760 y FG(\))1229 4945 y FR(B)1280 4910 y FO(2)1333
4945 y FG(=)p FR(b)1440 4910 y FO(2)1440 4965 y(0)1474
4945 y FK(b)1520 4910 y FO(2)1566 4945 y FG(+)g FR(b)1685
4910 y FO(2)1685 4965 y(1)1719 4945 y FK(b)1765 4910
y FO(4)1810 4945 y FG(+)g FR(b)1929 4910 y FO(2)1929
4965 y(2)1963 4945 y FK(b)2009 4910 y FO(8)2055 4945
y FG(+)g FF(\001)d(\001)g(\001)i FG(+)h FR(b)2349 4910
y FO(2)2349 4966 y FD(k)q FC(\000)p FO(1)2458 4945 y
FK(b)2504 4910 y FO(2)2535 4888 y FL(k)1333 5129 y FG(=)p
FR(b)1440 5142 y FD(k)q FC(\000)p FO(1)1550 5129 y FK(b)g
FG(+)g FR(b)1727 5141 y FO(0)1760 5129 y FK(b)1806 5095
y FO(2)1852 5129 y FG(+)g FR(b)1971 5141 y FO(1)2004
5129 y FK(b)2050 5095 y FO(4)2096 5129 y FG(+)g FF(\001)d(\001)g(\001)i
FG(+)h FR(b)2390 5142 y FD(k)q FC(\000)p FO(2)2500 5129
y FK(b)2546 5095 y FO(2)2577 5073 y FL(k)q Fx(\000)p
Fz(1)-192 5350 y FR(as)29 b FK(b)-43 5320 y FO(2)-12
5298 y FL(k)37 5350 y FG(=)18 b FK(b)28 b FR(due)g(to)h(F)-6
b(ermat')m(s)28 b(little)h(theor)m(em,)f(and)g(b)1457
5320 y FO(2)1457 5373 y FD(i)1509 5350 y FG(=)18 b FR(b)1634
5362 y FD(i)1655 5350 y FR(.)-126 5510 y Fz(1)-97 5534
y FI(In)k(f)o(act,)i(some)e(\(not)g(all\))h(\002nite)h(\002elds)e(ha)o
(v)o(e)h(an)f Fv(optimal)i(normal)f(basis)p FI(,)f(where)g(the)h
(combinational)j(logic)e(part)f(of)f(the)g(sequential)j(circuit)g
(contains)f(a)e(minimum)g(number)-192 5621 y(of)i(2-input)h(AND/XOR)e
(gates.)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop -192 -307 a FV(2)-109 -58 y FH(The)32
b(abo)o(v)o(e)e(e)o(xample)g(sho)n(ws)i(that)g(squaring)e(of)i
(elements)f(represented)g(in)h(normal)e(bases)i(can)g(be)g(implemented)
e(simply)h(by)h(a)g(c)o(yclic)-192 52 y(right-shift)23
b(operation.)f(Ho)n(we)n(v)o(er)m(,)g(multiplication)h(of)h(tw)o(o)h
(elements)f(in)g(normal)f(basis)i(is)g(still)h(a)e(complicated)f
(operation)f(\227)j(and)f(its)h(design)-192 162 y(and)h(v)o
(eri\002cation)g(is)i(still)g(challenging.)d(Recent)i(literature)f(has)
h(addressed)f(formal)g(equi)n(v)n(alence)f(proofs)h(of)g
FR(combinational)f FH(GF)i(arithmetic)-192 272 y(circuits)f([4)o(])h
([5)o(])f([6)o(].)g(My)g(research)f(aims)i(to)f(addresses)g(v)o
(eri\002cation)e(of)i(sequential)g(GF)g(circuits,)g(which)g(has)g(not)g
(been)f(addressed)g(before.)-109 382 y FR(Pr)l(oblem)38
b(Statement:)g FH(W)-7 b(e)39 b(are)g(gi)n(v)o(en:)e(i\))i(the)g
(Galois)g(\002eld)g FQ(F)1863 405 y FO(2)1894 387 y FL(k)1948
382 y FG(=)24 b FQ(F)2088 394 y FO(2)2123 382 y FG([)p
FR(X)8 b FG(])36 b(\()p FH(mod)26 b FR(P)p FG(\()p FR(X)8
b FG(\)\))p FJ(;)h FR(P)p FG(\()p FK(a)p FG(\))25 b(=)f
FH(0,)38 b(along)g(with)h(the)f FR(normal)g(basis)-192
517 y(r)m(epr)m(esentation)p FH(,)23 b(i.e.)i FK(b)g
FH(is)h(also)f(kno)n(wn;)f(ii\))h(a)g(w)o(ord-le)n(v)o(el)e
(speci\002cation)h(polynomial)f FR(R)17 b FG(=)f FE(F)k
FG(\()p FR(A)p FJ(;)9 b FR(B)p FG(\))37 b(\()p FH(mod)26
b FR(P)p FG(\()p FR(X)8 b FG(\)\))p FH(;)26 b(where)e
FR(A)16 b FG(=)3731 523 y FK(\345)3790 482 y FD(k)q FC(\000)p
FO(1)3790 542 y FD(i)p FN(=)p FO(0)3910 517 y FR(a)3952
529 y FD(i)3973 517 y FK(b)4019 487 y FO(2)4050 464 y
FL(i)4071 517 y FH(,)-192 655 y FR(B)k FG(=)-37 661 y
FK(\345)22 620 y FD(k)q FC(\000)p FO(1)22 680 y FD(i)p
FN(=)p FO(0)142 655 y FR(b)184 667 y FD(i)205 655 y FK(b)251
625 y FO(2)282 602 y FL(i)303 655 y FH(,)32 b FR(R)19
b FG(=)511 661 y FK(\345)570 620 y FD(k)q FC(\000)p FO(1)570
680 y FD(i)p FN(=)p FO(0)690 655 y FR(r)722 667 y FD(i)744
655 y FK(b)790 625 y FO(2)821 602 y FL(i)842 655 y FH(,)31
b FR(a)936 667 y FD(i)957 655 y FJ(;)9 b FR(b)1031 667
y FD(i)1052 655 y FJ(;)g FR(r)1116 667 y FD(i)1158 655
y FF(2)20 b FQ(F)1284 667 y FO(2)1318 655 y FH(,)32 b(and)e(iii\))h(a)h
(sequential)e(circuit)h(\()p FR(S)q FH(\))f(implementation)f(of)h(the)h
(polynomial)e(computation.)-192 765 y(Our)f(objecti)n(v)o(e)f(is)j(to)e
(pro)o(v)o(e)f(or)h(dispro)o(v)o(e)f(that)h FR(S)h FH(is)h(a)f
FR(k)q FH(-c)o(ycle)f(implementation)e(of)i FR(R)p FH(.)-109
874 y FR(Appr)l(oac)o(h)h(&)i(Contrib)n(utions:)f FH(The)h(sequential)f
(GF)i(arithmetic)e(circuit)h(can)g(be)g(vie)n(wed)f(as)i(a)f
FR(r)m(estricted)h FH(Mealy)f(\002nite)g(state)h(machine)-192
984 y(\(FSM\),)c(as)g(sho)n(wn)f(in)h(Fig.)g(1.)g(The)g(FSM)g(contains)
g(no)f(primary)f(inputs)i(or)f(outputs.)g(The)h(operands)e(are)i
(loaded)e(into)i(state)h(re)o(gisters)e FR(A)p FJ(;)9
b FR(B)-192 1094 y FH(\(as)29 b(initial)g(states\),)g(and)f(after)g
FR(k)q FH(-clock)g(c)o(ycles)g(of)g(operation,)e(the)j(result)f
FR(R)19 b FG(=)f FE(F)h FG(\()p FR(A)p FJ(;)9 b FR(B)p
FG(\))30 b FH(is)f(stored)f(in)h(the)f FR(R)h FH(re)o(gister)-5
b(.)1110 2062 y @beginspecial 0 @llx 0 @lly 360 @urx
179 @ury 2016 @rwi @setspecial
%%BeginDocument: ./gf_seq_model.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: gf_seq_model.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5d
%%CreationDate: Thu Sep 18 16:23:11 2014
%%BoundingBox: 0 0 360 179
%Magnification: 1.0000
%%EndComments
%%BeginProlog
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

/pageheader {
save
newpath 0 179 moveto 0 0 lineto 360 0 lineto 360 179 lineto closepath clip newpath
-126.2 236.7 translate
1 -1 scale
$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
} bind def
/pagefooter {
$F2psEnd
restore
} bind def
%%EndProlog
pageheader
%
% Fig objects follow
%
% 
% here starts figure with depth 51
% Arc
7.500 slw
0 slc
n 3843.0 2403.0 286.0 -90.2003 90.2010 arc
gs col7 1.00 shd ef gr gs col0 s gr

% Polyline
0 slj
n 3842 2117 m 3557 2117 l 3557 2688 l
 3842 2688 l gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 3271 2260 m
 3557 2260 l gs col-1 s gr 
% Polyline
n 3271 2545 m
 3557 2545 l gs col-1 s gr 
% Polyline
n 4128 2402 m
 4414 2402 l gs col-1 s gr 
% Polyline
15.000 slw
n 6660 1170 m 6840 1170 l 6840 1710 l 6660 1710 l
 cp gs col0 s gr 
% Polyline
n 6660 1890 m 6840 1890 l 6840 2430 l 6660 2430 l
 cp gs col0 s gr 
% Polyline
n 6660 2610 m 6840 2610 l 6840 3150 l 6660 3150 l
 cp gs col0 s gr 
% Polyline
n 3015 1260 m 6030 1260 l 6030 3150 l 3015 3150 l
 cp gs col0 s gr 
% Polyline
gs  clippath
6453 2212 m 6630 2212 l 6630 2107 l 6453 2107 l 6453 2107 l 6603 2160 l 6453 2212 l cp
eoclip
n 6030 2160 m
 6615 2160 l gs col0 s gr gr

% arrowhead
7.500 slw
n 6453 2212 m 6603 2160 l 6453 2107 l 6483 2160 l 6453 2212 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
gs  clippath
6453 2932 m 6630 2932 l 6630 2827 l 6453 2827 l 6453 2827 l 6603 2880 l 6453 2932 l cp
eoclip
n 6030 2880 m
 6615 2880 l gs col0 s gr gr

% arrowhead
7.500 slw
n 6453 2932 m 6603 2880 l 6453 2827 l 6483 2880 l 6453 2932 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
gs  clippath
6498 1492 m 6675 1492 l 6675 1387 l 6498 1387 l 6498 1387 l 6648 1440 l 6498 1492 l cp
eoclip
n 6075 1440 m
 6660 1440 l gs col0 s gr gr

% arrowhead
7.500 slw
n 6498 1492 m 6648 1440 l 6498 1387 l 6528 1440 l 6498 1492 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
gs  clippath
2853 2887 m 3030 2887 l 3030 2782 l 2853 2782 l 2853 2782 l 3003 2835 l 2853 2887 l cp
eoclip
n 6840 2880 m 7425 2880 l 7425 3510 l 2250 3510 l 2250 2835 l
 3015 2835 l gs col0 s gr gr

% arrowhead
7.500 slw
n 2853 2887 m 3003 2835 l 2853 2782 l 2883 2835 l 2853 2887 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
gs  clippath
2808 2572 m 2985 2572 l 2985 2467 l 2808 2467 l 2808 2467 l 2958 2520 l 2808 2572 l cp
eoclip
n 6840 2205 m 7695 2205 l 7695 3735 l 2025 3735 l 2025 2520 l
 2970 2520 l gs col0 s gr gr

% arrowhead
7.500 slw
n 2808 2572 m 2958 2520 l 2808 2467 l 2838 2520 l 2808 2572 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
15.000 slw
gs  clippath
2853 1807 m 3030 1807 l 3030 1702 l 2853 1702 l 2853 1702 l 3003 1755 l 2853 1807 l cp
eoclip
n 6840 1440 m 7650 1440 l 7650 945 l 2295 945 l 2295 1755 l
 3015 1755 l gs col0 s gr gr

% arrowhead
7.500 slw
n 2853 1807 m 3003 1755 l 2853 1702 l 2883 1755 l 2853 1807 l 
 cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 285.75 scf sf
6930 1215 m
gs 1 -1 sc (A) col0 sh gr
/Times-Roman ff 285.75 scf sf
6930 2025 m
gs 1 -1 sc (B) col0 sh gr
/Times-Roman ff 285.75 scf sf
6975 2700 m
gs 1 -1 sc (R) col0 sh gr
/Times-Roman ff 285.75 scf sf
3060 1710 m
gs 1 -1 sc (Combinational) col0 sh gr
/Times-Roman ff 285.75 scf sf
5040 1710 m
gs 1 -1 sc (Logic) col0 sh gr
/Times-Roman ff 317.50 scf sf
6165 1260 m
gs 1 -1 sc (A') col0 sh gr
/Times-Roman ff 317.50 scf sf
6165 2070 m
gs 1 -1 sc (B') col0 sh gr
/Times-Roman ff 317.50 scf sf
6210 2745 m
gs 1 -1 sc (R') col0 sh gr
% here ends figure;
% 
% here starts figure with depth 1
% Polyline
0 slj
0 slc
0.000 slw
n 4692 2270 m 5407 2556 l 4692 2842 l
 cp gs col7 1.00 shd ef gr 
% Arc
7.500 slw
n 4335.8 2556.6 357.8 -53.2161 53.1081 arc
gs col-1 s gr

% Arc
n 4478.6 2556.6 357.3 -53.3285 53.2206 arc
gs col-1 s gr

% Arc
n 4859.6 2889.9 642.2 -105.1309 -31.3860 arc
gs col7 1.00 shd ef gr gs col-1 s gr

% Arc
n 4859.6 2223.2 641.1 105.1572 31.3001 arcn
gs col7 1.00 shd ef gr gs col-1 s gr

% Polyline
n 5407 2556 m
 5693 2556 l gs col-1 s gr 
% Polyline
n 4478 2699 m
 4807 2699 l gs col-1 s gr 
% Polyline
n 4478 2413 m
 4807 2413 l gs col-1 s gr 
% here ends figure;
pagefooter
showpage
%%Trailer
%EOF

%%EndDocument
 @endspecial -192 2232 a(Fig.)22 b(1:)g Fu(A)e(typical)g(normal)h
(basis)g(GF)e(sequential)j(circuit)e(model.)g Fs(A)14
b Fq(=)g(\()p Fs(a)1821 2245 y FV(0)1854 2232 y Fr(;)8
b(:)g(:)g(:)g(;)g Fs(a)2036 2246 y Fn(k)q Fm(\000)p FV(1)2142
2232 y Fq(\))20 b Fu(and)h(similarly)f Fs(B)p Fr(;)8
b Fs(R)19 b Fu(are)h Fs(k)q Fu(-bit)h(re)o(gisters;)f
Fs(A)3354 2205 y Fm(0)3374 2232 y Fr(;)8 b Fs(B)3449
2205 y Fm(0)3468 2232 y Fr(;)g Fs(R)3543 2205 y Fm(0)3583
2232 y Fu(denote)22 b(ne)o(xt-state)-192 2329 y(inputs.)-109
2525 y FH(A)40 b(straight-forw)o(ard)d(approach)g(to)j(v)o(erify)e
(such)h(a)h(sequential)f(circuit)g(may)g(consist)g(of)h(unrolling)d
(the)j(circuit)f(for)g FR(k)i FH(time-frames,)-192 2635
y(and)29 b(performing)f(a)i(\(combinational\))d(equi)n(v)n(alence)h
(check)h(between)g(the)h(unrolled)e(machine)h(and)h(the)g
(speci\002cation)f(polynomial.)e(Such)j(a)-192 2745 y(technique)25
b(is)j(grossly)f(inef)n(\002cient)f(for)g(lar)o(ge)g(circuits.)h
(Therefore,)e(we)i(propose)f(a)h(method)f(that)h(implicitly)f
(\(symbolically\))f(represents)h(the)-192 2855 y(unrolled)18
b(computation,)e FR(canonically)-5 b(,)18 b(as)h(a)h(wor)m(d-le)o(vel)e
(multi-variate)h(polynomial.)e FH(W)-7 b(e)20 b(sho)n(w)f(that)h(the)f
FR(k)q FH(-c)o(ycle)g(polynomial)e(representation)-192
2965 y(can)41 b(be)g(deri)n(v)o(ed)e FR(iter)o(atively)i
FH(by)f(performing)e(a)k(sequence)d(of)i(Gr)7 b(\250)-35
b(obner)39 b(basis)j(\()p FR(GB)p FH(\))e(computations)f(of)i(the)g
(ideal)g(generated)e(by)h(the)-192 3075 y(polynomials)d(corresponding)f
(to)j(the)g(circuit.)f(The)h(approach)e(requires)h(the)h(use)g(of)g(a)g
(speci\002c)h(elimination)d(term)i(order)f(for)g(the)h
FR(GB)-192 3185 y FH(computation,)i(based)j(on)f(the)h(circuit')-5
b(s)44 b(topology)-5 b(.)41 b(Once)i(the)h(canonical)f(polynomial)e(is)
k(deri)n(v)o(ed,)d(it)i(can)g(be)g(check)o(ed)e(against)h(the)-192
3295 y(speci\002cation)28 b(polynomial)e(for)i(v)o(eri\002cation.)-109
3405 y(Computing)k(Gr)7 b(\250)-35 b(obner)32 b(bases)j(with)f
(elimination)f(orders)g(is)i(infeasible)e(for)h(lar)o(ge)f(circuits.)g
(T)-7 b(o)35 b(o)o(v)o(ercome)c(this)k(comple)o(xity)-5
b(,)31 b(we)j(dra)o(w)-192 3515 y(inspirations)29 b(from)g([6)o(],)h
(and)g(e)o(xploit)f(the)h(binomial)f(e)o(xpansion)f(o)o(v)o(er)h(GFs)i
(to)f(engineer)f(a)h(ne)n(w)-5 b(,)30 b(ef)n(\002cient)f
(implementation)f(to)j(deri)n(v)o(e)d(the)-192 3625 y(w)o(ord-le)n(v)o
(el)d(polynomial.)f(W)-7 b(e)28 b(demonstrate)d(the)i(feasibility)f(of)
g(our)g(approach)f(by)h(v)o(erifying)f(\(and)g(also)i(detecting)f(b)n
(ugs)g(in\))h(up)f(to)h(100-bit)-192 3735 y(sequential)g(GF)i
(multipliers)f(\(containing)d(300)j(\003ip-\003ops\),)e(whereas)i(con)m
(v)o(entional)d(techniques)i(f)o(ail)h(be)o(yond)e(23-bit)h(circuits.)h
(Finally)-5 b(,)27 b(our)-192 3845 y(approach)e(can)i(be)g(construed)f
(as)i(a)f(w)o(ord-le)n(v)o(el,)f(implicit)h(tra)n(v)o(ersal)f(of)h(the)
h(underlying)c(FSM)k(of)f(the)g(sequential)g(GF)h(circuit,)e(wherein)g
(the)-192 3955 y(set)j(of)g(states)g(is)g(encoded)e(as)i(the)g(v)n
(ariety)e(of)i(an)f(elimination)f(ideal)i(related)f(to)g(the)h(FSM')-5
b(s)29 b(transition)f(function.)-109 4064 y FR(P)-7 b(aper)32
b(Or)m(ganization:)f FH(The)h(proposal)f(is)j(or)o(ganized)29
b(as)k(follo)n(ws.)f(The)h(follo)n(wing)d(section)j(re)n(vie)n(ws)f
(pre)n(vious)f(w)o(ork,)h(and)g(contrasts)g(it)-192 4174
y(against)f(the)g(ne)n(w)g(contrib)n(utions)f(of)h(proposed)e(w)o(ork.)
h(Sec)i(III)f(brie\003y)g(describes)g(the)g(architecture)f(of)h(the)g
(sequential)g(normal)f(basis)i(GF)-192 4284 y(multipliers)g(v)o
(eri\002ed)f(as)i(moti)n(v)n(ation)d(e)o(xperiment.)g(Section)i(IV)h
(co)o(v)o(ers)e(preliminary)f(concepts)h(and)h(notation.)f(Section)h(V)
h(describes)e(the)-192 4394 y(sk)o(etch)24 b(of)g(our)f(approach,)f
(computational)g(impro)o(v)o(ements)f(for)j(which)f(are)h(described)f
(in)h(Section)g(VI.)g(Experimental)e(results)j(are)f(described)-192
4504 y(in)c(Section)g(VII.)g(Finally)-5 b(,)19 b(Section)h(VIII)f
(concludes)g(the)h(proposal)f(and)h(introduces)e(potential)h(de)n(v)o
(elopments)f(applications)h(of)h(our)f(approach.)1362
4708 y(I)t(I)t(.)45 b(R)t FI(E)t(V)t(I)t(E)t(W)25 b(O)t(F)f
FH(P)t FI(R)t(E)t(V)t(I)t(O)t(U)t(S)i FH(W)s FI(O)t(R)t(K)-109
4844 y FH(V)-9 b(eri\002cation)28 b(of)g(a)h(combinational)e(GF)i
(arithmetic)f(circuit)d FR(C)31 b FH(against)d(a)h(polynomial)e
(speci\002cation)h FE(F)49 b FH(has)29 b(been)f(addressed)g(in)h([4)o
(])g([5)o(])-192 4954 y([6)o(].)g(V)-9 b(eri\002cation)27
b(problems)g(in)i([4)o(])g([5)o(])f(are)h(formulated)d(using)i
(Nullstellensatz)h(and)f(decided)f(using)h(the)g(Gr)7
b(\250)-35 b(obner)27 b(basis)i(algorithm.)-109 5064
y(The)35 b(paper)f([6)o(])i(performs)e(v)o(eri\002cation)g(by)g(deri)n
(ving)g(a)i(canonical)e(w)o(ord-le)n(v)o(el)f(polynomial)g
(representation)h FE(F)55 b FH(from)35 b(the)g(circuit)c
FR(C)r FH(.)-192 5181 y(Their)25 b(approach)f(vie)n(ws)i(an)o(y)f
(arbitrary)g(Boolean)g(function)f(\(circuit\))37 b FR(f)30
b FH(:)18 b FQ(B)2082 5151 y FD(k)2132 5181 y FF(!)f
FQ(B)2287 5151 y FD(k)2346 5181 y FH(as)27 b(a)f(polynomial)e(function)
36 b FR(f)30 b FH(:)18 b FQ(F)3370 5204 y FO(2)3401 5186
y FL(k)3449 5181 y FF(!)f FQ(F)3600 5204 y FO(2)3631
5186 y FL(k)3662 5181 y FH(,)26 b(and)f(deri)n(v)o(es)-192
5291 y(a)g(canonical)e(polynomial)f(representation)h
FE(F)44 b FH(o)o(v)o(er)24 b FQ(F)1432 5314 y FO(2)1463
5296 y FL(k)1493 5291 y FH(.)h(The)o(y)e(sho)n(w)i(that)f(this)h(can)f
(be)h(achie)n(v)o(ed)d(by)i(computing)f(a)h(reduced)f(Gr)7
b(\250)-35 b(obner)23 b(basis)-192 5401 y(w)-5 b(.r)g(.t.)24
b(an)g FR(abstr)o(action)f(term)j(or)m(der)e FH(deri)n(v)o(ed)f(from)g
(the)i(circuit.)f(Subsequently)-5 b(,)21 b(the)o(y)j(propose)f(a)i(r)p
2731 5414 28 4 v(e\002nement)e(of)h(this)h(a)p 3350 5415
37 4 v(bstraction)f(t)p 3740 5415 24 4 v(erm)g(o)p 3917
5415 42 4 v -1 w(rder)-192 5511 y(\(called)33 b(RA)-9
b(T)o(O\),)32 b(that)i(enables)f(to)g(compute)f(the)h(Gr)7
b(\250)-35 b(obner)32 b(basis)i(of)f(a)h(smaller)f(subset)h(of)f
(polynomials.)e(The)i(authors)f(sho)n(w)h(that)h(their)-192
5621 y(approach)26 b(can)j(pro)o(v)o(e)d(correctness)i(of)g(up)g(to)h
(571-bit)e(combinational)f(GF)j(multipliers.)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop 4063 -307 a FV(3)-109 -58 y FH(Since)27
b(we)h(are)f(also)h(interested)e(in)h(deri)n(ving)f(a)i(polynomial)d
(representation)g(of)i(the)g(computation)e(performed)f(by)j(the)g
(sequential)g(circuit)-192 52 y FR(S)q FH(,)k(we)g(dra)o(w)f
(inspirations)g(from)g([6])h(\226)g(particularly)e(the)i(use)h(of)e(RA)
-9 b(T)o(O)31 b(\226)g(for)g(sequential)f(v)o(eri\002cation.)f(Ho)n(we)
n(v)o(er)m(,)g(the)i(approach)e(of)i([6)o(])-192 162
y(suf)n(fers)k(from)f(a)i(fe)n(w)g(limitations:)f(i\))h(When)f(the)h
(GF)g(polynomial)d(implemented)h(by)h(the)h(circuit)f(is)h(dense)g
(\(say)-5 b(,)34 b(due)h(to)h(the)g(presence)-192 272
y(of)h(a)h(b)n(ug)e(in)i(the)f(design\),)f(their)h(approach)e(is)k
(computationally)34 b(infeasible;)j(ii\))g(The)g(use)h(of)f(RA)-9
b(T)o(O)37 b(still)h(requires)f(a)g(Gr)7 b(\250)-35 b(obner)36
b(basis)-192 382 y(computation)29 b(\(e)n(v)o(en)h(though)f(on)i(a)g
(subset)g(of)g(polynomials\))e(to)i(deri)n(v)o(e)f(the)h(polynomial)e
FE(F)20 b FH(,)32 b(which)e(can)h(lead)g(to)h(a)f(memory)f(e)o
(xplosion.)-192 492 y(Experiments)24 b(in)j([6)o(])f(are)g(only)f
(successful)h(for)g(hierarchically)e(designed)h(and)g(b)n(ug-free)f(GF)
j(circuits.)f FR(While)g(we)h(do)f(employ)f(RA)m(T)o(O)h(as)g(the)-192
602 y(term)h(or)m(der)f(for)g(sequential)f(veri\002cation,)g(we)i
(further)f(pr)m(esent)g(an)g(ef)o(\002cient)f(symbolic)h(computation)d
(appr)l(oac)o(h)h(that)i(does)g(not)g(suf)o(fer)g(fr)l(om)-192
712 y(these)j(limitations)p FH(.)-109 823 y(The)35 b(problem)e
(addressed)i(in)g(this)h(paper)e(is)i(not)f(suitable)g(to)h(be)f(solv)o
(ed)f(by)h(con)m(v)o(entional)d(bit-le)n(v)o(el)i(sequential)h(equi)n
(v)n(alence)e([7)o(])j(or)-192 933 y(\(bounded\))c(model)i(checking)g
(frame)n(w)o(orks)f(based)i(on)g(interpolation)e([8)o(])i(or)g
(property)e(directed)i(reachability)e([9)o(].)j(This)f(is)h(mostly)f
(due)-192 1043 y(to)f(the)f(w)o(ord-le)n(v)o(el)f(and)h(GF)i
(polynomial)c(nature)i(of)g(the)h(speci\002cation)f(\(property\))d
FE(F)20 b FH(,)34 b(which)f(is)i(also)f(only)f(v)n(alid)g(in)h(one)f
(state)h(of)f(the)-192 1153 y(machine.)g(The)i(use)g(of)f(algebraic)g
(geometry)e(has)j(been)f(proposed)f(for)h(model)g(checking)f([10)n(])i
([11)o(])g([12)o(];)f(ho)n(we)n(v)o(er)m(,)f(these)i(approaches)-192
1263 y(are)c(a)h(straight-forw)o(ard)c(application)i(of)h
FR(bit-le)o(vel)g FH(Boolean)g(Gr)7 b(\250)-35 b(obner)29
b(basis)j(engines)e(in)i(lieu)f(of)g(binary)f(decision)h(diagrams)f
(\(BDDs\))i(or)-192 1373 y(satis\002ability)d(\(SA)-9
b(T\))28 b(solv)o(ers.)1189 1592 y(I)t(I)t(I)t(.)45 b(S)t
FI(E)t(Q)s(U)t(E)t(N)t(T)t(I)t(A)t(L)24 b FH(G)t(F)i(M)t
FI(U)t(L)n(T)t(I)t(P)t(L)t(I)t(E)t(R)e FH(D)t FI(E)t(S)t(I)t(G)t(N)-109
1734 y FH(Let)40 b(us)f(brie\003y)g(describe)f(the)i(fundamentals)d
(behind)h(the)h(design)g(of)g(normal)f(basis)i(sequential)f(GF)h
(multipliers,)e(so)i(as)g(to)f(put)g(in)-192 1863 y(perspecti)n(v)o(e)
27 b(the)h(type)g(of)h(designs)f(that)g(ha)n(v)o(e)g(been)g(v)o
(eri\002ed)f(in)i(this)g(paper)-5 b(.)28 b(Let)g FR(R)19
b FG(=)2459 1869 y FK(\345)2518 1829 y FD(k)q FC(\000)p
FO(1)2518 1889 y FD(i)p FN(=)p FO(0)2638 1863 y FR(r)2670
1875 y FD(i)2691 1863 y FK(b)2737 1833 y FO(2)2768 1811
y FL(i)2790 1863 y FJ(;)38 b FR(A)18 b FG(=)3003 1869
y FK(\345)3062 1829 y FD(k)q FC(\000)p FO(1)3062 1889
y FD(i)p FN(=)p FO(0)3183 1863 y FR(a)3225 1875 y FD(i)3245
1863 y FK(b)3291 1833 y FO(2)3322 1811 y FL(i)3344 1863
y FJ(;)38 b FR(B)18 b FG(=)3557 1869 y FK(\345)3616 1829
y FD(k)q FC(\000)p FO(1)3616 1889 y FD(i)p FN(=)p FO(0)3737
1863 y FR(b)3779 1875 y FD(i)3799 1863 y FK(b)3845 1833
y FO(2)3876 1811 y FL(i)3898 1863 y FH(,)29 b(then)1060
2116 y FR(R)19 b FG(=)f FR(A)12 b FF(\001)g FR(B)17 b
FG(=)h(\()1494 2027 y FD(k)q FC(\000)p FO(1)1505 2133
y FA(\345)1500 2201 y FD(i)p FN(=)p FO(0)1610 2116 y
FR(a)1652 2128 y FD(i)1672 2116 y FK(b)1718 2081 y FO(2)1749
2059 y FL(i)1771 2116 y FG(\)\()1835 2027 y FD(k)q FC(\000)p
FO(1)1846 2133 y FA(\345)1844 2201 y FD(j)r FN(=)p FO(0)1951
2116 y FR(b)2002 2128 y FD(j)2025 2116 y FK(b)2071 2081
y FO(2)2109 2059 y FL(j)2132 2116 y FG(\))h(=)2266 2027
y FD(k)q FC(\000)p FO(1)2276 2133 y FA(\345)2271 2201
y FD(i)p FN(=)p FO(0)2382 2027 y FD(k)q FC(\000)p FO(1)2392
2133 y FA(\345)2391 2201 y FD(j)r FN(=)p FO(0)2498 2116
y FR(a)2540 2128 y FD(i)2560 2116 y FR(b)2611 2128 y
FD(j)2634 2116 y FK(b)2680 2081 y FO(2)2711 2059 y FL(i)2732
2116 y FK(b)2778 2081 y FO(2)2816 2059 y FL(j)-109 2395
y FH(The)28 b(e)o(xpressions)f FK(b)510 2365 y FO(2)541
2342 y FL(i)563 2395 y FK(b)609 2365 y FO(2)647 2342
y FL(j)699 2395 y FH(are)h(called)h(cross-product)d(terms)i(and)g(the)o
(y)g(can)g(also)h(be)f(represented)f(in)i(normal)e(basis:)1409
2640 y FK(b)1455 2605 y FO(2)1486 2583 y FL(i)1507 2640
y FK(b)1553 2605 y FO(2)1591 2583 y FL(j)1633 2640 y
FG(=)1717 2551 y FD(k)q FC(\000)p FO(1)1728 2657 y FA(\345)1716
2725 y FD(n)p FN(=)p FO(0)1834 2640 y FK(l)1880 2595
y FN(\()p FD(n)p FN(\))1880 2664 y FD(i)9 b(j)1962 2640
y FK(b)2008 2605 y FO(2)2039 2583 y FL(n)2072 2640 y
FJ(;)67 b FK(l)2208 2595 y FN(\()p FD(n)p FN(\))2208
2664 y FD(i)9 b(j)2309 2640 y FF(2)19 b FQ(F)2434 2652
y FO(2)2468 2640 y FJ(:)-109 2894 y FH(From)28 b(the)g(abo)o(v)o(e)f
(tw)o(o)i(equations,)e(one)h(can)g(see)h(that)g(the)g(e)o(xpression)d
(for)i(the)h FR(n)2368 2864 y FD(t)t(h)2453 2894 y FH(digit)f(of)g
(product)f FR(R)18 b FG(=)g(\()p FR(r)3231 2906 y FO(0)3267
2894 y FJ(;)9 b(:)g(:)g(:)h(;)f FR(r)3460 2906 y FD(n)3495
2894 y FJ(;)g(:)g(:)g(:)h FR(r)3656 2907 y FD(k)q FC(\000)p
FO(1)3767 2894 y FG(\))29 b FH(is:)1123 3141 y FR(r)1155
3153 y FD(n)1209 3141 y FG(=)1292 3053 y FD(k)q FC(\000)p
FO(1)1303 3159 y FA(\345)1297 3227 y FD(i)p FN(=)p FO(0)1408
3053 y FD(k)q FC(\000)p FO(1)1419 3159 y FA(\345)1417
3227 y FD(j)r FN(=)p FO(0)1524 3141 y FK(l)1570 3097
y FN(\()p FD(n)p FN(\))1570 3165 y FD(i)9 b(j)1652 3141
y FR(a)1694 3153 y FD(i)1715 3141 y FR(b)1766 3153 y
FD(j)1807 3141 y FG(=)18 b FR(A)12 b FF(\001)g FR(M)2057
3153 y FD(n)2102 3141 y FF(\001)g FR(B)2188 3107 y FD(T)2233
3141 y FJ(;)68 b FH(0)18 b FF(\024)f FR(n)h FF(\024)g
FR(k)13 b FF(\000)f FH(1)-109 3426 y(where)34 b FR(M)198
3438 y FD(n)254 3426 y FG(=)21 b(\()p FK(l)418 3382 y
FN(\()p FD(n)p FN(\))418 3450 y FD(i)9 b(j)501 3426 y
FG(\))35 b FH(is)g(a)g(binary)d FR(k)15 b FF(\002)f FR(k)36
b FH(matrix)d(o)o(v)o(er)g FQ(F)1662 3438 y FO(2)1697
3426 y FH(,)h(and)g(it)h(is)g(called)f(the)g FK(l)p FH(-matrix.)f
(Moreo)o(v)o(er)m(,)e(let)k FR(r)3320 3438 y FD(n)3376
3426 y FG(=)22 b FR(A)14 b FF(\001)g FR(M)3637 3396 y
FN(\()p FD(n)p FN(\))3732 3426 y FF(\001)g FR(B)3820
3396 y FD(T)3866 3426 y FH(.)34 b(Then)-192 3566 y FR(r)-160
3578 y FD(n)p FC(\000)p FO(1)-24 3566 y FG(=)22 b FR(A)14
b FF(\001)g FR(M)237 3536 y FN(\()p FD(n)p FC(\000)p
FO(1)p FN(\))412 3566 y FF(\001)g FR(B)500 3536 y FD(T)569
3566 y FG(=)21 b FR(r)n(o)n(t)6 b(a)n(t)g(e)p FG(\()p
FR(A)p FG(\))13 b FF(\001)h FR(M)1097 3536 y FN(\()p
FD(n)p FN(\))1194 3566 y FF(\001)h FR(r)n(o)n(t)6 b(a)n(t)g(e)p
FG(\()p FR(B)p FG(\))1552 3536 y FD(T)1596 3566 y FH(.)36
b(This)g(implies)f(that)h FR(M)2350 3536 y FN(\()p FD(n)p
FN(\))2469 3566 y FH(is)g(generated)e(by)h(right)g(and)g(do)n(wn)f(c)o
(yclic)h(shifting)-192 3690 y FR(M)-120 3660 y FN(\()p
FD(n)p FC(\000)p FO(1)p FN(\))41 3690 y FH(.)26 b(Therefore,)d(the)j
(hardw)o(are)e(design)h(of)g(sequential)g(GF)h(multipliers)f(is)i
(based)e(on)g(mappings)f(of)h FR(A)10 b FF(\001)g FR(M)3156
3702 y FD(n)3201 3690 y FF(\001)g FR(B)3285 3660 y FD(T)3358
3690 y FH(into)25 b(AND-XOR)h(gates)-192 3800 y(and)i(c)o(yclic)g
(shift)h(operations.)-109 3911 y(This)h(paper)f(v)o(eri\002es)h(the)g
(implementation)d(of)j(tw)o(o)g(distinct)g(architectures)f(of)h
FR(sequential)f(multiplier)o(s)h(with)h(par)o(allel)e(output)g
(\(SMPO\))p FH(,)-192 4021 y(namely:)k(i\))h(the)f(Agne)n(w-SMPO)g([2)o
(])h(by)f(G.)h(B.)g(Agne)n(w)-5 b(,)32 b(which)h(is)i(a)f
(straight-forw)o(ard)d(implementation)g(of)j(the)f FK(l)p
FH(-matrix;)f(and)h(ii\))h(the)-192 4131 y(more)28 b(recent,)f(more)h
(complicated,)f(yet)h(v)o(ery)f(ef)n(\002cient)h(RH-SMPO)i([3)o(],)e
(by)g(Re)o(yhani-Masoleh)e(and)i(Hasan,)h(depicted)e(in)i(Fig.)f(2.)
1593 4350 y(I)t(V)-7 b(.)46 b(P)t FI(R)t(E)t(L)t(I)t(M)t(I)t(N)r(A)t(R)
t(I)t(E)t(S)-109 4491 y FH(Let)23 b FR(q)15 b FG(=)h
FH(2)205 4461 y FD(k)260 4491 y FH(and)22 b FQ(F)454
4503 y FD(q)489 4491 y FG([)p FR(x)549 4503 y FO(1)583
4491 y FJ(;)9 b(:)g(:)g(:)h(;)f FR(x)781 4504 y FD(d)819
4491 y FG(])24 b FH(be)e(the)h(polynomial)e(ring)h(with)h
(indeterminates)e FR(x)2371 4503 y FO(1)2405 4491 y FJ(;)9
b(:)g(:)g(:)h(;)f FR(x)2603 4504 y FD(d)2641 4491 y FH(.)24
b(A)f(polynomial)32 b FR(f)d FG(=)15 b FR(c)3351 4503
y FO(1)3386 4491 y FR(X)3435 4503 y FO(1)3478 4491 y
FG(+)9 b FR(c)3589 4503 y FO(2)3623 4491 y FR(X)3672
4503 y FO(2)3716 4491 y FG(+)g FF(\001)g(\001)g(\001)f
FG(+)h FR(c)3994 4503 y FD(t)4019 4491 y FR(X)4066 4503
y FD(t)-192 4601 y FH(is)29 b(a)f(\002nite)h(sum)f(of)f(terms,)h(where)
f FR(c)923 4613 y FO(1)958 4601 y FJ(;)9 b(:)g(:)g(:)h(;)f
FR(c)1154 4613 y FD(t)1209 4601 y FH(are)28 b(coef)n(\002cients)f(and)g
FR(X)1945 4613 y FO(1)1980 4601 y FJ(;)9 b(:)g(:)g(:)h(;)f
FR(X)2188 4613 y FD(t)2242 4601 y FH(are)28 b(monomials.)e(A)j
(monomial)d(ordering)g FR(X)3603 4613 y FO(1)3656 4601
y FJ(>)17 b FR(X)3787 4613 y FO(2)3831 4601 y FF(\001)9
b(\001)g(\001)19 b FJ(>)e FR(X)4066 4613 y FD(t)-192
4711 y FH(is)29 b(imposed)f(on)f(the)i(polynomials)d(to)j(process)f
(them)g(systematically)-5 b(.)27 b(Then,)g FR(L)o(T)11
b FG(\()h FR(f)g FG(\))19 b(=)f FR(c)2542 4723 y FO(1)2577
4711 y FR(X)2626 4723 y FO(1)2660 4711 y FJ(;)9 b FR(LM)s
FG(\()j FR(f)g FG(\))21 b(=)d FR(X)3074 4723 y FO(1)3137
4711 y FH(denote)27 b(the)i(leading)e(term)h(and)-192
4846 y(the)i(leading)f(monomial)g(of)41 b FR(f)12 b FH(,)32
b(respecti)n(v)o(ely)-5 b(.)27 b(Gi)n(v)o(en)j(polynomials)40
b FR(f)11 b FJ(;)e FR(g)p FH(,)31 b(if)f FR(cX)38 b FH(is)31
b(a)g(term)f(in)42 b FR(f)h FH(that)31 b(is)g(di)n(visible)e(by)h
FR(L)o(T)10 b FG(\()p FR(g)p FG(\))p FH(,)31 b(then)41
b FR(f)3976 4794 y FD(g)3955 4846 y FF(\000)-65 b(!)20
b FR(r)-192 4966 y FH(denotes)25 b(a)h(one-step)f(reduction)e(\(di)n
(vision\))i(of)37 b FR(f)i FH(by)25 b FR(g)p FH(,)h(resulting)f(in)h
(remainder)d FR(r)d FG(=)28 b FR(f)23 b FF(\000)2601
4934 y FD(cX)p 2559 4948 154 4 v 2559 4997 a(L)o(T)8
b FN(\()p FD(g)p FN(\))2733 4966 y FF(\001)i FR(g)p FH(.)26
b(Similarly)-5 b(,)36 b FR(f)j FH(reduces)25 b(to)h FR(r)i
FH(modulo)c(the)-192 5134 y(set)29 b(of)f(polynomials)e
FR(F)f FG(=)18 b FF(f)12 b FR(f)704 5146 y FO(1)739 5134
y FJ(;)d(:)g(:)g(:)g(;)21 b FR(f)936 5146 y FD(s)965
5134 y FF(g)p FH(,)28 b(denoted)39 b FR(f)1459 5087 y
FD(F)1414 5134 y FF(\000)-15 b(!)1547 5146 y FN(+)1617
5134 y FR(r)r FH(,)29 b(such)f(that)g(no)g(term)g(in)g
FR(r)j FH(is)e(di)n(visible)e(by)h(the)g FR(L)o(T)10
b FG(\()i FR(f)3292 5146 y FD(i)3315 5134 y FG(\))28
b FH(of)g(an)o(y)f(polynomial)f(in)-180 5244 y FR(f)-155
5256 y FD(i)-115 5244 y FF(2)19 b FR(F)7 b FH(.)-109
5360 y(Let)50 b FR(f)77 5372 y FO(1)112 5360 y FJ(;)9
b(:)g(:)g(:)h(;)21 b FR(f)310 5372 y FD(s)378 5360 y
FH(be)37 b(polynomials)f(in)i FQ(F)1097 5372 y FD(q)1132
5360 y FG([)p FR(x)1192 5372 y FO(1)1226 5360 y FJ(;)9
b(:)g(:)g(:)h(;)f FR(x)1424 5373 y FD(d)1462 5360 y FG(])p
FH(,)38 b(then)g(we)g(set)g FR(J)28 b FG(=)23 b FF(h)12
b FR(f)2213 5372 y FO(1)2248 5360 y FJ(;)d(:)g(:)g(:)h(;)21
b FR(f)2446 5372 y FD(s)2475 5360 y FF(i)j FG(=)2619
5293 y FB(\010)2667 5366 y FK(\345)2727 5327 y FD(s)2727
5382 y(i)p FN(=)p FO(1)2835 5360 y FR(h)2877 5372 y FD(i)2910
5360 y FR(f)2935 5372 y FD(i)2976 5360 y FH(:)18 b FR(h)3059
5372 y FO(1)3093 5360 y FJ(;)9 b(:)g(:)g(:)h(;)f FR(h)3296
5372 y FD(s)3343 5360 y FF(2)18 b FQ(F)3467 5372 y FD(q)3502
5360 y FG([)p FR(x)3562 5372 y FO(1)3597 5360 y FJ(;)9
b(:)g(:)g(:)g(;)g FR(x)3794 5373 y FD(d)3833 5360 y FG(])3856
5293 y FB(\011)3904 5360 y FH(.)38 b FR(J)27 b FG(=)-192
5488 y FF(h)12 b FR(f)-123 5500 y FO(1)-87 5488 y FJ(;)d(:)g(:)g(:)h(;)
21 b FR(f)111 5500 y FD(s)139 5488 y FF(i)37 b FH(forms)f(an)g(ideal)g
(in)g FQ(F)904 5500 y FD(q)939 5488 y FG([)p FR(x)999
5500 y FO(1)1034 5488 y FJ(;)9 b(:)g(:)g(:)g(;)g FR(x)1231
5501 y FD(d)1270 5488 y FG(])p FH(,)36 b(and)48 b FR(f)1544
5500 y FO(1)1579 5488 y FJ(;)9 b(:)g(:)g(:)h(;)21 b FR(f)1777
5500 y FD(s)1843 5488 y FH(are)36 b(its)h(generators.)d(Let)j
Fw(a)22 b FG(=)g(\()p FR(a)2872 5500 y FO(1)2907 5488
y FJ(;)9 b(:)g(:)g(:)g(;)g FR(a)3109 5501 y FD(d)3147
5488 y FG(\))23 b FF(2)g FQ(F)3331 5458 y FD(d)3331 5509
y(q)3406 5488 y FH(be)36 b(a)g(point.)g(F)o(or)f(an)o(y)-192
5621 y(ideal)29 b FR(J)23 b FG(=)18 b FF(h)12 b FR(f)211
5633 y FO(1)247 5621 y FJ(;)d(:)g(:)g(:)h(;)21 b FR(f)445
5633 y FD(s)474 5621 y FF(i)e(\022)f FQ(F)659 5633 y
FD(q)694 5621 y FG([)p FR(x)754 5633 y FO(1)789 5621
y FJ(;)9 b(:)g(:)g(:)h(;)f FR(x)987 5634 y FD(d)1025
5621 y FG(])p FH(,)30 b(the)f FR(af)o(\002ne)f(variety)h
FH(of)g FR(J)34 b FH(o)o(v)o(er)28 b FQ(F)2099 5633 y
FD(q)2164 5621 y FH(is:)e FR(V)10 b FG(\()p FR(J)t FG(\))19
b(=)g FF(f)p Fw(a)f FF(2)h FQ(F)2764 5591 y FD(d)2764
5642 y(q)2820 5621 y FH(:)h FF(8)12 b FR(f)31 b FF(2)19
b FR(J)r FJ(;)i FR(f)12 b FG(\()p Fw(a)p FG(\))20 b(=)e
FH(0)p FF(g)p FJ(:)29 b FH(The)g(v)n(ariety)c FR(V)10
b FG(\()p FR(J)t FG(\))p eop end
%%Page: 4 4
TeXDict begin 4 3 bop -192 -307 a FV(4)735 1673 y @beginspecial
0 @llx 0 @lly 720 @urx 540 @ury 2880 @rwi @setspecial
%%BeginDocument: ./RH.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: RH.pdf
%%Creator: Adobe Acrobat 10.1.12
%%For: Jason
%%CreationDate: 2014/9/19, 1:18:25
%%BoundingBox: 0 0 720 540
%%HiResBoundingBox: 0 0 720 540
%%CropBox: 0 0 720 540
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 856 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:CreateDate="2014-09-19T01:17:17-06:00"
   xmp:CreatorTool="Microsoft® PowerPoint® 2013"
   xmp:ModifyDate="2014-09-19T01:17:17-06:00"
   pdf:Producer="Microsoft® PowerPoint® 2013">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>骁骏</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">PowerPoint 演示文稿</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -540 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 540 li
720 540 li
720 0 li
cp
clp
gsave
0 540 mo
720 540 li
720 0 li
0 0 li
cp
clp
0 540 mo
720 540 li
720 -6.10352e-5 li
0 -6.10352e-5 li
cp
false sop
/0 
[/DeviceGray] /CSA add_res
1 gry
ef
134.94 109.62 mo
166.86 109.62 li
166.86 78.66 li
134.94 78.66 li
cp
ef
2.28 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
134.94 109.62 mo
166.86 109.62 li
166.86 78.66 li
134.94 78.66 li
cp
.0614376 gry
@
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPS-ItalicMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 97 /a put
def
/FontBBox {-498 -307 1333 1023} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD1638113E4B58C0B5F39100186722805B704
AA3988900AFCFF05DD> |-
/zero <1C60D8A8C9B7A73DB95E4C3B2CBDAA180DE16ED2E0B54D373FA0624F4
D4D6AEC3868DC3B6FCE2354D83BCFB00DD4446A756F968EEE24EB76F936C153C
554CF6C4FC531FF7FF83B6E48CEE21091E0E09B4C454DFC4E65880C366E13FC5
BC8A513523C320C7B30F5347C743B956722220B3BEF7EACE8E5F9F591092F7BD
516A6AD1802BEF3B681970F31BDF1B1A76203F2B6ADF0680B5FEC4F306B1764A
BEA599CAC4C746792036F08DB0B307F28AC5ED1> |-
/a <1C60D8A8C9B7A73DB68C06FC199F1F2F20B1C2E3715651C87BCD4ADD6877
5B4647B129144EBE49EAC15F019B26773F428CC0D1BB4A6183FD1BAD53C3DC7D
C1778E21FEA13949F179F397E1068E68EF5BDF24BE0DC7557B673C23D4A50497
DF80D9C838AB9EEA3C59483A8E7BD334D2361BCA7F19AE87B1D972F7B79ABAD0
7378C084886016D514CC545EA1F4A9EE8851A3C3F902C0F0DCD2FEE069D9BC21
3BFD5E5AFCA4D73D61283DE2191744FD94BBAE1E2CE71F1DD86C9281938B9644
2B456E7FA2EA8852C51CB5A9C2A0AFF4A5706E78B9A6A93AA2E14914A3A3355D
7AE853081C2D03136A31> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ZALRCY+TimesNewRomanPS-ItalicMT /TimesNewRomanPS-ItalicMT findfont ct_VMDictPut
/ZALRCY+TimesNewRomanPS-ItalicMT*1 
[48{/.notdef}rp /zero 48{/.notdef}rp /a 158{/.notdef}rp]
ZALRCY+TimesNewRomanPS-ItalicMT nf
ZALRCY+TimesNewRomanPS-ItalicMT*1 [18.024 0 0 -18.024 0 0 ]msf
143.33 100.73 mo
(a)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [12.024 0 0 -12.024 0 0 ]msf
152.33 105.17 mo
(0)sh
166.86 109.62 mo
198.9 109.62 li
198.9 78.66 li
166.86 78.66 li
cp
1 gry
ef
166.86 109.62 mo
198.9 109.62 li
198.9 78.66 li
166.86 78.66 li
cp
.0614376 gry
@
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZALRCY+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7A73DB6A4A1045477B897A236531EE6744E986B049CB2B4
C1FE00325C8BF061D241BD30B895F448A012FA11CB58DD958F1372DACE120865
7E476E9190270F7FC72B0B9DCE2DDE5E748B644DD70718A6734618F8229BDD2E
5AE0C198797BC9647A1D37D27AAA1BAE3BFBF0B70DB4F621F7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZALRCY+TimesNewRomanPS-ItalicMT /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/ZALRCY+TimesNewRomanPS-ItalicMT*1 
[48{/.notdef}rp /zero /one 47{/.notdef}rp /a 158{/.notdef}rp]
ZALRCY+TimesNewRomanPS-ItalicMT nf
ZALRCY+TimesNewRomanPS-ItalicMT*1 [18.024 0 0 -18.024 0 0 ]msf
175.32 100.73 mo
(a)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [12.024 0 0 -12.024 0 0 ]msf
184.32 105.17 mo
(1)sh
198.42 109.62 mo
230.46 109.62 li
230.46 78.66 li
198.42 78.66 li
cp
1 gry
ef
198.42 109.62 mo
230.46 109.62 li
230.46 78.66 li
198.42 78.66 li
cp
.0614376 gry
@
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZALRCY+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A73DB69C12026B750802855EAC5092BB0A5898B5D5C055
BF85280FEB4B1F3E4AFB01B0A8A29DB15451C23681417470B94B4D8D92484A39
334C366B9828F8F838BF53371C17891341B316F197C3AA30247051762DF7F17C
B7ACE84978B012AD0CA07C229C814073CD1F19CA205691988B437B6925EC8729
C2823046BA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZALRCY+TimesNewRomanPS-ItalicMT /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/ZALRCY+TimesNewRomanPS-ItalicMT*1 
[48{/.notdef}rp /zero /one /two 46{/.notdef}rp /a 158{/.notdef}rp]
ZALRCY+TimesNewRomanPS-ItalicMT nf
ZALRCY+TimesNewRomanPS-ItalicMT*1 [18.024 0 0 -18.024 0 0 ]msf
206.86 100.73 mo
(a)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [12.024 0 0 -12.024 0 0 ]msf
215.86 105.17 mo
(2)sh
229.86 109.62 mo
261.9 109.62 li
261.9 78.66 li
229.86 78.66 li
cp
1 gry
ef
229.86 109.62 mo
261.9 109.62 li
261.9 78.66 li
229.86 78.66 li
cp
.0614376 gry
@
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZALRCY+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A73DB9AD9E1198F486357EF0B21BA3B223A4454F8713
4A33E7B05FBEBD54E2E15EE07CA0E86475CEDA75FE6EC7CC26A7C1193ABEBB34
8EE8C242C93B4A3DFB138E90E470C0795857EBAC82F9500B9007C3C3C1D35242
A2D7BB7BCB129B370D84AE06270498BAA570E6A849DF2A3057781782DB63178F
B7BF717AB4A95100FB82CC3D5D208D5079E8F6ADB85140C7EE0091E36F5A2AE3
715EE555C7F426C8085BCD4F5A9912A4CA4D78AA92806C8E53C32C02A5E8E15F
BE1796AC7FAB231D974845F7A3FB01849ADAEB1660889453E08F67B2D84BCE43
9196EB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZALRCY+TimesNewRomanPS-ItalicMT /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
/ZALRCY+TimesNewRomanPS-ItalicMT*1 
[48{/.notdef}rp /zero /one /two /three 45{/.notdef}rp /a 158{/.notdef}rp]
ZALRCY+TimesNewRomanPS-ItalicMT nf
ZALRCY+TimesNewRomanPS-ItalicMT*1 [18.024 0 0 -18.024 0 0 ]msf
238.32 100.73 mo
(a)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [12.024 0 0 -12.024 0 0 ]msf
247.32 105.17 mo
(3)sh
261.9 109.62 mo
293.82 109.62 li
293.82 78.66 li
261.9 78.66 li
cp
1 gry
ef
261.9 109.62 mo
293.82 109.62 li
293.82 78.66 li
261.9 78.66 li
cp
.0614376 gry
@
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZALRCY+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7A73DB6EF2B78720F76FE1E85F89D2A1DC69C2202E4273
F3E084393B3AC4189963E5A9690F2DC722B9BB74A43721A9C301224C0A6BCC5C
B45> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZALRCY+TimesNewRomanPS-ItalicMT /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/ZALRCY+TimesNewRomanPS-ItalicMT*1 
[48{/.notdef}rp /zero /one /two /three /four 44{/.notdef}rp /a 
158{/.notdef}rp]
ZALRCY+TimesNewRomanPS-ItalicMT nf
ZALRCY+TimesNewRomanPS-ItalicMT*1 [18.024 0 0 -18.024 0 0 ]msf
270.31 100.73 mo
(a)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [12.024 0 0 -12.024 0 0 ]msf
279.31 105.17 mo
(4)sh
110.76 93.72 mo
132.88 93.62 li
132.87 92.62 li
110.76 92.72 li
cp
127.14 97.08 mo
133.87 93.12 li
127.11 89.22 li
126.87 89.08 126.57 89.16 126.43 89.4 cv
126.29 89.64 126.37 89.94 126.61 90.08 cv
132.62 93.56 li
132.62 92.69 li
126.64 96.22 li
126.4 96.36 126.32 96.66 126.46 96.9 cv
126.6 97.14 126.9 97.22 127.14 97.08 cv
cp
f
.96 lw
110.76 93.48 mo
110.76 56.88 li
@
110.76 56.88 mo
317.71 56.88 li
@
317.64 94.13 mo
317.64 57 li
@
317.47 94.08 mo
293.76 94.08 li
@
1.56 lw
148.98 109.62 mo
148.98 121.48 li
@
413.1 109.62 mo
445.14 109.62 li
445.14 78.66 li
413.1 78.66 li
cp
1 gry
ef
2.28 lw
413.1 109.62 mo
445.14 109.62 li
445.14 78.66 li
413.1 78.66 li
cp
.0614376 gry
@
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZALRCY+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B7A73DB932C2FC82A99989DF032F3B96F74E4FD610D4D7EAD1
65CCAD2E76B2A6CC2F3DFBFF0B1C0B9D44BF48CB3FF170A4E693C5C3830F948A
8F42699FCF3298C2A75F1FAED4604E407E3AF100C6B0B4756C2BD514B43E0192
9C77EBE4BD9EE28001E2C44CAF60218D0123650471707291A349987DB0110818
7E859F71693579D3144674A7934C045E5EDE7120724A5D81356E5F79B91B8B18
25D4C69086BA872B34D991459251> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZALRCY+TimesNewRomanPS-ItalicMT /Encoding get
dup 98 /b put
pop
%ADOEndSubsetFont
/ZALRCY+TimesNewRomanPS-ItalicMT*1 
[48{/.notdef}rp /zero /one /two /three /four 44{/.notdef}rp /a 
/b 157{/.notdef}rp]
ZALRCY+TimesNewRomanPS-ItalicMT nf
ZALRCY+TimesNewRomanPS-ItalicMT*1 [18.024 0 0 -18.024 0 0 ]msf
421.56 100.73 mo
(b)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [12.024 0 0 -12.024 0 0 ]msf
430.56 105.17 mo
(0)sh
445.14 109.62 mo
477.06 109.62 li
477.06 78.66 li
445.14 78.66 li
cp
1 gry
ef
445.14 109.62 mo
477.06 109.62 li
477.06 78.66 li
445.14 78.66 li
cp
.0614376 gry
@
ZALRCY+TimesNewRomanPS-ItalicMT*1 [18.024 0 0 -18.024 0 0 ]msf
453.58 100.73 mo
(b)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [12.024 0 0 -12.024 0 0 ]msf
462.58 105.17 mo
(1)sh
477.66 109.62 mo
509.58 109.62 li
509.58 78.66 li
477.66 78.66 li
cp
1 gry
ef
477.66 109.62 mo
509.58 109.62 li
509.58 78.66 li
477.66 78.66 li
cp
.0614376 gry
@
ZALRCY+TimesNewRomanPS-ItalicMT*1 [18.024 0 0 -18.024 0 0 ]msf
486.1 100.73 mo
(b)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [12.024 0 0 -12.024 0 0 ]msf
495.1 105.17 mo
(2)sh
509.1 109.62 mo
541.14 109.62 li
541.14 78.66 li
509.1 78.66 li
cp
1 gry
ef
509.1 109.62 mo
541.14 109.62 li
541.14 78.66 li
509.1 78.66 li
cp
.0614376 gry
@
ZALRCY+TimesNewRomanPS-ItalicMT*1 [18.024 0 0 -18.024 0 0 ]msf
517.56 100.73 mo
(b)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [12.024 0 0 -12.024 0 0 ]msf
526.56 105.17 mo
(3)sh
541.14 109.62 mo
573.06 109.62 li
573.06 78.66 li
541.14 78.66 li
cp
1 gry
ef
541.14 109.62 mo
573.06 109.62 li
573.06 78.66 li
541.14 78.66 li
cp
.0614376 gry
@
ZALRCY+TimesNewRomanPS-ItalicMT*1 [18.024 0 0 -18.024 0 0 ]msf
549.58 100.73 mo
(b)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [12.024 0 0 -12.024 0 0 ]msf
558.58 105.17 mo
(4)sh
390.48 93.72 mo
412.6 93.62 li
412.59 92.62 li
390.48 92.72 li
cp
406.86 97.08 mo
413.59 93.12 li
406.83 89.22 li
406.59 89.08 406.29 89.16 406.15 89.4 cv
406.01 89.64 406.09 89.94 406.33 90.08 cv
412.34 93.56 li
412.34 92.69 li
406.36 96.22 li
406.12 96.36 406.04 96.66 406.18 96.9 cv
406.32 97.14 406.62 97.22 406.86 97.08 cv
cp
f
.96 lw
390.48 93.48 mo
390.48 56.88 li
@
390.48 56.88 mo
597.43 56.88 li
@
597.36 94.08 mo
597.36 57.48 li
@
597.31 94.08 mo
573.6 94.08 li
@
1.56 lw
557.1 109.62 mo
557.1 140.59 li
@
277.5 123.18 mo
541.24 123.18 li
@
2.28 lw
563.34 140.64 mo
563.34 155.58 557 167.7 549.18 167.7 cv
541.44 167.7 535.13 155.81 535.02 141.01 cv
@
563.35 140.58 mo
535.02 140.95 li
@
1.56 lw
541.14 123.18 mo
541.14 140.66 li
@
2.28 lw
155.46 150.6 mo
155.46 165.01 149.01 176.7 141.06 176.7 cv
133.19 176.7 126.78 165.24 126.66 150.98 cv
@
155.1 151.62 mo
155.1 156.66 148.65 160.74 140.7 160.74 cv
133.06 160.74 126.75 156.96 126.32 152.13 cv
@
154.98 144.54 mo
154.98 149.58 148.53 153.66 140.58 153.66 cv
132.94 153.66 126.63 149.88 126.2 145.05 cv
@
1.56 lw
148.88 121.5 mo
133.86 121.5 li
@
133.86 121.5 mo
133.86 160.73 li
@
277.51 140.58 mo
148.98 140.58 li
@
148.98 140.58 mo
148.98 160.7 li
@
277.86 109.62 mo
277.86 136.3 li
@
182.94 109.62 mo
182.94 121.48 li
@
182.94 121.5 mo
264.9 121.5 li
@
264.9 121.5 mo
264.9 171.97 li
@
2.28 lw
285.66 161.88 mo
285.66 176.29 279.21 187.98 271.26 187.98 cv
263.39 187.98 256.98 176.52 256.86 162.26 cv
@
285.42 162.9 mo
285.42 167.94 278.97 172.02 271.02 172.02 cv
263.38 172.02 257.07 168.24 256.64 163.41 cv
@
285.3 155.82 mo
285.3 160.86 278.85 164.94 270.9 164.94 cv
263.26 164.94 256.95 161.16 256.52 156.33 cv
@
1.56 lw
277.5 136.38 mo
277.5 172.03 li
@
429.18 110.82 mo
429.18 117.4 li
@
2.28 lw
435.66 151.8 mo
435.66 166.21 429.21 177.9 421.26 177.9 cv
413.39 177.9 406.98 166.44 406.86 152.18 cv
@
435.42 152.82 mo
435.42 157.86 428.95 161.94 420.96 161.94 cv
413.29 161.94 406.96 158.16 406.52 153.34 cv
@
1.56 lw
414.18 115.62 mo
414.18 161.94 li
@
429.18 132.9 mo
429.18 161.92 li
@
2.28 lw
436.02 145.44 mo
436.02 150.44 429.57 154.5 421.62 154.5 cv
413.98 154.5 407.68 150.75 407.24 145.95 cv
@
1.56 lw
429.92 116.46 mo
414.9 116.46 li
@
558.43 132.9 mo
429.9 132.9 li
@
461.1 109.62 mo
461.1 167.7 li
@
461.7 167.7 mo
476.18 167.7 li
@
476.1 167.7 mo
476.1 187.94 li
@
491.22 131.94 mo
491.22 188.03 li
@
2.28 lw
499.26 180.66 mo
499.26 195.11 492.81 206.82 484.86 206.82 cv
476.99 206.82 470.58 195.34 470.46 181.04 cv
@
499.02 181.68 mo
499.02 186.68 492.55 190.74 484.56 190.74 cv
476.89 190.74 470.56 186.99 470.12 182.2 cv
@
499.86 174.6 mo
499.86 179.6 493.41 183.66 485.46 183.66 cv
477.82 183.66 471.52 179.91 471.08 175.11 cv
@
1.56 lw
140.94 175.74 mo
140.94 215.53 li
@
140.94 215.58 mo
182.96 215.58 li
@
198.42 215.58 mo
419.92 215.58 li
@
419.94 215.53 mo
419.94 177.9 li
@
2.28 lw
204.42 232.92 mo
204.42 247.86 198.08 259.98 190.26 259.98 cv
182.52 259.98 176.21 248.09 176.1 233.29 cv
@
204.43 232.86 mo
176.1 233.23 li
@
1.56 lw
198.42 215.58 mo
198.42 233.58 li
@
182.46 215.58 mo
182.46 233.58 li
@
271.5 187.98 mo
271.5 233.53 li
@
271.5 232.86 mo
468.79 232.86 li
@
468.78 232.86 mo
468.78 243.48 li
@
2.28 lw
491.82 244.26 mo
491.82 259.24 485.48 271.38 477.66 271.38 cv
469.92 271.38 463.61 259.46 463.5 244.63 cv
@
1.56 lw
491.83 244.26 mo
463.5 244.63 li
@
484.26 243.58 mo
484.26 206.82 li
@
547.26 450.42 mo
583.5 450.42 li
583.5 414.06 li
547.26 414.06 li
cp
1 gry
ef
2.28 lw
547.26 450.42 mo
583.5 450.42 li
583.5 414.06 li
547.26 414.06 li
cp
.0614376 gry
@
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZALRCY+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/r <1C60D8A8C9B7361F365886EBFECCD8473E83DA137EE4FF5446DC34EB9670
2032A1EC6B4D0B80987318881760797A2A703BDB19E24F1B10629EC5D3297F26
5B468217AF43A693E97671CE6B3D388E20C056A563C2FC1423CD8BC8B3EC8EC0
9DC18882E406798A4EAEA9C53CBBD9B8E9BC3831F4F1A6A626135124B3F0C4D3
2FC8873A1B53DB02AD4C1E42492228869E79B5F7AA6DA878613B470F5F6920F4
2F08D0203966> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZALRCY+TimesNewRomanPS-ItalicMT /Encoding get
dup 114 /r put
pop
%ADOEndSubsetFont
/ZALRCY+TimesNewRomanPS-ItalicMT*1 
[48{/.notdef}rp /zero /one /two /three /four 44{/.notdef}rp /a 
/b 15{/.notdef}rp /r 141{/.notdef}rp]
ZALRCY+TimesNewRomanPS-ItalicMT nf
ZALRCY+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf
558.91 438.91 mo
(r)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [12 0 0 -12 0 0 ]msf
565.87 443.352 mo
(0)sh
440.34 450.42 mo
476.58 450.42 li
476.58 414.06 li
440.34 414.06 li
cp
1 gry
ef
440.34 450.42 mo
476.58 450.42 li
476.58 414.06 li
440.34 414.06 li
cp
.0614376 gry
@
ZALRCY+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf
451.97 438.91 mo
(r)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [12 0 0 -12 0 0 ]msf
458.93 443.352 mo
(1)sh
332.94 450.42 mo
369.18 450.42 li
369.18 414.06 li
332.94 414.06 li
cp
1 gry
ef
332.94 450.42 mo
369.18 450.42 li
369.18 414.06 li
332.94 414.06 li
cp
.0614376 gry
@
ZALRCY+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf
344.57 438.91 mo
(r)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [12 0 0 -12 0 0 ]msf
351.53 443.352 mo
(2)sh
225.54 450.42 mo
261.9 450.42 li
261.9 414.06 li
225.54 414.06 li
cp
1 gry
ef
225.54 450.42 mo
261.9 450.42 li
261.9 414.06 li
225.54 414.06 li
cp
.0614376 gry
@
ZALRCY+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf
237.17 438.91 mo
(r)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [12 0 0 -12 0 0 ]msf
244.13 443.352 mo
(3)sh
118.5 450.42 mo
154.86 450.42 li
154.86 414.06 li
118.5 414.06 li
cp
1 gry
ef
118.5 450.42 mo
154.86 450.42 li
154.86 414.06 li
118.5 414.06 li
cp
.0614376 gry
@
ZALRCY+TimesNewRomanPS-ItalicMT*1 [18 0 0 -18 0 0 ]msf
130.15 438.91 mo
(r)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [12 0 0 -12 0 0 ]msf
137.11 443.352 mo
(4)sh
1.56 lw
549.18 166.5 mo
549.18 278.68 li
@
2.28 lw
558.54 298.92 mo
558.54 313.33 552.07 325.02 544.08 325.02 cv
536.18 325.02 529.74 313.57 529.62 299.3 cv
@
558.18 299.94 mo
558.18 304.98 551.73 309.06 543.78 309.06 cv
536.14 309.06 529.83 305.28 529.4 300.45 cv
@
558.06 292.86 mo
558.06 297.9 551.61 301.98 543.66 301.98 cv
536.02 301.98 529.71 298.2 529.28 293.37 cv
@
1.56 lw
549.18 277.62 mo
549.18 308.98 li
@
477.66 271.38 mo
477.66 283.75 li
@
334.62 283.74 mo
537.03 283.74 li
@
536.94 283.74 mo
536.94 309.03 li
@
2.28 lw
343.74 298.92 mo
343.74 313.33 337.29 325.02 329.34 325.02 cv
321.47 325.02 315.06 313.56 314.94 299.3 cv
@
343.5 299.94 mo
343.5 304.98 337.05 309.06 329.1 309.06 cv
321.46 309.06 315.15 305.28 314.72 300.45 cv
@
343.38 292.86 mo
343.38 297.9 336.93 301.98 328.98 301.98 cv
321.34 301.98 315.03 298.2 314.6 293.37 cv
@
1.56 lw
334.5 283.74 mo
334.5 309.03 li
@
322.26 283.74 mo
322.26 309.03 li
@
322.3 283.74 mo
129.54 283.74 li
@
189.42 283.7 mo
189.42 259.98 li
@
118.51 433.04 mo
80.443 432.96 li
80.446 431.4 li
118.51 431.48 li
cp
86.043 436.37 mo
78.896 432.18 li
86.06 428.02 li
86.433 427.81 86.91 427.93 87.126 428.3 cv
87.343 428.68 87.216 429.15 86.843 429.37 cv
80.836 432.86 li
80.839 431.51 li
86.831 435.02 li
87.203 435.24 87.328 435.72 87.11 436.09 cv
86.892 436.46 86.414 436.59 86.043 436.37 cv
cp
f
80.58 432.18 mo
80.58 471.521 li
@
80.58 472.5 mo
632.58 472.5 li
@
2.28 lw
580.26 358.08 mo
580.26 372.49 573.81 384.18 565.86 384.18 cv
557.99 384.18 551.58 372.72 551.46 358.46 cv
@
579.9 359.04 mo
579.9 364.04 573.45 368.1 565.5 368.1 cv
557.86 368.1 551.56 364.35 551.12 359.55 cv
@
579.78 351.96 mo
579.78 356.96 573.33 361.02 565.38 361.02 cv
557.74 361.02 551.44 357.27 551 352.47 cv
@
1.56 lw
570.9 336.78 mo
570.9 368.14 li
@
558.66 342.9 mo
558.66 368.19 li
@
543.18 325.02 mo
543.18 342.87 li
@
543.18 342.9 mo
558.69 342.9 li
@
632.58 472.521 mo
632.58 336.78 li
@
570.9 336.78 mo
632.51 336.78 li
@
565.38 383.82 mo
565.38 414.16 li
@
547.19 431.52 mo
478.12 431.52 li
478.12 433.08 li
547.19 433.08 li
cp
483.73 428.13 mo
476.58 432.3 li
483.73 436.47 li
484.1 436.69 484.58 436.57 484.8 436.19 cv
485.02 435.82 484.89 435.34 484.52 435.13 cv
478.52 431.63 li
478.52 432.97 li
484.52 429.47 li
484.89 429.26 485.02 428.78 484.8 428.41 cv
484.58 428.03 484.1 427.91 483.73 428.13 cv
cp
f
440.25 431.52 mo
370.72 431.52 li
370.72 433.08 li
440.25 433.08 li
cp
376.33 428.13 mo
369.18 432.3 li
376.33 436.47 li
376.7 436.69 377.18 436.57 377.4 436.19 cv
377.62 435.82 377.49 435.34 377.12 435.13 cv
371.12 431.63 li
371.12 432.97 li
377.12 429.47 li
377.49 429.26 377.62 428.78 377.4 428.41 cv
377.18 428.03 376.7 427.91 376.33 428.13 cv
cp
f
2.28 lw
257.94 358.56 mo
257.94 372.97 251.49 384.66 243.54 384.66 cv
235.67 384.66 229.26 373.2 229.14 358.94 cv
@
257.58 359.58 mo
257.58 364.62 251.13 368.7 243.18 368.7 cv
235.54 368.7 229.23 364.92 228.8 360.09 cv
@
257.46 352.5 mo
257.46 357.54 251.01 361.62 243.06 361.62 cv
235.42 361.62 229.11 357.84 228.68 353.01 cv
@
1.56 lw
248.7 349.98 mo
248.7 368.73 li
@
236.46 337.38 mo
236.46 368.74 li
@
236.46 337.38 mo
328.35 337.38 li
@
243.06 384.3 mo
243.06 414.64 li
@
328.26 324.18 mo
328.26 337.37 li
@
248.7 349.98 mo
289.3 349.98 li
@
225.56 433.04 mo
184 432.96 li
184.01 431.4 li
225.57 431.48 li
cp
189.6 436.37 mo
182.46 432.18 li
189.62 428.02 li
189.99 427.8 190.47 427.93 190.69 428.3 cv
190.9 428.68 190.78 429.15 190.4 429.37 cv
184.4 432.86 li
184.4 431.51 li
190.39 435.02 li
190.76 435.24 190.89 435.72 190.67 436.09 cv
190.45 436.46 189.97 436.59 189.6 436.37 cv
cp
f
182.46 432.22 mo
182.46 349.98 li
@
2.28 lw
151.02 358.56 mo
151.02 372.97 144.57 384.66 136.62 384.66 cv
128.75 384.66 122.34 373.2 122.22 358.94 cv
@
150.66 359.58 mo
150.66 364.62 144.21 368.7 136.26 368.7 cv
128.62 368.7 122.31 364.92 121.88 360.09 cv
@
150.54 352.5 mo
150.54 357.54 144.09 361.62 136.14 361.62 cv
128.5 361.62 122.19 357.84 121.76 353.01 cv
@
1.56 lw
141.78 349.98 mo
141.78 368.73 li
@
129.54 283.74 mo
129.54 368.7 li
@
136.86 384.3 mo
136.86 414.64 li
@
140.94 349.98 mo
182.47 349.98 li
@
332.36 433.04 mo
290.8 432.96 li
290.81 431.4 li
332.37 431.48 li
cp
296.4 436.37 mo
289.26 432.18 li
296.42 428.02 li
296.79 427.8 297.27 427.93 297.49 428.3 cv
297.7 428.68 297.58 429.15 297.2 429.37 cv
291.2 432.86 li
291.2 431.51 li
297.19 435.02 li
297.56 435.24 297.69 435.72 297.47 436.09 cv
297.25 436.46 296.77 436.59 296.4 436.37 cv
cp
f
289.26 432.22 mo
289.26 349.98 li
@
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
systemdict begin
ZALRCY+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B77FE2C1AAE0EC93E571B636F5347D3714722A84750C1B29A3
9B8539044786FB4D21214EC790263603D768977575E3DFEDEB06ED210B719A19
51D9CD3A1CEDC2DBBBA9F50EB52B23C7BC0E7C5116FC1274BBC998D424E35185
95216116D6B76CDF4E0BCDAF27025304BCCA1980CECDB742C27E839F34D438C5
CC751D1A202A9B0CBB89CFB07DF67AB5E8EE4143A6BB864E7AFD01C988BDA57B
AAFB46475895EDA7DC9A3D645E52BE6B50DA1C1724C629C5533C12A95B43E497
C080A6D8450597> |-
/d <1C60D8A8C9B7A73DB691FFA60643BA6E96E7C7C2DDEF80CD1CC4E8DF6116
160F4B6BEC2C5A3FD0EFF676934C9853DC2AFCDE40FCD6A7962C3CCB0F256744
23D13531F42E3841F98600FD9B5DAA96A9419079DE3DDCAA270D347DBB8C114A
6FB1D82FDCA79BCBEE0518D5F888E4054C9768F6434472E73165A3126D5BD56D
8E1B8CDE44ACA6EF9615CFA40888BA656F1BE25E2866BF1A2FCA5AAAEE4F1293
B59360F147EFB7B6289498A57B7354A472AFD0CD81D495F51B9A26687A9D12C5
CDEBB20FAC42D12F908FE6C73F05DD391AF99090AF4E6EC3C789DC0A2BD1E10D
AD701AF1166FE91AEB4B604D5FDFFD4C81AD27FA4031BCD4AA2A60CE2C008F46
6E3EE8EE5415C047> |-
/e <1C60D8A8C9B77FE2CEBC851BC1D55BEFCC6636F8B07C124AAAAD6AC237A2
E0178B712156D556EE6FB45645CC6CBEAF8E97CBE4F832E2F621B213660DC4F9
A0F0631BE4B937D282930FF5CB48932FE4C3118EA58028F6EA53582C8DE2452B
3135816834C0E4D947BA5BD58F1D5AB9E28423127BFB8D26FB6EEF3AB8E9B9D2
410DD3AF694FFEBD7B7FE682E5B937ACC2C6A43489D3F9EF3944E87BAD6842E7
160B3BC59BD87C15EE67EE949D19E2030F058D91390B17854C6C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
ZALRCY+TimesNewRomanPS-ItalicMT /Encoding get
dup 99 /c put
dup 100 /d put
dup 101 /e put
pop
%ADOEndSubsetFont
/ZALRCY+TimesNewRomanPS-ItalicMT*1 
[48{/.notdef}rp /zero /one /two /three /four 44{/.notdef}rp /a 
/b /c /d /e 12{/.notdef}rp /r 141{/.notdef}rp]
ZALRCY+TimesNewRomanPS-ItalicMT nf
ZALRCY+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
145.27 201.34 mo
(c)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
155.95 207.22 mo
(1)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [24.024 0 0 -24.024 0 0 ]msf
249.36 198.72 mo
(c)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
260.04 204.62 mo
(3)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
397.87 195.65 mo
(c)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
408.55 201.53 mo
(2)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
487.42 224.83 mo
(c)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
498.1 230.71 mo
(4)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
553.34 217.22 mo
(d)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
565.34 223.1 mo
(0)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
465.31 301.94 mo
(d)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
477.31 307.82 mo
(2)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
178.61 304.44 mo
(d)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
190.61 310.32 mo
(1)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
105.89 328.34 mo
(e)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
116.57 334.22 mo
(4)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
239.95 328.92 mo
(e)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
250.63 334.8 mo
(3)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
520.32 342.1 mo
(e)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
531 347.98 mo
(0)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [24.024 0 0 -24.024 0 0 ]msf
483.58 422.02 mo
(r)sh
%ADOBeginSubsetFont: PBAAAA+Calibri,Italic Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /PBAAAA+Calibri,Italic def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 146 /quoteright put
def
/FontBBox {-725 -276 1260 1014} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B7A0865786BC308F2320639BB536432D0898AEB6E2A7
5CF9EC2A9EC0700EC985467C5EB75BAFAE6BE92B47D4665D1FFB7CDD63B993D8
CAF292A657BB84C1D7B11457D454AE84F45E42136F191EC6E3B3983E5AB3335D
EC1B5DA070AA269E3098A95D700B7A877E0B90FEA50C57240FE69A623C227A24
32F0D09A0AB3B37F9929A87FD9AD5B69FC3DDBBDE0A657548A6A0CA57D1D47D5
FE926BE7FF962360C0A9B770C0895EF6EBFFA4DC6BEC37F71748863B9F794A34
58D5F95997EC1E7D14F6BEF0F24D8F15E48015D300AB35CF12A219244AC1E96B
AAD98C9FB5AA9AB620D4759046C90591AD5B5DB9058FED9B2DEAA5C289619C69
E6B8AFBA78E92BA7CAD51162C8E19B9CE3A002008E1F2E7A1C2CA8B94E16AF51
1B72C953877A73A560545823ADD0EF14F1A99CBC77A9AEB372F7F84402780C34
1A1F3B424BB5BB3D045333E21109BF0BFC6DF2C339E12B2157F8A656B74474F0
BCE53FA32D21B2F841C437CBC8FF800542665AE6B6AE1AB4D9D2CA7B4C4D6695
3BDAE1223DC341C8BCCF7DF80B0EAE877C569B5D2FC0CF06741B78357213D2C0
36105C76D1B0229545F400BC4FF0C330A129DED3A7DD021F5A29FF7E933705A9
10D64D991F85DB9CFE06DFBE23A1219DBA72230B> |-
/quoteright <1C60D8A8C9B8707CDC4EAE46E9450EA82CAF3EF4EFC6C32CC4C
6719FC459ACE9302A903D8836EA00BF2313033E23772051CE61A6AAEE24EB811
54CC5EB2B35F7890B13206AF5A2147451EF9B2EA06BCC81BCD8EF9DE08C4EC5A
989EE7EB4D3B4015C9623002C67054B4CECC1D4482CCB21B84C4E4028BBD6D53
75D7F20C9441B50DA7B9EDB87F8A908DA079B476A0DDBFB8696AC5D5959> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/ZALRCZ+Calibri,Italic /PBAAAA+Calibri,Italic findfont ct_VMDictPut
/ZALRCZ+Calibri,Italic*1 
[146{/.notdef}rp /quoteright 109{/.notdef}rp]
ZALRCZ+Calibri,Italic nf
ZALRCZ+Calibri,Italic*1 [24.024 0 0 -24.024 0 0 ]msf
492.94 422.02 mo
(\222)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [15.984 0 0 -15.984 0 0 ]msf
498.94 427.9 mo
(1)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [24.024 0 0 -24.024 0 0 ]msf
571.97 406.13 mo
(r)sh
ZALRCZ+Calibri,Italic*1 [24.024 0 0 -24.024 0 0 ]msf
581.33 406.13 mo
(\222)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [15.984 0 0 -15.984 0 0 ]msf
587.33 412.01 mo
(0)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
375.38 423.05 mo
(r)sh
ZALRCZ+Calibri,Italic*1 [24 0 0 -24 0 0 ]msf
384.74 423.05 mo
(\222)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
390.74 428.93 mo
(2)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
246.62 406.25 mo
(r)sh
ZALRCZ+Calibri,Italic*1 [24 0 0 -24 0 0 ]msf
255.98 406.25 mo
(\222)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
261.98 412.13 mo
(3)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
140.83 406.3 mo
(r)sh
ZALRCZ+Calibri,Italic*1 [24 0 0 -24 0 0 ]msf
150.19 406.3 mo
(\222)sh
ZALRCY+TimesNewRomanPS-ItalicMT*1 [15.96 0 0 -15.96 0 0 ]msf
156.19 412.18 mo
(4)sh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/ZALRCZ+Calibri,Italic*1 uf
/ZALRCZ+Calibri,Italic uf
/PBAAAA+Calibri,Italic uf
/ZALRCY+TimesNewRomanPS-ItalicMT*1 uf
/ZALRCY+TimesNewRomanPS-ItalicMT uf
/TimesNewRomanPS-ItalicMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF

%%EndDocument
 @endspecial 766 w FH(Fig.)28 b(2:)h(A)g(5-bit)f(RH-SMPO)-192
1959 y(corresponds)d(to)j(the)f(set)i(of)e(all)h(solutions)f(to)40
b FR(f)1246 1971 y FO(1)1299 1959 y FG(=)18 b FF(\001)9
b(\001)g(\001)18 b FG(=)29 b FR(f)1606 1971 y FD(s)1653
1959 y FG(=)18 b FH(0.)27 b(An)o(y)g(\002nite)g(set)i(of)e(points)g
(can)g(be)h(construed)e(as)i(the)f(v)n(ariety)g(of)g(an)h(ideal)-192
2069 y(\227)h(a)g(concept)e(we)i(e)o(xploit)f(to)g(model)g(the)g(set)i
(of)e(\(\002nite\))g(states)h(of)g(the)f(machine.)-109
2181 y(An)g(ideal)h(may)f(ha)n(v)o(e)f(man)o(y)g(generating)g(sets.)i
(The)f(set)h FR(G)18 b FG(=)g FF(f)p FR(g)1856 2193 y
FO(1)1890 2181 y FJ(;)9 b(:)g(:)g(:)h(;)f FR(g)2091 2193
y FD(t)2117 2181 y FF(g)28 b FH(is)h(called)g(a)f(Gr)7
b(\250)-35 b(obner)27 b(basis)i(of)f FR(J)33 b FH(if)28
b(and)g(only)g(if)g(the)h(leading)-192 2291 y(term)22
b(of)f(all)i(polynomials)d(in)i FR(J)k FH(is)d(di)n(visible)e(be)h(the)
g(leading)f(term)h(of)f(some)h(polynomial)e FR(g)2546
2303 y FD(i)2589 2291 y FH(in)i FR(G)p FH(:)h(i.e.)f
FF(8)12 b FR(f)28 b FF(2)15 b FR(J)r FJ(;)9 b FF(9)p
FR(g)3244 2303 y FD(i)3281 2291 y FF(2)15 b FR(G)23 b(s)p
FJ(:)n FR(t)6 b FJ(:)22 b FR(L)o(T)11 b FG(\()p FR(g)3737
2303 y FD(i)3757 2291 y FG(\))23 b FF(j)g FR(L)o(T)10
b FG(\()i FR(f)g FG(\))p FH(.)-192 2401 y(The)33 b(f)o(amous)g(Buchber)
o(ger')-5 b(s)32 b(algorithm,)g(gi)n(v)o(en)g(in)i(te)o(xtbook)e([13)n
(],)i(is)h(used)e(to)h(compute)e(a)j(Gr)7 b(\250)-35
b(obner)32 b(basis)i(\(GB\).)g(Operating)e(on)h(input)-192
2511 y FR(F)f FG(=)25 b FF(f)12 b FR(f)60 2523 y FO(1)94
2511 y FJ(;)d(:)g(:)g(:)h(;)21 b FR(f)292 2523 y FD(s)321
2511 y FF(g)p FH(,)41 b(and)f(subject)g(to)h(the)f(imposed)g(term)g
(order)f FJ(>)p FH(,)i(it)g(deri)n(v)o(es)f FR(G)25 b
FG(=)f FR(GB)p FG(\()p FR(J)t FG(\))h(=)g FF(f)p FR(g)2923
2523 y FO(1)2957 2511 y FJ(;)9 b(:)g(:)g(:)h(;)f FR(g)3158
2523 y FD(t)3183 2511 y FF(g)p FH(.)41 b(Buchber)o(ger')-5
b(s)38 b(algorithm)-192 2631 y(repeatedly)20 b(computes)h
FR(S)q FH(-polynomials.)e(F)o(or)j(pairs)g FG(\()12 b
FR(f)1431 2643 y FD(i)1453 2631 y FJ(;)21 b FR(f)1531
2643 y FD(j)1555 2631 y FG(\))16 b FF(2)f FR(F)7 b FH(,)23
b FR(S)7 b(pol)t(y)p FG(\()12 b FR(f)2041 2643 y FD(i)2061
2631 y FJ(;)21 b FR(f)2139 2643 y FD(j)2163 2631 y FG(\))16
b(=)2350 2598 y FD(L)p 2301 2612 134 4 v 2301 2661 a(l)q(t)t
FN(\()9 b FD(f)2392 2672 y FL(i)2410 2661 y FN(\))2453
2631 y FF(\001)21 b FR(f)2522 2643 y FD(i)2552 2631 y
FF(\000)2689 2598 y FD(L)p 2635 2612 143 4 v 2635 2661
a(l)q(t)t FN(\()9 b FD(f)2733 2672 y FL(j)2753 2661 y
FN(\))2795 2631 y FF(\001)21 b FR(f)2873 2643 y FD(j)2897
2631 y FH(,)h(where)g FR(L)16 b FG(=)f FR(L)l(C)r(M)s
FG(\()p FR(LM)s FG(\()d FR(f)3698 2643 y FD(i)3722 2631
y FG(\))p FJ(;)d FR(LM)s FG(\()j FR(f)3982 2643 y FD(j)4007
2631 y FG(\)\))p FH(.)-192 2805 y(Reducing)18 b FR(S)7
b(pol)t(y)p FG(\()12 b FR(f)412 2817 y FD(i)432 2805
y FJ(;)21 b FR(f)510 2817 y FD(j)534 2805 y FG(\))599
2758 y FD(F)581 2805 y FF(\000)-58 b(!)671 2817 y FN(+)737
2805 y FR(r)22 b FH(cancels)d(the)g(leading)f(terms)h(of)31
b FR(f)1770 2817 y FD(i)1791 2805 y FJ(;)21 b FR(f)1869
2817 y FD(j)1913 2805 y FH(and)d(gi)n(v)o(es)h(a)g(polynomial)e
FR(r)22 b FH(with)d(a)h(ne)n(w)f(leading)f(term.)g(This)h(remainder)
-192 2919 y FR(r)30 b FH(is)e(added)d(to)i(the)g(current)f(basis)h(and)
g FR(S)7 b(pol)t(y)p FG(\()12 b FR(f)1269 2931 y FD(i)1289
2919 y FJ(;)21 b FR(f)1367 2931 y FD(j)1391 2919 y FG(\))28
b FH(computations)d(are)h(repeated)g(for)g(all)i(pairs)f(of)f
(polynomials)f(until)i(all)h FR(S)q FH(-polynomials)-192
3029 y(reduce)f(to)i(0.)-109 3140 y FR(F)-6 b(ermat')m(s)31
b(little)h(theor)m(em:)e FH(F)o(or)h(an)o(y)f FK(a)21
b FF(2)f FQ(F)1225 3152 y FD(q)1260 3140 y FJ(;)9 b FK(a)1344
3110 y FD(q)1399 3140 y FG(=)20 b FK(a)p FH(.)32 b(Therefore,)c(the)k
(polynomial)d FR(x)2549 3110 y FD(q)2596 3140 y FF(\000)13
b FR(x)31 b FH(v)n(anishes)g(\()p FG(=)19 b FH(0\))31
b(o)o(v)o(er)f FQ(F)3499 3152 y FD(q)3534 3140 y FH(,)h(and)g(is)h
(called)f(a)-192 3261 y(v)n(anishing)c(polynomial.)g(W)-7
b(e)30 b(denote)e(by)h FR(J)1124 3273 y FO(0)1177 3261
y FG(=)19 b FF(h)p FR(x)1330 3219 y FD(q)1330 3287 y
FO(1)1377 3261 y FF(\000)12 b FR(x)1491 3273 y FO(1)1525
3261 y FJ(;)d(:)g(:)g(:)h(;)f FR(x)1723 3219 y FD(q)1723
3288 y(d)1772 3261 y FF(\000)j FR(x)1886 3274 y FD(d)1924
3261 y FF(i)29 b FH(the)h(ideal)f(of)f(all)i(v)n(anishing)d
(polynomials)h(in)h FQ(F)3455 3273 y FD(q)3490 3261 y
FG([)p FR(x)3550 3273 y FO(1)3584 3261 y FJ(;)9 b(:)g(:)g(:)h(;)f
FR(x)3782 3274 y FD(d)3820 3261 y FG(])p FH(.)30 b(When)-192
3388 y FR(q)18 b FG(=)g FH(2)-7 3358 y FD(k)25 3388 y
FJ(;)9 b FR(x)94 3358 y FD(q)141 3388 y FF(\000)j FR(x)17
b FG(=)h FR(x)392 3358 y FD(q)439 3388 y FG(+)12 b FR(x)28
b FH(as)h FF(\000)p FH(1)18 b FG(=)g(+)p FH(1)28 b(o)o(v)o(er)f
FQ(F)1247 3411 y FO(2)1278 3393 y FL(k)1308 3388 y FH(.)-109
3511 y(Gr)7 b(\250)-35 b(obner)18 b(bases)j(can)f(be)g(used)g(to)g
FR(eliminate)g FH(v)n(ariables)f(from)g(an)h(ideal.)g(Gi)n(v)o(en)f
(ideal)h FR(J)f FG(=)14 b FF(h)e FR(f)2620 3523 y FO(1)2656
3511 y FJ(;)d(:)g(:)g(:)g(;)21 b FR(f)2853 3523 y FD(s)2882
3511 y FF(i)15 b(\032)f FQ(F)3059 3523 y FD(q)3094 3511
y FG([)p FR(x)3154 3523 y FO(1)3188 3511 y FJ(;)9 b(:)g(:)g(:)h(;)f
FR(x)3386 3524 y FD(d)3425 3511 y FG(])p FH(,)20 b(the)g
FR(l)3636 3481 y FD(t)t(h)3714 3511 y FH(elimination)-192
3626 y(ideal)28 b FR(J)33 3639 y FD(l)86 3626 y FH(is)g(the)g(ideal)g
(of)g FQ(F)638 3638 y FD(q)673 3626 y FG([)p FR(x)733
3639 y FD(l)s FN(+)p FO(1)835 3626 y FJ(;)9 b(:)g(:)g(:)h(;)f
FR(x)1033 3639 y FD(d)1071 3626 y FG(])29 b FH(de\002ned)e(by)g
FR(J)1542 3639 y FD(l)1585 3626 y FG(=)17 b FR(J)e FF(\\)c
FQ(F)1836 3638 y FD(q)1872 3626 y FG([)p FR(x)1932 3639
y FD(l)s FN(+)p FO(1)2034 3626 y FJ(;)e(:)g(:)g(:)h(;)f
FR(x)2232 3639 y FD(d)2270 3626 y FG(])p FH(.)28 b(V)-9
b(ariable)28 b(elimination)e(can)i(be)g(achie)n(v)o(ed)e(by)i
(computing)-192 3736 y(a)h(Gr)7 b(\250)-35 b(obner)27
b(basis)i(of)f FR(J)33 b FH(w)-5 b(.r)g(.t.)28 b(elimination)f(orders:)
-192 3897 y Fw(Theor)o(em)i(IV)-12 b(.1.)40 b FR(\(Elimination)25
b(Theor)m(em[13)n(]\))j(Let)g(J)22 b FF(\032)17 b FQ(F)1631
3920 y FO(2)1662 3902 y FL(k)1693 3897 y FG([)p FR(x)1753
3909 y FO(1)1787 3897 y FJ(;)9 b(:)g(:)g(:)h(;)f FR(x)1985
3910 y FD(d)2024 3897 y FG(])27 b FR(be)g(an)g(ideal)g(and)f(let)i(G)g
(be)f(a)g(Gr)3110 3898 y(\250)3103 3897 y(obner)g(basis)h(of)f(J)k
(with)d(r)m(espect)-192 4007 y(to)f(a)f(le)n(xico)o(gr)o(aphic)f(or)m
(dering)h(wher)m(e)g(x)1026 4019 y FO(1)1079 4007 y FJ(>)17
b FR(x)1198 4019 y FO(2)1250 4007 y FJ(>)g FF(\001)9
b(\001)g(\001)18 b FJ(>)f FR(x)1556 4020 y FD(d)1594
4007 y FR(.)27 b(Then)f(for)h(e)o(very)f FH(0)17 b FF(\024)g
FR(l)22 b FF(\024)17 b FR(d)t(,)27 b(the)f(set)h(G)2833
4020 y FD(l)2875 4007 y FG(=)17 b FR(G)11 b FF(\\)g FQ(F)3145
4030 y FO(2)3176 4012 y FL(k)3206 4007 y FG([)p FR(x)3266
4020 y FD(l)s FN(+)p FO(1)3369 4007 y FJ(;)e(:)g(:)g(:)h(;)f
FR(x)3567 4020 y FD(d)3605 4007 y FG(])27 b FR(is)g(a)g(Gr)3905
4008 y(\250)3898 4007 y(obner)-192 4117 y(basis)i(of)f(the)h(l)t(-th)g
(elimination)e(ideal)h(J)1018 4130 y FD(l)1042 4117 y
FR(.)-192 4358 y(A.)41 b(P)-7 b(olynomial)27 b(Abstr)o(action)g(with)j
(Elimination)d(&)h(Gr)1527 4359 y(\250)1520 4358 y(obner)g(Bases)-109
4498 y FH(The)f(authors)f(of)h([6)o(])g(sho)n(wed)g(that)g(for)f(an)o
(y)h(combinational)d(logic)j(block,)f(a)i(canonical)d(w)o(ord-le)n(v)o
(el)h(polynomial)f(representation)g(can)i(be)-192 4608
y(deri)n(v)o(ed)g(through)f(Gr)7 b(\250)-35 b(obner)26
b(bases)j(computed)e(with)h(elimination)f(orders.)h(Our)g(approach)e
(is)j(based)f(on)g(their)g(result,)g(which)g(we)h(reproduce)-192
4718 y(here:)-192 4879 y Fw(Lemma)23 b(IV)-12 b(.1.)34
b FR(\(F)-5 b(r)l(om)22 b([6]\))g(Given)f(a)g(combinational)e(cir)m
(cuit)f(C)24 b(with)e(k)q(-bit)f(input)g(A)15 b FG(=)f(\()p
FR(a)2531 4891 y FO(0)2566 4879 y FJ(;)9 b(:)g(:)g(:)h(;)f
FR(a)2769 4892 y FD(k)q FC(\000)p FO(1)2879 4879 y FG(\))23
b FR(and)d(k)q(-bit)i(output)e(R)15 b FG(=)f(\()p FR(r)3699
4891 y FO(0)3735 4879 y FJ(;)9 b(:)g(:)g(:)h(;)f FR(r)3928
4892 y FD(k)q FC(\000)p FO(1)4039 4879 y FG(\))p FR(.)-192
4989 y(Denote)39 b(by)h(x)244 5001 y FO(1)278 4989 y
FJ(;)9 b(:)g(:)g(:)h(;)f FR(x)476 5002 y FD(d)555 4989
y FR(all)40 b(the)f(bit-le)o(vel)g(variables)h(of)c(C)r(.)k(Let)g(J)28
b FG(=)d FF(h)12 b FR(f)2074 5001 y FO(1)2109 4989 y
FJ(;)d(:)g(:)g(:)h(;)21 b FR(f)2307 5001 y FD(s)2336
4989 y FF(i)k(\032)f FQ(F)2533 5012 y FO(2)2564 4994
y FL(k)2595 4989 y FG([)p FR(x)2655 5001 y FO(1)2690
4989 y FJ(;)9 b(:)g(:)g(:)g(;)g FR(x)2887 5002 y FD(d)2926
4989 y FJ(;)g FR(R)p FJ(;)g FR(A)p FG(])40 b FR(denote)e(all)i(the)g
(polynomials)-192 5110 y(corr)m(esponding)31 b(to)i(the)g(lo)o(gic)f
(gates)h(of)g(the)g(cir)m(cuit.)g(Let)g(J)1638 5122 y
FO(0)1694 5110 y FG(=)20 b FF(h)p FR(x)1848 5080 y FO(2)1848
5135 y(1)1897 5110 y FF(\000)13 b FR(x)2012 5122 y FO(1)2046
5110 y FJ(;)c(:)g(:)g(:)h(;)f FR(x)2244 5080 y FO(2)2244
5136 y FD(d)2295 5110 y FF(\000)k FR(x)2410 5123 y FD(d)2448
5110 y FJ(;)c FR(R)2531 5080 y FD(q)2579 5110 y FF(\000)k
FR(R)p FJ(;)c FR(A)2791 5080 y FD(q)2838 5110 y FF(\000)k
FR(A)p FF(i)33 b FR(be)g(the)g(vanishing)e(ideal,)h(so)i(that)-192
5235 y(J)17 b FG(+)c FR(J)-25 5247 y FO(0)31 5235 y FG(=)20
b FF(h)12 b FR(f)185 5247 y FO(1)221 5235 y FJ(;)d(:)g(:)g(:)h(;)21
b FR(f)419 5247 y FD(s)448 5235 y FJ(;)77 b FR(x)585
5205 y FO(2)585 5259 y(1)633 5235 y FF(\000)13 b FR(x)748
5247 y FO(1)783 5235 y FJ(;)c(:)g(:)g(:)h(;)f FR(x)981
5205 y FO(2)981 5260 y FD(d)1032 5235 y FF(\000)k FR(x)1147
5248 y FD(d)1185 5235 y FJ(;)c FR(R)1268 5205 y FD(q)1316
5235 y FF(\000)k FR(R)p FJ(;)c FR(A)1528 5205 y FD(q)1576
5235 y FF(\000)k FR(A)p FF(i)p FR(.)33 b(Compute)g(Gr)2224
5236 y(\250)2217 5235 y(obner)g(basis)g(G)22 b FG(=)e
FR(GB)p FG(\()p FR(J)d FG(+)c FR(J)3126 5247 y FO(0)3161
5235 y FG(\))34 b FR(w)-6 b(.r)d(.t.)33 b(le)n(x)h(term)h(or)m(der)e
(with)-192 5350 y(x)-155 5362 y FO(1)-103 5350 y FJ(>)16
b FR(x)15 5362 y FO(2)67 5350 y FJ(>)g FF(\001)9 b(\001)g(\001)17
b FJ(>)g FR(x)371 5363 y FD(d)426 5350 y FJ(>)f FR(R)h
FJ(>)f FR(A.)25 b(Then)g(G)1005 5363 y FD(d)1060 5350
y FG(=)16 b FR(G)10 b FF(\\)g FQ(F)1327 5373 y FO(2)1358
5355 y FL(k)1389 5350 y FG([)p FR(R)p FJ(;)f FR(A)p FG(])25
b FR(eliminates)g(the)h(internal)e(variables)h(x)2749
5362 y FO(1)2784 5350 y FJ(;)9 b(:)g(:)g(:)g(;)g FR(x)2981
5363 y FD(d)3045 5350 y FR(of)26 b(the)f(cir)m(cuit.)g(G)3583
5363 y FD(d)3646 5350 y FR(also)h(contains)-192 5460
y(the)j(wor)m(d-le)o(vel)e(polynomial)g(R)18 b FG(=)g
FE(F)i FG(\()p FR(A)p FG(\))29 b FR(whic)o(h)f(canonically)f(r)m(epr)m
(esents)i(the)f(function)f(of)i(the)f(cir)m(cuit.)-109
5621 y FH(The)41 b(authors)f(referred)g(to)h(the)h(elimination)e(\(le)o
(x\))g(order)h(with)g FF(f)p FR(internal)28 b(variables)40
b(x)2648 5633 y FO(1)2709 5621 y FJ(>)25 b FF(\001)9
b(\001)g(\001)26 b FJ(>)f FR(x)3039 5634 y FD(d)3077
5621 y FF(g)g FJ(>)g FF(f)p FR(wor)m(d-le)o(vel)i(output)41
b(R)p FF(g)24 b FJ(>)p eop end
%%Page: 5 5
TeXDict begin 5 4 bop 4063 -307 a FV(5)-192 -58 y FF(f)p
FR(wor)m(d-le)o(vel)27 b(input)44 b(A)p FF(g)g FH(as)h(the)f
FR(abstr)o(action)e(term)j(or)m(der)f(\(A)m(T)o(O\))p
FH(.)f(W)-7 b(e)46 b(will)f(no)n(w)e(sho)n(w)h(ho)n(w)g(to)g
(repeatedly)e(apply)i(Gr)7 b(\250)-35 b(obner)42 b(basis)-192
52 y(computations)26 b(with)j(A)-9 b(T)o(O)28 b(to)h(v)o(erify)e
(sequential)h(GF)h(circuits.)1085 221 y(V)-7 b(.)46 b(V)t
FI(E)t(R)t(I)t(FI)t(C)t(A)m(T)t(I)t(O)t(N)25 b(O)t(F)g
FH(S)t FI(E)t(Q)s(U)t(E)t(N)t(T)t(I)t(A)t(L)f FH(G)t(F)i(C)t
FI(I)t(R)t(C)t(U)t(I)t(T)t(S)-109 354 y FH(W)-7 b(e)36
b(follo)n(w)f(the)g(sequential)g(GF)h(circuit)f(model)f(of)h(Fig.)g(1,)
g(with)h(w)o(ord-le)n(v)o(el)d(v)n(ariables)i FR(A)p
FJ(;)9 b FR(B)p FJ(;)g FR(R)35 b FH(denoting)f FR(pr)m(esent)h(states)h
(\(PS\))e FH(and)-192 484 y FR(A)-141 454 y FC(0)-120
484 y FJ(;)9 b FR(B)-37 454 y FC(0)-16 484 y FJ(;)g FR(R)67
454 y FC(0)124 484 y FH(denoting)35 b FR(ne)n(xt)h(states)h(\(NS\))f
FH(of)g(the)g(machine;)f(where)g FR(A)23 b FG(=)2025
490 y FK(\345)2084 449 y FD(k)q FC(\000)p FO(1)2084 509
y FD(i)p FN(=)p FO(0)2204 484 y FR(a)2246 496 y FD(i)2267
484 y FK(b)2313 454 y FO(2)2344 431 y FL(i)2402 484 y
FH(for)35 b(the)i(PS)g(v)n(ariables)e(and)g FR(A)3344
454 y FC(0)3388 484 y FG(=)3475 490 y FK(\345)3534 449
y FD(k)q FC(\000)p FO(1)3534 509 y FD(i)p FN(=)p FO(0)3654
484 y FR(a)3696 454 y FC(0)3696 507 y FD(i)3717 484 y
FK(b)3763 454 y FO(2)3794 431 y FL(i)3852 484 y FH(for)h(NS)-192
601 y(v)n(ariables,)26 b(and)g(so)h(on.)f(The)h(normal)e(element)i
FK(b)f FH(is)i(gi)n(v)o(en.)d(V)-9 b(ariables)27 b FR(R)p
FG(\()p FR(R)2098 571 y FC(0)2118 601 y FG(\))h FH(correspond)c(to)j
(those)g(that)g(store)f(the)h(result,)g(and)f FR(A)p
FJ(;)9 b FR(B)p FG(\()p FR(A)3935 571 y FC(0)3956 601
y FJ(;)g FR(B)4039 571 y FC(0)4060 601 y FG(\))-192 711
y FH(store)21 b(input)g(operands.)e FR(E.g)o(.,)i FH(for)f(a)i(GF)g
(multiplier)m(,)e FR(A)1425 723 y FD(ini)n(t)1514 711
y FJ(;)9 b FR(B)1597 723 y FD(ini)n(t)1707 711 y FH(\(and)21
b FR(R)1928 723 y FD(ini)n(t)2031 711 y FG(=)15 b FH(0\))21
b(are)g(the)h(initial)f(v)n(alues)g(\(operands\))e(loaded)i(into)g(the)
g(re)o(gisters,)-192 821 y(and)26 b FR(R)18 b FG(=)f
FE(F)j FG(\()p FR(A)263 833 y FD(ini)n(t)352 821 y FJ(;)9
b FR(B)435 833 y FD(ini)n(t)523 821 y FG(\))18 b(=)g
FR(A)707 833 y FD(ini)n(t)806 821 y FF(\002)11 b FR(B)933
833 y FD(ini)n(t)1048 821 y FH(is)28 b(the)f(\002nal)g(result)g(after)g
FR(k)q FH(-c)o(ycles.)f(Our)h(approach)d(aims)k(to)f(\002nd)f(this)i
(polynomial)d(representation)-192 931 y(for)j FR(R)p
FH(.)-109 1038 y(Each)22 b(gate)h(in)g(the)g(combinational)d(logic)i
(is)i(represented)d(by)i(a)g(Boolean)f(polynomial.)f(T)-7
b(o)23 b(this)g(set)h(of)e(Boolean)g(polynomials,)f(we)i(append)-192
1168 y(the)h(polynomials)f(that)h(de\002ne)g(the)h(w)o(ord-le)n(v)o(el)
d(to)j(bit-le)n(v)o(el)e(relations)h(for)g(PS)h(and)f(NS)h(v)n
(ariables)f(\()p FR(A)16 b FG(=)2967 1174 y FK(\345)3026
1133 y FD(k)q FC(\000)p FO(1)3026 1193 y FD(i)p FN(=)p
FO(0)3146 1168 y FR(a)3188 1180 y FD(i)3209 1168 y FK(b)3255
1138 y FO(2)3286 1115 y FL(i)3307 1168 y FH(\).)25 b(W)-7
b(e)25 b(denote)f(this)h(set)g(of)-192 1285 y(polynomials)g(as)j(ideal)
f FR(J)22 b FG(=)17 b FF(h)12 b FR(f)742 1297 y FO(1)778
1285 y FJ(;)d(:)g(:)g(:)h(;)21 b FR(f)976 1297 y FD(s)1005
1285 y FF(i)d(\032)f FQ(F)1188 1308 y FO(2)1219 1290
y FL(k)1250 1285 y FG([)p FR(x)1310 1297 y FO(1)1345
1285 y FJ(;)9 b(:)g(:)g(:)h(;)f FR(x)1543 1298 y FD(d)1581
1285 y FJ(;)g FR(R)p FJ(;)g FR(R)1747 1254 y FC(0)1768
1285 y FJ(;)g FR(A)p FJ(;)g FR(A)1934 1254 y FC(0)1955
1285 y FJ(;)g FR(B)p FJ(;)g FR(B)2121 1254 y FC(0)2142
1285 y FG(])p FH(.)27 b(The)g(ideal)g(of)g(v)n(anishing)f(polynomials)f
FR(J)3478 1297 y FO(0)3541 1285 y FH(is)j(also)f(included,)-192
1395 y(and)h(then)g(the)g(implicit)h(FSM)g(unrolling)e(problem)f(is)k
(setup)e(for)g(abstraction.)-109 1502 y(The)33 b(con\002gurations)e(of)
j(the)f(\003ip-\003ops)g(are)g(the)h(states)g(of)g(the)f(machine.)f
FR(Since)h(the)h(set)g(of)g(states)g(is)g(a)g(\002nite)f(set)h(of)g
(points,)f(we)h(can)-192 1612 y(consider)26 b(it)h(as)g(the)g(variety)f
(of)h(an)f(ideal)g(r)m(elated)h(to)f(the)h(cir)m(cuit)g(\(fr)l(om)g
(Section)e(IV\))p FH(.)h(Moreo)o(v)o(er)m(,)d(since)k(we)g(are)g
(interested)f(in)g(the)h FR(function)-192 1722 y(encoded)d
FH(by)h(the)h(state)g(v)n(ariables)f(\(o)o(v)o(er)f FR(k)q
FH(-time)h(frames\),)g(we)h(can)f FR(pr)l(oject)h(this)g(variety)g
FH(on)f(the)h(w)o(ord-le)n(v)o(el)d(state)k(v)n(ariables,)d(starting)i
(from)-192 1832 y(the)j(initial)h(state)g FR(A)396 1844
y FD(ini)n(t)485 1832 y FJ(;)9 b FR(B)568 1844 y FD(ini)n(t)656
1832 y FH(.)30 b(Projection)e(of)i(v)n(arieties)f(\(geometry\))e
(corresponds)g(to)i(elimination)f(ideals)i(\(algebra\),)d(and)i(can)h
(be)f(analyzed)-192 1942 y(via)36 b(Gr)7 b(\250)-35 b(obner)34
b(bases.)i(Therefore,)e(we)j(emplo)o(y)d(a)j(Gr)7 b(\250)-35
b(obner)34 b(basis)j(computation)c(with)k(A)-9 b(T)o(O:)35
b(we)i(use)f(a)g FR(le)n(x)h(term)g(or)m(der)f FH(with)g
FR(bit-le)o(vel)-192 2052 y(variables)31 b FJ(>)g FR(wor)m(d-le)o(vel)f
(NS)i(outputs)e FJ(>)h FR(wor)m(d-le)o(vel)g(PS)g(inputs)p
FH(.)f(This)i(allo)n(ws)f(to)g(eliminate)g(all)h(the)f(bit-le)n(v)o(el)
f(v)n(ariables)g(and)h(deri)n(v)o(es)f(a)-192 2162 y(representation)e
(only)h(in)h(terms)f(of)h(w)o(ords.)f(Consequently)-5
b(,)28 b FR(k)q FH(-successi)n(v)o(e)h(Gr)7 b(\250)-35
b(obner)28 b(basis)i(computations)e(implicitly)h(unroll)g(the)h
(machine,)-192 2272 y(and)e(pro)o(vide)e(w)o(ord-le)n(v)o(el)h
(algebraic)g FR(k)q FH(-c)o(ycle)h(abstraction)g(for)f
FR(R)1795 2242 y FC(0)1845 2272 y FH(as)i FR(R)1994 2242
y FC(0)2034 2272 y FG(=)18 b FE(F)h FG(\()p FR(A)2273
2284 y FD(ini)n(t)2362 2272 y FJ(;)9 b FR(B)2445 2284
y FD(ini)n(t)2534 2272 y FG(\))p FH(.)-109 2387 y(Algorithm)22
b(1)i(describes)f(our)g(approach.)f(In)h(the)h(algorithm,)34
b FR(f)12 b(r)n(om)1911 2357 y FD(i)1957 2387 y FH(and)21
b FR(t)6 b(o)2170 2357 y FD(i)2215 2387 y FH(are)24 b(polynomial)d
(ideals)j(whose)g(v)n(arieties)f(are)h(the)g(v)n(aluations)-192
2497 y(of)35 b(w)o(ord-le)n(v)o(el)f(v)n(ariables)g FR(R)p
FJ(;)9 b FR(A)p FJ(;)g FR(B)36 b FH(and)f FR(R)1098 2467
y FC(0)1119 2497 y FJ(;)9 b FR(A)1202 2467 y FC(0)1223
2497 y FJ(;)g FR(B)1306 2467 y FC(0)1363 2497 y FH(in)36
b(the)f FR(i)p FH(-th)h(iteration;)e(and)h(the)h(notation)e(\223)p
FF(n)p FH(\224)h(signi\002es)h(that)g(the)f FR(N)5 b(S)37
b FH(in)f(iteration)e FG(\()p FR(i)p FG(\))-192 2607
y FH(becomes)28 b(the)g FR(PS)h FH(in)g(iteration)e FG(\()p
FR(i)12 b FG(+)g FH(1)p FG(\))p FH(.)p -192 2669 4284
7 v -192 2737 a Fl(ALGORITHM)28 b(1:)h Fu(Abstraction)e(via)f(implicit)
g(unrolling)h(for)f(Sequential)h(GF)e(circuit)i(v)o(eri\002cation)p
-192 2777 V -192 2854 a Fl(Input)p Fu(:)d(Circuit)i(polynomial)i(ideal)
e Fs(J)s Fu(,)h(v)n(anishing)h(ideal)e Fs(J)1404 2867
y FV(0)1438 2854 y Fu(,)f(initial)h(state)g(ideal)g Fs(R)p
Fq(\(=)17 b Fu(0)p Fq(\))p Fr(;)8 b Fj(G)f Fq(\()p Fs(A)2396
2866 y Fn(ini)o(t)2480 2854 y Fq(\))p Fr(;)h Fj(H)17
b Fq(\()p Fs(B)2687 2866 y Fn(ini)o(t)2771 2854 y Fq(\))-181
2967 y Fs(f)11 b(r)n(om)-31 2940 y FV(0)3 2967 y Fq(\()p
Fs(R)p Fr(;)d Fs(A)p Fr(;)g Fs(B)p Fq(\))15 b(=)i Fk(h)p
Fs(R)p Fr(;)8 b Fj(G)f Fq(\()p Fs(A)585 2979 y Fn(ini)o(t)669
2967 y Fq(\))p Fr(;)h Fj(H)17 b Fq(\()p Fs(B)876 2979
y Fn(ini)o(t)959 2967 y Fq(\))p Fk(i)p Fu(;)-192 3077
y Fs(i)f Fq(=)h Fu(0;)-192 3187 y Fl(r)o(epeat)-67 3270
y Fs(i)f Fk( )g Fs(i)10 b Fq(+)g Fu(1;)-67 3388 y Fs(G)16
b Fk( )p Fu(GB)p Fq(\()p Fk(h)p Fs(J)e Fq(+)c Fs(J)386
3401 y FV(0)430 3388 y Fq(+)21 b Fs(f)11 b(r)n(om)659
3361 y Fn(i)p Fm(\000)p FV(1)755 3388 y Fq(\()p Fs(R)p
Fr(;)d Fs(A)p Fr(;)g Fs(B)p Fq(\))p Fk(i)p Fq(\))25 b
Fu(with)h(A)-8 b(T)o(O;)-69 3505 y Fs(t)5 b(o)-6 3477
y Fn(i)14 3505 y Fq(\()p Fs(R)89 3477 y Fm(0)109 3505
y Fr(;)j Fs(A)184 3477 y Fm(0)204 3505 y Fr(;)g Fs(B)279
3477 y Fm(0)299 3505 y Fq(\))16 b Fk( )g Fs(G)10 b Fk(\\)g
Fi(F)605 3524 y FV(2)634 3507 y Fg(k)662 3505 y Fq([)p
Fs(R)729 3477 y Fm(0)749 3505 y Fr(;)e Fs(A)824 3477
y Fm(0)843 3505 y Fr(;)g Fs(B)918 3477 y Fm(0)938 3505
y Fr(;)g Fs(R)p Fr(;)g Fs(A)p Fr(;)g Fs(B)p Fq(])p Fu(;)-56
3621 y Fs(f)j(r)n(om)94 3594 y Fn(i)131 3621 y Fk( )j
Fs(t)5 b(o)283 3594 y Fn(i)304 3621 y Fq(\()p Fk(f)p
Fs(R)p Fr(;)j Fs(A)p Fr(;)g Fs(B)p Fk(g)i(n)g(f)p Fs(R)743
3594 y Fm(0)764 3621 y Fr(;)e Fs(A)839 3594 y Fm(0)859
3621 y Fr(;)g Fs(B)934 3594 y Fm(0)954 3621 y Fk(g)p
Fq(\))p Fu(;)-192 3731 y Fl(until)25 b Fs(i)16 b Fq(==)h
Fs(k)q Fu(;)-192 3850 y Fl(r)o(etur)o(n)36 b Fs(f)11
b(r)n(om)200 3823 y Fn(k)232 3850 y Fq(\()p Fs(R)316
3864 y Fn(f)c(inal)436 3850 y Fq(\))p -192 3899 V -192
4074 a Fw(Example)34 b(V)-12 b(.1.)43 b FR(W)-8 b(e)32
b(demonstr)o(ate)f(our)g(appr)l(oac)o(h)f(to)h(verify)i(the)e(5-bit)g
(RH-SMPO)g(cir)m(cuit)h(of)g(F)l(ig)o(.2.)e(The)i(normal)f(element)g
FK(b)h FR(in)g FQ(F)3941 4096 y FO(2)3972 4079 y Fz(5)4037
4074 y FR(is)-192 4195 y(known)c(to)g(be)h FK(b)18 b
FG(=)g FK(a)454 4165 y FO(5)489 4195 y FR(,)29 b(wher)m(e)g
FK(a)g FR(is)h(the)e(primitive)h(element.)f(The)h(cir)m(cuit)f(can)g
(be)h(described)f(by)g(the)h(ideal:)944 4349 y(J)23 b
FG(=)o FR(d)1110 4361 y FO(0)1156 4349 y FG(+)12 b FR(a)1275
4361 y FO(4)1308 4349 y FR(b)1350 4361 y FO(4)1385 4349
y FJ(;)d FR(c)1454 4361 y FO(1)1500 4349 y FG(+)j FR(a)1619
4361 y FO(0)1664 4349 y FG(+)g FR(a)1783 4361 y FO(4)1817
4349 y FJ(;)d FR(c)1886 4361 y FO(2)1932 4349 y FG(+)j
FR(b)2051 4361 y FO(0)2096 4349 y FG(+)g FR(b)2215 4361
y FO(4)2249 4349 y FJ(;)d FR(d)2323 4361 y FO(1)2369
4349 y FG(+)j FR(c)2483 4361 y FO(1)2516 4349 y FR(c)2553
4361 y FO(2)2588 4349 y FJ(;)d FR(c)2657 4361 y FO(3)2704
4349 y FG(+)j FR(a)2823 4361 y FO(1)2856 4349 y FR(a)2898
4361 y FO(4)2932 4349 y FJ(;)1068 4500 y FR(c)1105 4512
y FO(4)1151 4500 y FG(+)g FR(b)1270 4512 y FO(1)1304
4500 y FR(b)1346 4512 y FO(4)1380 4500 y FJ(;)d FR(d)1454
4512 y FO(2)1500 4500 y FG(+)j FR(c)1614 4512 y FO(3)1648
4500 y FR(c)1685 4512 y FO(4)1720 4500 y FJ(;)d FR(e)1789
4512 y FO(0)1835 4500 y FG(+)j FR(d)1954 4512 y FO(0)1999
4500 y FG(+)g FR(d)2118 4512 y FO(1)2152 4500 y FJ(;)d
FR(e)2221 4512 y FO(3)2267 4500 y FG(+)j FR(d)2386 4512
y FO(1)2431 4500 y FG(+)g FR(d)2550 4512 y FO(2)2584
4500 y FJ(;)d FR(e)2653 4512 y FO(4)2699 4500 y FG(+)j
FR(d)2818 4512 y FO(2)2851 4500 y FJ(;)1068 4648 y FR(R)1119
4660 y FO(0)1165 4648 y FG(+)g FR(r)1274 4660 y FO(4)1320
4648 y FG(+)g FR(e)1434 4660 y FO(0)1468 4648 y FJ(;)d
FR(R)1551 4660 y FO(1)1597 4648 y FG(+)j FR(r)1706 4660
y FO(0)1740 4648 y FJ(;)d FR(R)1823 4660 y FO(2)1870
4648 y FG(+)j FR(r)1979 4660 y FO(1)2013 4648 y FJ(;)d
FR(R)2096 4660 y FO(3)2142 4648 y FG(+)j FR(r)2251 4660
y FO(2)2297 4648 y FG(+)g FR(e)2411 4660 y FO(3)2445
4648 y FJ(;)d FR(R)2528 4660 y FO(4)2574 4648 y FG(+)j
FR(r)2683 4660 y FO(3)2729 4648 y FG(+)g FR(e)2843 4660
y FO(4)2877 4648 y FJ(;)1068 4818 y FR(A)g FG(+)g FR(a)1250
4830 y FO(0)1283 4818 y FK(a)1335 4784 y FO(5)1382 4818
y FG(+)g FR(a)1501 4830 y FO(1)1534 4818 y FK(a)1586
4784 y FO(10)1664 4818 y FG(+)g FR(a)1783 4830 y FO(2)1816
4818 y FK(a)1868 4784 y FO(20)1945 4818 y FG(+)g FR(a)2064
4830 y FO(3)2098 4818 y FK(a)2150 4784 y FO(9)2197 4818
y FG(+)g FR(a)2316 4830 y FO(4)2349 4818 y FK(a)2401
4784 y FO(18)2467 4818 y FJ(;)1068 4989 y FR(B)g FG(+)g
FR(b)1250 5001 y FO(0)1283 4989 y FK(a)1335 4954 y FO(5)1382
4989 y FG(+)g FR(b)1501 5001 y FO(1)1534 4989 y FK(a)1586
4954 y FO(10)1664 4989 y FG(+)g FR(b)1783 5001 y FO(2)1816
4989 y FK(a)1868 4954 y FO(20)1945 4989 y FG(+)g FR(b)2064
5001 y FO(3)2098 4989 y FK(a)2150 4954 y FO(9)2197 4989
y FG(+)g FR(b)2316 5001 y FO(4)2349 4989 y FK(a)2401
4954 y FO(18)2467 4989 y FJ(;)1068 5159 y FR(R)1119 5124
y FC(0)1151 5159 y FG(+)g FR(r)1262 5124 y FC(0)1260
5179 y FO(0)1295 5159 y FK(a)1347 5124 y FO(5)1393 5159
y FG(+)g FR(r)1504 5124 y FC(0)1502 5179 y FO(1)1537
5159 y FK(a)1589 5124 y FO(10)1666 5159 y FG(+)g FR(r)1777
5124 y FC(0)1775 5179 y FO(2)1809 5159 y FK(a)1861 5124
y FO(20)1939 5159 y FG(+)g FR(r)2050 5124 y FC(0)2048
5179 y FO(3)2082 5159 y FK(a)2134 5124 y FO(9)2181 5159
y FG(+)g FR(r)2292 5124 y FC(0)2290 5179 y FO(4)2324
5159 y FK(a)2376 5124 y FO(18)2442 5159 y FJ(;)1068 5329
y FR(R)g FG(+)g FR(r)1240 5341 y FO(0)1274 5329 y FK(a)1326
5295 y FO(5)1372 5329 y FG(+)g FR(r)1481 5341 y FO(1)1516
5329 y FK(a)1568 5295 y FO(10)1645 5329 y FG(+)g FR(r)1754
5341 y FO(2)1788 5329 y FK(a)1840 5295 y FO(20)1918 5329
y FG(+)g FR(r)2027 5341 y FO(3)2061 5329 y FK(a)2113
5295 y FO(9)2160 5329 y FG(+)g FR(r)2269 5341 y FO(4)2303
5329 y FK(a)2355 5295 y FO(18)2421 5329 y FH(;)-109 5511
y FR(In)24 b(the)g(\002r)o(st)i(iter)o(ation,)35 b(f)12
b(r)n(om)774 5481 y FO(0)826 5511 y FG(=)k FF(f)p FR(R)p
FJ(;)33 b FR(A)1107 5523 y FD(ini)n(t)1206 5511 y FG(+)10
b FR(a)1323 5523 y FO(0)1356 5511 y FK(a)1408 5481 y
FO(5)1453 5511 y FG(+)g FR(a)1570 5523 y FO(1)1603 5511
y FK(a)1655 5481 y FO(10)1731 5511 y FG(+)g FR(a)1848
5523 y FO(2)1881 5511 y FK(a)1933 5481 y FO(20)2009 5511
y FG(+)g FR(a)2126 5523 y FO(3)2160 5511 y FK(a)2212
5481 y FO(9)2256 5511 y FG(+)g FR(a)2373 5523 y FO(4)2407
5511 y FK(a)2459 5481 y FO(18)2525 5511 y FJ(;)34 b FR(B)2633
5523 y FD(ini)n(t)2731 5511 y FG(+)10 b FR(b)2848 5523
y FO(0)2882 5511 y FK(a)2934 5481 y FO(5)2978 5511 y
FG(+)g FR(b)3095 5523 y FO(1)3129 5511 y FK(a)3181 5481
y FO(10)3257 5511 y FG(+)g FR(b)3374 5523 y FO(2)3407
5511 y FK(a)3459 5481 y FO(20)3535 5511 y FG(+)g FR(b)3652
5523 y FO(3)3685 5511 y FK(a)3737 5481 y FO(9)3782 5511
y FG(+)g FR(b)3899 5523 y FO(4)3932 5511 y FK(a)3984
5481 y FO(18)4050 5511 y FF(g)-192 5621 y FR(denotes)28
b(the)g(initial)h(state)o(.)p eop end
%%Page: 6 6
TeXDict begin 6 5 bop -192 -307 a FV(6)-109 -58 y FR(After)39
b(the)g(GB)g(computation)d(is)k(performed)e(with)h(A)m(T)o(O,)g(we)g
(\002nd)d(t)6 b(o)2080 -88 y FO(1)2138 -58 y FG(=)24
b FF(f)p FR(R)2320 -88 y FC(0)2340 -58 y FG(\()p FK(a)2424
-88 y FO(4)2475 -58 y FG(+)14 b FK(a)2606 -88 y FO(3)2657
-58 y FG(+)h FH(1)p FG(\))p FR(A)2862 -88 y FO(16)2862
-34 y FD(ini)n(t)2950 -58 y FR(B)3001 -88 y FO(16)3001
-34 y FD(ini)n(t)3105 -58 y FG(+)g(\()p FK(a)3269 -88
y FO(4)3319 -58 y FG(+)g FK(a)3451 -88 y FO(2)3486 -58
y FG(\))p FR(A)3569 -88 y FO(16)3569 -34 y FD(ini)n(t)3658
-58 y FR(B)3709 -88 y FO(4)3709 -35 y FD(ini)n(t)3813
-58 y FG(+)g(\()p FK(a)3977 -88 y FO(3)4027 -58 y FG(+)-192
66 y FH(1)p FG(\))p FR(A)-67 36 y FO(16)-67 90 y FD(ini)n(t)21
66 y FR(B)72 36 y FO(2)72 89 y FD(ini)n(t)175 66 y FG(+)e(\()p
FK(a)337 36 y FO(4)387 66 y FG(+)h FK(a)518 36 y FO(3)567
66 y FG(+)g FH(1)p FG(\))p FR(A)771 36 y FO(16)771 90
y FD(ini)n(t)859 66 y FR(B)910 78 y FD(ini)n(t)1012 66
y FG(+)g(\()p FK(a)1175 36 y FO(4)1225 66 y FG(+)f FK(a)1355
36 y FO(3)1405 66 y FG(+)g FK(a)1535 36 y FO(2)1584 66
y FG(+)h FH(1)p FG(\))p FR(A)1788 36 y FO(8)1788 90 y
FD(ini)n(t)1876 66 y FR(B)1927 36 y FO(8)1927 90 y FD(ini)n(t)2030
66 y FG(+)f(\()p FK(a)2192 36 y FO(4)2242 66 y FG(+)h
FK(a)2373 36 y FO(3)2422 66 y FG(+)g FK(a)g FG(+)g FH(1)p
FG(\))p FR(A)2771 36 y FO(8)2771 90 y FD(ini)n(t)2859
66 y FR(B)2910 36 y FO(4)2910 89 y FD(ini)n(t)3013 66
y FG(+)f(\()p FK(a)3175 36 y FO(3)3225 66 y FG(+)g FK(a)i
FG(+)e FH(1)p FG(\))p FR(A)3573 36 y FO(8)3573 90 y FD(ini)n(t)3662
66 y FR(B)3713 36 y FO(2)3713 89 y FD(ini)n(t)3815 66
y FG(+)h(\()p FK(a)3978 36 y FO(4)4027 66 y FG(+)-192
190 y FK(a)-140 160 y FO(2)-105 190 y FG(\))p FR(A)-22
160 y FO(8)-22 214 y FD(ini)n(t)67 190 y FR(B)118 202
y FD(ini)n(t)223 190 y FG(+)i(\()p FK(a)388 160 y FO(4)441
190 y FG(+)g FK(a)574 160 y FO(2)609 190 y FG(\))p FR(A)692
160 y FO(4)692 213 y FD(ini)n(t)781 190 y FR(B)832 160
y FO(16)832 214 y FD(ini)n(t)937 190 y FG(+)h(\()p FK(a)1103
160 y FO(4)1155 190 y FG(+)f FK(a)1288 160 y FO(3)1340
190 y FG(+)g FK(a)i FG(+)e FH(1)p FG(\))p FR(A)1697 160
y FO(4)1697 213 y FD(ini)n(t)1785 190 y FR(B)1836 160
y FO(8)1836 214 y FD(ini)n(t)1941 190 y FG(+)h(\()p FK(a)2107
160 y FO(2)2142 190 y FG(\))p FR(A)2225 160 y FO(4)2225
213 y FD(ini)n(t)2314 190 y FR(B)2365 160 y FO(4)2365
213 y FD(ini)n(t)2470 190 y FG(+)f(\()p FK(a)2635 160
y FO(3)2688 190 y FG(+)g FK(a)2821 160 y FO(2)2873 190
y FG(+)g FK(a)h FG(+)g FH(1)p FG(\))p FR(A)3230 160 y
FO(4)3230 213 y FD(ini)n(t)3318 190 y FR(B)3369 160 y
FO(2)3369 213 y FD(ini)n(t)3474 190 y FG(+)f(\()p FK(a)3639
160 y FO(4)3692 190 y FG(+)g FK(a)3825 160 y FO(3)3877
190 y FG(+)g FK(a)h FG(+)-192 314 y FH(1)p FG(\))p FR(A)-67
283 y FO(4)-67 337 y FD(ini)n(t)21 314 y FR(B)72 326
y FD(ini)n(t)171 314 y FG(+)10 b(\()p FK(a)330 283 y
FO(3)376 314 y FG(+)g FH(1)p FG(\))p FR(A)576 283 y FO(2)576
337 y FD(ini)n(t)664 314 y FR(B)715 283 y FO(16)715 338
y FD(ini)n(t)814 314 y FG(+)g(\()p FK(a)973 283 y FO(3)1019
314 y FG(+)g FK(a)g FG(+)g FH(1)p FG(\))p FR(A)1356 283
y FO(2)1356 337 y FD(ini)n(t)1445 314 y FR(B)1496 283
y FO(8)1496 338 y FD(ini)n(t)1594 314 y FG(+)g(\()p FK(a)1753
283 y FO(3)1799 314 y FG(+)g FK(a)1926 283 y FO(2)1972
314 y FG(+)g FK(a)g FG(+)g FH(1)p FG(\))p FR(A)2309 283
y FO(2)2309 337 y FD(ini)n(t)2398 314 y FR(B)2449 283
y FO(4)2449 337 y FD(ini)n(t)2547 314 y FG(+)g(\()p FK(a)2706
283 y FO(3)2752 314 y FG(+)g FK(a)2879 283 y FO(2)2925
314 y FG(+)g FK(a)p FG(\))p FR(A)3135 283 y FO(2)3135
337 y FD(ini)n(t)3224 314 y FR(B)3275 283 y FO(2)3275
337 y FD(ini)n(t)3374 314 y FG(+)g(\()p FK(a)3533 283
y FO(4)3579 314 y FG(+)g FK(a)p FG(\))p FR(A)3789 283
y FO(2)3789 337 y FD(ini)n(t)3878 314 y FR(B)3929 326
y FD(ini)n(t)4027 314 y FG(+)-192 437 y(\()p FK(a)-108
407 y FO(4)-60 437 y FG(+)j FK(a)70 407 y FO(3)117 437
y FG(+)g FH(1)p FG(\))p FR(A)320 449 y FD(ini)n(t)407
437 y FR(B)458 407 y FO(16)458 461 y FD(ini)n(t)559 437
y FG(+)g(\()p FK(a)721 407 y FO(4)768 437 y FG(+)g FK(a)898
407 y FO(2)932 437 y FG(\))p FR(A)1015 449 y FD(ini)n(t)1104
437 y FR(B)1155 407 y FO(8)1155 461 y FD(ini)n(t)1256
437 y FG(+)g(\()p FK(a)1418 407 y FO(4)1465 437 y FG(+)g
FK(a)1595 407 y FO(3)1642 437 y FG(+)g FK(a)g FG(+)g
FH(1)p FG(\))p FR(A)1988 449 y FD(ini)n(t)2074 437 y
FR(B)2125 407 y FO(4)2125 460 y FD(ini)n(t)2226 437 y
FG(+)g(\()p FK(a)2388 407 y FO(4)2435 437 y FG(+)g FK(a)p
FG(\))p FR(A)2648 449 y FD(ini)n(t)2736 437 y FR(B)2787
407 y FO(2)2787 460 y FD(ini)n(t)2888 437 y FG(+)g(\()p
FK(a)3050 407 y FO(3)3097 437 y FG(+)g FK(a)g FG(+)g
FH(1)p FG(\))p FR(A)3443 449 y FD(ini)n(t)3530 437 y
FR(B)3581 449 y FD(ini)n(t)3669 437 y FF(g)31 b FR(\227)h(a)f(poly-)
-192 553 y(nomial)d(in)g(variables)g(R)550 523 y FC(0)571
553 y FJ(;)9 b FR(A)654 565 y FD(ini)n(t)743 553 y FJ(;)g
FR(B)826 565 y FD(ini)n(t)915 553 y FR(.)-109 684 y(Continuing)38
b(this)h(way)-5 b(,)40 b(in)g(the)f(5)940 654 y FD(t)t(h)1036
684 y FR(iter)o(ation:)50 b(f)12 b(r)n(om)1567 654 y
FO(4)1627 684 y FG(=)24 b FF(f)p FR(R)15 b FG(+)g(\()p
FK(a)1988 654 y FO(3)2039 684 y FG(+)g FK(a)h FG(+)f
FH(1)p FG(\))p FR(A)2392 654 y FO(16)2392 708 y FD(ini)n(t)2480
684 y FR(B)2531 654 y FO(16)2531 708 y FD(ini)n(t)2635
684 y FG(+)g(\()p FK(a)2799 654 y FO(4)2850 684 y FG(+)g
FK(a)2982 654 y FO(3)3033 684 y FG(+)g FK(a)3165 654
y FO(2)3216 684 y FG(+)g FK(a)h FG(+)f FH(1)p FG(\))p
FR(A)3569 654 y FO(16)3569 708 y FD(ini)n(t)3657 684
y FR(B)3708 654 y FO(8)3708 708 y FD(ini)n(t)3812 684
y FG(+)g(\()p FK(a)3976 654 y FO(4)4027 684 y FG(+)-192
807 y FK(a)p FG(\))p FR(A)-57 777 y FO(16)-57 831 y FD(ini)n(t)32
807 y FR(B)83 777 y FO(4)83 831 y FD(ini)n(t)178 807
y FG(+)7 b(\()p FK(a)334 777 y FO(3)376 807 y FG(+)g
FH(1)p FG(\))p FR(A)573 777 y FO(16)573 831 y FD(ini)n(t)661
807 y FR(B)712 777 y FO(2)712 831 y FD(ini)n(t)807 807
y FG(+)g(\()p FK(a)963 777 y FO(3)1005 807 y FG(+)g FK(a)g
FG(+)g FH(1)p FG(\))p FR(A)1333 777 y FO(16)1333 831
y FD(ini)n(t)1420 807 y FR(B)1471 819 y FD(ini)n(t)1567
807 y FG(+)g(\()p FK(a)1723 777 y FO(4)1765 807 y FG(+)g
FK(a)1889 777 y FO(3)1930 807 y FG(+)g FK(a)2054 777
y FO(2)2096 807 y FG(+)g FK(a)g FG(+)g FH(1)p FG(\))p
FR(A)2424 777 y FO(8)2424 831 y FD(ini)n(t)2511 807 y
FR(B)2562 777 y FO(16)2562 831 y FD(ini)n(t)2658 807
y FG(+)g(\()p FK(a)2814 777 y FO(3)2855 807 y FG(+)g
FH(1)p FG(\))p FR(A)3052 777 y FO(8)3052 831 y FD(ini)n(t)3140
807 y FR(B)3191 777 y FO(8)3191 831 y FD(ini)n(t)3286
807 y FG(+)g(\()p FK(a)3442 777 y FO(4)3484 807 y FG(+)g
FK(a)3608 777 y FO(2)3650 807 y FG(+)g FK(a)p FG(\))p
FR(A)3857 777 y FO(8)3857 831 y FD(ini)n(t)3945 807 y
FR(B)3996 777 y FO(4)3996 831 y FD(ini)n(t)4092 807 y
FG(+)-192 931 y(\()p FK(a)-108 901 y FO(2)-66 931 y FG(+)g
FK(a)p FG(\))p FR(A)141 901 y FO(8)141 955 y FD(ini)n(t)230
931 y FR(B)281 901 y FO(2)281 954 y FD(ini)n(t)376 931
y FG(+)g(\()p FK(a)532 901 y FO(3)574 931 y FG(+)g FK(a)698
901 y FO(2)740 931 y FG(+)g FH(1)p FG(\))p FR(A)937 901
y FO(8)937 955 y FD(ini)n(t)1024 931 y FR(B)1075 943
y FD(ini)n(t)1171 931 y FG(+)g(\()p FK(a)1327 901 y FO(4)1369
931 y FG(+)g FK(a)p FG(\))p FR(A)1576 901 y FO(4)1576
954 y FD(ini)n(t)1664 931 y FR(B)1715 901 y FO(16)1715
955 y FD(ini)n(t)1810 931 y FG(+)g(\()p FK(a)1966 901
y FO(4)2008 931 y FG(+)g FK(a)2132 901 y FO(2)2174 931
y FG(+)g FK(a)p FG(\))p FR(A)2381 901 y FO(4)2381 954
y FD(ini)n(t)2469 931 y FR(B)2520 901 y FO(8)2520 955
y FD(ini)n(t)2616 931 y FG(+)g(\()p FK(a)2772 901 y FO(4)2813
931 y FG(+)g FK(a)2937 901 y FO(2)2979 931 y FG(+)g FK(a)p
FG(\))p FR(A)3186 901 y FO(4)3186 954 y FD(ini)n(t)3275
931 y FR(B)3326 901 y FO(4)3326 954 y FD(ini)n(t)3421
931 y FG(+)g(\()p FK(a)3577 901 y FO(2)3619 931 y FG(+)g
FK(a)p FG(\))p FR(A)3826 901 y FO(4)3826 954 y FD(ini)n(t)3914
931 y FR(B)3965 943 y FD(ini)n(t)4061 931 y FG(+)-192
1055 y(\()p FK(a)-108 1025 y FO(3)-66 1055 y FG(+)g FH(1)p
FG(\))p FR(A)131 1025 y FO(2)131 1078 y FD(ini)n(t)219
1055 y FR(B)270 1025 y FO(16)270 1079 y FD(ini)n(t)365
1055 y FG(+)g(\()p FK(a)521 1025 y FO(2)563 1055 y FG(+)g
FK(a)p FG(\))p FR(A)770 1025 y FO(2)770 1078 y FD(ini)n(t)859
1055 y FR(B)910 1025 y FO(8)910 1079 y FD(ini)n(t)1005
1055 y FG(+)g(\()p FK(a)1161 1025 y FO(4)1203 1055 y
FG(+)g FK(a)1327 1025 y FO(2)1362 1055 y FG(\))p FR(A)1445
1025 y FO(2)1445 1078 y FD(ini)n(t)1533 1055 y FR(B)1584
1025 y FO(2)1584 1078 y FD(ini)n(t)1680 1055 y FG(+)g(\()p
FK(a)1836 1025 y FO(3)1877 1055 y FG(+)g FK(a)2001 1025
y FO(2)2043 1055 y FG(+)g FH(1)p FG(\))p FR(A)2240 1025
y FO(2)2240 1078 y FD(ini)n(t)2328 1055 y FR(B)2379 1067
y FD(ini)n(t)2474 1055 y FG(+)g(\()p FK(a)2630 1025 y
FO(3)2672 1055 y FG(+)g FK(a)g FG(+)g FH(1)p FG(\))p
FR(A)3000 1067 y FD(ini)n(t)3087 1055 y FR(B)3138 1025
y FO(16)3138 1079 y FD(ini)n(t)3234 1055 y FG(+)g(\()p
FK(a)3390 1025 y FO(3)3431 1055 y FG(+)g FK(a)3555 1025
y FO(2)3597 1055 y FG(+)g FH(1)p FG(\))p FR(A)3794 1067
y FD(ini)n(t)3882 1055 y FR(B)3933 1025 y FO(8)3933 1079
y FD(ini)n(t)4028 1055 y FG(+)-192 1179 y(\()p FK(a)-108
1149 y FO(2)-61 1179 y FG(+)k FK(a)p FG(\))p FR(A)150
1191 y FD(ini)n(t)239 1179 y FR(B)290 1149 y FO(4)290
1202 y FD(ini)n(t)389 1179 y FG(+)g(\()p FK(a)549 1149
y FO(3)596 1179 y FG(+)g FK(a)724 1149 y FO(2)770 1179
y FG(+)g FH(1)p FG(\))p FR(A)971 1191 y FD(ini)n(t)1059
1179 y FR(B)1110 1149 y FO(2)1110 1202 y FD(ini)n(t)1210
1179 y FG(+)g(\()p FK(a)p FG(\))p FR(A)1453 1191 y FD(ini)n(t)1542
1179 y FR(B)1593 1191 y FD(ini)n(t)1681 1179 y FJ(;)66
b FR(A)1821 1191 y FD(ini)n(t)1921 1179 y FG(+)11 b FR(a)2039
1191 y FO(1)2073 1179 y FK(a)2125 1149 y FO(5)2172 1179
y FG(+)g FR(a)2290 1191 y FO(2)2324 1179 y FK(a)2376
1149 y FO(10)2453 1179 y FG(+)g FR(a)2571 1191 y FO(3)2605
1179 y FK(a)2657 1149 y FO(20)2735 1179 y FG(+)g FR(a)2853
1191 y FO(4)2887 1179 y FK(a)2939 1149 y FO(9)2985 1179
y FG(+)g FR(a)3103 1191 y FO(0)3137 1179 y FK(a)3189
1149 y FO(18)3255 1179 y FJ(;)67 b FR(B)3396 1191 y FD(ini)n(t)3495
1179 y FG(+)11 b FR(b)3613 1191 y FO(1)3648 1179 y FK(a)3700
1149 y FO(5)3746 1179 y FG(+)g FR(b)3864 1191 y FO(2)3898
1179 y FK(a)3950 1149 y FO(10)4027 1179 y FG(+)-192 1301
y FR(b)-150 1313 y FO(3)-116 1301 y FK(a)-64 1270 y FO(20)14
1301 y FG(+)h FR(b)133 1313 y FO(4)166 1301 y FK(a)218
1270 y FO(9)265 1301 y FG(+)g FR(b)384 1313 y FO(0)418
1301 y FK(a)470 1270 y FO(18)535 1301 y FF(g)29 b FR(denotes)f(the)g
(curr)m(ent)h(state)g(values.)-109 1436 y(F)l(inally)-5
b(,)28 b(by)g(computing)f(GB)h(with)h(A)m(T)o(O,)f(we)h(obtain:)c(t)6
b(o)1631 1406 y FO(5)1683 1436 y FG(=)18 b FF(f)p Fw(R)1868
1406 y FC(0)1900 1436 y FG(+)12 b Fw(A)2037 1449 y Ff(init)2129
1436 y Fw(B)2184 1449 y Ff(init)2277 1436 y FJ(;)29 b
FR(A)2380 1448 y FD(ini)n(t)2480 1436 y FG(+)11 b FR(a)2598
1406 y FC(0)2598 1460 y FO(0)2632 1436 y FK(a)2684 1406
y FO(5)2731 1436 y FG(+)g FR(a)2849 1406 y FC(0)2849
1460 y FO(1)2883 1436 y FK(a)2935 1406 y FO(10)3012 1436
y FG(+)g FR(a)3130 1406 y FC(0)3130 1460 y FO(2)3165
1436 y FK(a)3217 1406 y FO(20)3294 1436 y FG(+)g FR(a)3412
1406 y FC(0)3412 1460 y FO(3)3447 1436 y FK(a)3499 1406
y FO(9)3545 1436 y FG(+)g FR(a)3663 1406 y FC(0)3663
1460 y FO(4)3698 1436 y FK(a)3750 1406 y FO(18)3815 1436
y FJ(;)39 b FR(B)3928 1448 y FD(ini)n(t)4027 1436 y FG(+)-192
1560 y FR(b)-150 1530 y FC(0)-150 1584 y FO(0)-116 1560
y FK(a)-64 1530 y FO(5)-16 1560 y FG(+)12 b FR(b)103
1530 y FC(0)103 1584 y FO(1)137 1560 y FK(a)189 1530
y FO(10)267 1560 y FG(+)g FR(b)386 1530 y FC(0)386 1584
y FO(2)420 1560 y FK(a)472 1530 y FO(20)550 1560 y FG(+)g
FR(b)669 1530 y FC(0)669 1584 y FO(3)703 1560 y FK(a)755
1530 y FO(9)802 1560 y FG(+)g FR(b)921 1530 y FC(0)921
1584 y FO(4)955 1560 y FK(a)1007 1530 y FO(18)1073 1560
y FF(g)30 b FR(as)h(the)f(ima)o(g)o(e)o(.)f(The)h(\002nal)f(r)m(esult)i
(is)43 b(f)12 b(r)n(om)2448 1530 y FO(5)2483 1560 y FG(\()p
FR(R)2575 1573 y FD(f)c(inal)2703 1560 y FG(\))20 b(=)f
FR(R)2899 1573 y FD(f)8 b(inal)3038 1560 y FG(+)k FR(A)3166
1572 y FD(ini)n(t)3267 1560 y FF(\001)g FR(B)3353 1572
y FD(ini)n(t)3441 1560 y FR(,)30 b(whic)o(h)g(veri\002es)g(the)-192
1670 y(multiplier)-9 b(.)1372 2014 y FH(V)t(I)t(.)45
b(I)t FI(M)t(P)t(R)q(O)q(V)t(I)t(N)t(G)26 b(O)t(U)t(R)f
FH(A)t FI(P)t(P)t(R)q(O)r(A)q(C)t(H)-109 2244 y FH(Computing)h(Gr)7
b(\250)-35 b(obner)26 b(bases)i(with)g(elimination)e(orders)h(is)h
(infeasible)g(for)f(lar)o(ge)f(circuits;)i(the)g(comple)o(xity)d(of)j
(Buchber)o(ger')-5 b(s)25 b(algorithm)-192 2365 y(to)h(compute)d
FR(GB)p FG(\()p FR(J)14 b FG(+)c FR(J)514 2377 y FO(0)548
2365 y FG(\))27 b FH(in)e FQ(F)748 2377 y FD(q)809 2365
y FH(is)h FR(q)932 2335 y FD(O)p FN(\()p FD(d)s FN(\))1087
2365 y FH([5].)f(T)-7 b(o)25 b(o)o(v)o(ercome)e(this)j(comple)o(xity)-5
b(,)23 b([6)o(])j(proposed)d(a)j(r)p 2769 2378 28 4 v
-1 w(e\002nement)f(of)g(A)-9 b(T)o(O)25 b(\(called)f(RA)-9
b(T)o(O\),)25 b(and)-192 2475 y(simpli\002ed)k(the)f(Gr)7
b(\250)-35 b(obner)27 b(basis)j(computation.)c(The)o(y)i(e)o(xploited)f
(Buchber)o(ger')-5 b(s)26 b(product)h(criteria)i([14)n(],)g(which)f
(states)i(that:)f FR(If)g(the)g(leading)-192 2615 y(monomials)e(of)40
b(f)331 2627 y FD(i)353 2615 y FJ(;)21 b FR(f)431 2627
y FD(j)483 2615 y FR(ar)m(e)28 b(r)m(elatively)g(prime)o(,)h(then)e(S)7
b(pol)t(y)p FG(\()12 b FR(f)1638 2627 y FD(i)1659 2615
y FJ(;)21 b FR(f)1737 2627 y FD(j)1761 2615 y FG(\))28
b FR(r)m(educes)g(to)g(zer)l(o)h(modulo)e(the)h(g)o(ener)o(ating)e
(set,)i(i.e)o(.)g(S)7 b(pol)t(y)p FG(\()12 b FR(f)3696
2627 y FD(i)3717 2615 y FJ(;)21 b FR(f)3795 2627 y FD(j)3819
2615 y FG(\))3888 2568 y FD(F)3869 2615 y FF(\000)-57
b(!)3960 2627 y FN(+)4030 2615 y FH(0)p FR(.)-192 2725
y FH(This)29 b(concept)e(w)o(as)i(e)o(xploited)e(in)i(RA)-9
b(T)o(O)28 b(as)h(follo)n(ws:)-109 2851 y(Perform)e(a)h(re)n(v)o(erse)f
(topological)f(sorting)h(of)h(the)g(nodes)g(in)g(the)g(combinational)d
(logic,)j(and)f(de\002ne)h(a)g FR(le)n(x)h FH(term)f(order)e(by)i(the)g
(follo)n(wing)-192 2961 y(relation)21 b FJ(>)149 2973
y FD(r)178 2961 y FH(:)h FR(bit-le)o(vel)f(cir)m(cuit)h(variables)g(or)
m(der)m(ed)f(r)m(e)o(ver)o(se)h(topolo)o(gically)e FJ(>)i
FR(wor)m(d-le)o(vel)f(output)f(variables)h FJ(>)h FR(wor)m(d-le)o(vel)f
(input)g(variables)p FH(.)-192 3071 y(Representing)28
b(the)i(polynomial)d(ideal)i FR(J)34 b FH(in)c(RA)-9
b(T)o(O)29 b(has)h(the)f(ef)n(fect)g(that)h(there)f(e)o(xists)h
FR(one)f(and)f(only)h(one)g(pair)g(of)h(polynomials)e
FH(in)i FR(J)j FH(that)-192 3181 y(do)i(not)g(ha)n(v)o(e)f(relati)n(v)o
(ely)h(prime)f(leading)g(terms)i(\(see)f(Section)g(5)g(in)h([6)o(])f
(for)g(details\).)g(All)h(other)f(polynomial)e(pairs)i(will)h(ha)n(v)o
(e)f(leading)-192 3291 y(terms)41 b(that)g(are)g(relati)n(v)o(ely)f
(prime,)g(so)h(these)g(polynomial)e(pairs)i(are)g(not)f(considered)f
(in)i(Buchber)o(ger')-5 b(s)39 b(algorithm.)g(The)i(authors)f(of)-192
3401 y([6)o(])g(e)o(xploited)d(this)j(concept)e(and)h(sho)n(wed)f(ho)n
(w)h(the)g(Gr)7 b(\250)-35 b(obner)37 b(basis)j(of)f
FG(\()p FR(J)20 b FG(+)15 b FR(J)2358 3413 y FO(0)2392
3401 y FG(\))40 b FH(can)f(be)h(computed)d(by)i(a)g FR(subset)h
FH(of)f(polynomials,)-192 3511 y(which)28 b(impro)o(v)o(es)e(the)i
(scalability)g(of)g(their)f(approach.)f(Their)i(approach,)d(ho)n(we)n
(v)o(er)m(,)h(cannot)h(circumv)o(ent)f(the)i(Gr)7 b(\250)-35
b(obner)26 b(basis)j(computation)-192 3621 y(altogether)-5
b(.)30 b(Consequently)-5 b(,)29 b(their)j(approach)d(f)o(ails)j(to)g
(deri)n(v)o(e)e(a)i(canonical)f(polynomial)e(abstraction)i(when)g(the)g
(representation)f(is)i(dense,)-192 3731 y(and)c(contains)g(monomials)f
(of)h(high-de)o(grees)e(\(e.g.)h(in)i(case)g(of)f(b)n(uggy)f
(designs\).)-109 3856 y(It)22 b(turns)f(out)g(that)h(RA)-9
b(T)o(O)21 b(can)h(be)f(applied)f(to)i(sequential)f(circuits)g(in)h
(much)f(the)g(same)h(w)o(ay:)g FF(f)p FR(bit-le)o(vel)e(cir)m(cuit)i
(variables)f(or)m(der)m(ed)g(r)m(e)o(ver)o(se)-192 3966
y(topolo)o(gically)26 b(x)311 3978 y FO(1)363 3966 y
FJ(>)18 b(:)9 b(:)g(:)h FR(x)580 3979 y FD(d)618 3966
y FF(g)27 b FJ(>)h FF(f)p FR(wor)m(d-le)o(vel)f(NS)h(variables)f(R)1714
3936 y FC(0)1753 3966 y FJ(>)17 b FR(A)1886 3936 y FC(0)1925
3966 y FJ(>)h FR(B)2059 3936 y FC(0)2079 3966 y FF(g)28
b FJ(>)g FF(f)p FR(wor)m(d-le)o(vel)e(PS)i(variables)f(R)18
b FJ(>)f FR(A)h FJ(>)g FR(B)p FF(g)p FH(.)27 b(Importantly)-5
b(,)25 b FR(we)-192 4076 y(show)i(that)f(using)g(RA)m(T)o(O,)g(the)g
(polynomial)f(abstr)o(action)g(can)h(be)g(derived)g(without)h(r)m
(esorting)f(to)h(a)f(Gr)2945 4077 y(\250)2938 4076 y(obner)g(basis)h
(computation.)d FH(Perform)-192 4186 y(the)29 b(follo)n(wing)d
(operations:)-137 4346 y(1\))41 b(Represent)28 b(the)h(polynomials)d
(of)i(the)h(sequential)f(circuit)g FR(S)h FH(using)f(RA)-9
b(T)o(O.)-137 4456 y(2\))41 b(Due)28 b(to)h(RA)-9 b(T)o(O,)28
b(only)g(one)g(pair)g(of)g(polynomials)f(\()12 b FR(f)1587
4468 y FD(i)1608 4456 y FJ(;)21 b FR(f)1686 4468 y FD(j)1710
4456 y FH(\))29 b(will)g(ha)n(v)o(e)f(leading)f(terms)i(that)f(will)i
(not)e(be)g(relati)n(v)o(ely)g(prime.)-137 4603 y(3\))41
b(Reduce)28 b FR(S)7 b(pol)t(y)p FG(\()12 b FR(f)518
4615 y FD(i)539 4603 y FJ(;)21 b FR(f)617 4615 y FD(j)641
4603 y FG(\))710 4556 y FD(F)691 4603 y FF(\000)-57 b(!)782
4615 y FN(+)852 4603 y FR(h)p FH(.)-192 4762 y(As)25
b(described)d(in)j([6)o(],)f(remainder)e FR(h)i FH(will)h(contain:)e
(i\))h(the)g(w)o(ord-le)n(v)o(el)e(v)n(ariables,)h(and)g(ii\))i(bit-le)
n(v)o(el)e(inputs)g(to)i(the)f(combinational)d(logic,)i(i.e.)-192
4872 y(bit-le)n(v)o(el)30 b(present-state)f(v)n(ariables.)h(All)h
(other)f(internal)g(circuit)g(v)n(ariables)g(will)h(not)f(appear)g(in)g
FR(h)p FH(,)h(as)g(the)o(y)f(will)h(be)g(canceled)e(by)h(di)n(vision)
-192 4982 y(due)e(to)h(RA)-9 b(T)o(O.)-192 5158 y Fw(Example)31
b(VI.1.)41 b FR(Let)30 b(us)f(r)m(e-visit)g(Example)f(V)-11
b(.1)29 b(and)f(the)g(RH-SMPO)g(cir)m(cuit)h(of)g(F)l(ig)o(.)g(2.)f(F)
-9 b(or)30 b(this)f(cir)m(cuit,)g(the)g(term)g(or)m(der)g(under)f(RA)m
(T)o(O)-192 5268 y(is)h(le)n(x)h(with:)e FF(f)p FR(r)292
5238 y FC(0)290 5292 y FO(0)325 5268 y FJ(;)9 b FR(r)391
5238 y FC(0)389 5292 y FO(1)424 5268 y FJ(;)g FR(r)490
5238 y FC(0)488 5292 y FO(2)524 5268 y FJ(;)g FR(r)590
5238 y FC(0)588 5292 y FO(3)623 5268 y FJ(;)g FR(r)689
5238 y FC(0)687 5292 y FO(4)723 5268 y FF(g)18 b FJ(>)g
FF(f)p FR(r)940 5280 y FO(0)974 5268 y FJ(;)9 b FR(r)1038
5280 y FO(1)1074 5268 y FJ(;)g FR(r)1138 5280 y FO(2)1173
5268 y FJ(;)g FR(r)1237 5280 y FO(3)1272 5268 y FJ(;)g
FR(r)1336 5280 y FO(4)1372 5268 y FF(g)18 b FJ(>)g FF(f)p
FR(e)1594 5280 y FO(0)1628 5268 y FJ(;)9 b FR(e)1697
5280 y FO(3)1732 5268 y FJ(;)g FR(e)1801 5280 y FO(4)1836
5268 y FF(g)p FJ(;)g FF(f)p FR(d)1994 5280 y FO(0)2027
5268 y FJ(;)g FR(d)2101 5280 y FO(1)2136 5268 y FJ(;)g
FR(d)2210 5280 y FO(2)2245 5268 y FF(g)p FJ(;)g FF(f)p
FR(c)2398 5280 y FO(1)2432 5268 y FJ(;)g FR(c)2501 5280
y FO(2)2536 5268 y FJ(;)g FR(c)2605 5280 y FO(3)2639
5268 y FJ(;)g FR(c)2708 5280 y FO(4)2743 5268 y FF(gf)p
FR(a)2869 5280 y FO(0)2903 5268 y FJ(;)g FR(a)2977 5280
y FO(1)3011 5268 y FJ(;)g FR(a)3085 5280 y FO(2)3120
5268 y FJ(;)g FR(a)3194 5280 y FO(3)3229 5268 y FJ(;)g
FR(a)3303 5280 y FO(4)3337 5268 y FJ(;)-192 5384 y FR(b)-150
5396 y FO(0)-116 5384 y FJ(;)g FR(b)-42 5396 y FO(1)-7
5384 y FJ(;)g FR(b)67 5396 y FO(2)102 5384 y FJ(;)g FR(b)176
5396 y FO(3)210 5384 y FJ(;)g FR(b)284 5396 y FO(4)319
5384 y FF(g)18 b FJ(>)g FR(R)513 5354 y FC(0)552 5384
y FJ(>)g FR(R)g FJ(>)g FF(f)p FR(A)p FJ(;)9 b FR(B)p
FF(g)p FR(.)-109 5505 y(Among)32 b(all)i(the)g(g)o(ener)o(ator)o(s)f
(of)h(the)g(ideal)f(J)38 b(fr)l(om)c(Ex.V)-11 b(.1,)33
b(using)g(RA)m(T)o(O)g Fe(w)o(e)38 b(\002nd)f(only)g(one)g(pair)f(of)h
(polynomials)32 b FR(whose)i(leading)-192 5621 y(monomials)27
b(ar)m(e)i(not)f(r)m(elatively)h(prime:)f FG(\()12 b
FR(f)1132 5633 y FD(i)1154 5621 y FJ(;)21 b FR(f)1232
5633 y FD(j)1256 5621 y FG(\))p FJ(;)g FR(f)1357 5633
y FD(i)1398 5621 y FG(=)d FR(r)1515 5591 y FC(0)1513
5645 y FO(0)1559 5621 y FG(+)12 b FR(r)1668 5633 y FO(4)1714
5621 y FG(+)g FR(e)1828 5633 y FO(0)1862 5621 y FJ(;)21
b FR(f)1940 5633 y FD(j)1982 5621 y FG(=)d FR(r)2099
5591 y FC(0)2097 5645 y FO(0)2132 5621 y FK(a)2184 5591
y FO(5)2231 5621 y FG(+)12 b FR(r)2342 5591 y FC(0)2340
5645 y FO(1)2374 5621 y FK(a)2426 5591 y FO(10)2504 5621
y FG(+)g FR(r)2615 5591 y FC(0)2613 5645 y FO(2)2647
5621 y FK(a)2699 5591 y FO(20)2776 5621 y FG(+)g FR(r)2887
5591 y FC(0)2885 5645 y FO(3)2920 5621 y FK(a)2972 5591
y FO(9)3018 5621 y FG(+)g FR(r)3129 5591 y FC(0)3127
5645 y FO(4)3162 5621 y FK(a)3214 5591 y FO(18)3291 5621
y FG(+)g FR(R)3419 5591 y FC(0)3439 5621 y FR(.)29 b(Then:)p
eop end
%%Page: 7 7
TeXDict begin 7 6 bop 4063 -307 a FV(7)908 -58 y Fs(S)7
b(pol)t(y)p Fq(\()k Fs(f)1147 -46 y Fn(i)1167 -58 y Fr(;)19
b Fs(f)1239 -46 y Fn(j)1260 -58 y Fq(\))1323 -103 y Fn(J)s
Fo(+)p Fn(J)1422 -94 y Fd(0)1306 -58 y Fk(\000)-32 b(\000)-17
b(\000)-32 b(!)1474 -47 y Fo(+)908 101 y Fq(\()p Ft(a)984
70 y FV(3)1027 101 y Fq(+)10 b Ft(a)1142 70 y FV(2)1186
101 y Fq(+)g Ft(a)p Fq(\))p Fs(r)1359 114 y FV(1)1404
101 y Fq(+)g(\()p Ft(a)1548 70 y FV(4)1592 101 y Fq(+)g
Ft(a)1707 70 y FV(3)1751 101 y Fq(+)g Ft(a)1866 70 y
FV(2)1900 101 y Fq(\))p Fs(r)1958 114 y FV(2)2001 101
y Fq(+)g(\()p Ft(a)2145 70 y FV(2)2190 101 y Fq(+)g Ft(a)p
Fq(\))p Fs(r)2363 114 y FV(3)2407 101 y Fq(+)g(\()p Ft(a)p
Fq(\))p Fs(r)2609 114 y FV(4)918 260 y Fq(+)g(\()p Ft(a)1062
229 y FV(3)1106 260 y Fq(+)g Ft(a)1221 229 y FV(2)1255
260 y Fq(\))p Fs(a)1321 273 y FV(1)1354 260 y Fs(b)1391
273 y FV(1)1435 260 y Fq(+)g(\()p Ft(a)1579 229 y FV(4)1624
260 y Fq(+)g Ft(a)1739 229 y FV(3)1783 260 y Fq(+)g Ft(a)1898
229 y FV(2)1942 260 y Fq(+)g Ft(a)p Fq(\))p Fs(a)2123
273 y FV(1)2157 260 y Fs(b)2194 273 y FV(2)2238 260 y
Fq(+)g(\()p Ft(a)2382 229 y FV(2)2426 260 y Fq(+)g Ft(a)p
Fq(\))p Fs(a)2607 273 y FV(1)2641 260 y Fs(b)2678 273
y FV(3)918 418 y Fq(+)g(\()p Ft(a)1062 388 y FV(2)1106
418 y Fq(+)g Fu(1)p Fq(\))p Fs(a)1277 431 y FV(1)1311
418 y Fs(b)1348 431 y FV(4)1392 418 y Fq(+)g(\()p Ft(a)1536
388 y FV(4)1581 418 y Fq(+)g Fu(1)p Fq(\))p Fs(a)1752
431 y FV(1)1786 418 y Fs(B)g Fq(+)g(\()p Ft(a)1986 388
y FV(4)2030 418 y Fq(+)g Ft(a)p Fq(\))p Fs(a)2211 431
y FV(2)2245 418 y Fs(b)2282 431 y FV(1)2326 418 y Fq(+)g(\()p
Ft(a)2470 388 y FV(4)2514 418 y Fq(+)g Ft(a)2629 388
y FV(3)2673 418 y Fq(+)g Ft(a)p Fq(\))p Fs(a)2854 431
y FV(2)2889 418 y Fs(b)2926 431 y FV(2)918 577 y Fq(+)g(\()p
Ft(a)1062 546 y FV(3)1106 577 y Fq(+)g Fu(1)p Fq(\))p
Fs(a)1277 590 y FV(2)1311 577 y Fs(b)1348 590 y FV(3)1392
577 y Fq(+)g(\()p Ft(a)1536 546 y FV(3)1581 577 y Fq(+)g
Ft(a)1696 546 y FV(2)1740 577 y Fq(+)g Fu(1)p Fq(\))p
Fs(a)1911 590 y FV(2)1945 577 y Fs(b)1982 590 y FV(4)2026
577 y Fq(+)g(\()p Ft(a)2170 546 y FV(3)2214 577 y Fq(+)g
Ft(a)2329 546 y FV(2)2363 577 y Fq(\))p Fs(a)2429 590
y FV(2)2462 577 y Fs(B)g Fq(+)g(\()p Ft(a)2662 546 y
FV(2)2707 577 y Fq(+)g Ft(a)p Fq(\))p Fs(a)2888 590 y
FV(3)2922 577 y Fs(b)2959 590 y FV(1)918 736 y Fq(+)g(\()p
Ft(a)1062 705 y FV(3)1106 736 y Fq(+)g Fu(1)p Fq(\))p
Fs(a)1277 749 y FV(3)1311 736 y Fs(b)1348 749 y FV(2)1392
736 y Fq(+)g(\()p Ft(a)g Fq(+)g Fu(1)p Fq(\))p Fs(a)1717
749 y FV(3)1753 736 y Fs(b)1790 749 y FV(3)1834 736 y
Fq(+)g(\()p Ft(a)1978 705 y FV(4)2022 736 y Fq(+)g Ft(a)2137
705 y FV(2)2181 736 y Fq(+)g Ft(a)p Fq(\))p Fs(a)2362
749 y FV(3)2396 736 y Fs(b)2433 749 y FV(4)918 894 y
Fq(+)g(\()p Ft(a)1062 864 y FV(4)1106 894 y Fq(+)g Ft(a)1221
864 y FV(3)1265 894 y Fq(+)g Ft(a)p Fq(\))p Fs(a)1446
907 y FV(3)1480 894 y Fs(B)g Fq(+)g(\()p Ft(a)1680 864
y FV(3)1725 894 y Fq(+)g Fu(1)p Fq(\))p Fs(a)1896 907
y FV(4)1930 894 y Fs(b)1967 907 y FV(1)2011 894 y Fq(+)g
Fs(a)2116 907 y FV(4)2150 894 y Fs(b)2187 907 y FV(2)2231
894 y Fq(+)g(\()p Ft(a)2375 864 y FV(4)2419 894 y Fq(+)g
Ft(a)2534 864 y FV(2)2578 894 y Fq(+)g Ft(a)p Fq(\))p
Fs(a)2759 907 y FV(4)2793 894 y Fs(b)2830 907 y FV(3)918
1053 y Fq(+)g(\()p Ft(a)1062 1022 y FV(4)1106 1053 y
Fq(+)g Ft(a)1221 1022 y FV(3)1265 1053 y Fq(+)g Fu(1)p
Fq(\))p Fs(a)1436 1066 y FV(4)1471 1053 y Fs(b)1508 1066
y FV(4)1552 1053 y Fq(+)g(\()p Ft(a)1696 1022 y FV(2)1740
1053 y Fq(+)g Ft(a)p Fq(\))p Fs(a)1921 1066 y FV(4)1955
1053 y Fs(B)g Fq(+)g(\()p Ft(a)2155 1022 y FV(4)2199
1053 y Fq(+)g Fu(1)p Fq(\))p Fs(b)2370 1066 y FV(1)2404
1053 y Fs(A)g Fq(+)g(\()p Ft(a)2604 1022 y FV(3)2649
1053 y Fq(+)g Ft(a)2764 1022 y FV(2)2797 1053 y Fq(\))p
Fs(b)2863 1066 y FV(2)2897 1053 y Fs(A)918 1212 y Fq(+)g(\()p
Ft(a)1062 1181 y FV(4)1106 1212 y Fq(+)g Ft(a)1221 1181
y FV(3)1265 1212 y Fq(+)g Ft(a)p Fq(\))p Fs(b)1446 1225
y FV(3)1480 1212 y Fs(A)g Fq(+)g(\()p Ft(a)1680 1181
y FV(2)1725 1212 y Fq(+)g Ft(a)p Fq(\))p Fs(b)1906 1225
y FV(4)1940 1212 y Fs(A)g Fq(+)g(\()p Ft(a)2140 1181
y FV(4)2184 1212 y Fq(+)g Ft(a)2299 1181 y FV(2)2343
1212 y Fq(+)g Ft(a)g Fq(+)g Fu(1)p Fq(\))p Fs(R)2648
1181 y Fm(0)2680 1212 y Fq(+)g Fs(AB)-109 1331 y FH(As)28
b(sho)n(wn)e(abo)o(v)o(e,)f(the)i(remainder)e FR(h)j
FH(contains)e(both)g(bit-le)n(v)o(el)g(v)n(ariables)g(and)h(w)o(ord-le)
n(v)o(el)e FR(state)i(variables)g(a)3259 1343 y FD(i)3280
1331 y FJ(;)9 b FR(b)3354 1343 y FD(i)3375 1331 y FJ(;)g
FR(r)3439 1343 y FD(i)3460 1331 y FJ(;)g FR(R)p FJ(;)g
FR(A)p FJ(;)g FR(B)p FH(.)27 b(W)-7 b(e)29 b(desire)-192
1441 y(a)e(polynomial)d(in)j(only)f(w)o(ord)g(le)n(v)o(el)g(v)n
(ariables)g(\(e.g.)g FR(R)1477 1411 y FC(0)1508 1441
y FG(+)11 b FE(F)19 b FG(\()p FR(A)p FJ(;)9 b FR(B)p
FG(\))p FH(\),)27 b(without)f(computing)e(a)j(Gr)7 b(\250)-35
b(obner)25 b(basis.)i(This)f(can)h(be)f(achie)n(v)o(ed)f(if)i(we)-192
1551 y(represent)h(the)h(bit-le)n(v)o(el)f(state)i(v)n(ariables)e
FR(a)1127 1563 y FD(i)1148 1551 y FJ(;)9 b FR(b)1222
1563 y FD(i)1243 1551 y FJ(;)g FR(r)1307 1563 y FD(i)1358
1551 y FH(in)30 b(terms)f(of)g(their)g(w)o(ord-le)n(v)o(el)e(v)n
(ariables)h FR(A)p FJ(;)9 b FR(B)p FJ(;)g FR(R)p FH(,)29
b(respecti)n(v)o(ely)-5 b(.)27 b(This)i(can)g(be)g(achie)n(v)o(ed)-192
1661 y(due)f(to)h(the)f(follo)n(wing)f(property)f(of)i(\002nite)h
(\002elds:)-192 1841 y Fw(Lemma)i(VI.1.)41 b FR(F)-9
b(or)29 b FK(a)525 1853 y FO(1)560 1841 y FJ(;)9 b(:)g(:)g(:)h(;)f
FK(a)771 1853 y FD(t)816 1841 y FF(2)19 b FQ(F)941 1864
y FO(2)972 1846 y FL(k)1002 1841 y FR(,)29 b FG(\()p
FK(a)1136 1853 y FO(1)1183 1841 y FG(+)12 b FK(a)1312
1853 y FO(2)1358 1841 y FG(+)g FF(\001)d(\001)g(\001)i
FG(+)h FK(a)1660 1853 y FD(t)1685 1841 y FG(\))1717 1811
y FO(2)1748 1789 y FL(i)1789 1841 y FG(=)18 b FK(a)1924
1811 y FO(2)1955 1789 y FL(i)1924 1865 y FO(1)1989 1841
y FG(+)12 b FK(a)2118 1811 y FO(2)2149 1789 y FL(i)2118
1865 y FO(2)2181 1841 y FG(+)g FF(\001)d(\001)g(\001)i
FG(+)h FK(a)2485 1811 y FO(2)2516 1789 y FL(i)2483 1862
y FD(t)2538 1841 y FR(,)28 b(for)h(i)19 b FG(=)f FH(1)p
FJ(;)9 b FH(2)p FJ(;)g(:)g(:)g(:)p FR(.)-109 2014 y FH(Consider)29
b(the)g(polynomials)e(that)i(de\002ne)g(the)g(relationship)f(between)g
(the)h(w)o(ord-le)n(v)o(el)f(and)g(bit-le)n(v)o(el)g(v)n(ariables.)g
(Let)i FR(A)18 b FG(=)h FR(a)3691 2026 y FO(0)3725 2014
y FK(b)12 b FG(+)g FR(a)3902 2026 y FO(1)3935 2014 y
FK(b)3981 1984 y FO(2)4027 2014 y FG(+)-192 2146 y FF(\001)d(\001)g
(\001)j FG(+)g FR(a)26 2159 y FD(k)q FC(\000)p FO(1)135
2146 y FK(b)181 2116 y FO(2)212 2094 y FL(k)q Fx(\000)p
Fz(1)307 2146 y FH(.)28 b(Due)h(to)f(Lemma)g(VI.1,)g(we)h(ha)n(v)o(e)f
FR(A)1460 2116 y FO(2)1513 2146 y FG(=)18 b FR(a)1638
2158 y FO(0)1672 2146 y FK(b)1718 2116 y FO(2)1764 2146
y FG(+)12 b FR(a)1883 2158 y FO(1)1916 2146 y FK(b)1962
2116 y FO(4)2008 2146 y FG(+)g FF(\001)d(\001)g(\001)i
FG(+)h FR(a)2302 2159 y FD(k)q FC(\000)p FO(1)2412 2146
y FK(b)2458 2116 y FO(2)p FC(\001)p FO(2)2537 2094 y
FL(k)q Fx(\000)p Fz(1)2660 2146 y FH(\(as)29 b FR(a)2828
2116 y FO(2)2828 2169 y FD(i)2880 2146 y FG(=)18 b FR(a)3005
2158 y FD(i)3026 2146 y FH(\).)29 b(By)g(repeated)e(squaring:)1232
2346 y FR(A)83 b FG(=)f FR(a)1555 2358 y FO(0)1590 2346
y FK(b)12 b FG(+)g FR(a)1767 2358 y FO(1)1799 2346 y
FK(b)1845 2311 y FO(2)1891 2346 y FG(+)g FF(\001)d(\001)g(\001)i
FG(+)h FR(a)2185 2359 y FD(k)q FC(\000)p FO(1)2295 2346
y FK(b)2341 2311 y FO(2)2372 2289 y FL(k)q Fx(\000)p
Fz(1)1197 2507 y FR(A)1248 2473 y FO(2)1366 2507 y FG(=)82
b FR(a)1555 2519 y FO(0)1590 2507 y FK(b)1636 2473 y
FO(2)1682 2507 y FG(+)12 b FR(a)1801 2519 y FO(1)1834
2507 y FK(b)1880 2473 y FO(4)1926 2507 y FG(+)g FF(\001)d(\001)g(\001)i
FG(+)h FR(a)2220 2520 y FD(k)q FC(\000)p FO(1)2330 2507
y FK(b)2376 2473 y FO(2)p FC(\001)p FO(2)2455 2451 y
FL(k)q Fx(\000)p Fz(1)1262 2636 y FH(.)1262 2669 y(.)1262
2702 y(.)1388 2636 y(.)1388 2669 y(.)1388 2702 y(.)1513
2636 y(.)1513 2669 y(.)1513 2702 y(.)1106 2849 y FR(A)1157
2815 y FO(2)1188 2793 y FL(k)q Fx(\000)p Fz(1)1366 2849
y FG(=)82 b FR(a)1555 2861 y FO(0)1590 2849 y FK(b)1636
2815 y FO(2)1667 2793 y FL(k)q Fx(\000)p Fz(1)1772 2849
y FG(+)12 b FR(a)1891 2861 y FO(1)1925 2849 y FK(b)1971
2815 y FO(2)2002 2793 y FL(k)q Fx(\000)p Fz(1)2092 2815
y FC(\001)p FO(2)2155 2849 y FG(+)g FF(\001)d(\001)g(\001)i
FG(+)h FR(a)2449 2862 y FD(k)q FC(\000)p FO(1)2559 2849
y FK(b)2605 2815 y FO(2)2636 2793 y Fz(2)p Fy(\()p FL(k)q
Fx(\000)p Fz(1)p Fy(\))-192 3017 y FH(Consider)44 b(the)g(abo)o(v)o(e)e
(as)j FR(k)h(linear)e(equations)f FH(with)h FR(a)1581
3029 y FO(0)1616 3017 y FJ(;)9 b(:)g(:)g(:)h(;)f FR(a)1819
3030 y FD(k)q FC(\000)p FO(1)1974 3017 y FH(as)45 b FR(k)q
FH(-unkno)n(wns,)d(with)i FK(b)h FH(and)e(its)i(po)n(wers)f(as)h(coef)n
(\002cients,)e(and)-192 3150 y FR(A)p FJ(;)9 b FR(A)-58
3119 y FO(2)-23 3150 y FJ(;)g(:::)g(:)g(:)g(:)h(;)f FR(A)267
3119 y FO(2)298 3097 y FL(k)q Fx(\000)p Fz(1)422 3150
y FH(as)29 b FR(k)i FH(constants.)e(Then,)f(we)h(can)g(solv)o(e)f(for)h
(the)g(unkno)n(wns)e FR(a)2312 3162 y FO(0)2346 3150
y FJ(;)9 b(:)g(:)g(:)h(;)f FR(a)2549 3163 y FD(k)q FC(\000)p
FO(1)2689 3150 y FH(and)28 b(obtain)h(e)o(xpressions)e(for)i(them)f(in)
h(terms)-192 3260 y(of)f FR(A)h FH(and)f FK(b)p FH(.)g(The)g(problem)f
(can)i(be)f(setup)g(in)h(matrix)f(form:)1027 3407 y FB(0)1027
3553 y(B)1027 3603 y(B)1027 3652 y(B)1027 3702 y(B)1027
3755 y(@)1163 3485 y FK(b)214 b(b)1469 3455 y FO(2)1656
3485 y FF(\001)9 b(\001)g(\001)124 b FK(b)1913 3455 y
FO(2)1944 3433 y FL(k)q Fx(\000)p Fz(1)1145 3602 y FK(b)1191
3572 y FO(2)1423 3602 y FK(b)1469 3572 y FO(4)1656 3602
y FF(\001)9 b(\001)g(\001)100 b FK(b)1889 3572 y FO(2)1920
3550 y FL(k)q Fx(\000)p Fz(1)2010 3572 y FC(\001)p FO(2)1175
3690 y FH(.)1175 3723 y(.)1175 3757 y(.)1453 3690 y(.)1453
3723 y(.)1453 3757 y(.)1664 3699 y(.)1694 3723 y(.)1724
3749 y(.)1943 3690 y(.)1943 3723 y(.)1943 3757 y(.)1100
3876 y FK(b)1146 3846 y FO(2)1177 3824 y FL(k)q Fx(\000)p
Fz(1)1354 3876 y FK(b)1400 3846 y FO(2)1431 3824 y FL(k)q
Fx(\000)p Fz(1)1521 3846 y FC(\001)p FO(2)1656 3876 y
FF(\001)9 b(\001)g(\001)93 b FK(b)1882 3846 y FO(2)1913
3824 y Fz(2)p Fy(\()p FL(k)q Fx(\000)p Fz(1)p Fy(\))2070
3407 y FB(1)2070 3553 y(C)2070 3603 y(C)2070 3652 y(C)2070
3702 y(C)2070 3755 y(A)2152 3432 y(0)2152 3578 y(B)2152
3628 y(B)2152 3677 y(B)2152 3730 y(@)2263 3496 y FR(a)2305
3508 y FO(0)2263 3595 y FR(a)2305 3607 y FO(1)2291 3683
y FH(.)2291 3716 y(.)2291 3750 y(.)2225 3849 y FR(a)2267
3862 y FD(k)q FC(\000)p FO(1)2377 3432 y FB(1)2377 3578
y(C)2377 3628 y(C)2377 3677 y(C)2377 3730 y(A)2468 3673
y FG(=)2551 3432 y FB(0)2551 3578 y(B)2551 3628 y(B)2551
3677 y(B)2551 3730 y(@)2687 3486 y FR(A)2669 3587 y(A)2720
3557 y FO(2)2702 3675 y FH(.)2702 3709 y(.)2702 3742
y(.)2624 3859 y FR(A)2675 3828 y FO(2)2706 3806 y FL(k)q
Fx(\000)p Fz(1)2800 3432 y FB(1)2800 3578 y(C)2800 3628
y(C)2800 3677 y(C)2800 3730 y(A)-109 4048 y FH(Gaussian)35
b(elimination)f(on)h(this)h(system)g(of)f(equations)f(can)h(be)h
(applied,)e(and)h(each)g(bit-le)n(v)o(el)f(v)n(ariable)g
FR(a)3209 4060 y FD(i)3266 4048 y FH(can)h(be)g(represented)f(as)i(a)
-192 4158 y(function)24 b(of)i(the)g(w)o(ord-le)n(v)o(el)e(v)n
(ariables:)i FR(a)1107 4170 y FD(i)1145 4158 y FG(=)17
b FR(g)1269 4170 y FD(i)1290 4158 y FG(\()p FR(A)p FG(\))p
FH(.)26 b(These)g(bit-le)n(v)o(el)f(v)n(ariables)g(can)h(be)g(easily)h
(substituted)e(in)h(the)h(remainder)d FR(h)i FH(obtained)-192
4268 y(by)31 b(reduction)e(due)i(to)g(RA)-9 b(T)o(O.)31
b(What)h(we)f(will)h(obtain)e(is)j(a)e(w)o(ord-le)n(v)o(el)f
(polynomial)f(of)h(the)i(form)e FR(h)19 b FH(:)h FR(R)3060
4238 y FC(0)3094 4268 y FG(+)13 b FE(F)19 b FG(\()p FR(A)p
FJ(;)9 b FR(B)p FG(\))32 b FH(which)e(canonically)-192
4378 y(represents)c(the)h FR(k)q FH(-c)o(ycle)f(function)g(of)g(the)h
(circuit.)g(It)g(is)h(also)f(easy)g(to)g(sho)n(w)g(that)g(this)h
(polynomial)c(is)k(a)g(unique,)d(canonical)h(representation)-192
4488 y(because)i(it)h(is)g(reduced)e(modulo)g FR(J)15
b FG(+)d FR(J)998 4500 y FO(0)1032 4488 y FH(.)1403 4703
y(V)t(I)t(I)t(.)45 b(E)t FI(X)t(P)t(E)t(R)t(I)t(M)t(E)t(N)t(T)n(A)t(L)
24 b FH(R)t FI(E)t(S)t(U)t(L)n(T)t(S)-109 4842 y FH(W)-7
b(e)28 b(ha)n(v)o(e)f(implemented)e(our)i(approach)e(within)i(the)i(S)t
FI(I)t(N)t(G)t(U)t(L)t(A)t(R)h FH(symbolic)d(algebra)f(computation)f
(system)i([v)-5 b(.)26 b(3-1-6])f([15)o(].)i(Using)g(our)-192
4952 y(implementation,)g(we)i(ha)n(v)o(e)f(performed)f(e)o(xperiments)g
(to)i(v)o(erify)f(tw)o(o)h(SMPO)h(architectures)d(\227)j(Agne)n(w-SMPO)
e([2)o(])h(and)g(the)g(RH-SMPO)-192 5062 y([3)o(])i(\227)h(o)o(v)o(er)d
FQ(F)278 5085 y FO(2)309 5067 y FL(k)340 5062 y FH(,)i(for)f(v)n
(arious)g(datapath/\002eld)f(sizes.)j(Bugs)f(are)f(also)h(introduced)e
(into)h(the)h(SMPO)h(designs)e(by)g(modifying)f(a)i(fe)n(w)g(gates)-192
5172 y(in)g(the)f(combinational)e(logic)i(block.)g(Experiments)e(using)
i(SA)-9 b(T)h(-,)31 b(BDD-,)f(and)g(AIG-based)f(solv)o(ers)h(are)h
(also)g(conducted)d(and)i(results)h(are)-192 5291 y(compared)22
b(against)h(our)g(approach.)e(Our)i(e)o(xperiments)f(run)h(on)g(a)h
(desktop)f(with)h(3.5GHz)f(Intel)g(Core)2865 5258 y FO(TM)2986
5291 y FH(i7)h(Quad-core)d(CPU,)k(16)e(GB)i(RAM)-192
5401 y(and)j(64-bit)f(Linux.)-109 5511 y FR(Evaluation)k(of)j(SA)m
(T/ABC/BDD)f(based)g(methods:)f FH(T)-7 b(o)34 b(v)o(erify)e(circuit)h
FR(S)h FH(against)f(the)h(polynomial)d FE(F)20 b FH(,)34
b(we)g(unroll)e(the)h(SMPO)i(o)o(v)o(er)d FR(k)-192 5621
y FH(time-frames,)f(and)g(construct)g(a)h(miter)g(against)g(a)g
(combinational)e(implementation)g(of)i FE(F)19 b FH(.)33
b(A)f(\(pre-v)o(eri\002ed\))d FQ(F)3274 5644 y FO(2)3305
5626 y FL(k)3369 5621 y FH(Mastro)o(vito)h(multiplier)p
eop end
%%Page: 8 8
TeXDict begin 8 7 bop -192 -307 a FV(8)-192 -58 y FH([16)o(])30
b(is)h(used)f(as)i(the)e FR(spec)g FH(model.)f(This)i(miter)f(is)h
(check)o(ed)e(for)h(SA)-9 b(T)30 b(using)g(the)h FR(Ling)o(eling)e
FH([17)o(])h(solv)o(er)-5 b(.)30 b(W)-7 b(e)31 b(also)g(e)o(xperiment)d
(with)i(the)-192 52 y(Combinational)20 b(Equi)n(v)n(alence)h(Checking)g
(\(CEC\))h(engine)f(of)h(the)h(ABC)g(tool)f([18)o(],)g(which)g(uses)h
(AIG-based)e(reductions)g(to)h(identify)f(internal)-192
162 y(AIG)27 b(equi)n(v)n(alences)f(within)h(the)g(miter)g(to)g(ef)n
(\002ciently)f(solv)o(e)h(v)o(eri\002cation.)f(The)g(BDD-based)h(VIS)h
(tool)e([19)o(])i(is)g(also)f(used)g(for)g(equi)n(v)n(alence)-192
272 y(check.)e(The)g(run-times)g(for)g(v)o(eri\002cation)f(of)i
(\(unrolled\))d(RH-SMPO)k(against)e(Mastro)o(vito)f FR(spec)i
FH(are)g(gi)n(v)o(en)f(in)h(T)-7 b(able)25 b(I)h(\226)g(which)g(sho)n
(ws)f(that)-192 382 y(the)k(techniques)e(f)o(ail)i(be)o(yond)d(23)i
(bit)h(\002elds.)-70 499 y(T)-8 b(ABLE)29 b(I:)g Fu(Run-time)e(for)f(v)
o(eri\002cation)g(of)h(b)o(ug-free)f(RH-SMPO)g(circuits)g(for)g(SA)-8
b(T)i(,)25 b(ABC)h(and)h(BDD)f(based)h(methods.)g Fs(T)o(O)e
Fu(=)i(timeout)f(14)h(hrs)p 1306 577 1265 4 v 1304 652
4 75 v 1612 652 V 1629 652 V 1629 652 V 1656 630 a FI(W)-5
b(ord)23 b(size)h(of)g(the)g(operands)h Fv(k)q FI(-bits)p
2569 652 V 1306 655 1265 4 v 1304 730 4 75 v 1374 708
a(Solv)o(er)p 1612 730 V 1629 730 V 135 w(11)p 1795 730
V 100 w(18)p 1961 730 V 134 w(23)p 2193 730 V 238 w(33)p
2569 730 V 1306 733 1265 4 v 1306 750 V 1304 825 4 75
v 1331 802 a(Lingeling)p 1612 825 V 1629 825 V 77 w(593)p
1795 825 V 75 w Fv(T)o(O)p 1961 825 V 115 w(T)o(O)p 2193
825 V 220 w(T)o(O)p 2569 825 V 1306 828 1265 4 v 1306
845 V 1304 919 4 75 v 1392 897 a FI(ABC)p 1612 919 V
1629 919 V 128 w(6.24)p 1795 919 V 66 w Fv(T)o(O)p 1961
919 V 115 w(T)o(O)p 2193 919 V 220 w(T)o(O)p 2569 919
V 1306 923 1265 4 v 1306 939 V 1304 1014 4 75 v 1390
992 a FI(BDD)p 1612 1014 V 1629 1014 V 142 w(0.1)p 1795
1014 V 67 w(11.7)p 1961 1014 V 50 w(1002.4)p 2193 1014
V 171 w Fv(T)o(O)p 2569 1014 V 1306 1017 1265 4 v -109
1199 a FH(CEC)d(between)f(unrolled)e(RH-SMPO)j(and)e(Agne)n(w-SMPO)h
(also)g(suf)n(fers)g(the)g(same)g(f)o(ate)h(\(results)f(omitted\).)f
(In)h(f)o(act,)g(both)f(SMPO)i(designs)-192 1316 y(are)h(based)g(on)g
(slightly)h(dif)n(ferent)d(mathematical)i(concepts)f(and)h(their)g
(computations)f(in)h(all)h(clock-c)o(ycles,)e(e)o(xcept)g(for)h(the)g
FR(k)3587 1286 y FD(t)t(h)3668 1316 y FH(one,)g(are)g(also)-192
1426 y(dif)n(ferent.)28 b(These)i(designs)f(ha)n(v)o(e)g(no)h(internal)
f(logical/structural)f(equi)n(v)n(alencies,)g(and)h(v)o(eri\002cation)f
(with)i(SA)-9 b(T/BDDs/ABC)32 b(is)e(infeasible.)-192
1536 y(Their)f(dissimilarity)g(is)h(depicted)e(in)h(T)-7
b(able)29 b(II,)g(where)g FR(N)1557 1548 y FO(1)1622
1536 y FH(depicts)g(the)g(number)e(of)i(AIG)g(nodes)g(in)g(the)g(miter)
g(prior)g(to)g FR(fr)o(aig)p 3678 1547 42 5 v 41 w(sweep)p
FH(,)g(and)-192 1658 y(the)37 b(nodes)e(after)i FR(fr)o(aiging)e
FH(are)h(recorded)f(as)i FR(N)1295 1670 y FO(2)1330 1658
y FH(;)h(so)1511 1621 y FD(N)1550 1633 y Fz(1)1580 1621
y FC(\000)p FD(N)1667 1633 y Fz(2)p 1511 1639 185 4 v
1570 1687 a FD(N)1609 1699 y Fz(1)1743 1658 y FH(re\003ects)f(the)g
(proportion)c(of)k(equi)n(v)n(alent)d(nodes)i(in)h(original)e(miter)m
(,)h(which)-192 1783 y(emphasizes)28 b(the)g(\(lack)g(of\))g
FR(similarity)i FH(between)d(tw)o(o)i(designs.)959 1959
y(T)-8 b(ABLE)29 b(II:)f Fu(Similarity)d(between)i(RH-SMPO)f(and)h
(Agne)n(w')l(s)g(SMPO)p 1338 2037 1225 4 v 1336 2112
4 75 v 1411 2090 a FI(Size)e Fv(k)p 1651 2112 V 1668
2112 V 170 w FI(11)p 1891 2112 V 157 w(18)p 2114 2112
V 157 w(23)p 2338 2112 V 158 w(33)p 2561 2112 V 1338
2115 1225 4 v 1336 2190 4 75 v 1459 2168 a Fv(N)1501
2178 y Fz(1)p 1651 2190 V 1668 2190 V 1731 2168 a FI(734)p
1891 2190 V 108 w(2011)p 2114 2190 V 91 w(3285)p 2338
2190 V 91 w(6723)p 2561 2190 V 1338 2193 1225 4 v 1336
2268 4 75 v 1459 2246 a Fv(N)1501 2256 y Fz(2)p 1651
2268 V 1668 2268 V 1731 2246 a FI(529)p 1891 2268 V 108
w(1450)p 2114 2268 V 91 w(2347)p 2338 2268 V 91 w(4852)p
2561 2268 V 1338 2272 1225 4 v 1336 2346 4 75 v 1362
2324 a(Similarity)p 1651 2346 V 1668 2346 V 70 w(27)p
Fb(:)p FI(9\045)p 1891 2346 V 51 w(27)p Fb(:)p FI(9\045)p
2114 2346 V 51 w(28)p Fb(:)p FI(6\045)p 2338 2346 V 51
w(27)p Fb(:)p FI(8\045)p 2561 2346 V 1338 2350 1225 4
v -109 2531 a FR(Evaluation)34 b(of)i(Our)g(Appr)l(oac)o(h:)e
FH(Our)i(algorithm)e(inputs)i(the)g(circuit)f(gi)n(v)o(en)g(in)h(BLIF)h
(format,)d(deri)n(v)o(es)h(RA)-9 b(T)o(O,)36 b(and)f(constructs)g(the)
-192 2641 y(polynomial)22 b(ideal)j(from)e(the)h(logic)g(gates)g(and)g
(the)h(re)o(gister/data-w)o(ord)c(description.)i(W)-7
b(e)25 b(perform)e(one)h FR(S)7 b(pol)t(y)23 b FH(reduction,)f(follo)n
(wed)h(by)h(the)-192 2751 y(bit-le)n(v)o(el)f(to)h(w)o(ord-le)n(v)o(el)
e(substitution,)h(in)h(each)g(clock)f(c)o(ycle.)g(After)h
FR(k)i FH(iterations,)d(the)h(\002nal)g(result)g(polynomial)e
FR(R)i FH(is)h(compared)d(against)h(the)-192 2861 y(spec)31
b(polynomial.)e(The)i(run-times)f(for)g(v)o(erifying)f(b)n(ug-free)g
(and)i(b)n(uggy)e(RH-SMPO)j(and)f(Agne)n(w-SMPO)f(are)h(sho)n(wn)f(in)h
(T)-7 b(able)31 b(III)g(and)-192 2971 y(T)-7 b(able)24
b(IV,)f(respecti)n(v)o(ely)-5 b(.)22 b(W)-7 b(e)25 b(can)e(v)o(erify)-5
b(,)22 b(as)j(well)f(as)g(catch)g(b)n(ugs)f(in,)h(up)f(to)h(100-bit)f
(multipliers.)f(Be)o(yond)h(100-bit)f(\002elds,)i(our)f(approach)f(is)
-192 3081 y(infeasible)h(\226)h(mostly)f(due)g(to)h(the)g(f)o(act)g
(that)g(the)g(intermediate)e(abstraction)h(polynomial)e
FR(R)j FH(is)h(v)o(ery)e(dense)g(and)g(contains)g(high-de)o(gree)e
(terms,)-192 3191 y(which)31 b(can)g(be)h(infeasible)f(to)h(compute.)e
(Ho)n(we)n(v)o(er)m(,)f(it)j(should)f(be)g(noted)g(that)h(if)g(we)g(do)
f(not)g(use)h(the)g(proposed)d(bit-le)n(v)o(el)i(to)g(w)o(ord-le)n(v)o
(el)-192 3301 y(substitution,)c(and)h(compute)f(reduced)g(Gr)7
b(\250)-35 b(obner)27 b(bases)i(with)f(RA)-9 b(T)o(O,)28
b(then)g(our)g(approach)e(does)j(not)f(scale)h(be)o(yond)d(33-bit)i
(datapaths.)359 3478 y(T)-8 b(ABLE)29 b(III:)f Fu(Run-time)f
(\(seconds\))g(for)g(v)o(eri\002cation)f(of)g(b)o(ug-free)h(and)g(b)o
(uggy)h(RH-SMPO)d(using)i(our)g(approach)p 1004 3556
1892 4 v 1003 3630 4 75 v 1073 3608 a FI(Operand)e(size)f
Fv(k)p 1549 3630 V 1566 3630 V 162 w FI(33)p 1782 3630
V 150 w(51)p 1997 3630 V 150 w(65)p 2213 3630 V 150 w(81)p
2429 3630 V 149 w(89)p 2645 3630 V 167 w(99)p 2894 3630
V 1004 3634 1892 4 v 1003 3708 4 75 v 1142 3686 a(#v)n(ariables)p
1549 3708 V 1566 3708 V 199 w(4785)p 1782 3708 V 67 w(11424)p
1997 3708 V 51 w(18265)p 2213 3708 V 51 w(28512)p 2429
3708 V 51 w(34354)p 2645 3708 V 67 w(42372)p 2894 3708
V 1004 3712 1892 4 v 1003 3786 4 75 v 1097 3764 a(#polynomials)p
1549 3786 V 1566 3786 V 153 w(3630)p 1782 3786 V 84 w(8721)p
1997 3786 V 67 w(13910)p 2213 3786 V 51 w(21789)p 2429
3786 V 51 w(26255)p 2645 3786 V 67 w(32373)p 2894 3786
V 1004 3790 1892 4 v 1003 3864 4 75 v 1187 3842 a(#terms)p
1549 3864 V 1566 3864 V 225 w(13629)p 1782 3864 V 51
w(32793)p 1997 3864 V 51 w(52845)p 2213 3864 V 51 w(82539)p
2429 3864 V 51 w(99591)p 2645 3864 V 51 w(122958)p 2894
3864 V 1004 3868 1892 4 v 1004 3884 V 1003 3959 4 75
v 1029 3937 a(Runtime\(b)o(ug-free\))p 1549 3959 V 1566
3959 V 79 w(112.6)p 1782 3959 V 75 w(1129)p 1997 3959
V 84 w(5243)p 2213 3959 V 67 w(20724)p 2429 3959 V 51
w(36096)p 2645 3959 V 67 w(67021)p 2894 3959 V 1004 3962
1892 4 v 1003 4037 4 75 v 1059 4015 a(Runtime\(b)o(uggy\))p
1549 4037 V 1566 4037 V 107 w(112.7)p 1782 4037 V 75
w(1129)p 1997 4037 V 84 w(5256)p 2213 4037 V 67 w(20684)p
2429 4037 V 51 w(36120)p 2645 4037 V 67 w(66929)p 2894
4037 V 1004 4040 1892 4 v 371 4287 a FH(T)-8 b(ABLE)28
b(IV:)h Fu(Run-time)e(\(seconds\))g(for)f(v)o(eri\002cation)h(of)f(b)o
(ug-free)h(and)g(b)o(uggy)g(Agne)n(w')l(s)g(SMPO)f(our)h(approach)p
1112 4365 1676 4 v 1111 4440 4 75 v 1181 4417 a FI(Operand)e(size)f
Fv(k)p 1657 4440 V 1674 4440 V 162 w FI(36)p 1889 4440
V 150 w(66)p 2105 4440 V 150 w(82)p 2321 4440 V 150 w(89)p
2537 4440 V 149 w(100)p 2786 4440 V 1112 4443 1676 4
v 1111 4518 4 75 v 1250 4495 a(#v)n(ariables)p 1657 4518
V 1674 4518 V 199 w(6588)p 1889 4518 V 67 w(21978)p 2105
4518 V 51 w(33866)p 2321 4518 V 51 w(39872)p 2537 4518
V 67 w(50300)p 2786 4518 V 1112 4521 1676 4 v 1111 4596
4 75 v 1205 4573 a(#polynomials)p 1657 4596 V 1674 4596
V 153 w(2700)p 1889 4596 V 84 w(8910)p 2105 4596 V 67
w(13694)p 2321 4596 V 51 w(16109)p 2537 4596 V 67 w(20300)p
2786 4596 V 1112 4599 1676 4 v 1111 4674 4 75 v 1295
4651 a(#terms)p 1657 4674 V 1674 4674 V 225 w(12996)p
1889 4674 V 51 w(43626)p 2105 4674 V 51 w(67322)p 2321
4674 V 51 w(79299)p 2537 4674 V 51 w(100100)p 2786 4674
V 1112 4677 1676 4 v 1112 4694 V 1111 4768 4 75 v 1137
4746 a(Runtime\(b)o(ug-free\))p 1657 4768 V 1674 4768
V 103 w(113)p 1889 4768 V 101 w(3673)p 2105 4768 V 67
w(15117)p 2321 4768 V 51 w(28986)p 2537 4768 V 67 w(50692)p
2786 4768 V 1112 4772 1676 4 v 1111 4846 4 75 v 1167
4824 a(Runtime\(b)o(uggy\))p 1657 4846 V 1674 4846 V
131 w(118)p 1889 4846 V 101 w(4320)p 2105 4846 V 67 w(15226)p
2321 4846 V 51 w(31571)p 2537 4846 V 67 w(58861)p 2786
4846 V 1112 4850 1676 4 v 1184 5145 a FH(V)t(I)t(I)t(I)t(.)45
b(C)t FI(O)t(N)t(C)t(L)t(U)t(S)t(I)t(O)t(N)t(S)26 b(A)t(N)t(D)f
FH(F)t FI(U)t(RT)t(H)t(E)t(R)g FH(W)s FI(O)t(R)t(K)-109
5291 y FH(This)36 b(proposal)e(has)i(described)e(a)i(method)e(to)i(v)o
(erify)e(sequential)h(Galois)h(\002eld)g(multipliers)f(o)o(v)o(er)f
FQ(F)3028 5314 y FO(2)3059 5296 y FL(k)3126 5291 y FH(using)h(computer)
f(algebra)g(and)-192 5401 y(algebraic)18 b(geometry)g(based)i
(approach.)d(As)j(sequential)f(Galois)h(\002eld)g(circuits)g(perform)d
(the)j(computations)e(o)o(v)o(er)g FR(k)j FH(clock-c)o(ycles,)d(v)o
(eri\002cation)-192 5511 y(requires)29 b(an)h(ef)n(\002cient)f
(approach)f(to)i(unroll)f(the)h(computation,)d(and)j(represent)e(it)j
(as)g(a)f(canonical)f(w)o(ord-le)n(v)o(el)f(multi-v)n(ariate)g
(polynomial.)-192 5621 y(Using)j(algebraic)f(geometry)-5
b(,)29 b(we)i(sho)n(w)g(that)h(the)f(unrolling)e(of)i(the)g
(computation)e(at)j(w)o(ord-le)n(v)o(el)d(can)i(be)g(performed)e(by)i
(Gr)7 b(\250)-35 b(obner)29 b(bases)p eop end
%%Page: 9 9
TeXDict begin 9 8 bop 4063 -307 a FV(9)-192 -58 y FH(and)26
b(elimination)g(term)g(orders.)g(Subsequently)-5 b(,)24
b(we)j(sho)n(w)g(that)g(the)f(comple)o(x)f(Gr)7 b(\250)-35
b(obner)25 b(basis)j(computation)c(can)j(be)g(eliminated)e(by)i(means)
-192 52 y(of)i(a)h(bit-le)n(v)o(el)e(to)h(w)o(ord-le)n(v)o(el)e
(substitution,)i(which)f(is)i(implemented)e(using)g(the)i(binomial)e(e)
o(xpansion)f(o)o(v)o(er)h(Galois)h(\002elds)h(and)f(Gaussian)-192
162 y(elimination.)k(Our)i(approach)d(is)k(able)f(to)g(v)o(erify)e(up)i
(to)g(100-bit)e(sequential)h(circuits,)g(whereas)h(contemporary)c
(techniques)j(f)o(ail)h(be)o(yond)-192 272 y(23-bit)27
b(datapaths.)-109 382 y(Our)e(approach)e(still)j(has)f(follo)n(wing)f
(limitations:)h(\002rst,)h(it)f(can)g(only)g(be)g(applied)f(on)h
(XOR-rich)f(circuits,)h(while)g(most)h(industrial)e(designs)-192
492 y(are)k(AND-OR)g(gates)g(dominant;)e(second,)h(it)h(only)f(uses)i
(nai)n(v)o(e)e(bit-w)o(ord)f(abstraction)h(based)h(on)f(functions)g(of)
g(arithmetic)g(circuits,)h(which)-192 602 y(will)33 b(be)g(inef)n
(\002cient)f(when)g(the)g(function)f(does)i(not)f(ha)n(v)o(e)g(a)h
(straightforw)o(ard)d(e)o(xpression)h(\(such)h(as)i(an)e(implicit)h
(function\);)e(last)i(b)n(ut)g(not)-192 712 y(least,)25
b(Gr)7 b(\250)-35 b(obner)22 b(basis)j(computation)d(in)i(our)f(impro)o
(v)o(ed)f(approach)g(still)j(requires)e(v)o(ery)g(long)h(time.)g(T)-7
b(o)24 b(o)o(v)o(ercome)e(these)i(limitations,)g(further)-192
822 y(e)o(xplorations)i(are)j(needed)e(for)h(my)g(research.)1717
1034 y(R)t FI(E)t(F)t(E)t(R)t(E)t(N)t(C)t(E)t(S)-159
1157 y([1])42 b(S.)23 b(Gao,)31 b Fv(Normal)24 b(Basis)f(o)o(ver)i
(Finite)g(Fields)p FI(,)31 b(PhD)23 b(thesis,)h(Uni)n(v)o(ersity)i(of)e
(W)-5 b(aterloo,)25 b(1993.)-159 1244 y([2])42 b(Gordon)29
b(B.)f(Agne)n(w)l(,)h(Ronald)h(C.)e(Mullin,)h(IM)g(On)o(yszchuk,)g(and)
g(Scott)h(A.)e(V)-7 b(anstone,)47 b(\223)-5 b(An)28 b(implementation)33
b(for)28 b(a)h(f)o(ast)g(public-k)o(e)o(y)j(cryptosystem\224,)48
b Fv(J)n(ournal)30 b(of)-40 1331 y(CR)o(YPT)o(OLOGY)p
FI(,)22 b(v)o(ol.)h(3,)g(pp.)g(63\22679,)h(1991.)-159
1418 y([3])42 b(Arash)27 b(Re)o(yhani-Masoleh)k(and)c(M)g(Anw)o(ar)g
(Hasan,)42 b(\223Lo)n(w)27 b(comple)o(xity)i(w)o(ord-le)n(v)o(el)h
(sequential)f(normal)f(basis)f(multipliers\224,)44 b
Fv(Computer)o(s,)28 b(IEEE)d(T)l(r)o(ansactions)k(on)p
FI(,)-40 1504 y(v)o(ol.)24 b(54,)f(pp.)g(98\226110,)h(2005.)-159
1591 y([4])42 b(A.)19 b(Lv)o(o)o(v)l(,)f(L.)g(Lastras-Monta)6
b(\230)-28 b(no,)21 b(V)-9 b(.)19 b(P)o(aruthi,)h(R.)f(Shado)n(wen,)i
(and)f(A.)e(El-Zein,)24 b(\223Formal)d(Veri\002cation)h(of)d(Error)g
(Correcting)j(Circuits)f(using)f(Computational)j(Algebraic)-40
1678 y(Geometry\224,)32 b Fv(in)24 b(Pr)m(oc.)f(F)-7
b(ormal)24 b(Methods)h(in)f(Computer)o(-Aided)h(Design)g(\(FMCAD\))p
FI(,)e(pp.)g(141\226148,)h(2012.)-159 1764 y([5])42 b(J.)26
b(Lv)l(,)f(P)-7 b(.)25 b(Kalla,)i(and)g(F)-5 b(.)25 b(Enescu,)40
b(\223Ef)n(\002cient)29 b(Gr)6 b(\250)-28 b(obner)27
b(Basis)g(Reductions)i(for)d(Formal)h(Veri\002cation)i(of)e(Galois)g
(Field)h(Arithmetic)g(Circuits\224,)42 b Fv(in)27 b(IEEE)e(T)l(r)o
(ans.)h(on)-40 1847 y(CAD)p FI(,)d(v)o(ol.)g(32,)h(pp.)f(1409\2261420,)
i(2013.)-159 1934 y([6])42 b(T)-5 b(.)24 b(Pruss,)f(P)-7
b(.)24 b(Kalla,)h(and)g(F)-5 b(.)24 b(Enescu,)34 b(\223Equi)n(v)n
(alence)28 b(v)o(eri\002cation)g(of)d(lar)o(ge)g(galois)h(\002eld)f
(arithmetic)j(circuits)e(using)f(w)o(ord-le)n(v)o(el)j(abstraction)g
(via)d(gr)6 b(\250)-28 b(obner)26 b(bases\224,)34 b Fv(in)-40
2021 y(Pr)m(oc.)23 b(Design)i(A)o(utomation)f(Confer)n(ence)i(\(D)n(A)n
(C\))p FI(,)d(2014.)-159 2107 y([7])42 b(O.)22 b(Coudert)i(and)f(J.C.)f
(Madre,)30 b(\223A)23 b(Uni\002ed)g(Frame)n(w)o(ork)h(for)f(the)h
(Formal)f(Veri\002cation)i(of)e(Sequential)j(Circuits\224,)31
b Fv(in)23 b(Pr)m(oceedings)h(of)f(the)h(IEEE/A)n(CM)d(International)
-40 2194 y(Confer)n(ence)26 b(on)e(Computer)o(-Aided)h(Design)p
FI(,)f(pp.)g(126\226129,)g(1990.)-159 2280 y([8])42 b(K.)23
b(L.)f(McMillan,)33 b(\223Interpolation)28 b(and)c(SA)-7
b(T)23 b(based)h(Model)h(Checking\224,)33 b Fv(in)24
b(Computer)o(-Aided)h(V)-7 b(eri\002cation)p FI(,)26
b(2003.)-159 2367 y([9])42 b(A.)23 b(Bradle)o(y)l(,)32
b(\223Sat-based)26 b(Model)f(Checking)h(Without)e(Unrolling\224,)33
b Fv(in)24 b(V)-7 b(eri\002cation,)25 b(Model)g(Chec)o(king)h(and)e
(Abstr)o(act)g(Interpr)n(etation)j(\(VMCAI\))p FI(,)c(pp.)g(70\22687,)h
(2011.)-192 2454 y([10])42 b(G.)23 b(A)-5 b(vrunin,)32
b(\223Symbolic)25 b(Model)g(Checking)g(using)g(Algebraic)h
(Geometry\224,)32 b Fv(in)24 b(Computer)h(Aided)f(V)-7
b(eri\002cation)26 b(Confer)n(ence)p FI(,)f(pp.)e(26\22637,)h(1996.)
-192 2541 y([11])42 b(Q.)18 b(T)n(ran)h(and)h(M.)e(Y)-9
b(.)18 b(V)-7 b(ardi,)24 b(\223Gr)6 b(\250)-28 b(obner)21
b(Basis)e(Computation)j(in)d(Boolean)i(Rings)f(for)f(Symbolic)h(Model)g
(Checking\224,)26 b Fv(in)19 b(IASTED)f(Conf)o(.)i(on)f(Modelling)i
(and)e(Simulation)p FI(,)-40 2627 y(2007.)-192 2702 y([12])42
b(Michael)23 b(Brick)o(enstein)h(and)c(Ale)o(xander)j(Dre)o(yer)m(,)j
(\223Polybori:)d(A)d(Frame)n(w)o(ork)i(for)e(Gr)6 b(\250)-28
b(obner)21 b(Basis)g(Computations)h(with)f(Boolean)i(Polynomials\224,)k
Fv(J)n(ournal)22 b(of)e(Symbolic)-40 2789 y(Computation)p
FI(,)26 b(v)o(ol.)d(44,)h(pp.)f(1326\2261345,)i(September)g(2009.)-192
2876 y([13])42 b(D.)23 b(Cox,)h(J.)e(Little,)j(and)f(D.)f(O'Shea,)32
b Fv(Ideals,)24 b(Varieties,)h(and)f(Algorithms:)g(An)g(Intr)m
(oduction)i(to)e(Computational)j(Alg)o(ebr)o(aic)e(Geometry)h(and)d
(Commutative)k(Alg)o(ebr)o(a)p FI(,)-40 2962 y(Springer)m(,)e(2007.)
-192 3048 y([14])42 b(B.)23 b(Buchber)o(ger)m(,)33 b(\223)-5
b(A)24 b(criterion)i(for)e(detecting)j(unnecessary)e(reductions)h(in)e
(the)h(construction)h(of)e(a)g(groebner)h(bases\224,)31
b Fv(in)24 b(EUR)m(OSAM)p FI(,)f(1979.)-192 3135 y([15])42
b(W)-5 b(olfram)33 b(Deck)o(er)m(,)i(Gert-Martin)g(Greuel,)f(Gerhard)g
(P\002ster)m(,)f(and)g(Hans)g(Sch)6 b(\250)-28 b(onemann,)62
b(\223)r(S)t Fa(I)t(N)t(G)t(U)t(L)t(A)t(R)31 b FI(3-1-6)j(\227)f(A)f
(computer)i(algebra)h(system)e(for)g(polynomial)-40 3222
y(computations\224,)h(http://www)l(.singular)l(.uni-kl.de,)28
b(2012.)-192 3309 y([16])42 b(E.)23 b(Mastro)o(vito,)32
b(\223VLSI)24 b(Designs)g(for)f(Multiplication)29 b(Ov)o(er)24
b(Finite)h(Fields)g(GF\(2)1979 3285 y FL(m)2019 3309
y FI(\)\224,)31 b Fv(Lectur)n(e)25 b(Notes)f(in)g(Computer)h(Science)p
FI(,)h(v)o(ol.)d(357,)g(pp.)h(297\226309,)g(1989.)-192
3396 y([17])42 b(Armin)21 b(Biere,)28 b(\223Lingeling,)22
b(plingeling)i(and)e(treengeling)i(entering)f(the)e(sat)h(competition)h
(2013\224,)k Fv(Pr)m(oceedings)c(of)e(SA)n(T)f(Competition)k(2013;)d
(Solver)h(and)p FI(,)f(p.)f(51,)g(2013.)-192 3482 y([18])42
b(R.)27 b(Brayton)i(and)f(A.)e(Mishchenk)o(o,)45 b(\223ABC:)29
b(An)e(Academic)i(Industrial-Strength)j(Veri\002cation)e(Tool\224,)43
b Fv(in)27 b(Computer)i(Aided)f(V)-7 b(eri\002cation)p
FI(,)29 b(v)o(ol.)e(6174,)g(pp.)g(24\22640.)-40 3569
y(Springer)m(,)e(2010.)-192 3656 y([19])42 b(Robert)27
b(K)d(Brayton,)j(Gary)e(D)g(Hachtel,)i(Alberto)g(Sangio)o(v)n(anni-V)l
(incentel)q(li,)k(F)o(abio)26 b(Somenzi,)g(Adnan)g(Aziz,)f(Szu-Tsung)h
(Cheng,)g(Stephen)g(Edw)o(ards,)g(Sunil)g(Khatri,)-40
3743 y(Y)-7 b(uji)24 b(K)o(ukimoto,)g(Abelardo)i(P)o(ardo,)e(et)g(al.,)
30 b(\223V)l(is:)25 b(A)e(system)h(for)g(v)o(eri\002cation)i(and)f
(synthesis\224,)32 b Fv(in)24 b(Computer)h(Aided)f(V)-7
b(eri\002cation)p FI(,)25 b(pp.)e(428\226432.)h(Springer)m(,)h(1996.)p
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
