%!PS-Adobe-2.0
%%Creator: dvips(k) 5.994 Copyright 2014 Radical Eye Software
%%Title: sat2016.dvi
%%CreationDate: Sat Feb 27 12:24:56 2016
%%Pages: 14
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX12 CMR10 CMR7 CMR6 CMR9 CMSY9 CMTT9 CMBX9 CMMI10
%%+ CMMI7 CMTI10 CMSY10 CMBX10 MSBM10 CMR5 CMMI5 CMSY7 CMEX10 MSBM7
%%+ CMSY5 CMMI9 CMMI6 CMSY6 CMTI9 CMMIB10 CMMIB7 CMMIB8 CMBX7 CMCSC10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o sat2016.ps sat2016
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2016.02.27:1224
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMCSC10
%!PS-AdobeFont-1.0: CMCSC10 003.002
%%Title: CMCSC10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMCSC10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMCSC10 known{/CMCSC10 findfont dup/UniqueID known{dup
/UniqueID get 5087402 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMCSC10 def
/FontBBox {14 -250 1077 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMCSC10.) readonly def
/FullName (CMCSC10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 83 /S put
dup 97 /a put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 114 /r put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BB89566A9BDEC70EB4F2
048A6EB631F05C014D372103E37FC3FA317EBC9973565A638403DA02E48B7D31
CFF6C241DC5CDB470561002FF46437C06EF93BC99352DF04393C661FFFBF4BA2
0723ABD9B3E9CA9E63BA57EFDBAE684655CBBDBA15ADAE43E1A2C98A3CF060A3
D16AF8FE3A49B50A24C20EEED716E49AF6013D4D38CD9CC41A91C17E4D04D79D
567E1EF49110AA9C34464E95D81A730ECEB2C9AF38FBA6B45E253288438B4CB3
DC75B3A906D4357293BA41E59C35223A6C9CBD6FF5FC90C2D07CBB376C7320FF
435A6251822BFCBB612CE630EDF826C37E95F541C21B93FCE127591D5E38165E
2B58A34AAE37712BC58B63FFD70AB80F4F24612CFD2F1466BAAF3CA2BCB45148
D0DEA0E9B8FBA4C4FF5B8B3CB02E461355051842BD1C94F41066B9B909DB83B1
DCDCBEF7CD00A43E4C0B8191A29600CA197F0BA227FB8309BB539D2A620BAC70
8A1AB2DFA51ADC9873B8E5582DCD3ED154E5D727D1665F99BD89883D69E6CC2F
DB3A57AEB612171A88E22F038461DE03FC357F771675E34E90D4D19B4B36891C
9D2333960400E97494F4FC4DBCE6A73C34A0409E433BBDC0AAAEBA7D3555066E
1CFBB4515C8B573C9B9DD12ED5B6ECEBE35AD0DDEA9DB004FC6CB540B5117B49
59CABE5FD74C6F5B6482B42C20B5FF0467D1DBD7CED2CC651CA57852B6FBB402
A6764DB342889132C911CAA713A7F2FDD8A5E849345D6C81025E02F5B8B682BA
90CC9B467FBC37362436EA6BF8EB62D784B01D5430147945BC09D1F49EE89F2E
3E2B8E6D439248A56F82F2E03EA5C7A922F2813BE6538A3A423BEBC55B345AFB
3B3C125306749E137C647D78028AE1FBF3E1A82C260132832A9668F454D39C41
736717DED0A99F6B11F005F0E1D07FE84713AAB4C042FDC166AA146D7B5E9198
E4F485BE5B135EA281FF1C1E616B5AAF02771F58C5840CB5A427FF9794F93E94
17FD799C78AED1DC4810BCEF4C6C51D3C1504EA2C6F2B29805B7ECF97B5F637D
FE92E168CB9029E90404CB54FB312FC7AA8A9F2F524C03E61F03B1E31D4F061E
1677B39D5D30C9FD4673E1723F4AE3CCF38593AD6D7F61E9DF3C010E51F25085
35D51105E1464BA146A78D7297D4D310AD91342A0BB942034A3EC0696B467367
3E39D202D637E6B14D0EBCA6AD3CF22B07D4CA69C0FCBB6C93782B2F0DFC5AC1
5D8A16CB5EDB671A0C1BA9D10F63CEAFCD0E06E42C730C8EF769CCFD57937245
658F486036D37E8BDDE5670A212FB488A8753322A5B170C9662750AA958C0BBD
8E97D8239D2A08B30416504DEEC4E506013E037C91785C674F8A6A44E23FEE6F
CCC00CC5E4D355B0871FDB8ECD64F70EE32449BB5D6F84F8C8AA2D5B1A489BA9
D7FF2DBAA8D0B84054E93D64D3E77850A3724824914A0F821EEC3D605DD851A7
606936B8B9E24D6E932E16C448140FE94DD96C75AECB73850035ED9C04A1D93C
64B21E7D4657E030483EC5C3554AEF8BE4D0FE5B9743B875340B09E01273DAE8
F256C50A1A8F2E0417440A8BB0173F59E11523E1CEF2593A4AC5AF2167627B00
C5EA97D125EB8A4BD4C372877ABF10F5B7B149D73787E0834BFB3084E9508DF7
072DD71637019599252059738D4D6BC57A9358E4B14F6AF9C4B31DB8E25C29B3
7A15F9953BD73ACDE5F0445A5DC406BB4635FAE51C1D8202AE31730E6F355317
1DC197DB0B6177307C60E5D38F4487363EE051B2E609A52BC4D45B14B6558B6B
5E1618748794B8340752CDBE7756C068975B559615D4CD5A97CE30BAA7B2B1A3
2FEF2E055232B24FD8A21BECDE1B6A479A28EC80AE2CD16DB50B30B4A6CFCF06
491C7CD5AC29FB964D4846415233947522676DEABDA0D9535F8507D33693930C
B4E4240A02B0CE7EA288516B8A6EF908D7F8BAF9012D052C6AC96D9F8F6ADB07
8984F3559C5E7E3022A957982155FC9CD599C74E18328D3AB46F9DD15D1C4C3F
9B93ADB4489BA02CFCF57DE6270F3AD2F8597BE71786510EF08142F430EE5568
4F9DDB792B7C46B6135E341DBBF062FBC50FABA80CD4A384157BAE57CBEA9781
AA4416323265168AC097DE7E30A0D4750143A4FCE70A863A31876A8FA5327C3E
36E89589E363AA2B1A6E8B09F5AEB8FFFD0396067173465B6503383DE517A6EA
88C0FC08578398C2A721E5AEB29F4AC9BC990A50CD87BD35A11F9E81F68E7B85
5E5B95A4F9A5D30379EF90D78E1E466DEF867BAEFC4F5ED2C762BFF099C1C2B3
5E0DA1C2FB33BE1379413CDDB1EE6BB3A495331F72F2FAEB8152E8AD5FD334A8
AAB0082A71D5574B618EA8D487B8FAF1B445F3395B1E21224F5492A0E06F5152
7726835C900E2E52BE3B7B654183AEDEC68053DD0AF19EF6DBC10B6FC08EC7D0
CC0E2C8FAF8C9A4C21FB7C34E074BBA4EE64226BEC8C928A784C1BEE35B72EC8
E9295240B29DDC2539CD118BAC38DB3917D14CD33AB45FE47E827F2A2B193AFF
53C5396C52CEA4F43F06AC2D08C74CC85D608CBA267175EC31311EE25AB48DD9
FE811B411AE426C9FC0B6044D1EBF130231623F1566CEA4D1C06D8032FD9808A
94479C842BC41B675CF6B90113BD681F8D43F51D5016D80EDC11D7640FB950D4
E709A46184406ED90D0892A4CD9062938A8205697A200DBE1F38EB166EFEA0EC
4FCB45CDAF82EA103DD6FDD03D146F3E42EDA6496064DB3F4FC1C5280C9E604B
D5EBCA08BF2AAC90156C11EF68137DC76502EBF216F3AF3EE30DD2676D218428
F41C655093F8B530FCA378B5769F262A6FDB4B66B83F18F050E77227E28D71F4
5F4425CB8D51B3DAE872CD86D7804F870BC564A6DA1CA13EDB00D131CE4F6460
7021661B99612629DCC20C85CF155EDC5111E015A77B0B82A8FC1EBB374B7EF2
361419BA93B857D5C9944BB5B4AEDD86ABCC261542077FE09701C96370168579
5F89D5AAA08D700E2643E88C2FB8D1D56D37AAA9744872E7C050B4CE046B47A7
83F224FA9FD311C955EFBF173042C8FC66524135F579B1397828870D5C9DC71F
8615FADE2A1CFAEA90F732B6C266E2F3048FC43EDA7A6B6D98E9DB793CF457B3
F5877E7A055C92B0246FEA8C72B3B3456F93BF36E2651D32CD614C3AECC0B4BC
F824C8363E593A6458D37408FC5B09883B280005DD24123E2D4B1B85F4113327
EEDD9186A4AF2CD6439B46C5C168C125CA80F9EE9E68906620EE126CFBF26E15
B269838A54224EDCFE2A373EB750D4829BFA410DE5F1541E428BB1E024AF496D
F5F1C151F5A645C8622F2EF9088D57A2811868A8A8BFCDBFCE3ACB8463AC35B4
8B6F44E1C1232805842F56FA468F81FF37D5D55B81CA56058558544C142EB3BE
07CFB1F75DECB1E48C14D6AFDD455989AA6FFE8B8DC54F462B3C20E31D270BCE
8E68E2B43A6625AC7E9792704FAAD6CE8BBE0B341DA7189EBB3E9D5375B27FD4
12506D5BCA50AEDC6955E6C3C7BAA84BACAF7ABDF3A270C7734EC3C6EC22793B
E67B0E288F99699D38DA8B79F2D21DD97945FBDDD132A8F0BF947950D3C0B4AA
EB7B2C435AFE54489E1930610311D718AC610C21A644F34CB2D1959B3066F39B
EADEAB5CFC6AF4D191D86B02402B00D1C5262707861C5308730579795EB53207
A291A27A8B5C4DAE0A87A0C6A260026CA3CB620E1002E066A515D7990F3DEA29
0FAC962E0B82B7A6C86B1EDC54007822BAECED673FAAEF88C8109777EB79A53F
AF3C58546974F2F56E70E9B5CB59ACB5C27CB01895557B2D82134D7F02029B24
3331621F38E68717F5CB68A8892D0B9C0A8ED4F8BB56E80505170D44C6856128
2DED0254ADA4875CF56B4D97372AAE730D4C77A2940DC8C178274DF88A9EE037
215C6FE7B9D481EE4DE809B124C0270782411ACCCF89906A8B143D0BA8B2CEDE
E9B90465C3E57A4FD9AD2702323450256ABD09A1F8C26F08480317C08B75B720
70A161C99715A35A94DD5C9647ED0F8A5337B774C8E54F9653AC859485A1FED5
37B725A7E4BA58711CBCDA6054E34CBD8E9F9460179DA7DBD243D81A1531FDDE
BF2BD425BD9DBE75EAA333B1F5793669A215549A774597E6ADA16D323FE5601A
EDA41092730009A99BF5B5AAE281844A6BF3292D4D4EDE36B4FD8BCAEB6EB72F
AC5D3CD53D0D621CA9EA8D254FDCB2B5161EE9E80B266563F669805A3A15271A
0753983004A1ECC7FBADF62AFEA4DAB49A178C231759857DB910668BDB07CB3F
7E8EC24901863088B3231EE3FA563924032C91CA9D68DB398F9BD9AC0C651EC8
9051C9F709CD784F3FF5951DECD7E869ACC34B83AECDB011E6594347855EE7F5
28811F744A4BD70D4E9077EA7EC19FFCF612689F12B34332857AE41F13E6D16A
962DB9B6AAAC167B9FBDF0068EA13412F318384134B29F3F0C399F1973A3564E
F9C3C39B5BDD4C98D81A6CB476E565860B50704BD65ABD630A5F1372F2D826F3
3AD47C08B8AD3176A170C369EF3CEEB190134006D6135C5B8CCDBE1C11FFF1EC
3F6D8C46E15C4F5EB9ED9F31A129594D542D40DC3815CD075A0DBB648D868AF5
15A05C4BDB28BF23653A3AD96CF6AFC065DCCCB23D5D9A945F8CBB539DD3BFA8
DB8F1FBF9B6F25B41EB4309995CA3D5D6ABD70CBB4A2F0C6364E5439AD1045FF
72F6B45A30BD3A548CFAADDCC6C15D46F6D783D3E520215751DC98335A4ED512
D7D19235CDF911CC69F3CF4365B678EBF3E87C456A4E77339C74930083445588
462529C22A96A28C5CE87AFA0C981F26CAED5A1C8DBCDDA612624DBE0373F026
465185A4D8C73CCD8D71EE97116F8F7D341B87FD78F9CCB9FBDA2A7799711607
6BBA855AE9D5C505870DC85FDFAAA130A351D56AADBFBD6A7D52055E3200F8B7
8AE9A00092B55DEA8BDE224B4BA7FD4A191CB1FFC4CB995FEE1AC2883AB69E1A
AFFC09AB5B9AE311A030A5BA05E2213F9BBF016C8FA80689C069314D91274B20
53FCC65C7D7B3A7504887525BFFA060304931672A078BCD7F269595686310E34
E1ECA868899BC402D17EC36CE40D5041D7CEDA77F7764C9D98793F5334F574DF
E93CB10A5E8ADAE95CE63D2339557091B4B4911A4987CF21B7F1DBADBC2DD605
8EB72473C1F2EABCC44E0D0339EECB55DA74085606C3F89D57ACFBF5755A5395
CA8D4BD47E4EE8D8B882D3AB31A1F0C62E74654C7E041E4FF2693A38A9796064
46526B0A37E6B5BF8E48E80EDEF81E34DA8F6CC9025936A4D0E6D709D61B7B5C
AB550397117F3F9D2F5A542A64DEA8E1178F7337124D6B56BA92F659AAD694D7
391028731E01284BFEA635314A8DA8DF7A34EA3B6B2F8803BE6DCB423A9E8015
55EBD90EBAE8A00298B3B6B1C02BA516AF528122C1F2B07EF69F5466C2C36643
0D665D6561705509B7582D8301AF3C32E2F3B9433E3E04D62117C7E8A368BDE1
0D4DAA1C415B2A6573116D2A169AFEF700A83F55D88813585E89C94C07802BA8
3AE8F9BC3CDBFD9C2E35D062B1FD6E79E1EF104FC70B0AB09D12CA027F33F85A
22F0ECBB4AD55FE8C616B82C46CE69A600E4F767BD7A9C5F9B37A3196B038384
5DEF76A8884425FE598A63AEB19FA698C2AF7CAA4983CEC789268E22BA051EE0
20A40633D22D8F707626ED30E8273EAAD1C065F0B2E1718B5AC853ABE09330C3
B0082A71D557169BC1559B6D285A3499D41C4CCF1F74884EC3917EB9C574371E
AFE8578DDCA459B8D22C0188A8D150437B05FB92022C95EB6FBCC954216B5FED
CBC7C90B9A1F061376A9840FB64390A6BA99CFC8279A86A730C6DBFD14C53C4B
7277D676BD42203677E9ABEEC8C97E13DAA626474513B06F8734DD784F2FBBB9
B3B448B8E8221E380AB4A86D3A683B86A54129519D50DD4FE63B30954D805CED
A9A5D9A39C58B65B08E1C19555E927C6DBF7FD07252B2B57F62B905D6B488201
213D106A41033B26FFBAC2E616DA6ADA6D560BADF10E68872806CFD6F6E19D7B
57CF1F7A030A7BAD374F16A977E0ECB8742D034ADAF9C247DA19C8AEA74EF6CE
DAFD6B1DC562FD3B77E4D008BDE4D8C7FCA9895DA1AC9EAA01C32A0DA712B082
9438E77230D38FC4153E1711417B918BA6CC03203A5FF082AF880F48518D8271
C1121E4F1386B30A7F1BC6F10EA98443F8A65C867A109336B808BC9A8E2A75AC
F950835AA84B56F59DA4C8A18859C3B68F6B6DE09A6675F639EA9107BDB67B0F
54EBC564BC2D781B61C14363A54956BA78A2BB89C9F966C94EEFC29EE9F4E23E
C0BF750144DC289F0DEE1F8A25BB52E54F656FAFEE4BD2DA57E1306BBE648051
1D0CFD6A23A3DF082E3CF13197BF1B7FB22B2CD427BB78F455C9634DF989DC90
7BB2AE247B1C99AB2062855B2948341B0F857ACD750B59E370A6698C6A1F5287
72A4A9628A592E313956C242DF8277EDD2F1FDFB07CDC104275FFBF796D7518A
DF49FF3CDEC3BDFF1D290C382F244DF18005ECDABF0C5C2C64EEC4383E2E07DC
5C82587C071E59B46B7BEF31D268F39D9B12D534344FBA515E9DE8F166FAD1E2
7D1558967AAAD3829D3F7EC6938D20E5379F414532976ABA844D97A5E9078901
EAE4D0ED1F4C7EE7A2D80D891A5013D6409A38ACFA497F5A169EB7F9F4890DC4
62FA6A89EA48267331F086992B9CA9305E16611E6AEE67DCDD588A25D37F45B1
0DE75C802EE021E574B64B3969DE2E5061ED9364B646C38D4BBA86802CA6338A
94E135D2256920EBFB1AA22D9E90C7D16853F0DF9F2D942748EE540E4FCE63C6
5380D7AB4ADD6CB00FE8F7867E4862D8DB432F28331428CC350CDF7F447A65ED
D7683ECA35A22ADD06E9FE6BAF060913AEEE7B2B8EE4798E437698CC9EB2428E
74CE73F84D0D2292DE709D71FFF8901C3505370E6F1D4E28E6B7372492C65A88
159371B1D60D77CEC93B272B6C5394EE1D2EF9969DB2838B8E128553879A1BA5
2884B0A596E8FC3D1E648B7E26A4AC57DF09B9CE09B2F91D8CA618CA52AB3DBD
D005A56A420366069B73146A6F58E88BA49671A1AB7C2070C3D42AA770285143
40AE7D7868C0E1993506B07C086AD7D4F28CE2D15853FC5FBCBF9425D8012B9E
DB6E1E5002517659C8DA69DCEACA94F368537668843D281FC11782F1C5F71977
CA215349EE6F20565DE3D8D8212A40E1227A4B22965FA64A0B02C62BFDE97E6F
C3C54FED4057EF9D258C42D7440C78C5E0CC58A40DD74ECED4152F70A93CE71A
1B3A57C46F74A6D27BF98C97CCD31A8EA487260F224A3E40F52C65490AB4098A
7B9EEB54A5A415C8C88568F7D9EFE74BBB785FA18AA27D9201F28BBC477A20A5
D1307AA78EB8C7CAD409AB64B29E4115E45F5FADDCC80CA74B296C4265A40614
37F2ACD8386AC0202D6FDB6711E8CB06442F209D781E940ADDD6D881D4F8E874
357C533115923B90138FFE31D3577C6AAE60D768970FAAB682CD0DCA3E9A9A68
6393E4B772691C1013ADFFC90C508D51B02D2518ADCC7E79F7DE5DF9D18B8435
6129064DD1A3995E5A6F45D78287CC10A0EAFBF47223494C5EA934B1BC2F7C53
686C5880303F9E3ADC8B100D441D944686E1FD811C646C6DD0224F6CF55FA87F
D132EF50450879A25242A18683BD6D0266F8F333F3768D1952B0F32AA75106D8
EC0AB703F287E847CB91FFB88CD9DA174B49171822BDE34621CF41EA772230A6
3088F8D19CF2364A329162D39E166AC728B4C427EF3BEBA94B18ABD2C5585D05
475C9649C7ABC6136B4E55255B4FD5E8A641D1D2DF1E5081EFB6EBBD8D0F191F
7DB3788BD9FF8EB017E3440C96BE042568C0C11ABEE6BDE4CDE434EB44785CFC
43F1AF5FF465AF2FDDEBA8A2421C966210F711E747B22C5E73B38B7279F9D195
028CE439E1D5137F787D92AE0F39E206C98EA23DC05356642D5BEFFB637A71FB
621AD89DE7AA6758894D99C4BE9E6EE4B6BFD9AF997F71E7447D6C9B54BF55FB
FEC09764D4E20C2D01859044DDF7D762EDD813635B11510A60DC90CE68E798A9
F7DBEEB25C16F0A20E27F572CFDD40A9F9A0D2322C8B3CC97D07BD47DE9446CC
D82486C4477DAB3BA8F7CC3F6FFB4EA9FD20CE0FA2FCBB6A31319B517B516797
5510EE20E487556F5DAFB420BF5A471FFC465B8D40FA63BA53CD71AC8A5ED111
216E72838A719C5B27C4DBBE2D64FA7CAE823A3A0A97C5B150666D08C5DB9D0C
68D46B370733A7BFDB43B4394117F78BB283A307689462778C95AD78B2762993
FEC78B20D1010950FBB8524B3CB356DA2D6606A7F26411514B7C37637A71B198
9124B8E9068AB645468E1E5127E20D53D7C4DFCC1122E30676F2EB9B0A7DA591
36FC044E070CD4C3AF4C37E119AAE72230D93214D4010BD57519A4DB700AA3B6
07866998A6A1EB2918EBE77336C35AFC46AD3EFFF84230261AD8EA45B9C7659A
A3999D8CA153B594D61B6137EC2C0A1B6437ED4218CA0C7AF81DAF1E98D7BC5D
9AEA491E17E2BBC771F43D44BB3580B9B1F3F03FD2B8C982A888024E5E0DF62B
6C1E684E02FA24B47732C7CAEDD7F0EDBE89AD899439A6B4302AA83F07FAE0D8
335CF97F5D8502660FBA38FD664CBFFECBFF096F0DBB0155BF1967CC25D7BFFD
DC8E9443989137CF27936EF277D7AD0D78DF828F6E92BD8AFD00AB75939BA526
E68DB417F78F7B49729526811AF8C0FF1F48F66FB01E207276DD33C0746B0C52
35C601CD7358C0A7AE70BABCDEC83F0F27FF3978F7E4D6E239973BAF19E830E3
4DFD4C9F5882914878C02328BD308482B0C9949E7CE4DA0890078F34235A3827
F703533692B2B74466EFF4F23F2F6C68F6EC2E619F9CCDEF9A0191C96EA66186
A8F6454E0AA9085243DD6212A8FF8DB1828EDBCDD2D21F42D2FE05DD2C4691ED
E8F9D4EAD263970E9EE53C45C5F480DFDBFCEE42E07DDF8B496329EFA524870E
EE64FA7A61927CCD96F3AE2284627C4416F4539FAD9570412AD035BF2FE58391
A6957E9F763E0FC54029F5EE2DD8230A9BB3FFD9338833E3AC4129E6565ECE5A
627886C16A28B6C7AA949C7B53817556B27058E6800D7F91FE06E762BFEC4BE5
5ECC5BA2A7A3C50E8DD3ABCF3E6E5A6E6260D577AC93D8F508DEEA571957EFEF
F2E90A2BCC88CA77EAA2BB626E2EDFB6B7CFD214087C4AF637AA37B31BA6D466
0F0B74D792FB52629CC698B92A1174935082648CEEDB323BA30E9CF824C5E400
78C0458B35D1139DBF90EFF2CB00C24546B6835B18F790FB0AEEAAAB870E35D0
5785250C4372BE51F767F12E10610B7CB818F855A8312BD1735453F9A80A986A
CEC832918BB0E1B06FF3E9260E41BD41138AB6B6AB6B53EBC3DF58866929ABF3
38548FD468A865F5CC7C026C0877808C3C1B2E0EF3F4A1AAA5E544394563D24D
8C3ECC6BAA9E8A7A98B2A6D2D86F40BC0AFAA2B9D10BFD8DB277320CC9D40814
8403DFB713F881EA0FF60FF4C66498C3ABC6E19FBE16190B2C38A614E7DA212A
0CFB820F99AED67E5B10A90DC2FE60CCDAE48306FDBD757701EBC6B18091DA15
05361C042BAAB1425C743379975137F893413731F5F087BEE76B961492D19F97
0B2D6A5A10CD4981AC0D06F2E3AF01FAF0F8F1B9398648F721C530E933987072
6AC3BD285F4BA6FD649BE2F137AAEFD17D33368A4E48B0B69B9F54869B39237A
A4555349B3094E3B263882E504AC265E467C0C9585C8D5CBF220D354D0E9B1CA
F93156DD8A0845D719295A12F94CF4B0DA4C92C69A6E8BA4EA2BFDCCF1AFD229
357EC444240B4FADB63CE306982FEBDA897A26271CA4545F1CC747F2B2553B21
292E79A63F8C9D6BE8F89C7DFF24EFA533A55BD841100EF20A96435CE2F52B9B
B831EC57750B3E7E2AD83F9DA61E0C366B414B5578772AE78E02C90199AE4B69
81D40C30B542B549A226C70F605190167DBCF400C9F474F46C7238DBC7928AE0
07D930E586AAB6DF56E5AC29DA7CECC36CA554271737878C3D99877399650F9B
BC7BED84432184CEBE6D91CC9BDBD70919C15FBA496589A23281A176860BFFBA
9768A9ABD29687FD2CE167ED479CCC443F92A84D23C43D038AC685B44BE69603
9121BB058E606314D29149C30B5357E31BCB73631067883288DA23F5F37966AF
0297D454E1204AB8B5E56E5D6F179EB8A2AD3A0121680A98D4C3E36D446741FC
23A8920045155D3BA22116CE59C4688EB3F4C3A38BDECB2A9A79310CB307F100
C6B5247269B1779BE725D93D43992424608B173203F6D238B7EDA1CA4AD4B8D6
B2E026CF4CF0ECA36B8E8E742C9FDA3162F05A7FF636D072A7F536D1883B2338
8E30F42A1C8F51697E7CC01085B72BF9C2318D1EF9499AACED69E1954E3DB900
5443C539760DF36628648A49CAAF80CBE00D901A9E3E03F4D736E63B27DE7379
1D3053C0B4DF19F3F9536F8D15D15C3C2155B97FD68371118B6DE435F9463F51
CBFEB40AEE9A5717A5689EBEC251DE4A4AE7C20355B2B871D86550735D2A7188
0060D8AF0DED06811EEF7B25DA3AB615443A14EBF431B141C2A86FE2B219483C
BAD4BDC93BAB0B444CD943A8030C127CC53317FE01BEFC01623872EB324449F8
F67C09F808DA34C02FC83A49A85ED2932616F93A9D0A4630F4CBEB8DBFE488D2
13F280ACF8D4A0F5DFBE4EE1E9C0551CF31A5697C40C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX7
%!PS-AdobeFont-1.0: CMBX7 003.002
%%Title: CMBX7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX7 known{/CMBX7 findfont dup/UniqueID known{dup
/UniqueID get 5000765 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX7 def
/FontBBox {-55 -250 1289 751 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX7.) readonly def
/FullName (CMBX7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 51 /three put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D436DBDD5E3DA259BF
5063CC6156E2C2A4E1D07FBFC23D148DDA0199AA319E8BE46D2D7247A74E3477
82008F1A3AF6EBEB9516970E4048276BA75EC1E829945A7BB4F1AFE8CFEF2158
674DDBEC84C9E0597B166C1B53AB7B62BC74E3DC25ACBE3C29ED5D6A2BA1B8AD
90764BDE2872EDECCA6D05F7DCF5FF313DDDE00BD818F647EC5C31EF7F7E63D3
2C73A2B195AD4856572A42E6974EFE602B4F3D31A419C8E7E8A558D60E1A1713
F37870B9342BE57CFA1AB37F9B185DBA1EB353BC3CB43502D1E1B7F2B7E846A6
5A61A30966F86310FC64EB247F157DD6C4F2E31659A3434EB58B01ED8EA895E0
951AF5AE7B31A57D309BCF180A89553B1F283CDFC41791587C6E44BB8B50D5BE
1DFAFAF1559AE26B2F0DD78CF503F63F711A4ED79A1511CCCF07A61330CA999C
3C5B7782E767EF7E0086B436CBE0C57ACC81AD29D8F05A937FFBA72CA6C3C0D5
E8A44BCB9CD6E63DC2CAE425DA719E8AB1C2A2D81A324654E96F4D76CF1ABBB0
147C5F56C3AEFA0353EC7853604F6DEB71D7FA5803FE61C0315797CA0357ECFB
91B02A84499F9209CE5989021F4D27B2B20D4793F6C81591CFECBCC22005F89B
CD1A089C36E659BF3BB92558E769314FCC68398AADFD2A38BC09E26E63BB4F3B
61C9CA955E70F4BC3D4DAB6837B48AEB5ACA064B681E478711620AC237214EA3
426994109C42EE1854A84CFD5EE4CA590E8B9C40478F84A19F8F5AC3A75F916B
9997A071F6F75236CCEBC01F8744E8D294B574AF710C26EF4062FF2D2FFA8F4E
3684C403E4D9986D1216542D0969FAE0DF1BBC8B1F666C93E2CB175DDED77EA9
1141B726915C25CBED68EDAB7158844A1AEB62734BC085D705DECF3F909C77E2
66FF93CDB538BE4A2C3A1640067A4E79DD89198E1EAB85977449E60B6A34B551
B2A7B75E2D5C3A2B7E9A93166FE9BDE0DC80488983F4DD432A4BE12F77BECD6C
88EF63012552EB8BCFA44CD4A1F4907EA36FEAE3DDFB06973CBF633AD9D22957
1E11F00B5E267F8F64661B935CF35E515682CA911C1B6C18317277ACBA335FC2
4C3E26AC62D547755D49AEDE8F2FF924947364E93BB7550D5216AA57E6466095
80ED8612F31208FDC4255D5A2832ADCD986C2C6544E878775FE1276AC6D57B81
DE28BB1D7930C729C1F3DA4F972D3A9E6405570E4E832E1DA4435F3689BD44B1
C4DEF95F19A3A0FC8B0FAD70E3BE368786043C04915DAADDF2863955575BF75F
F087C4CE3922099FC716556C705FB16BA28A9F3818A54143AD5996FB624ADAD8
AB688DFE5F71FC7BEBDBCD15CDBCFC13D1C5E3B8C74A1F4D9C11C9F08FFEB259
1B755FC4C50C28354A8699F74FDAF0BC622B6A0334B6A36E15AECC2517398C47
F94137CF043414300A797E722A03CC2A47FA2D4AB88B870E7429DC7535A9C8CB
3C88FF3ACC8F8A909ACE3574800E5029E9895EF44242B7690DD231E88A03EAB6
23CBEAE5C7473EF61E638FAC3FAF61F88E1BC25A100056CF282C8DC315F83207
F6085B92DDFBD8921784044B5305FDD91EB8DE1E5A555E6F05FEC65487BCDF1E
80BE21F43C3619D66164B82C698918B6FD807885CDB45E3D87E9FF9CABC08AF0
335E667BAC4A62B7C104DF625891533637D5CB93D8B97A9D78C40E257B49CAB7
E7E38BC9A7B21893F96AB10B053402A2CCD1903812F3BF9689C2D5A8C6A4CE8C
9EBB762EB7C7CDD76B8C85F6D4203B086D74F0306537248CBC71BF3C06888180
5ED19BA5F433FF6B862DC96EF23FA1FA880907F92B15B3DC9586C21B006A2CDD
080494AC14E9DF9C3EA5EC5AD5F23864D39B83069DF5AC7FE1FC522FDF88B3A4
B62B4A8E6F97A4627F8CB3966E87D33346FF567A32868DBA129650FB29D0CB99
CB2146440C12635F7FDD2CECF373EA6DF1D0135AE0C95A76CD17B80E5A1BBF10
10ECB9826B6E3533F961B1365E6B380223D0DFD3A9E1026EBFF8B60F10BD7B30
6ABCA33C0420FD910AD8ECE3AE60F771B65DD2EE0571CE54AE96CACF3F737497
7EB4762C5ADD08C8BB20FAAAAB325F1F9BEFBAAF7546DEAEB12C1CB931EA38AD
7AB938A1B39196835447A7278AA3ED696A9DC642869F6EF6536D754DFE1432E6
A6332292975A81B4FDF5BAAD895D06C2FE120B9EC9F39B42C0DDE3D1F1026F6E
694338884718FC33BA07EACCE71515FE4FC8F2758F8FE40327F0F48CFC3ED47F
D9CEEF14CEB946C7160A5105E3C4A48AA7950ACA1CF74DE90F9A3186E0ED717F
3CF64CC744D3D4E84A26C23FA022A79A0D83D65A6D7EC11EEE915D020DB32CA9
8C411414AD846E37244B1A8AC0F0075D87464EBFE7F0F2DFDED9EC1C2D7EE984
7D698CE43875F5BEAC2A8098DCC22BB0F39CC9EECF3DA61DDA5DF5380AC025FF
25EDD31FE9E411127C44A07AB23E3649D2C20C6A0F46C4D2085723106E1542B8
E06303835FA1C87C8E6205341D3E3E67121E77D3D5087874DC72047A99F971D8
67F25B1F8C204AE489F264C60120BD3CA53472806776C6DA50C7E22A92ED2C5C
65576FA300A7F093732E46AA63B0366C04238A89E222F67B4840533D7A48400F
EF5A383F7EDE6F38CAEA0C2CD3D5EA038AF0CB05006B0A3449B83E310C8A19B9
7B06732FBA67AA72882EA80FDB20EFE2B566B5F2046DEE5AB92A2B834ADF3C93
E3BAF6D944BB2342DE57745C6D0082801926526D416A325F956FC37362935746
A66857352FF1ADCDFF7AE265116822DDE4FDB1F4BBA4DCFE499202446105E4C5
95B6F26C3F93F65F0A5E7636D798DA7476D4417CB56D7F70F3AB2776AD672445
3204C0391B8CFB40542310650E22AD6B6F4F2BE27FF4AB10FF3D38B4C2DDEE7B
42FEAAB6F91F21FEF35B54D0D131A9E1F6AA5A9D72E8819ABA5467C33B876397
E816FB952B7D674BE398437B147A7EB801C178695FFE658B203D51B1F35CE144
A31F9100E11835CBD8095AF8A71FE4CB829F474377DE8AAA5CB483A8AE341C6C
85631492F67AA423418552B14220DC11A574C60E32ADF96ACC64B0A8029B3611
3F01B3078431C63AF806F90C3D60ECE9F27D22E9A1474054A561B515DEAF0790
908EF8664BEACF69097D93DAD19BF3F13A8364E0D511238E413521DFC02A05BC
52864AAAB0A4FAE9378DBB482CF3A5886BA635BAEB00551EB095B47D6A924D14
F4E51ED1E98078E30F83852EFF4D5061DB5A8C727486473C8BFFE8B03700D098
F5249F22EC63772F5B283F837249378D569D537B3A1CD3325DB8F09D9C8FC30E
A52ED42724617443F49F4AC9BDA9CDF47D34EE29037C5F70E0E689C686672869
41EA89BAA613D5470C7A25C07C489956D4F4C03DA33758B33100CB08770D6EC3
052EE52240A08107737F9ECBEC53AFD5EBA7B493D6EB61796AD765DBA79F807E
FCE53F29333CFFEE991698F3D56E2F0EA8C5DF6A649DA42C431AAFB88B959077
F3F4C7C9E9052146A52EB2CC1C1D74AA2E8A7E7E82F1DC16A2E9C6789519A64D
958919A92FB5CC51688E115CFEC3B74C877E52315AFB5B413D76801E9F1947D4
A425A95682AED5BFF249530EF3ED4002CD143C66FF89EAB658368C20C54E6DAA
E9648F60B61E5493900304DE22F53C19366ED95583068F425E030300A4E7F89F
9444155DF1F1B6A67B4532C9ED9B0A0B8DFE0716D005A13A8FD7E4C017B16D4A
41946238D41BB88E3438803D483C3AD84E3D8B745612E9D103C9DCFBE7523E55
931579444ABE23F24232FEE409CFA77394D0EF74980FDABBFA28BEC8579AB691
4C562E28AEA4FB2ACB4D6C7971E1255307C22B4186D29CD488800A840A462E4F
58051C162909FBBD16CBB7BDEC559DAFCF7B92AE26BB392E5C1A2D299B29D32E
34C915B4CDCC0EA767CE1AB3B8D7D6A73FEDC47BA1F316B1BA62D433A7013985
8D2BF6178CEF1B6DE89464246753D8DE5F1C7A7D56844FF5201D6FFD604F6023
59E032A8151F49E52544DB9DB472EAB10A629FF3D76781F0C101B815B7E87ED4
25C2C31F80A0C48E0210CA9DB261809702EA781955CD13BBB7914D3BE71E0C8A
95F8DA3724972A0C1F3C6372253ADD295BDA8F8230D4D94FECE4E93185E88D01
6CD6A74C23E04267DD0CEC1D4052176AF0C95761F854B90BC1D4CE1FAB88599A
FBE6658134C77CAC023076F43DE5330431A22F4A34787BD2E60AB4309F238BE7
32E1958E3EABF58F54D5D58814B68D81D5B309B7473BC6A7B0FC00B245B0D78F
7E1EA74A91A737094A9996F76CF9C309E6A3FEE8CF6A94F3E436DCB50ACBB48D
ABC08507251213BDA9AD93B1D48950416069DE9032BA1DBDD83391F92C041B42
DB24EF5D2130D301E07E62E793BE170377AFF7CF65381925A713D4C06B64A0D0
D187E630287B404B514901E44C104CC3520E413A95058D7C3860FF9F8F6FD8C7
BD419ABEA91904E0BBFB61AE6784B1E60508930689B8F096E06A919E1337FAB9
F56DB6BC3BB0CF674D226FC6DED6ACBAB0A2ED007384CD10BDB568BAD39AA1B3
ADAD4952935AD31FFE2467766B282361731F3ACB073E8F8E82415336D40767C3
E2B11190EF67DCBFCC928921B2708563EA48115CECA006703CD64600E564CA03
F8EAD42BF3F30C93B800BD395257A29CD84CCE5CD62CEFEBB3A06E03DB2C67FE
5ECB622D076F4AD406F97446E433F56A5B29E4B47949F946DDC61F933743E862
527BD7B9DF3A2AAECFD0C1ACBD3235B68DFDF82324A9C0A992004BA92403964B
2EB57EFE4667FAE876AD2388AF886335E5B4B3D16F5405E6750F5C62DD68A620
90915BFA64302F8B06A0BB25AA5CA490D0097208EA1CC75179071A1524546F19
F9E0CE1BB397614A5CA4F64400781E7B21A3FD21871CF3ABC04BF19A163785C9
A7985518DF3A4C7BE3955358A00D78A52D6B8D56F057C0A3E7E4DB3ADC77A834
3F060A3BFDC6D402762324D10EC1048D65DE85891459B2E439CC020CF6F03EC5
4DD6EEA54AB4CCCD0F49D71112A49212F4DA5D78853D9507942C1E7474F40DAF
94A1015851AACA3E027FD60634CD04B9E85B46AB9418053CFEB232FC8902FEA7
1D468751BF01DAB073410DF99E72CE4E3B9D38DE77582653DC81B52BF1A9DA0D
2CE3DB3AE828E4BEA767CE81A10443B76F5081EED71627B58984E2F0E6FDE6F8
89F66B9FC73259FABFB0E72623B3964EC0B7582AE85D2EDBA59F5E6F78AB4204
7A852863BAEB8449E2D91204F867160B13B6B58F03F182D4F25320B43C42E966
394C72945D8C9B9220797F23AD3F57DE1D490CCD12E96C3A2B82C3C670F3561D
A2A82EDFCED0B2581EAF82CC78B12D0DB6439235ABB83FAE0EEF5D8E3E16318D
2A9A8DC539D05CAAA101F5CD5D89B536D9518917B7ED99C42DC27DFDACA35094
027043AF20E96A87F5AB0DCE8B80036A88159943A4AB715E6BEDB2DC2E76C530
84510D3F5D62F8E23727FC2BFF4A9DB585E0BF64B106F196E2B04123AC9F69A7
1A6F701F43ECB5DF1DBFB6DF06F366E3B5216E565666BAC8A6885EB4401C9A87
781E69DE0C45CB999958FC084211A62A32ACE7EC0EF0F1EBD3556E9F2F8C30DB
7A718BA9FC4D3C695B8E1A6D8753C561D3232780704FC769CD70C2ACD394C3E1
505B9C9AFD9B9B3EACABD5C71C0BE34C5230708A8234A4A7D439083AC984493F
0F329BBF233FB506401078F28F26D4BA9D392393AA190889B971E674BEC2B608
C98DCEA193012C1A22E8AC11D7B62888E509CC93AA1C4BF44CEBE511212C3B5C
174610B75BAA75D00B73FE4987964D9E3437ED627C69F5B29F8AE809F7CD9369
0B2469ED90A23A85CFE47C45EA502D7686A7AE0307E9067C4982DB37F159A70D
4E9486AC607B27AB6794968165886146409AF33F5B3562B655B29AB506FE5FB6
E881BC149A25835C518F1DBD010C6DDA3659ECCA9526F0621567152211E52AF1
17505A2DAB2E2D7B84C6264BAA3BD7488640B649734ABBE72819807CE2E6A813
B0648D58E8526ABFCC7DDC7CB6D01562C4DE039129CD2B53E182C02EEFD33E7C
2EAC23D891F3035299B8FDC0BBF5E2FF053D6B32BA4762A8F65A435568DC8C2D
D26E1257BDD7358027E2329F992D4AF7DD7F140C2F0F7AB20A28D33346CC06D9
3C51BF48CF2427EF89C80087739A604E6B79CB8F6830FA078BB1BC7B05E39176
C68EADF951C9BBD0CFDEC807FB8A3323181AF9315371809B298AF9663BF401B2
B8550002DF570F5B81DB4A969471061BDBA8C7E0896C2F2D6CB92A21DF4A81D6
081B099E816A6CC9D562C067981D2138DB82C7BE6FEB90D61E2959DC6EC6C194
D17E64CA09C69BAA0A6D4F837AF1F91FCB0D11535B2D0656C7F23322F02E8733
C262287F2457BDA329141C82D906F2E9041CE7E35D92BB4016E55AD851F8C93C
DA70C0F39549CB35F599989DFDF1E5453EB872CFBC56DEA081FA95638A78F61C
B7A28E43A9960025C2D3E4237A4810FFB2090A40E908F7BD4AD84C7D9FB0E11F
11265F5251E84C2668B39C2EC75392459CEB04BFF0909F79990961711A65443D
F4EB969FD245B0B19D55FECDD1F58B64BC250A54A59241AD6C949C3EF9616DD2
591CDA486C1E778FAB86788419399B033EAEA91AB2DEF0ACCE887DE4910D1731
94D0883518B92F02856CA47A63ECDD568A4CCF8F5716BD657E71DE93F1EA35BD
A1E3FC6DA28E571E766B82F66D5980EDD0BC600D5909C46A31E67B97EFC91046
7C6600EB471934504578B83F7FC69AB47AF52CBE91BCB318643A67D8CA8C7F79
CEABDF2BCD5E25136EB7AF8C9AF27E6A46A3300A13467C6DE8E5ADAC82E0E0DE
755EE5CD5D973F62EF8E8F890B7AF413345898186AED0776CA52258BE2C56D69
6065C99BB30610BD078D5760BBC422044B61C63C97A5BD1CA3B8D7F5D35DC45F
07566028424F664748FFC18B90822448C37FBF2C3979E6C0AE8C03C361B15289
830651643A25F21353AA5545D218922A82F2559D03EAEE65BFE453EFCFD0472E
B1E07F1420AA116657F1042D1647D42359C405E34E60AED35B39C0FE9A286DA8
65E368AA3F9CE42E4C77ABFD332D88BF50E499C25482FAB33D5C8DB86F20876E
C6F71972247AD3F49F03DD81FA691F6390EBECC8963D929B2862507DF1429116
332BCA7F38A67D686D3F26D2F796C87A15EB3E08C7496930CE64511B448280ED
ED9AE0D1509AEB32574479C340D25E81F5508A7C9E09B266A50F1603FCA925CE
E22C170728677A1CCA5BA19434D13BC5C64BE340228D522A2CC7526F79D789FF
2CFCAD5925DDDDFA6E4FCDB35C830E9736C098E5362EF8C0BF71BFE1713D4915
5723AC5EEB6298F39E1B59D470938A19EE03DE1E0F053AA3E86BBEB04B6EEA4C
803B4862A0115654AA90137D5C9EB24A8B76DD15F11965FF85F916F675B37883
907DE8B1DB7D7E81F2A2CF4DF5A5E97582A71690E6AB57384C059E665C70A061
2C49C07B417B68151B574DDD636B49B12A656991D7902209068FBA2BC563E871
635D63B3A3E6D5FAE9BB95A89DF6DBE409E1666D0F4CA4D8B35B50438AA9ECEF
7C508800262B7FE55A956B9A5A28DB4DE9F8AD18A9297CB4B59DBDA645684AB5
B6CA740BE300E503F96B96F3B52FE469CF5B2C951BC0FDEC17B53C7E2FE86979
B832244C656A1686D7FDE2F329821CCCDDECDDC90F59A865E60481D8F2557F9F
4C48630A17EF29C81EF1F33881825F4E6D8C2DA74A41FA6A57C9E070AD49DF73
366D9AF9A3DC35DA213A632E310F722B29FD3E48D7EC751662B09D5363F0F9D5
1AAC0BA2AC406CD9639E3D24E6C41BE1B9734BEC953421BDE071AA7232D548A0
67225C8E17CF1B43A482C44FE50400688AF2A28935B5489B83580DBA0F99E0C4
D6277966E27DB2E9EB55FE36111B9BC5AD3111400524D404B16FCBE067A6D921
80CFB4CF3D13A7D2B2A7CF9FF3B9D21BEB42AA4333F379649559A130B36B2248
2CF96F1D86F0902D9EB23ADC2F31BD61CD1318CE364C7035BCC801F68286EC92
EE98C9F25AD84D8AE1EAE17D3A4E87DEB2F5C801AE96C0EB1286183F7F5F0086
0DC779E43E5743FC144433B7D5CAA4C750078AB1D523EA652DF7D14E83ECD09B
9AE5B4AE9090D0A4DDDC1B573E3F509F43631261ECDEB59CECAD703D298D9D50
B2B6927E9551D82DE5C993A9195CF2F0DE9B780899680F2AEE509A61AFE1C5BC
207202A106085B53A2F94B9D7D9B3087460CCD79C611CDAE26E43B2942560E04
3E0E997075D4FE668C91AE5BA6D1D12402910D21302A6FAA5A3129B223E44E3C
5EF75B2050E93EB14C51B7B5EC5EE90AF76B5F2481DD7FE5BB53B5A4416427EF
B71C1B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMIB8
%!PS-AdobeFont-1.0: CMMIB8 003.002
%%Title: CMMIB8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMIB8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMIB8 known{/CMMIB8 findfont dup/UniqueID known{dup
/UniqueID get 5087390 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMIB8 def
/FontBBox {-15 -250 1281 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMIB8.) readonly def
/FullName (CMMIB8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 99 /c put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943569C4269DEDF1D3B06E73B0
B74894306131514B208B9A57FCCD3847667CC9CC9C7829C1C829CB834536BDCB
127EA457B62FF74FD7CA15E41ED4623531A42365FB88DD1891D5A993EDB11279
71A814F42F948097461627AD9AAF6434D5C17645588F0DCB18B55E207687845D
8DC36AF2073D77A8A8EB05D607DBA9E0526827ACE118E9409848972432A83B79
E41FC776FA2B2DF7ECE03DEC18AB9D27591ED8ED135843AD9D624637C3C532EE
BEF0F248479252570C09098095DEAEEE53F3EE8CC9DFE3A30C5794828B4BFF23
5CAF5742069F7FF36BF744721C0E57592F04E8D8BF02465A83EAD65BBEE10FDA
306FFAB93E3DF71662E4277641DCFF1B7E6727F143BCE4CB818E2B9EA8FB484F
C47A02BE1B94713ABF4BB4C5BF8E4B88F2D9774199C1067326D84C506A49F947
1220DACB94C3D3959259B03024EBC5337F2AF3EFADDB7BA16C1B4DA2F438A6AA
CDF7C322483C8C1A95163D97A8F627729A130F9E04E026250EA77642344B8560
599271E6C891DC0B32BB1ED5FFFC7C03611A7C0F3B42B2AE80E7C1BCBDBCD548
ACCE78E06C7D57DA082BD3E4561103B9322C2657499D3B3665938B6433F19B70
BD6EAFB79EDA9F7C733CBD352BC15B06C85BFB4A96994291C72A0EAE84FB010F
1B0E9652ED4449553DDC6CD84B58648D003908790EF4815D54359A4765E47832
77B00E8B7F4F9193B14FDC6C9AAF77ECAEBD1BEEA012AD706C5EAF4DDEE1FC89
D548DE6B2FBF432CC86DE12947EA454C3D6CABDA58E8554B43EFF68D534DE9B4
5ED9CAA7B58684DF5EC37E177F8DE0E71A06707B45A742475C9C6A6DC74B3440
FF721196F0AD340668F00D659A5A9962779B6925F5E792D2C8A00F00D009F45B
73B418B7A03B27EF7ABD5F0DBF2A9D1953278995AD8BA7B8E791EA99B2090A92
8583B54760483FB9F72F513B878165CF003EF2298E78CAC9952BD186374DFBAD
237A6080073B411FA8E72A107DA08F96A39866D27B7FAC0F538AD22035DDF492
65B094B5CC653EED5A1D648F1E934409A9578FA25624FDBFDCBA8321F9C93D64
2EC4A164A10EAF9B78E1A61FA4AA0DCB6FA82D683B031E7B70C65DF8A3F6702A
6273A12E86D78CA1BCEF565E76E6A37BEF1041E2623F43D0D431B7DA661B9218
75CBEECA8DAF7381965497930EE7F6ECD865E8254E3682604B95360BE55D8C09
87F6C0135869FBCCB77C4A48D4085675E5D5A639D17FE3A9D5FF285571E0C14B
BA3EFB8FBCD0285E6CA408671BF068E1B9F1C040926407EF7B57E76C8E946D19
3A4CC08C18064A68B48B4B5375F034CEDD6975EB2E8407FAAE7071BF646AC58A
C3BB7B2424C609567B3CD4F2E0BAD042E501A0D3EB53D7F782EE8AE67738CC53
790C5B35ADA202B937DA03ECC0CB86F2393B7E88FF7B76935CEF77D306C69F46
E8BCB28F3F97B511B5E602EB3ABE324C1DB9C9B99AF93F1E089F699DD51E2F22
93FCB2F4F3DAB763101E4C37E7E5B56EF3D4DC10C45191A53CAF2E61DBF03294
75C707CE9587E609C891E82D224C7B1B0ACB90B5EDCA6E2C1310B09F39F61739
C620DDA0630504134E024B6503530987BB1B88E0644483DD257344B36FB0E0A1
25BBE8427F6AF5180F9F40772459C58F15FA8BD5FDBB7676602FD7C7FC515CDA
605A719EC3ACB078EC381B7801160A9B48A7EA4D25398E1638EC83B7EA2708D5
1163C0E760828570E8DF66747DA6C75B2C1501FB96769CF0CAC50861EBFD4DB2
04D92561A961F44D7B0D1001FA798A078D2F969F890D3008481743FD2136AC38
9EDAE09DA49A8280CDC41C649FE7A3EB286ECFE1AC9E275837D4DABF0DC21581
7CF8D7FB46C40EEC02DB638A80F62BBF1AA7A186AB08E5BA31CBDC83EDCB0560
D0ED86C574C1587A21EDF20E1E92A2D4E93C11E1DEC8006F180A087810B30289
A76E82BA559B7D71C2BB3980D291833CADA7F1E138C65860AF9A5B042947BCA0
5473B1120D61E6671B1B02575BC171F175B6079B23689DBC858BE49A3A30A594
B743CEF0036CB3783738F604DBDC01CACA81184F76DF99E14D1E4A307230612D
0C8914291FF2AE1002956B78FB863CF0131AE36EF045305207B19BC55CAB18F3
3D21E6327E23F624B29D4C503AAA8F8491C5E19910A0DDA24A31DB8B24A7DAAB
C3428DD8BDE111031906AA5F9C0F2507851FC446C30A8CBAC46357228E3D9747
7B999DFDC48C3A8BA5680138CD473B52E8F21BF9882E2C80CB13CC9EA275B65B
337A5A51F693C99254F68D5347C6212E97C9A221B652036501F0D65ACE46917A
8B3DF0B3E4C29D5BE4F2B45F8061BEF3F59E70D62C64434B3B978C6EAB14DEB2
D13F363969A32190F8D7D2C23A803237161D116158C3D4382B220CF1C05D14D4
611AF4DD10A5DC52E3D04E0E5ABA1D4E43304DDB4C4007E1AC26A3CDAC24ACCC
013000670B408749FC2200DE3A67BA0718F70DF3BF2DD40762A432B0ED3845D2
FC49F9FD3F72D17F41A113A416FC3270B3750F4E57FA84599C36CEAD36F5A57A
31865B91C13DC02F8DF136558E0300A4083EECFCD3502BC2270149017421B0F8
880CC181307387AD89653FD1A54D903F3708C7ACB08F489DFEEEE9D88B37FF40
CECA4DB6C95FEB527055DA34BA3B982E36DD02AE06D7B84AC06323DB5E034CC3
C8BA5B16479CDA9983649F3F15FE61AA8ACCF3EC8F4C8B4C18E48C81AEC35542
1E66E2CE5C356A1F9BE9B96331BE68AAD82A04AD992CAA0D9FB182FD94795B7A
CD9FF0B64C417E6023AE98FA906F79EA80EECA91C2BA7B42C641402632CAA5B0
B6B3B3C4DE6FEF981F7B74D868D89ECB62FEBCB569C011E6E02A39F7AD592370
ED17F1C84F36F3C73068D908D8B0BA66867D3207FA535628C0A57025226839CC
18726127480A015C66DAA2AD2F3E4FCB095EE507C343186C51A9EC4ECFA72D27
815022CD526B7995DBA79A69368A52F3903A41C3BC65A9CFB7A90FB41E943B5C
802849F983C139E4D3A95736F8174017D5A65A52DDAE40673CE6F836DD45C355
4E616A23592FE744A99660D62A4321F4F052118FEEA55336CA6882E06452BADA
0A649F3A32A1DCC20E6949D0561CB06DA7973C99A6AA3A3FDB12CA1658122644
7B3507153A9F43826C711F4776E98C921CCDA5E2FC2EC839204AFBF82DFBD889
3A81E31349FD656B00B84FE683738F72951DC232AAFE9DF250C5719D8B410E79
A002233A0D73A0F44A0533374A79410C080999B66264536087D4C7CC8F608AD7
AF9D73CEC46EBB622629D23CB9322B118A06CA79B08A0D16A64705F08615DBF5
9FB4D897047EAD2A6F0EB4800B46460D68B3D5859AFFDCB7DC85B962E01D1A66
3217CE2A7786AA648BFAD8C4F96BCEB18E93D260B1BA2C81D953BDEAA375A7AE
6D9E72FE4E7FE23E3AE1D856A7F401F3624D3D45FD5C70443F4F14AD781DF7CB
50054E4C7CD24C6D3007BDFB4B1F89790379F3965F9DF850FA7BA2FB0CB9B82A
B72E4CF839DB53E405B828D06B313FFF0D42CDF9B38156FDD4813B4E300C4FA9
C2783C58809189D6B6D805F41F2AC4AC457B26CB660A80BBB860833973E1F89E
15328266B8BEEF76D3261BF9DDDDE4972F7EDAF790110DB0916A61E2A0A6703C
CAED2074228C2C0D9706A52721365717AB217498C97C6891A20214F3310EBE50
95CD368DCBD293A0DE4AC7098998A8EBEEA0F39278C4890DCE6BBC8404DF942E
61C149FCDBFD2BAF3420DC0D67B3FCDD524AD5059D67D587B7E0651C85663C35
676E91F6776C4618FB4E03F657D04E622609D15ABD7C3DB7F0E28183E2B29560
81D11729CFE1F531CA766B6B1B1660B3C2C4EBC5FBC4E4A811780D2C2058DFEA
083A531EBF85FFBDA2F806D2FE0A5BB73A96A61C28FD3175781DF6BF415E0368
E02A3E3190ADA61D5AB22FE38A205BC2453967C2729F4D591D8B7FF38721ED0B
6CF0D6E716023021966F638841D707709D7C414DBDD6758803AB48E228F48958
31167E7E98B8DE364A5F0BB9E1ADE11B217CD0B23798DEA834159434C9F90E94
1FA726B1CA82013BFE580716D4B2889A55B31C663093FF628C264D19352DCC1D
A9D61728BCAFA46F34E7AE98240FB8AE4FE50A85A8018299D2476B63F2BBFF96
42E3151C0FAB2E2D4DBCCA06BE751756CF92501C08297E046FB275AA470CB0EA
DC3F14EEA4C3146815E3AB62180579A86039208870AD36D1AB7E5F00FDDA4C78
31EAE802ACFAD1224934C2889B928331ACC83DE5F8D1AF90239A14D65067C3B3
F5463A2B7C7FB36112B6A67BC9CC6E3A6B4008B62B748E05CBF80365E5610A86
5A55F30027A44FA4AB0BDF6316FB26FA74806F6C88F2971B24F23B7F1B08181D
00F7414F3AE5D53E070AC075E83C5B2BC47458524B6D09267AD331F2F0B88F34
5EF3E7946FB7ECE31901BEAE5D66F8A87C214918005748D40FDEB3901CFF1844
E2A3D8383312E949AE9EE53A945A9332BEF3E3838AE44FE9584EBE2A97330450
40A83031149ED4A6B0BAAE73F787FE528C79D5F6E2A5BE14A4F3F8AC8599F744
02E9E5F7F0DDBBFEEFF8E5557A3D1E68D80DCDAA4F144CA5D2237B28372278E3
F836EA467A4AA76923A0D76DE1B223F1967A3E7E8DAC815BEAAFF9845F55D810
0A02AE72BD311FA95C495D89D1EB54CC4FB9ABD040305943D99B47EDC51B3CDB
F16238E1A8EE0BE48EFE6DFD78A42020E99EBA84ED513DDA3A358434416846B4
E8A8FD41E5E566AD9A90EFB70F60DBB9546B08C58FE19375B47CE34B35ED7B21
E6ECC0B7FF69E08E46FABCDDB89EAD93C32F295F23C70F148BDE2F4F21C8265E
69ACE2233394041DDD2121D1C64FF265A17297507222CBC126B24F267DEFD5CD
C4FA06543AE1D6FB7606879CF456F0CE8DC4DD1E82AFEA23A3A2707C2E40B957
A216D70ACABFFB720B4E8FE60CCCF0668F848A1BA4BB7E3285D7E44B674077A9
5C1DDEB8B2BC6B87C7ECF7C05C3A788D5C2AEC12B1ACF2108250A852706E6C37
2F20118BD9F2A4AA4FCE05C0758D83A64148615FC74363DBE1C7171759740FE6
2858AD8E317672CAC5DFC8B1F73C7E844FBD02A7D96D1739EECF516C35AA2974
59D3D21433EF480D5BEBCEB67E3DA559CC879637009A7E2E4B0D3949D016E886
7D62B0B89837E8644B9AB583A904FCC650BD004B34A3B6612466E758E1A84390
8DE39E2F3BACB7DDF6294E38B496D452EF135C673CED98A26578D4A99A7AAC04
CEFF2378F28140F09DCDF48A3BF036946FFBEB8DCFBC1238177B4EA230D46211
B5A40003D0DA8B7CF61C1BA320387A20C1ED4B2B4CF1015CBE1F0060D7A49585
02843D85A095222DCD136F6BC76B2B20CC1DB6CA235A165EADB6E259F62EA679
27AAF35BAB17F64BEB72E9F514803D6F0C4465453F84EB988056C2D76217ABF4
8289046E47BD3ADD5A8DD0BC96FA8E4D082441DBDAF260367131F841ACE328E3
E148093AC2818E28E8140AC365C51AFE1E379421977241DC7F0BA4F2CB8EA090
1D5A4B6A59415BCFF558352DD6DAED220668121CE072DE7F53D259CB7C46C2C6
A066BC5B3B26A53EDDFBAF827697DF4A27BA4BA7933B17402B181D4DE7B4391E
211B0B5CD9D567B532786CC57E30B0D6678E9D1758EF2F3D48A6D286AC81E1C2
F878473754151F9265195E74D6902E54A378A035ED420FC0F4937315B5F505EA
F7EE81FA75FEC271B26ADD63456D8E23166847F6FDBFCB37584CC82D743DC96D
CB41BCDE34E9778800F3B73C05DD78BC161C3C67EFC92870693A359F604D0E08
63AB0DF6167DAD9B93EE342A8D28A416A5912B3533264C0FD2831AB20EB5F7E1
B4043B2A7B117AD76128EDC5E8757C97970C451B056CEBDAA76EE658EA96B586
3827F008BE6BA64B8846D0E8925572CB779CD4CC6AB71130A907BE9E569DE4C7
D4B0A93117EEF7B95424C66F2178054C4243BF25CD00A0004024B2B51CDFDF5F
E5762406005B28DD0E9E917EB98EA8EBC6F57A81830171DF1567D6ADB2F86AF1
5A996B361E1D8682AAFE89BFB28D450773AF4A60EA7554CB591ED286ED36DEF5
A58CAF23FDDFF453C22F1E9CDF62B99ACEB78BE6F1E6A0F2FFB11D7E886E3008
62D9C8068A62825648D2C53C60340BD87350E50202323620C52391811DD11715
0985260584CB5C9ECAD0BE3DEB26817E13244B5F4D3A75F70ED783566DEA521F
F430084E7F5F9E9AAB1C0BEB93B5020195B7E813CCCE407ADD04AB4CC22FB654
5828265AC115266A5BF852009601F8CC4578AFB0A1959BD88284C0876D2E84CB
C26F8484A67A82F9AE92B9111C374CA629152B6389C479297CCB9AB018D8FC7A
E187157B992B5F9B62C4DD3C7ABE9D68E376033C576EB1D78F25A661E01354D8
6A418F388611FFDF2E22EB3A32B8BA1405CA598050CB5D396241431A8517B2C6
D71FCF202B44921A714529D848772DD13C47F344791196E6D8CA5E9D78A04242
5E80155347B8A7E02A84EE58FA0A278E30C68DDF02953E979F6E465600AB051D
8F853D6C46D214FA9EA8134EFA14BAD3FE0D935A635A29E49AB0ECE0976D605F
A8D26023FB49DFD48DC252C1CC43757E41FFA0FE6D2B50FE90618616C982CA3A
D77F5C94C5AED1C25E12512E05E600E42B085762F39AF54C430216FFC7DD23BA
64EEE4F52568DAC7866FE5E37AEE0C1A02C8BCDF9D8B3DC447365F260BF65013
34BD206724FC2E4231A884A6F6A6D9D46181C6DACCA050B4D30503BD10BB7BCC
80CC819FD0B578EE51B37F95F5423B97F3F5163A6DDADC6AC3ADF629A48011AE
A142EED2DDD1EE396AEE0AD4DC83EC5DAE3E0F3453C38483F2EF7874724F265E
C1114B7E49B5705EA923EC1A045484C361B91C320F7790083D9525D4F139A1A8
8BA0A3474783CCEF9A4B65EE649580918951AC0C438C2B0413761A253A43579B
0B4E810991B89E49AAA2BF3ECA1B632A05E106294E945229EDA1F984E4B34DBD
CA13D716BCF0EBC7839D9C209745ABF5DD04A0DE7FBBD0DA10F74CB1B290A054
5E462284433E6FAB623D976427C198F43AE7A3EAA0AEFC1C2E3BF19C22AE415D
E00D3C32FEA8406DFC96D818C0EB22D20F43823C6BE2C359AF0B3E8A19BD48D3
E28008BE6ABFA1E8EB7C78CC83911F0135D83A8EDC5FB27DC47BED3A81B7CE80
FDBD1B9341857BF53B043200A74EB033EEA2AB0217A4B0D2FDCFE5F90B7DE689
ABAFB2D47CD3EF42192855C59B2E358EA7C829BA6F25F1A235B7D33F1695A5AE
FA97111522880FFF0CF6DC99D57C9C0FC4C7CCCC240182B12388AC75794524E5
7D5DC783B05A3A50C7650D899E91770834ED76E582468E299D3B7008C8F80FEA
A4F0F4F3456C52BB92BA805364E7DB9D530D784A2F24964F8E9AE72535D2DA4D
789E3666DCE32E0E5FD84753361FF5D15709DDFDF7B173F87B3E272D4C8E5384
69FCF7FBF8C4ED2CFE62101E0BCC65C561B74DA005AC37BE76BDA64FD8B0AE05
3BB5BAC685C96D5D38E8D03B3074AD2C8DB917F4C5891E514D4F32106CBA9E6D
AD5F4E71500B93BDA117CE8E25FF91531A7CB9B678C65989DCAF09462006E40F
076939CA5703136C3B267CFD13E4207F970C68AD15C9CD0685484B85C1F204B6
509D528405326D92D67F66D9FBDA01BA4EAE81E70AE1626F45A4D1681D45410B
FBD05083AD901F6C724A435B996173A8B83A65AA522E7EF3FCE1F6FA451BAC01
D7726ECB9315F67B19F9F1C64AE9850B3680A200EFA84D8A8CB84C429B0281AF
D54AE529CED2B82315CFED4FE0AD129EC02F35655EBD7D2E94D2C642F08E9838
2338D226C6D19AF48364D137D888EA4C028BAEB70EF1C1A61C1A995FE68DECF0
2D0050E6489C4957421B42BF77667CAEEA4F0757A9464B564B851CDACD009E33
B071EACD887809994DE1BECB596953711D4C36AB17C294952E3F20B85C9C0F9E
72F11BCAE122741A91262F1137162FDD2C7137F984859A80537694AC23FE2F9C
DB527FCFD9E35BFDF5A4B84E6EDF43A03634C9EF1717F4D53063C2B5B6EC393E
1F4C0176BC4065DCC665C100EC0C0C4073597BC01C292DBCEE3EA4A01C9020D0
1620FFE36103B522D3D13C1476CDCA3BEC3BE2DC717824A6777FBDC9F7576475
3572897C241E126E575AC08F2441668C8081C74701D7317D000B6CCA3DAFF952
438D08B4DCEBD370
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMIB10
%!PS-AdobeFont-1.0: CMMIB10 003.002
%%Title: CMMIB10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMIB10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMIB10 known{/CMMIB10 findfont dup/UniqueID known{dup
/UniqueID get 5087392 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMIB10 def
/FontBBox {-15 -250 1216 750 }readonly def
/PaintType 0 def
/FontInfo 8 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMIB10.) readonly def
/FullName (CMMIB10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 70 /F put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943569C4269F4A3F32986A7D15
50483BA7C04CAE03D8C22F6F9A1827004DE75B70455207585BCDA37DB2ECD162
363518DA08026AD9B621422303A6D262158CFFCC48946A47FE42911F1A43CF10
7CE85E61151664036FCF591A1CFF0E7AAF263909A6A4A50DF0CDB60C91A75327
8C011FC63A462B0598140B4357EAEA08DC2C5445E1F8C2C913B721D5A1B67941
77BB66689F330A22D1DE5D86B2C4712DE9EEB66EF95D1E68BE947672CBEA966B
3E26531084152B1412F48697A965C85B0338CAD1EE054DD4445A9726A72E959A
B5B74F0E0A5A8F630116FB8342254BC455EC3667E184A9954E0B76EF54015BDF
F3DB7D1FAF44EEEF38E5F07E9589B85ADCB9B529CE9C889CB4C43D1C7F5C676C
DFE91F37CD6CD338DF774DBBAB9A1493C7384ECD4B588506F23A024487CE4903
0B8C9D1483536BF7CBC05E9326211B9211F11FC8B2B098A0C5F89F19106978D5
84C9134F45A542D914AE56D73299B3FDC93C2E8F4D271B54F7EC0FB05C1DA397
E9A2036EA69C903EB95485765BB05BBD2E021ADD7B5D83555E490EAA81157819
A2AE883E39B4254EAA5C4FF60087C4875CDB9E4A85A54955EEF5DD5B15F8C970
8E22FDBBE98CCD8E49C27F55616F3588E6699202AE58B0D9A3E398A350D90CA8
D3BF920E504EFAF93B5CCBB336B072F2B3EFEA907599A95774F4870B6656257A
29ED37ABFBFDAA41ED08161F473C20CADE82D6F7531110CE680EB172A2024F8D
6F02DDD49350CB0BCC97C657BEC9A7A92A7C1E623E8B0E409A74B01DD0A470DC
94ED4CA0B6BD786EE287B753ACB1C10BD826A84D8FF92424FF1A2418A6EF9BF8
0B3D0F708E2F52E4557F497E749CA9F2E513F33D6D489612C68B68CDBBB4CE24
E53AC2AB756F64B838CD2B0D9402620B0903B8A357D8020DA8B4DEF15AA06A1D
D4D78057167B901643CFC357D7283A850C139E1BBF6E4079F375EAF63C7C4F7B
F630FB23A70A90178560B1A2C7F64A2B8796D60826F3B10BEFF755CB59DC26AB
FE5E0630FA1E16D083C8A5ADE0345F783D771AFE185F3DB251C33AD86127C0CC
548400D92F559737FD421E6D1A807AF696A22C1779AB236BDD37F7BC467570BD
4C1981D141680DC78513430DE03DCA87134EE46E90471F4DDFB4D5AF445433D9
FF6F9700904F274A610E5978C0C14110C00C0D49891AB4BC8690BC93418E9EF6
DF7A3BA8AF0BD66C17DA2694FF55528771B28262917CFFE822E973DA4B55AFC4
AE9F6C28994E25F88612E804C918278040097C028E15C6B7FB53332908842185
10217D7AF376DC438FE712CDE9C50040E0B79F4BD67DEA70C6C2FD34FDA699EB
0F6047A613FC8485CFAEC294FAA0214F0639603A00F19A5D92A3BE89E5FEFFDF
CBE800B960AFAC6EF1B85F4B74D8830266D0FDF78081F6DF0F596C90E1954C09
631D98F44A8F0C2394AEDF98EF8BB4D21AA7905B3703D76FC4E104389E61377F
92CA0B2A9CABDAF99CD194E473FA0104ABA283C76C20F003C604199E6D4D2A5F
C72FC32D84A1F4EAEE4E20660BA4C14C244AB65F000B6D896054B2B52F19F708
CB80929D9F98AEDC99365FABB6FC42D9337653ED45D2A2B802017BDFB8D28F62
745B5D74F4411CFDA724189030854D6D578DCADFB37B73AE15E80EE20EFBBFD7
959AEA06EE4A93DCE0D30B894D811EA3033FE26358EDEB614DA60CA8F9DE9855
F26F1B7FE1EC8DF0E6983ADDE63E3DC55C1088EA3091C21FBEA4C39E59BBF3C2
7C4EE5AE85C89FAECDBE6BED7B789D390EF78674F41A8104BC970E81FA9CCB45
DF6B8C2C2DBE4DACD0FD66877529BADA909675A761460C3F6B6F122ABF3C4F3C
C2B74804989359C5C127B69CE1D89AF4A74BE3B8499014942319D03AA740596D
863F0ECEFB11825FACEACB3E6971762E5BD8CB9D0055C620F4E276C3339B31C1
C321D785E1FD9D7AE53725AAEF68C258D2AB7F8DA4F9B95DD5CE20C35F3E9908
964C6CEC56D0AB5B34FE2AFE412455C971881B144FD7D979BB6C8B721A6499EE
D39109FDC63E5DDE7CAF6559CEDD080A1624690BB6565FB0828D5025D153145A
E8885E5D37301BC1ECF95161DD88ED99FCD11B77BBAD6BF1E1D1BB265817AD2F
40B223CD712D48CFD86428661D191D0DE40CEE65272A90AE80C134307D575808
57CCE5A72EE709196847F25EC20775359490CD96F818E135A4770A5D477FACE1
18C3E44F1C1F60D1B6BA8B206F107DF7FB7167870392CCB34357F9E4499A4164
0FD3EE38365F9F16642FA5D4BBCCD53E9680174838110C2F341E8856923D67FB
17F77E3C9EEA8B51509ADDFD595784714495BB36BF6331697025D64718C37131
782349E44FFFF0CC73A9A01D0F41D89A433D01D82267B25B15774CD010594C91
A5FE2AB68455420213D78D44D0D29DCBB7C27381182947FBA133FA137B8B7A78
9A1514A411497C4EAE49ABF00971280276284E642036ACE628F142181CAEC3E2
2FA3B8B74109C3317B8A0DCF444A2D7CD40B56A6A0FB571F29020C10467F8E5D
56DFF57F4B067C7115CE624EC693759F6C93F10C4BF79C1083D72390CF06110B
6A909581DCF8D72361238801670A67DBF1A2C831DBED6740191FB43F325AEEA2
7CBFF48305A64AD9FF4EAE3A6F71596DB0E5A1F5B6BA2B6869F4F65156E823C6
4FA7BEA68663C5A539F7609EFFB902DA29DB1AEC8D477051840A9AA16FC5389A
121D76409D28E23E7908DBBD8FF823B62036C9526C3B10375A9385A4AF991B59
88BF2D51C62FABFF359AAF056DB79D13260016F6217B32DFED2938DF6A313D9A
F4852580D0C5357C413D5E06C883D19CC2E6968A5902DC3E4CA25FF06C6F76A6
9E15D2395CAE81EA10644263244B15EAA5A40C6E3D66C0B6AC3AF60FE4C1F473
6D4C2A110EDC509210E58B4A5E5B8408170535D1321825986A1B998D105991AF
CBD6A46610E58EB90C9ECDF50BC0D26C7A681F6670ECCBE1B091808E4016D871
E3E4123FB6B1927307950B814B19D665E8CE2D5E5A77BF59108B2D9E183A1BEF
7D229985E5D326571C07E94A68EC0C495E8DA0DF16C11F6DA761BDF810195971
3EA07F0BAD9E1118239673FAFECDB14C685427B9FBF3D309C726D9AF11FBE3F8
9BBA94E8331845E2CD62549F90EDA5482053354CFFED5185ECBEB1305057F699
3FF0F6B568B180A1690C5734054B8903D637F31F3255526DCB44C8549B7E7AE8
65EDDA8AC5A34FF63EC3DEE34A9EA6F7FEF817CEFA9D7B22B603ABCEC4A45A17
4A5FE48105B99857693DF7C56F148FD13F085EB821CBD3F3DDB49138B1875A98
6D6E48B2C2C124EC0BC9164989AAB1F5AE8C0F21E63193C70038DE654D67F565
431FC9CE4B58D283A2DAA40287616409DBB7F7E94DCCACDF68CD8ECB19B98BA7
BD00C1499731B7959DF35899DEF7F684CAA993990B6239B66BB2220919C36185
A3BB431DCD9197A67852D137C00BF45AF3698C115A41CEBA5D3F1E2FF32717A1
69307623AEAF8287EFB7A7019B181C30F2CF4584351E8176E17A42BB48C5F521
B4538474B2724B5DB5CEA51E783E870AA97FC47401CA0FC0DFC4998613F2946B
B827C2F7E874267DD7BE63ECC00AB0E2448E7951EEC5DB4095F9915085A97AB3
812A376AC0101429983921C76C8E686A52A669E8BABBE21354C4A74A6EBD99E9
E2DCCE027FF45D75DFA6547FA60F2A63243D5A3AE3A808C75A99F3D42839A080
557C7DE6628F353F57B704B809F249DF208245612B47221653F42ADF0AA26CF8
57000DD580F6BEFC12E654AB4C4317490832055B92EE69CC2CF85A0232986CC3
819877F3DBAE3AACB1F431C216077B528B1D863CCD0BC6860C97009B90F33779
4DD77D702A114565F58A1DF4B7FDDCA0157CB0A7E74A116033212D83C1C2699D
65BBB42025622243B1A25E399014D0C0582DC50561373C8631D79148CAC3DB86
DAA8CF5E39387115637865FCC04676592C3365F2130852EDA3FD572A353F4B02
497576CE8B5E7BC90A46E02E20536AD5DC1F3EA2B832253D1D1A819B0BDAFE91
893067A21AABFF14BF0485EFF09F6256A58772FF91877896F54582EA274F32DD
CB96295DBA8BA6FAD260A71766FBAA4865CACCB938D96A7F35884B2F80DE838A
532F64A69274B1E648E6B18333465A3B89E8EC4ECED5855F6188825DC2D232AA
88283656765F0F957E152D46620E0001C4B0713F7D9AC4E887B649593353DFEE
334A3C8A3DF606AD48E286A7962ED8F7B0F382373CF35DBAFBAAD8B1B4B564FB
D421EC6183B7051E3F3022E09818EA7DA564EE44E054C995F112E33DF2A7C38E
B5BB24A172F51B5FEA5D11A81957A075AF1CC2D7C9041F85E46709ABE201426C
244C07EEA7550E78D3866493E451937C404152E4B9E081F52653EF379AFC7F85
D00FDB5360563EABFF210F4D46574091A6FBADE205D15BC7A0EAC7C25BCF58CE
479497AFAD121023BF24D9737C42F4566B3CE3E0DDE592E02A4088354A4D5799
02EB0EBA57C13A27BBA913EB949A144FC4F913E3A06FDF1C7C88AB50BD994F8E
08A5837496483EE06EDABEF4381339B1007CDB8D888A2770536EB20DFFC71327
B768DE076F35D951034F4E09E18359837D2D5B80339885FC6FB6E6CE88BC0C7F
465D36783E58902AF41670D0E01656E2983B45459BA7D7822DCA1D505E36F554
4625A1684579A20F7B9491B949E2FE69F32A016E62A979EB9C4A05944001CC9F
CAC4B8E45CF45726B6BF10811DB74CCABA5EA5E5F2AAAD3D24B2CBCA416F2BF5
C86B6495C5C820757C4743F1464B300F47EC054EA29215AD2F2F17F55AB92016
9919577ADF4BACE5695986055FC4730E531FE82E9D926B1B03A8C204F6FB4A39
1C94C310E6D5F2F53D41BBDF76848CC247C89D4CCE56EE40FADFF0FBB48804C0
1823A8A70992C265A469576F47CA341810FFC1B8B58ABE8EB762567DA328B25B
A9D4F3472428AE0FC180543D29B8E4376D7EC48D25A411991924FFC2DF520BF6
90A7B08513D2A6B42F2AA51B0E3E5F2F6FD57E63BD1736482F303A13D6E0EAED
1761211598B1F2AB26DDD5D45ED477172287BDA7062E8AF61D232473EC060F68
31A225E0AF2E6A5BE2D8604384359C53F880B0A503B5DF5C98D2D657D1466390
6736B42A24D1DBE55ACAEF4C5058DE5ACCE069D39746488D6AA244BEFE1F32D1
BF65D0EC3FADF515EE45E672AAC72040A1E1065DB5A52FC889E1650487BC4C79
77D55ACD9D726C74B6249277B0DF721ADB3293098639658F6796F7A012416C14
7C694BA55C734A527ABA0C9E6363C2C00633058B69261961658CDC29A477784C
90517818017B6BF89580BC66BF15757490F131D9470A323287091DF45DF490B1
9328CCAE434A9637E0E7D3A63A418989384C98463294D25CB07883B8637AC816
57A0AB17C4BB9891599D2B8398DC08A13B73A2DCBB9A79218C161AEF14D238A0
8D00C90ABDCC18B11AF05A54621B19294D09A4B533A7F1D4F0BF2E637BF5E723
53AAC5785828293988797F37B8F14C7CD165E8587E48A876C96D701F46438349
0DDF52FB12DE623F786F13D9BCF2D5BFBBB9D5A16E3FBBB5E6A9C34494FA3F6D
B81C12FF86521554113D1AED9A894E5BE1E7225A9B98D4980AE902A8DB3DF1AB
5D48B334C4476EE4FAE42C2CFFFD1BCFD99D82AB3992D3CE1F8642FCF7BBEE3D
5840F516EE8F6E87B5294DC8BF2DF4A0B7A380CF7A2BECF45CE0B0F8A996A463
E6193879C8E25724BF182AEF116B7FFE8BF1A1C7FB6FEDCA86965D325538AE1F
2863A49700469ECD3BEC3D75AC255984373E4A5A621AFE445A10B8D97EF1BCBB
61263A4A2009650770801C386AC6F95F02870DEC62FD6C556A084FD4C165AB0C
A52DF2633B01DCAC757F614FFBE09CE217092414A7C0FDC43FB02DD311A70063
2E594A67C9F8D8CD037020C074BFE24168E810C8804EB53F16CB67ABD8C9F99F
80D65C981C4221E857378C4EA79E5CF88CD53B841C2CEB7C58581AD1C3EE79FF
6B07BD35895A8843393EA65FD48BD248DE0E7799845B1B568189EE76445A58E1
42ADE3CC51747B8B97E031CD51E90C75880B6EB5D7729BC29EC0AFA8690955C4
AA5E809DE62E0AC18C5F1A6FE5E5F767B70C8DC44C965E7E2E8077938B4EA3CE
F119F7F824DAB88946A3BD00FEE7D8CF68B5A35614F864473C24A95F13C7BDC2
00F018B5BD313629E0BF5A5E35D0A34000BA338653FEB7040C3D5A43DEFC7FB2
5999A596BB7A701E8E03E8D3D35FDE11BC8421E8283EBC327F7C9F6D457E573D
073755A97EC24BCC4C33D93D72F62790E732CE02320F8D7B385DFE2230418B1E
70AFA7DF7D83D7E04A2F657CA6C2410A63F9B45C562B7736A272349BBB18E462
A02BCF7CBCD049B2FA692445C13C4B28C1762DD4A632CD41A8196DBB26075B7E
9708EA316266289D910151A6F7FD5F4755E7A41DCC3AADEFEFA2F28D241DC4D7
0AD828E18F7541FAD3C51FF4938FFD048E1EFFA5A6E443049FCA2472FD9CD0D3
00A0AB032E36C43ACE958C75B2772BEEE4327A53F279FA49DF38E5A3BEC64EBF
7677CCD8EC1B972B65FC2643DC5064EB8A66A777124B70F2DC6FE62030EA59CF
9E328396317798C1074AF49EE9698EC5B3A0DF1112669CB2EB0E2B6948DE7DB4
B136C23C5D0B2DEB49808EDCD5A3B68E161ACCDFA41C8FEDDA50942F8D2E75EC
EC36EB127AA8656B0EFCDEE65748D32220E16F296B8D06AEF513E272CAE380EC
17A1A2B0F235FC70D479A606B33AFF70D324C6FF178A38DBFF6F2BA86115FC2B
7237BCD1325690F655B912C30BC069B20095279D01D4AFDADEA0E9FBFAC0B22E
60E377515AF3012FD9069DE25DC4FA527AB6B2EA9CA5420243D815C95E0F4D51
FD84FDC5341F20BA6BF1520C684788BA2801A7CF3B95932EDB3D8693ECE35D70
3666A19F6348D59155A89FF25E119B37D5AF6635843E4FDCBBC413F4A6031F4C
615AA55A257FDF806FD0CC1A65FC78F1427DEDFBC1FC71408978F46E3F32E8C9
96FFE6AB284538B37213D6B88AEA47E99DD73D9AD4369B428EC913CBB75FF2BE
D9D9C51701D2D0559632530D6231586A667F3A530FF2F6227EA4CDC10BAB9FE0
E313D378C933138BEFE6D0639DE34F45A5CE2049F5DB6E28A70246877C55DDF2
079FB885DDA5C02313345CE0D2373638BA9990A6911978264D314CF74DF63517
57EE8699DEECC391365AFED7C1329813024B3ADC3565E28D754217B5B1EE6BF7
AF11791FC1BEB8E6835BE35B05CCF2992ED7EB12909C9D10E89DDF362036ECA9
FFDA4DCA0A6B1485F4C4B8A9BA588C708DEE0286A83FBBC77B9E9B8DEA69E54C
D7DA907064DFD9C45D3CEA56AE7503493D5F4BE359D3F1669F0B4722B2171811
C8C58B922FB5A692314BBE92730DD235964A7CE0DA5F79507D659EF04BAAA9ED
372D08CA888C6640CDDF10C3811BF9679C6340418C89C8A56E50467C11FD1BF7
D7A58A97F117F511B5BDA0F10AA18F32C4A6A2B7AD54974DA8E693381243AC52
1BF222A8CF93A087FCA2CBF3C036E803B2A5FE026072BDEF9A6AB04B50A9AF0B
C78CB24EAD3C4C6C1043F6701FBEDC2B16C73B0220B1226E8CF1C4AE76A77D50
A4F2FB0D95866FC447A648A6E95481134C882B3CFC3CD9CD8BE6B0D25A1CEAC0
E1CA4591E98EACE52EE14B5FE74A4A729CD3E5580A9B0D0473AA2ECE3C05B9D3
F253C0B613BA7CE0AC4D16FD02C19C536AAC90E5511DFABD5837A3B800C49239
871F61F40EBB75EE3024F37818ECDA106D09D2647CCC4E6AC34F49B8FFF4238E
DC8441F3D1D4C3FF4E50AE5282E8F13AE6FC9A73CAC242F862726D530EAAF7C2
0F88943A5D20C4D45F80486CDD86B71CB3ADDFBC936713C35538CE86CD9BB28F
B0721E051D5B473DAE48ACAEBE30E86D65148063E95D4E5C4003884E51CD7935
AE1EFBA3F93E4A783B7F0762B57B133B7C91B4E7221BCD6E433725BC49825D56
8CE98AFC1AA2CBA79E80F0383E4FC385B408C3E9E6FB9394F691EA8B55A73C15
AFE3459E42D246D02FB513FFE14B47897C2CE51F1E3274C7CA160768BCDFFC63
2A206FB95538EEF1C638DE23760653ED97A547616693C23FE4B09DC0B162CAE1
58D1BD771212A9529155E0C8D814A785656E4DBCA4B23C3E426F23AC322191BB
7E0B4068C3F49E5B6A95274283118E4EAEB8612FAC8C1817C44428357A264567
63E47AD557FEB813C97F998AA0BAD841FBC0FCFC48CD4000A4C42C7CE1F5FAAE
944AFF295B3D662F133064B105C6BCDBC5C019C4B5B8AB0FD5150F3456690027
58ED3C06B468847E1549194543F20C1C913A2D9C7FA453D0E7032D7A3DEF1D64
3B0F9C2B90B97F4993BA90462DAF9C7C518DB217CEB8EB54E358FC8B6A49A46C
EEA162C47FF9F65C534DAC56D47351913DE557C773
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMIB7
%!PS-AdobeFont-1.0: CMMIB7 003.002
%%Title: CMMIB7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMIB7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMIB7 known{/CMMIB7 findfont dup/UniqueID known{dup
/UniqueID get 5087389 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMIB7 def
/FontBBox {-7 -250 1341 750 }readonly def
/PaintType 0 def
/FontInfo 8 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMIB7.) readonly def
/FullName (CMMIB7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 99 /c put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23F201C37235C2B6F4FBFB4D8
2162E7866CA7D82BBD9E86B09D6DFAE15E5819FA18394992603BFE330458DE2D
F80A709B470AE2549149190FED6F9112DD38C50262FCA8952749F31A496FE67A
E2A8F879AD6F1D5AB907357AD0B4E4E073DA9901015D7CA5C8C1EC9C8F9FB6CA
C35F464C7AF44D921DD48009F33DA469148DB2C5C9A00304F195151C48919B18
004CDE118484E9D2D8D3A8B5947E193298EB8ACF321F8117FB3EC94BADB6AE86
3E6705997BC867007303B947A9BC10A04073C1113A1A8A25C173807C336F47C1
30834CF500E636483FCF578E189786E6F31F7C22F8F9FF78937C1825762BFCC6
E7524AB2AC81028A0DD8C679F8AA6C0C2D7CEDE52728C5B5578C2446A0CAB9FE
FD07C50FA3E2610A168637412C3672B1581ED1C3C0C800F9D0DD1B7D3CF09002
3BD3C0DA3B68E7A0A0530D4E52C91D63912CE5DBFC32533451EEF5B27DC7281A
305454035CDFB6C99EE7C8526E7CB58D4D4774FAB7BEEC42B3400A097E3DEB95
57447BFD925CF73DDD8A4D0D5B309C4B7DDDFA83234EE6269E0B1B6D78E864C3
FBB9FCAFD48C9826CEF86622B0939ED0586617A64631EDCD9BF393873C556327
C979BEF904E9CE2394025C56AA2772A2F0C7949E7049D47FA83B30013940F45E
7034BC8C29779BF4C506AFFED78C58C300CBD8CA8111529C34D19993138BA3D4
7BAC4542E92D8554637CBA71B7BE3202DF6FC1D48B83AA90F46989035B75E975
40F34B972DDBD285F609DD588A945A287BFC9F286FE691393457B16A792C7244
F942C922BE3AAF5C1CFF90E45AABE75264849117C708DD8DFBD4A0EBE3E83B71
7236706B6A150AEA84185D1DDF9A1E44F42E81E72C3F27954354096AC6F0D167
1A43A946F0B15E530976043E348113AA8AB387ABD74A7940E9818251AC979DCC
479B38F3A43E87D650D0DF62AC5492DB7EEE08C6E872727B027B1272490B8D96
3EB282FF6AFBC02294784DCC442A8E4296D00FE80CFBDD71AAF42E166060C8FC
2CAD3DD7CFA1682BDB186FFE3297B652CA028FE60C1AC2DD4E90583FDC1B22DD
ACCCF796C87A15EB3E08EDAD9540C40220BD0D7D4B4CC62CEF8C20AB20FB1CB1
30CA6B507B495749CC1E1D7AFE5B76D813A8E5BE5CA5ECFC3124F9837049CF45
5316A2755FEF2B2BA3D407730E3BDE6EA4BE1A1A0E30E5D63C6218D089CBA808
0F9256FE1BCA18CDCF79BE0C88F3898B687F08B11372F5A2A8BF2EE08FA49166
B1603770FB53F2EC392267C7BA41EB45037860C025E28E747295CB0EF8C00939
23CC67B7C147DDE1AC95D95EFBE2493881DDA97C56B859C8E6B5E50D10319A99
7DBB526FE4C5A09684749635E0B08C3575CE5F14354A9CE96CEDB9E9888BA94A
D39F94195D7EEB858C78B28DFDCB271F442FE284B9ED65B186DDFC315B5DB667
7970067859571F4BFA44D2B60E039C6CB9A9546B02414C0E439D3D4F08FD9407
A0B6D12B4C2F84DE87AF34B41027BFE875F1ACE81A0D8F401C8E2B5D5C23AEEE
EC0956C9F2AF386527F5A193004D78701685EB352C678CE44C65A625FAA5149B
72FA76267EC8E62CABE338AFFE673E0BC5E68BEB76669F60E8946B2453495D47
81AEBF041F8D4BEDDE15BE72625146D93D23C3725AB4E2947F986651F01931F9
DB8437054321E6AB997C84966F07A426BA8FA43F6CDCCE8B9AE94A65D38B78A4
12E8E5B2356CC8FBCC87E164A07D68BD46AEE69C60036D3823767EA4D28DC093
1A257AB4E5EEAB34AF197B286B8EF781E40940BE172C0F17B4C57846454A4D96
7068315EEE4E6642DD04D5DA35E8D3D4A654545FFDEB6D59DDDC3FD2995269AA
22D3C53877FAAC7A6B9C8C29030DE6E05496F2A0C5E0221552A63CFC14CEC5F0
A74362B4B1E6F937301DC449D7DD43B679DC6C70FE626409AC89069A688F610F
F4A4F022FFE6B2878BB58FC95EA15CC977C46D06897A10F84A9EBFDAA28BF77A
D7C4F8A12F12FA7985EA3DC97D84156A07651640E9CBFC4CA0B1FA39BFE9BB8D
6004A93B06127488937130DC4F5D2539DD969F1F33C8428D194BD28B7F57873C
20D29995DA154BC7B1054BDDDC6739C65F9E2E99F5B0F514E78962B98357FEA6
023B9F1857DE99EE78AC53F79CD434245DE14781952308B334BCB9116A7782F2
8FD7DE31AD59917308A9027D2BF85EDB3D3EB0C2CB88050EBEFAC4D55880C557
30EE9C37FAF97EACEC005B073218EC518E77FEE63A2F61A01EB0D5139757059E
47D9C42DF810CC36FF63329E9D8D48E96A4FC74A64619F7BA64CFEA40614A8BD
6AEFD492C97D2A0105835AEEDCA013A2F07DFAC9B6B7AFC3789519A6443930A3
03C8F7CBC19A06E40B1A4329D6D588254816753E2C95006DEBF8C20CEBE1D46E
6C2FDAE82008B3FAE9F48B00EE33CCC03E8DC63FC3D8FF49FAC1CE53C422EB0D
B9D8B8BC07EF59527E9969116082AC56EC9C8A2493F5B72264D411671D3B4AF7
96B2E010AE42ED6BED1F42582B1A36E4BAB910AB98FFDCB2E5C5536A0B4FABC4
FC0C64D2ACAE22F230340873936E6A333AFDFC9010D4C3E5C87B171E14E52937
4D900351997C7AA7DDD5B949D0747DE9BFD0DB1D8AB7DAD521474BBDB3EE2CDF
2885035E2014E57414D5C0B4F97BFDB0ACEC7C90CBE9D6E3CCECF289DB09C121
4459BBF6D5A0FD54C6A72CA7A512391DF0C3804870BA8CDDC654DAE84CA6E33C
311046D540CA48F61CC916AAE47DF8BCD4FC5D54B54102EFE4C873B2FA2E9389
54BC57E4F99E85D1D1815E4955FC65852EA963F5ACA8F729F2A478F40E79AD0F
DD38AA81558D9E6EC244F090702AFB5EC7FEDA62BED602496C7A1195FB8FA08C
2CB52AD06268368CBB82638445957F7B8774636EEAD3AA5282D2650B22DA641E
18B9FAAC759AECB276C762D9EFA673D20760AC64E31C2ABDFDAEE2B3D797FA1B
9ACC09C3AAD7F01DE58DECA0C2F23B67355CDC5B94063519112B465EB3F44DBD
8AA3E65FB22B9742257CA79BEC1BABEE3A5E2F48F04206FD330805756946E82A
E82EC2CCF337A2F957C7080627B626DB3B5725058B1762B9AFBC1E91F7C3E134
536F76E3B200E9448A9416D6FF8854E5D062A427DC8495C1246FF46EEC893845
C24FB4ECB58261A40F4174EDEA85001354B0CF58E91E54864D0324CC3B056CB7
B7F17DD9AB5087D2B5DEC847DD245ACEFE9624D4DEFAD74A5DA597834D9B65C9
7297EABB37FB77368FE4DEB02B661D61B2DC8B97E480D966D3F6303CD339EC28
3C3369D2AF897C4CDE863639267445BA767CC8B8DC3DF5B9E998DF61233CAC32
393BD5EA14F7584C561C212239E21C640C8A54BC6FC5FF0831454669DC78DE48
22EEC567B9F265E5ED54ED564BF5446EA233C48C2ADE4A64FC3C5FC5C035B170
87B6B7C833AC599B8EEDD4D3BFBC1EE51012A98CA91AC200386BED89914FF06A
853CA74AEDD81DB64A455C39BE6EAE13466142C7CE6B3F540FAEF0FF5D31485A
11BCB8B0D2E63A6BA97632D7A1CBA9E0C01A6A00095CCDE9EF17B550C4619FE0
9CFDDAFD525E7413C41DB3CDED1D73A7F6015DA97EB5C626BFD5CADB9BB5585B
FCCE82BD008F5B019C5F5CB7B58C7A03359F5CF1E4711306E4BE5E259ABC9FE7
88FE224CA689E6FFE1CD692A49565996B52C9E360D62941362AC3324316885DE
64A9E9B0009B24041426A34A30BCD61EAE655AC95372E75C0BEAA888CBEFAEE7
55832328C6EDA4C1367B54DCC9C48F1D5F2B3735D12D03A3D1BF6C66426A85BB
5F240751D6DA6148DAA8113D4D6B1583DC426E8A0751849B56FE92F833F5EF42
63AB7FF31D7F4F6C773497747DBB7C25611A9987B343FE29F1C99E5D404F682A
42489CFFF14FFA3B025F3CD8F7AE91F26D8648C26442B731D373DC11A6D82E18
BB5CAFF58DEF1FD8E272CF91606341FBAA150312828EA7B5FAE94AAFEC9424A2
AB96904C01CD75636185598545009E56ECFFD67B5F72218EDCAADF884326F375
098A8481AB9F2886C514076A06D952BBC017230D5E4E24905932B5FA9F613952
8A5583EE7A72621FA9A665E7713F16383415304174983DE33867106574B78DFF
624CF6D5BB3551041A3894965D338CBF81B536C3AC4B376358521BA531088643
9010BBF5B49F326CF94212C6A101EBC3C4909403349FE74ADB9DC41EB4C203B1
DE3A78781A2981BBE9F6E953F527379C47DEB6209DCCE376A63E88EBD32B232C
4B2DDBC6A8C9D26BE9EF7C509CF95E0156ECB1A0FAB3F31F36CD76938F81C25A
3E04476DA93FA740032171035E68DE99E14089A4EA2503721469F63D8BF4395F
0AC4C524D305D61E04FD5FB06378CFEBAC1247C32717F705AE9CBFFAF9A2D491
1E42B1B6DB652EE4DF02ADE3DBAA39404D51BD46983F95FDA9D01D1B80C39BEE
E21F59B27196FC1F2D92CD9D900E005C7188078BE16F804426B69474D469BA57
3DD3522F007B37656E9EEB31FA78C17B2AA956D814FC0FDEF50E38FC9338D96C
1D21306084685298399A26CBFF516A9E43115BC31E5F5FD7DC8B0A9DF165B8A4
19B49F2A5F2F18C8D78190C536F00127B3981786CA66E06488B4D0C3D6937262
D79D0D94BDCC89C45F31FC8DF2C51F205837E5D8046F86C04A363A733A2B3D0E
1DAEE60FBA652600D1C3FAF2C30BED6403D3BC9FD683B83483D4DD56D15405B1
0C5A9C5B3AA995C4094F51F672B41ED2A943A7010A935EF62EBD1FBA944FA4DA
C2AAF8391B02647ACB30E41D4A354DF40EBAB044C3C182718E5026548B3888DC
2866861BBF0C3B55586B74E67E61198ECE5A8C281D28C71EC4B8E5DCD79E9724
7E4885880F06C4EDED1047E842426EA8C8B8EF7B299FE7A132C17652AD25FC99
8C151CA5B539D0450962C7B32250471C2945608597AA33411CAE316EF66F8BD2
49C642B9E786A5AF779EA950F3D9F7E44BDFACFC5B53FB56F25F52FAD800DF1E
4C1C9F3499874CE73A8ED50AB363CE8BB45E358CBA4694988F081909D81EFEA9
E2453B46CE108BE7D634DA10A4615E8685BF21ED03ED7E6D247CE2746D906860
15B4517E3FEA44CF4469C78D6A93551A6264D9150BC7B2F6AF13924DA1B8FA2A
B3BDBDC1E851A87AFEAC8F81082BA016C444A2516610994BDB106417DFBF81E7
C0C87A165A7465FFA273FCF35C7B1EBD787E9383D5ED149CBB3B244A852C332D
6A5D7B9DA5B9F49DBCDF9881F320C9945C824F6C1F6DBCE1B1BEA57A9ED600BC
5F6EDC7B25D2DFB3A5CCF2403A4EFBBDA5F3D83593B295A23397C5B0CB94EA81
EBEDCC6C4FCB87A60F1B26FB53826495E09D3E6FF8E4E570753984F80F5D42EC
F03CD9270291497D32AD921D12145906FEC19EC2A1E41B1086FA783FEC04B39F
ADA59A760F9C96C8301678A6DFC698264BF6AC734B29B9BF5566352BDF727577
E580AD66B070BCFBE75334F7D6C21DA5E207BFF8031BF0A92EFECBC4D32A5917
76ACAC905A4F135646AFD34D01B6E24BD2CC574DD24B23B16786A27C5FC3BF98
7A6DAD4A0479109B84EFBF9324881344F94E37A3D47AC73B944C71BF3648FD09
27327D9DC2370F969A533E59BE7EBCB448E1D9BB1498B70A8CE3ADE253DD25DE
10CBBE37BB38217FA143733905FDADC7B0FE6ECBE4AA1A246785AE9CF25E2F3F
19F63DD4267787896FD47B6EAD644228A66A85C2524648AAE96D8FA6FC1E3AD4
4D50EB2B61E2113A82DF5F953BF7FF942CEC995A7F778E23FB72C80E7ED4D8A1
073056ADCED3EF1D516CBD87FF686E25694B7DF7B0AE2A01EB7E6F97753B1521
333D1FD8F13FC0056D8A28965DBCD6434D661AB9C494AAEE39B23A10D8243F92
6B93E9CF59B44141CA73B1A265142DCE507B459CADE49E00F0184F7879DC26E3
D549C33E609631156EF1E00A87718B7601F2949B930C59DD6AA5C3572B087DB2
BCD09C937AA6841600FC03CED888675766AECB61DE2B40B81D3E6E7923BFDA64
6B925F8E6E0BBCCFF5DEFA8437D666CD52AB1944D9DFEC18CFC15C21D93949D8
1E56F5B09B18DEB97680A97E6ACA02F3A8B1956903A3AD3B96C999FFC56EBD64
5CB52351ABA6BA562FD698C65BA075935505826E869CC0C631E9D86447AFBF76
C8FA873CAE4B40D93B4ECAA8BD6851FEC970755A1955998C178405CAB9C962A3
16AC40C716C8BBD072876F9D8E9C563E88A1DA2292E0AC035D653AD9F37B61D2
AB4D3B88D90082508ACB089A8848C490ABA0E30BCA50ED6A06BC4F23D471841A
4295AEE17E0EFF361AD920552031441166F2B86E384152748DF92FDB4365F8DC
D65BDE110F464F691075DFB9DF642E7B87633CC342AF12762742C42B6F7864E8
E7F52B4E241AF1E8EF5A602ED9D3B6DA4352417C0DB033C1247A27EA630FDD18
28497DC10C874446424DEDDC5F4E5160E60DC3468F1622312B49FDCC6F901A8D
90D672D799C775D93D53BFBCE832D561E6C9FE58B38059DF054D417664435CBC
BFE9074E6EF03E23037AC51923C21F999F526B88DF00DDA3C399435B752CFA78
1ADB20D3D95D3DF2BBF80EB9E7D9EB548DA488A2152A6B38F19D3F4AFA108605
673F5A9AB35FBC4406261B0C8C824DB8BA2DAA13A5131A122499984BF58FC4C3
58B1CA122FE047B5AF40C1F8190C9F5796DA3D64255A913B7689128B497794FE
E3A0F47972F6C94B41D30D4C7E5E2AC22AC3AD0A23EC4EF697A51D0B7A3A6727
11096763793847BC81F1AC6D893004EA886B3ECE554D67531304624981081616
10348C49754FE44FABBCC0AB217811DF984BE43B9E8B8EDA9CF218E7FFDE3A20
E4D2FF7CEE2DEE658D7B2BF1515B79EE3E4D175ABF1F8F7689A072FFDEC9F39B
0A51756C16343589E6F256424EE4AA0719AE2781D3F1C29A76594FFCBC537103
57935CEE2650A872223B0637557991F1C38C3E9A61A1A27200B137257AC81206
8FF29EDC52BCE5F5B0234F3163D01671468E030FCD02FF3D0756873956DFF8A7
8C4BBFA06C711CB1DE857BE88CB1654C7B0B526D3B12450A6EDF6639AE45A5DA
8496288D0029C1AE3A4E7F986C4B800C023F943DDFA0448C9691C9F1C89A6F74
FD5B52D8EF672D3AB36DBC4A70928487AA68A64A6D32BF094644F38CE32D2582
7DACE80E488507159DEED3A4248AE306704786EDF9C744A85604BDA340EB5E2E
1947A072FBA7E97D3FF8590E32759009885A38AE4AC50329BD251038522AE261
CFEA25C88BF16F5A7CF436A0F813E04A8EDE50F9969E6F01320307EB71AF559E
F436D1ABF97CE82C0B6BA4587C03914AF2FD2B11DB312045F63E39498B778C13
5052774A5D6F08ED657137C3F0EC6170791883CBEFB2B3C10D9C45F0818AC854
59944B20A321DF01A445107B7966A6C6E05B3E47221C333512631FCF6779C637
A6CF4B71CA8E9622A4BB5ED00B959B85793D32ADF5450D536E116BBB8A5820BD
911549C936F8421F5C820CBA980CCEFA92A30A0C0EC945FF568B63E366F911E0
BDF9AF464B2E25E1160DADC9CA350435D9D31B638112D72EA2AA4B388E4AF8EB
618C401B04D88C73EEA15316804E7EF72547C6D7EA5FA7945797237B1656CDCB
2E38D812FBDB6562F5E1FBC395CED7EBECD7834AB78004698B67F242FFB4619A
C3FFA11FA88E90B6767C8487218724564D6FA7493E64B9461F0E420980A99FA5
B69DCD7880712F312AB45200693D9EFD2E84C1A1E446BC22DA2A88C87599E69F
256E24329C7509E5A491A4E8663AFDB4550A2D5555B38DF603DB446FF7100CBA
AF4D8B1B920CEFFD13629810E665F2C00F6E192B9AA8676B5C1F4444F8DE7982
6B3F94CE003CCBA58BE7548D94ABC472CBA9E67EBB2832E212471EB144249341
A7888CAD0CA0853B25764025E1DF9FE30D056D913535745C433D4E18A02ABAB8
C3D346085E1D05E8B8D1969D504B46DD1F1C5C8605250248684100EDC4FCE4C1
8183BBADE9BDEEAD2D2FC40460BB2A2004D8396DE0CD44E2E05E9EB4346CFCE8
0D4ACB417419DCA5B916C4A0BE7819099DCB5AD8999E506F4291314064CBD9B4
8D0C973BCBCE7900DE6DA4FE92907C8330DFDD57177A28B3AD7CE2C92C1840FF
CF40C1DBBCA3341FE09F7BAED7A6AD72CC492B6552E4DBE9B20FBD70090935A0
6771958F62AC7A73848C97A980CACCB8E03BB3746E82403E9401FB03264DB8A7
8F258C6DC5C37F84A05BEA83180073322B7C06975C013157B06BED6D43F92EC1
9D32B1686AB0FE67A2B0CD7840A8FB669D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI9
%!PS-AdobeFont-1.0: CMTI9 003.002
%%Title: CMTI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI9 known{/CMTI9 findfont dup/UniqueID known{dup
/UniqueID get 5000827 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI9 def
/FontBBox {-35 -250 1148 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI9.) readonly def
/FullName (CMTI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 39 /quoteright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
dup 127 /dieresis put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C50F9043B95BDF77C
1450E422362CCD41FB4AF30F73B66A85AC8DDEAFA65B4FCF0033D034E111830C
ACB981C2AC41AC32863D02E6D9CA81F8D407DE4AB20B4CB6418B8067D694DA02
6E76FF50A7197281B7E8E700C4A8824220374DE1CA077D50A8B751391E35FAAE
E0AB0604164A16D476EDD5E33B08639DCA14796F27A20EAA52D0BD8B61065AAD
083E4AAF626C2575C56F87AAC636FDC2E5ABF623F2D916D3CF5CE8703D297151
0A664F40B144A2F3900D053B709210AB8678EF35301AEF3696CF17A5B41B588F
539243F32FD78B62A0D80B17F1028CBD7234BA7513A4809B584092B95583CF1B
664929C33846E8F59A43220F79D8BE0DA051D17D09C1E9DBA6C60BCF99BAE773
3E9439791901546793B3CDF014E6AD9AA169483DB87A6CE4104A8B25AC117504
8D6DF6052EF491D510F67D730CA315915E77290A40D3F8EB8F004114BB64C5EE
9F1E18A47A785A04D4EE3FCEA794EB3438CBCAE35242782053277EFD6B67F6AF
97D892DA958EDBFAFDDEBEAC4451EF8E00D6D0E7E60C112F74999096428AFC5F
507D0DEAC778A81F8F47FBB1FD8C22FD22DF2AD0C9BDEFF2633F180E0186A9AB
B0680E661CF083B8DC5635D7DBD69A17E6BF1E86F7C19FF7E48EAE8D35F0B698
F990DC16CAE9D6E9D1C323FDD183096BE0EF3BCE379CE5E5CB0F58E4516C01B1
55004C20A6F2BF430D59368AD4F6D398B9A27B89DBCF70BB8A36AA24496CA621
0D28748646257C95B113209FA00B4525C582A8B223C64B658DA11CA08CB64F12
8BF230A57B4DC2FD0AA8C486D7B151C9713B12ABDF174ABDF52EC8034B0858CC
6D389B503A320AE42AF3BBE33135032FE83E6B7AE0D713BA6A56230A50C22FB8
597A5F21CDF98D70423E8AF8E3CBCE4756DEB5695D3A5E7C47E6EE62F4D06BC6
C9978DEFFF773BA6CB9B92D2B2638FA3A1D92806EAF9A9A9D6DE09D81FBD8622
AA7AE1FE01A1390427D270287D4A436A544D4F568640100F94518C113CCAA34B
28791F62F1C5B6207165A847AE2A9F1E3AF8B96203DDAEC2AF8F3450CA2FFB5D
E55DA538F39D6A5F13963857E2CE6D75E510E8287D4DDFE5FF5CDCC0FF51E346
B8717B28181DC56315751FC861DE7CAFECE8E350CECE6B324879ABC8D8206ED7
51D1D299BACD2F7F6EC2F8D3836EED6CCF09C205A7A76B82FE1AAFE0833C7693
FC7E22D373C10C34BC0B57382312646763F593AA91D90F6CBDB096CAF9F52C12
CB6E75237566C5D528DB58B92D0C7E16D6BB2D097C1FE565A07076209AC4DEE2
BB6147D06D65F403B6919D65D1C3D9D0FFFC0CEA7FE0EE002AA0EFBFC120A724
CCE85B3419C44ED7216E4C714FC85F72CA933D3707D2EDC6AC02335D4770B48E
0B64716C0E1B9DC8A4DA1BCF7B47FE7B37F9630E55E9868AD41AC770C5036E78
4D8B24AF41E90CE8358F97CCC43295371B73EF7E86BD1647EAB2E493EE912F74
EBDBB5CAC34EC1044114FDFEEE2FA8E3574F4D1E3EFB38C3BCDC341A0E53044C
0A19D619CB789E8C10100E413B8057373E6D77709B8019841DF04C8B27700FA8
B21E2955C9ADD9CBCECB52727BFF0E48029D46C695028CB3A7EA779EA69C8763
2BA38F274B4217F4D5C942042ABC9E4C1627D63C0BA9B1E03E9E3C7C8CB2812F
503564C0C02A6F2041D4CD59BFD6E465CD060D655C38FC5499F06E0323A4F359
37061EA5248B3AD809D16446E67B0267A3A929FBEB0A93DFEFEA3E8D5B7C564B
95AA458F532CBA8770DD90AE6D3A0BED3BA140A4AB6261CE41967038861D947F
20BCD353B32618537EACA0F1CA5C2708D67D46B6F9B6D4F12081485AF0699628
05AE00F008AA816DB07710E06AE2DBFA830C34851E5C63A7E9E02404ADF1DCA7
2185507F0CEAF858389E4F8DC3A1283FBEC373FB4A1720BA71F993D432425C2E
D0FB5A6FBC1E1904B959838FCCD085AF1778A5E3EF29166C6660B797C8ADAFF7
1EEDE9BD371E11CEE77D70008706E0BF2B6DA250F9C6A92BF91ADB7D32CA17D9
776CE695179FC5D1686E86E2B4C3E34D2741CDA86C0F343E7CDD52AD3059A8C8
134C7DAE20076E5EE5990CC56EF8AF66131243212C40480BBFDEA97FE0558ED5
7AECD669BA1AD9A50F1C0B21D75AD5A11FF9F577153C12F9789EDDF81FB683B1
F66244F6FB2DC1FF2B3BC8CDC6990E6C4CB835E552E2AC9A7540DDCFAD1F931C
44815C59118C7EB3C4CED4DE0D45C311D69576D5E6DAE9DF8265EC6E566DDBA7
22655E765C074082F346AB496F08F4E598D6D35472629273128157FA8608DD96
0CC4A3B97B430B1DF8EA4851CD54E742AC0170215F86D4612129F2CC3874D047
F485BE77D2FF57B8899E1E667D41E519948F0E60C5247F5483D20CB108BDDDA4
27F15C14A35FDC3CEA924E051D711D8D4EE36E7735E6DB443DBBD000A4CE0635
2727EF9C1AFC95E876A46FE001EFF903D64A2C1F00D734D32FF4A6C8E3956DF5
5E676815AA165DAA9E0AF2D56EFFF32BEC9897F45E40909F2F39BAF85A354420
5E6CBBC6626B98FF1A9BCC1F76D9AB0348C8E7540E42EEF3F3351006CDBFEB01
0FED065EBE147B5E36BB659D6AA429E6BF8121F147554BC0959E6F45C6990AE4
66A74CEBDEDD67A559C3E4937F50D3B51E7DACCA53A2DB98306E7AA86D21977A
A4CB7592590C94C8479530239945471408FA1F774CAD14F58AFFB59D8CE596B0
8DDC2E8CEAC94156D5FC69D70F2F779774503F168C48594C63F3180E8C93F423
7F1F1D44CCC5E5F766D7BECC470F880611C545FB3F4C0E171A30516DBD6477C6
2C478B4E3C2AC2241C68124C4570D476B1A18E7D093C97D16999E06CC1C8C485
15AFA4836718A40733ED145DFA4B80D3FC3AA074665316786E65706DA958BB71
67A4EE35FA629FE738CEC51D4F51431BCF8B14804F2C83453566253847077644
257AFB4D3D13CE77C9CD592F6C913F5AA3064E88779966EDCA52B2D9469FE48A
C8F6E5036AC9B0671508DA664E3F24BCE551D22434DBDF58196254D7D2C7C308
1A6822F2F21BDAE029F7F776C1FA7BA9CD94CA7D919B4E7BCB9B885FD767CD9E
96CC1604B95F0A8715837D7C27BBA08663FBC0DA33C2962577451DB48A4B76F4
8A4B66E7D2A2E465789D1E6B6D5F20413D84A47E5788CFA97BE43ED05FA176B1
F535C65F8FE60C72BE326737154602688AB71A8F12622648031414AB80C46289
1EAE582B933C87122DBDF3E3F1C4F4F5175E88AD0EC90B33CFC13DA07CBE8C49
EB1E86E0DCA68AF0BE3814595A4B2A4113FC8654A032BF00DAE293B4F2CCECC6
C0E804B658720C67DC156B4785D9A15274F2BF38748FAC7936275CDF42915CBD
FB21A739B80CE81B3897539492F113D589DA8A6C7B38621C8354625DC8B40FC0
7CFF21FD2D09E41AC9E99CB18FB9C92BB735C16FDEE7A8BB75A2258E76195AD2
1A88B0D64C130BE88CB2FEE3C723A46516DCE8DC6692EE27C6D8469FF511B7EA
F1B7EBA054708112981C79CFDCDD40BC55A1778FB3FDFC0AAA7EDC425FC2938D
694802705011B724423608C7BC1E803D344C9B5BDE13005D06C3F27DE0371EA4
0F836D5C0D6C0BE2D27700B08ABD09783D329EDD00415387C97C04F89607DCAB
62463E6A37E36C3A1CD92158353D45B443428177D1AE501F1CC0B50C100166B2
98C4824CAD58B3A396D097E2850B39130E743CF3CF59259A174586B9361D8F23
6DFDDAAC5B40CBA0495A3971399A95BAAC66CE5B472669E2C31ED0F2BE60E787
503EB379D332055EBF839B25802E076B1BA8DE3EC59782335AC80D1CB950948A
5EEA00C5F5829EB5293E05B982032207D41DDA035B3CAF26802A61751B17D0E5
170C99F6A0EE0EABB1576814EC3B4317A89C7F11022A0695FA3C2B2B80A2F73F
6A3FBD3A2B8C4820E7705CCEE368CE580434F3EBD2E9DBC162CB482278531546
74355C299E321C47D1C4C6D48C5100A4B8B2A16DD422AC3365B37A79D936FB24
786E9AD00E8E2666438B096BEF243BEC5C1AE35A9612D08CF7776E458265FC58
0D67659A4D5AB175ADB10F662536C8A9447DCF5173E620320A43B2AA5D5B5C34
78265F88656D2125C6E694AE4750193B05ED2A6DB4CD5A81E48B9912E25710DF
C66A0FCB7920479DBBF739D4BC746BB03C2F1FF89288DD807E805957EFB929CB
248F64A431C995F0300C0F836EBE1678C28DEA1F45034A4057520D17A25180A8
693BB0FE3FE6308A332A7E54A674B497471E2D13756CB0B991C4A4F9F4851A9C
49DDFB13416722223559BF7BBE8F1499BC93DC8BAC757E42E25369B182811ABC
FE4F1CBA5E5BC15ACB6344EBC575C2F443A508A46ADDEBF7C34D88702FE46A8E
D96C91AEA3EB989909A2B22E86FA80721E68A1385239B4883DC065A0C08ECCB3
693B0D13CA411A78C13BEE866D8AF8A634B81283B77FF62EEF25C5D48CCB10DB
BFA10E3066C116662395A6AF0B71D23C4047EE0352F4E02CCF28F959FD4394EF
43F0761B73B8D726B69D5111CF94B720D461E0AE42C974F2EDA6F7883BCC35FD
093304225534D8043D934772B0FEEE6427D0481A6CD8BD614669B875E1DCC6E8
EC423D9A0DA290D8571E97CB6CAEF274DF823767AF4E0576588CF2ADC239FDC6
437910EC0C2F01B4DC773E73C7FDE6E37D3E784E0E5B655600FBF3FBCC1FDCB4
CF356017BE2A663DD7983A46482A4C1B42A067381D58AB1B332CAB8E5C83FC78
1F0D9DBACEAAD372991BE3074D9911CBAA95E776008644F203D6B2EEAAFCDC57
C53DE48816934BF9D70F90F4186F6268522D260512492305533C1B0FB23D4726
6ACE20B872517CA01EF5EE275CCDC3BFE45C19FF225550E4E73B15E9BEE3CF21
1594CC1773CDAF0C659F3EDC2EA43C25D00AA68DA8D39DC46A1676099496DFD7
1155BCBC439742A80EC917BDB6E7593639CF1217C0265BA3183209DDDAF50E71
FA061C8978583D93EBD97C70A890230AA7123947B197E9536F0DA91373DECFD9
BD4E1C12B086B12077EBA19BA50B786AAE9244C60020F406AFF705CF029B43E8
D70CDD5DC7A61A75858E03657264392D9CAEA8C515DD98C2CB9E84BDBC6A62D2
36CA59D774BD889D64E6C9A0E043D04744D3D807D3A1B1B25266F0D9953266DC
662424A93FFEF40F47097F48D1904A1CC00030155AA3D9B07D281E055E6D033D
745856D9465D7349797A07396AE9026EE96DB8BAAA081D64EE4D86ADD8C4D1C1
CE8EDA25CF3242047E18E4C9870320052ADF3EA543D32E6EDC93264DCC2E5A1F
458369CC5CD73DDE165D5BF594C81FC992F35DF29A57464A0C6D72D5E7A92535
3CA14943640A67B23935409206FAAA6A11F598BE24373E7BF54A2B3C34551080
1B4DB4E3135AD0B61CB1C12A5154013E11B33393A1C16D74B16BB4D8E7B893FA
E6AA0C843BA5DC50FBE07407D8B16ED2963E36D021EB433609053BD19ACA31AC
53B1360A48F71D972E669D5357C22A33A7211F3380DF41069AFC7ABCB3300D72
FA1E9D6F2291E147988003554D2DCE165B5F316A390500D0273E83453381B13A
95D6E6F3300F36155573B8FB32A1691F6A9AAFC39541BAE0A4153C9F6B181B89
43D246EFEB5A2B5F66FC60A44E2E1A6D972C53B1E930CAA18A5B58820D8D2EF6
C1E798E9B744A31FB980C77D36728AEE6E682EA668F32E0C3EC70BCADC32A8D9
A2597F1A4AB9565FEE420056E8A8B0004C006AD981E94A84CB30ED6FC9642D65
0FADC7C9950BD962E0D86543EED6DE476E29A525183E52A8C97769E2FBC4149C
53A13C54341A9F554F0178211FA1E4731BFB84C11E6B776335F1F42864C70E9F
4C3F71F7DED7FB704A05FAEF7A2186B2C9C2AE9A3BEA55EC7F3334699BCD3D70
A675D3D1EBD9958BFE62267CAC06FA97421994C17D60879D8B847B39D5379B2C
079AD7BDB6FDDC56106127147297932F788184B0BBBEA5657DC92E4D6B097F30
97149A14677113EC8929C69FC93CCE56C068C015F46029110C7DB91DFE31E06C
CBB475E860D068ED6BE3B15B5C6F6F0D1D5FE6E7E4E47392C46FAA9CE932F928
FF628944653962EBFE4EE5AF7522BACB33ED77387B0247C146B81F7A860B84D0
D372252C89556DABA34913010DBA3576A6E13E3A184CD18D53FC758DDA762338
AF195F1F261D5F10AE0E733ECB98BA2F81F7B456A75D862C69D623CBDC50BE99
E3D1ED35ED4AEBD6CE39723F459AD508863C020FEE61980A17D41BBE0A54E120
1EB69BE8C1198663596A3678F11BB8F28D7BF5F713AAF61866B6C172EAD9D25F
02289C719F2C121A09DE6D8E47001FA41002DE821E739567F5D45F5C65D2A0D2
65D011472F8AA705C7BC3E0580BF4E2E007EA98AEAF9AFD2F25FB20B08EE26E2
E8F94A39F6240409F44E85FFAC9A46A2EA23A5A5F8BB0DBE50A7A1A9A6034D32
B777C38B88F25D392E59AFEC304C13CB1407C70B7DEC884B5B7AC97440CC198A
A949ABBCBABD1442C67E1828CE582D77F616A49BA12BD006CD541F707ED05737
FEDED2D912D3C1083AA726C21C396EC6A36EB6B9219F2BE7EF62D09E487B3FD0
9748121C531F7CD54DD98622C4C945E5B04ED2FD66D20873BB42C5391627B074
7DF90B81ECC6AA0743F25247978CC09C28C4F878E29A5070E4023BCE95FE0ACC
CC01D0EE219FA8344E8F6D7D43475678DEC28FCA370A417D2192DD293B13E507
F20AEEC2B825BD73A6678698858CC4B3DFA40DC96536735CFBBC2CEB5CA6A396
C8D387BCB4D6031DD45563921409C33F3BFFE220D7A255AD2B422AC9DDFE7A13
AFFAE4D39E8F285A4877D1FD83FF8BB9BAAD29C4C4DC7CEEB139D4CC253859B7
24221EBA02F074C94543E32176588F50D0ABB9B0AB449E21E01377E96A487B39
E45385A6A12DE9067750598BD5A12DEE276612012DC4226B14B0B289C9C8EB08
49B5FBCA42865EE9ADECA117AF8B2BE60A2F825F51B3FF32DE769AF8A9F0708D
7BA0C614E8B1CAFB429B6407B3BDB582FC49D3794A0BA6932824A1FE44429731
5F1C8D2DEE93EFEE11C29B1C020196EEC515336D8FD1FBD73FA4F2B454066970
1657B1EF286BB2DE8E5ACBBF40C992F9A22255B3D842E68346CF43C568E1DC7E
389CB45E387321424D7950AD8834BA43A128309ACFB55FA8D30C0A4E13A06862
0BA93765AD3744B7F0502EFE5D457D7CA7E988968EF34E2AEF0D1C5C1252BA48
E4AFEBD828CD1DCB34738801458A8E4F9970DFDDF7973961E756ED7DAD161736
0F774F441671DB46F07E28F57A1EC5FAFA529685CC5D419FA0ADDF1030B3F21F
AF395EF405CFC8FDD30B79B80CFC1708602680E9985C38474971F5A24FD0C415
CAF1F98938F27BB1C805F0617DFB86783BE6F3AE6265DE523D2781E94B042D16
36DCBA12FAC0BA0B2CAB48F31FE24BCC5B032D3987DE21BE7E191D578E9E5644
81BC38C95513F04C8F1BB7DD82DA3909DC75CD509C0A5EF8226E0EAC4BAD4D64
FD2D6BD98699B1B147B03FB3235F4F16F367D9EF10EEEF02093C40B9C6905716
E43CBE3B6814EC7DC6358B72A2DBDB3A22F65E1B9CDDD4A639ED9FF36E021E07
F5C45A74E31E755CD1F75CD2432D2E369537D3D738D643624E43CB52A1675A2A
2501397B11A902B26BFA828E9A744AB40CE3C143C758C6969350BA53BB8CDE8C
B21FF1336AAB3DA651DA4E822AC8E7B26B484955D115689E5B47F1FC0A88D9E1
C58559306D908BEFBAAC4411B52396F19D4585B4DA54EA8929B11DC4428F158C
AA3AB1B6C5736A7F52A3424F1B7995A97253C8F822C11204E340635D13BBEF95
108334977E7FE842A2159F2B9C855580379599035BFF29D6477BD0D3F6AF2F16
A21536FE92A20CFB4006B743599D744919557B111518B64B7A1D52851A1DE934
8FBDC32A12A86BE914E85449C9A85CBCE97B93F8C30619D97D35B1ADA1AEF315
ECBA6F412D9ED54A37ECA7E502C9A4D35280ADFE489B1648526A6EA53B42DBB9
0FECA2428C1E535970201D7C490A836956CED972788FB275E3A5DFBBE016A7F7
8A0E5C28A19B04EC50A19D4F27BEE9DA759581BB58714BDAA1E83BD9DF1C1910
7140E71438AFDF5E01556E9262F214712F001078CE95F86EB0E0B34512888B67
CE482A44888ADA3DCF4F15A736793F0C6BEEAE13DA02946AA20F2205C2FF9855
BDEBEC8D1D47959288CD9F1CD0F1F73A70AB0F5C0EED9CE5EBA39583EF19B89C
858190C1B77DDF63F1ED7C65C9999386744E1A05A4D64FD0ABE051FD7A4860DE
7AF7A90FC1756687A34A15570ECDD178D565493812C61F3A92F6CC0C2FB9ADE8
2C16BDC523B6FF038CB06F0D3BB60551F5245C0559045C91E1BDC5EB1246DAC1
E0396D8A9131F20EA1915179B1BB2B9D762EDD8A41EE4E5F23BCFF891B03010C
44859E8009600A559B4D64F6609A9DA80F553CD2203491A7FCB096AB991D6C62
169A602E4172AD5A4A4D0E8CEDA9F2CB3699402576CBDF6A0779F58855D22FA2
B5478D80753864811393C8EB71246A4C80DD8A58A2362BBD840EB631BCC32497
298D1C8488477BE5BEED582AE134886F37E80C0EE8F7CC297DE531E16D9BFCC7
1D61DE7CF3E13182F0678A7AD30E12F62F08583D0B8758A92B25FE7931DE7085
1F0B6620F895CD0162C13EE55B963CED7EF46DB4819904CF93C9D400EBCA0251
C4D90C0B0255D2ABFD0CDE7BA33806B47C8B9ACEFFC9542DE459FD14091B81BD
164CF17AAC1127908011A100A4DAD196230342AB6B55263CC9CD0020F0175200
A1FFAF3DBB149AA8753C2629E46583179E36D6DBE284D6E4283A51ABF92EB665
BF3A3604C28FBCB52C253BF955E6A2DE6FF76C54D52408E73A6F847E6EBC88C1
A9C36513763BE350CE08E49BE63251F4CB3EFE900303198B952A4498DE39A820
0E0283A3F0C3D2803E4741C20C0221D19EB9FBFCF881B02CDAAF95EDE6C7436C
9DD4E75CAA711095CD4BBD583BFFAF96A6767E55FB1C80B592A1653B8A482333
CF92C0E5AC381031D6C81F844FB748AC939F9CCB347DE323EBEEA2EF210E2718
D61314672D34AB76A48D503A02D5CE091F615C61FA49A5888335A21204072A40
4229822E68852657F7EF34A8B31EBCE237A4379C3CD83841D1FD9C0F2E07279B
0B88E39DC1F5AFE3453AC215CD3DA9DD0F5EED4387831C85E77F9FEB5F2E20DE
CDA1606B6BBA9129AD8B4D6FFFA096394462DC0E832A0128BEDF4392FB8FE531
7967DCF94AA0F75BA80D520042AF7AA9AC8FA8741DC0A3019E550075A25EE498
72AAF7071803B351FAB143C9873052644138AC97044B248F766941EE91551E30
E22500171B4FF758EE3676C6FAFF8054CEF4C198E98988CAFF8DCCEB08C7FB8B
54AC8E3DC152B1618BABC958F160856AB5C90C47DAF4CCC12DDB26A1BF16A759
B1636E4BE6E27E85676A4347896811208342857DC9583EA15FEC35482FF7E554
2DB0189F1403B9439CD787A8526D40293CD968BF8011851627CF5B05D69648F0
35C85C5F67417F0524ECE3E4A69DE93D16E99CDB6FE0681C19617F063E3AB954
5AFD79244B2C24EA83F65E6931372840AE211EDF495C588DBB4D16821D303D0A
5CE5B528E0CAD8D41CB88949AAB68677CE002C8336BCA56B6B77CF861C813E48
C04C80D7FD41203FE69B2D880476B0A152580932533F055A490EF66D8EF811DA
ECEFD4EA741789E861D5CBD73DB44146F537CC5353C2250AF20043F6E490FF33
896B3017BF89DDA1FA00D83606FCBD2B9689D04D4F58D05C8D9A603AE43962C3
E4D89E781C2594BC1AC15B58EBB84CD60D6C78F90A891AF9C6466736B0419D66
78E304E753BE0CD97710127B9CFE55799C9D1C1C7AD86AADE14AE697E5D70907
2A298C7A8999D84FD1CABBAA6E5874497F5AD58B734808BDE873241C735B5CF5
35210F00250E6362F6766FC42B704D7001EABB6C2A639E1FD66B020CD0796F5D
62630261F66F081A33421402A8BA90EB3BA0982AE7C10C91EE8E84AC67A86854
2365756FA84F0A8C9985149D040CEE27541D9D257DDDE896F68BE75603600EEC
9312CAC97899F48D2BF7FA9A3564AC1F2EFC0C362D4CE25474C66E1EF1EBCAEC
9C1AEDE29506AC2E668B931D42BDD28B009A86DD56B1EAE761D86688D1D5003D
E67F508539D074870CF650A1CACC51660121CCEF3A064553D3B916E321202168
DE5A091AA4C38DA4BD22D0F2F51C823076A3CB15DB7DA86AD84A1D883745D2DB
E5B945D05A9938C17AC75268A29386C1C19C137472D7080C575AB46090081B2B
A190E50AC2231A526F6FA5B633356A3480AD2D96D8A2D460D5CE0276A0C3C91B
73C7A23CF454B4B820AF118CDC9293090312AC0167277A5A5F1F1E0D30C32EFF
F763964555FB435CAC0FCB01C54AB0E88531003FF37A6F298B53F9CF2CA6079F
B200DD3BF2DCD4D548AD8BF0FCED84786EFB72830F5F0D90A72E7286AD9BB797
06E727314B26590CBCAF6D73CA6416D7DCDE77560F4F92352FFD7EC5221022C1
7918E40C7AF89C83F41B7C920372DB7BD854FF9B1F728FF67429235181DBB2FF
B8823229C156451A85E0BBE9D27736CA9F511AF95E3B13F76592DE22B5FE1469
C40C3DB2DD1FEFDA42D2457C864AED866170FABF0908A5A06F002A6EEECA2757
3A4CF61054189888C2FD09441C41CA15034C754C5D3AFFDF4795180B8D359610
B23DFE187B22B0A784B83758495AF864957DA7D8384F4664877D1F4DBCF7F31F
49295DFA541BE6873265C4EE7DA134F338C3742C9635BE83C68EA9BF9064E134
D1B8C700913CF3E63FA69BEAE03BCE36244F6E3EC638B8A468F3DF8D562C8BF1
B6979706B4B20ABF19063BF45468FBB60F175B69DE5E21C67B651E7EEED85F13
E342F4BFEEBB096E7DBFABCEF5B118F7FCC8C105F39C5671C1ADBB538798C122
F2FA4F8513C7EB5E21E71C096B3A9D24F7344666C264832518BCCD782350A0AF
B40BEAAAD3A5064DC29136A2028C9F7D34C5F143221453AE9B268C2005D11E27
2891C18F48C15E36495EECD124CC5B00459CDFA8BAC12220D2EC2A3E5BCD3F0F
479ABCE59E4AE068CB6100050FC4F576CE67CBE6928F02D262A4B4BB4CFD42E1
EBCE01FC01262C9C4A5AED3F04C66E91F532D8F3605E0233ED61E52EE88ECE75
E7634EB28210C6500AEA15E2D9974B7490E558AEEDDFEE34ADF0A558AC48BD36
8140C60CE7835663F12D49E2D112F6FD345CEFBD6983373AD59B103E06782F9F
A7CDE1DA4C61F8ECD1C1DEF8003B433613D550ECC6FEA048BDB1F865678DA439
6E280C40F744243A261494850B7406603974F8B7063BD69DE7D024599209E2D6
4654C24FCC505292F17175177B2FF59B638B3548FAC3E05E5FC1DA3DEA09FFA2
D99A978A0E7391622A4CABDE4F37D5AB52514960CC5469BFAB556D4E780EC48D
567244D7C826E748CA37EE7174A4428BF41BAC1C31BB84DE5B698773D34DC1BB
E87DE9E04226519E5593214A5F1394C94197F83FD0C68873ACFEDD99C1AB7408
F5E181C7E18FB088E957FC8A6A21840E3B939952D26F9436892BBE8C0C0903D9
A45C44930DF9456402CA825963DBB4D4B21C0BFD2A15CCC65CF4A6A53D92EB97
D6AD3D7D20A071B7F85253AB7F131E96FFA9DAD9C1E0333F5D5FB62E67DB29E0
EA01112BFCB1DC24F42ABA5EDDFCB09DB9B760BFE0AC02C1AECF0F97F1AF6489
A07579C8928E517CB39625D0E1451AA9B9EFE50897FD08B13421F2BADE56A50D
B313863F9EDC9FBE4C06ADDD7E3604E364DB04963D489E719F8F27A5CEBE580C
DF4B598C219F3B7665102D2574E0B45C96C68A5156AC29B4D5A8C3F2441A8248
89F418A024093C56B33C7DC04E27182EBC4DAF116A1E5E06D3D3FBB344EE4E19
12BD71EFE490B91B1CEDDDCF3F69C4E592700FD03B23EE095C01EC145BB90667
ACBB3828723461ECFFEBA5EA668BE1B50FF5241DD4DDC481AF20869C5B1A86F1
2482A420E56CE13938F35A1B0BD2504D7F1F4F2F59D6FEA64FAEEC558501859C
E3DCB612D8E42D9BC2AEAA0BED5473589E48B67E202E98FC9EA075590C63C2DF
B7917C9832161CEE1D87D41BEB244685D2A658D41007CE193A5CC9C295CF333C
CC8D93442B51EF5FB1B3D5DA80B39BEFC3C476A6B88962B9B5C680D7B4803EBB
A8541BA8C137D6BD11430DB98F985EF3E487516FCEFC2A2F5C76DE5D07ED3ED1
42C379E209CAD977F9D1C3A2F6A3D20051E280C9ECA06D9C416AE40456BEBE39
9255D31722590B97BD416D96B823ABF8732BD5992EAFD5AA1FED32C83799AA5F
4061835F740347B8188DC3CAA2646F613F3265FEE04332AB7360B2BB8BCE0327
EA460694E4F437B5882BCAB41E43386D977BDAAE3E0B8CCEF1606A0EA99F636E
2DE9EBFC44A14A9DDF12A960354824C8B00EA7805A438AAB428088EFCD56BE9D
9F33438A10DACA366A0729CFA466409C90C6582B8665FDF58298EA6B14BF61A2
C47AEFE34937241828B40861D26678B3B3E3753BCA868615C1A51398BFC30505
8E0852954D8C880F3D5E00DC9578F881E463547E10F5FC84CDD32520F68726F7
CA9AE5329C6B14F2B61C22C7ADDF5A40B95AC205E1EBADC350E914FB2D75D1FA
B7C52ED703522B369C4EEC0CC1DE4BFA6377DDED552891FDD446BF9E5C595D9B
D2A541B785B1D737DFFF05EE8E8C107C6E0D14ABFF63388118E0452999211491
5DDF1A3292014DF6F9691A5ABF8479B752B0B2442F17E28C15479238A44127D6
36BA38F988C6F48C9E907D0620C7436320771B8D71B286601E26E6DE9DA37CEA
6866962A073CFF37DC9E19E75CB47E412E59241AEB90525895555955B4FC69C2
16047399E83057FB9F1585AED8BE4EDB9581765E81D1AE230118288868A7180A
207170910A33B5FA0098B04D8E499DE9DBC082F0C93AEB453F3B200FDC850806
1F5CFF86FF13D47DFD301AD2307A39D09215F2A4F76B89FC2ECBCB3A06FF071B
AFCABCEAC1FB136E4F2CD2C6ADEE5B8E4A2073D2A01B2BA64E883D97040C47C7
C8CD47A7BAF2F7852196782AF87321817FF87EBEF0171B43758061F11F1BD334
BCFB7956AF6C587CACD71D981713229A197D0873D69D18E509431B9D5AD21195
37BC3B6651D6D35E7F19C0B31B0E1E75333957B0333D16019A6A97D56C679976
3BF64896A597912A9229C60F6C595B933992E4D862261A56670D8708A167DC1E
E800A79549232C1BAD340DA58C9F13B44DA0913362C9977B9FDBE95D61B9A195
2B9D440D4AA3ACD49EEDC680C73C09D36274C9DBFE403E4B4A840A27E5EDBF7D
F4F0D8035D7EBA28B3443137E253D1F8B81D453E65E7C8559288C550AE88EB40
8F6CA6BDC425590C505750D841DFA90F2BB6E7B9B5A7C17156D28AAB287779B1
F31E15FFE695406180A94F3753AD0DE2AD927F7544140906D3FFA067D5323691
ACC8DB5838A4E94768B38C960CEEDC647B7CBD2A5AAF245D5FAFC51959DE8546
043641A9BCAF9946B475EE760F2CC79C36FA6DAE07D8B6244840512B7C6864BD
88B8500973BDB7A757B7D3020EAEB0BF19AF24FA1EC9AFD5A6DD10CBB7D7B6A3
47A6DE47C5FF27A6E8DD49997618173D89760C28974E1884E77104C2AEABFF7A
AA023ACAE8211A78B8BC25AB7F5D6DBB9D6F50F6B1D9E977663E5F191615B7F0
13310BEFD0670FF315F6EC34611D2D5443BCE4F457BA96FECC28348FE921B4AF
17DF16DF8F4ADABA4F9E166DCB5F9C66F42296800DAB1147C0B96304F42FC8D2
1F0E4390FA42EBD1013336FE75FC7111CD8CAE245A4AB75877B59BBA18344F56
0FAE5DFED045DE337020CCA042EFC2F5D7117738D85F8F8714394B8406BECB89
A01073FCBFB54B2F8F3C0D819CE9D682F456B57F6CC6CEE4FB0616CA2E8B475F
F2B9EA1AEF6D14844B6DB887700F3B82F2769CA22F596313A2B2580DC627FF6F
21D6B937ACF7404186EF17E79C689AC032409D412AD932B3AF7E52A2AB30EF4B
07038C14285B544B08617E3C5D4BAB972511954A21977992FF10F4F7A234118B
EDFE5743CAB6575E732C4533BF6B92B2CD40098218CAF531BB4E863C0B3DE1EA
338A1457273BD8F5B6A613D1DEBB46C6E94345C56CC8EB475D569411C1ACA70D
C6A6F935933008C683B27148FF0419D0D62839CE65B97517970AFD08DC0A2624
F42F712BD5177159019E496772AD57CDCB895D52D012766D3FFAFCC26FFF40A3
66D1989781AC531248B9227320379B346B164C14316E1A731B473D5ABA83C7E3
7B6E4AA1C95A2B7D89F6D42271DFB0DDC644B3553923479E567EE5B5381134D2
13C42D1389ABA859D9D740F8C1452E5A1EB99A7E2E704467C38F393C2EE54E9F
22CE767ECD8A92B9ADAEC83A35573AEE1D71A1F70A5981A026779FD90DED045E
D8271DCE909028E0E7B0E94735DFF203EEA51F949FF6885A152BAFFC365F50B7
4DD807470DA3FCD885B6BF86939CBD71F04D0DB7FA825BEA6A1FA80200BC54A0
5A701D18662070534945310F73DFD5D8D332CF168EDF7A506595C0CB5C8DC5B1
9352CDE19E3253ACA419DF2E02C1F2329104275231D61BFED941C8CC3C11B6F4
6486FDFDE96B864F5B8337FE004205A281E2552DD5636C92AABD828807C76DA8
8FA2DC075721CDFCAFB27AA8FDCCE34821FFEBB366B234E4BAF76A2579BFC4E8
32823ACE082B69A9D85243C440F9A114B2130CE40E06EEC41C02392297EB7192
4B3072D0DD9BE077F36A7361E0635EF78E1EA610D9167AC4B79A502F61C6ED81
A2EAB372133A0552534EBAA197BD1D3F89FA705E94647C57F05687250A694ABA
9DD3527F5A8A6F4C8DABC7BFD08935A8F78BC8C9207B77C3B9AB011BD30127D1
8FDAB388D3D3724559DE34C56C47656A211A31B85D1737A942B80D35A94CC0D5
2E1F84308C6E85ACB82F45BA74251ABA33BA0C7FD3323FCF1F2988164EDDF49D
901A482CB1428B92335F33DB1783E627F32689E503A752B73B9DFDFC863507C9
743A7FF95E7EF3FB05173AE3DBC3CAD0FEB7E7B68E0DA0B30D1D94E6A5DB61DF
68BBBEFCF797AD3AB5C1D245E1AA466CC298540C14414787114687513608EC1B
E14836FB9AA0F015DF572A3513723EC5D1F8CBE2700CCD3CF2B018C8149BD59F
0B789F66B7D9E6F668CAEC7651304EF074F45DE3CCC3F392B6FD66BA2047B926
E7D7405272D4ABBC6C397F8FAB4EAEF3E14EA21E00175DF56AF7BEAF6C4ADBA3
8F2AB8631520302F150AA32EA19FBD833411E432B1DF3536D44BE5A2B6870DBC
C1B4266B13271968673DE3A76E17B781768B0E7749BB87C3E9C1B7A3136BEA8F
A9AFFF383084782632FD4C031BF7A269ED0934DE67FB459B9A47CDD1BBE4B0F9
659ED78689E2B8A76113A1D60EC25EACA821E4848B617ECB9C186C79AB789540
D710DA0D2F1375F0E6ACFD308AC76111A7D45E479B68E3118C21DB0557DEFFA9
91AD7DC24698D9C89374132956A680E9F02C6BA203D02F8FE19E64897EAA63BC
E4077B58E65847B60D7CAF50BA4953DDD12804FE0108F522705A6AF5747F44BA
EF82A0F35F0C1376982FE7F326630C94FC82E3C56D4978D17EEBD05673739C82
C963741172A98713026C46EBCDD281B008323CA64F61E640DFDA0382AC05EC34
6BD25B7759E48019C49647321ADB679E9DCFF18EDF1BA6BFD59E16898892BD3A
0A3D5A7D07A6F19C47B61ADF50886AAAE6637AE8C79E7C10A1D99C27AA3220E1
40C6682505B4CEB6B4E2FA7383567F099B4D2EB7894829DC10220A5DA5975C27
385E4E597F75B512EAE9093FC48DA087035309F869564CC29035B937647FC173
976AB2A6E485CED1EC5A701861DF77DDB557D2B88185174A9FC405BEB4450BF5
44B9C26185F0978B1769EFCABC0576E1AB3218EF7EC8F8EBDC7647035D4D02F6
854023F723E1A7E825C604D96FEABDFA06D48C5F4B7D9B6D34E914639613799B
9B330E9E79C1DC4458968277ADE1C4ED96C13462D89268CB792E155F122F6192
0F66D9DEB5F047732FDA07F225AFD3729D70EFDC6BF1A5E94C0430A0400EC2CB
138C724E72FB384081BB2C8B385F723A528006FC6C2FFA328755F86C7019BE44
7A378102DAE69284D468E06405B63BDB82BA50E9BE4D64AC4B00FB6F61CDD850
81BBFA45A184C18D5191C1C47D5A4E0D655F15233F1EEAD04980972C6C1856DE
7B7F158FC8F545B72660784CBDA701A4B74C87AE3824C3D032EB74E705FD463C
1444925D7230676E246DFFECC4A91629C25D26191BD49F60EC585FF73A5CE63C
5C00E4EB2C98F4EA192AAF1D1C0F8681C02D212BC5757EC14781E5B3684C435E
68E94E67977D3C9956D0FDE0AF29773054AB52ECD27DD71AAD03DF84E4EB7FE3
DFB661187465E96AF931565FA4A676B47C4A4306FEE8306253FA0F7940349F90
C53177AC27276282380300937B984A7885BCC6FB1D362BAD633190529C804D50
97D88F06272145AA3781BA9CC0085DD62FC3392B7C71D0A97910BAA4B9435F8C
45A513422853E8EF2D0799F45D5EDE4DC67A729A96D379A7D679959DBAFBDE95
F288EB74A334B8596F5E8FA3E0F5E515B929578D1FB6B0858A1E2A5CA456384E
25A6359CB25C731D6DCFEA98F040180332189783B719A7845F94704262238EC7
0F27204A4B8DF204E68B9B46F91520E258EFBE24A644064EC812271720BAB7CC
36A06A609F480293FB1D42677D7A40FD72CC9F1F3B937809118027533633FC47
FB81F74506C1B6195CFC5D364055FE2CD92E95913705030A249A1760CE053BB5
14310CE0C4905BBEEE942983D3EDEF72E9E8C2111652ADADBD2FC0CA98E750F2
486C1F63A36A5232435357E1DCE0A65807FF5552D5761E53E2F29F2F1706E5BB
7692495887BFD25EECA0609C53535828FE10EDDFE97B04503CA68DD91EEF757C
F365703A6CB9A3568900C5CBB24A6B96EA9E36FFFA2CC496E9C584589B977A32
D41E990FABBD00D6BB9874804AFA2FC4F1481F5AC1058DD53B46157F4F2B7ACF
70C6E945CB959F7B4887F9A461EE79FFA02C887C1521C9CFB6EB2767F67E301A
7E7A60DDD5494E333BDB14C82D5552A3AB71618EC4BDF9F6C9AC041C3F616C76
8DCFEDBABDDBBBBD0A3D3EAE79818936FA9B6214950C1877B2D556D5D4DE0462
CA73D02FBEFA268F1ADCBCD04E91608782ADDEAB7AC3273AC8E2E79A74803E13
7872C016E1437B82B67070B5CC4515AC180715061A495397D79603A2C33A9556
A8507232E216A2A08BFF3B986EA321F727CEE5552113E134A45BD25F5340E0B5
96BB183C0A6097FC8D6E37C441FB885C3AB8E5397121CE3DF563B111612BEF47
A4A8AFE769179F65104777E97DA5FB3476B9137381CD2AAC6F18136E2970965F
A6BB5881D54C352C72CAAAC0FD3A28AE4D7CF4D644D9DDD74B2EDF0123BDC155
B24681834A7341FB72715838A2704736270FC92E25CD91D68BF2BAE30AA6C60D
7331C716635F956AA04F741FB83B3B2EB04DBFE7B9897E9C45D2AA06BC5D2996
333104407D7D383CEBCE890B259869AF806DC400F4952BCD73F3DAE25848267D
CAB9C3C3225D772A64DBA393F2EFD4C845C036EC83566D515782455E8A568698
E18E305CDF535EA8CA1FD7EAFE3D5598FEB8C6AE9A3F709D0F61FE1B9274C954
032939940CE398E6C1210F0A1958FEB128C67C8E199E0ADABEA10BB3F99ABE7C
F278497638D4991FD23BA87196E2496C86C72271F5F743C317E6417793A9C15C
923C53FEFD4D20CA2DB090B5470DC528780F771F18B6AF247CEC48825FEA607A
5A430933A2BFD001D495FA600AEEE52869F6DE226350AF64BB345C3450F90B25
2762C6A420F5C4BD0B2BC4C7E86738B87B6A372F6BBF80B9F7C3CB654F900C50
C16154AE607893957B81974C57E0D23A8B5E8CE26344A6A3DD52D09D1F7860F1
7618840E676822BEB481BCCCEAF7574B0D36C428DB63CB63D90CF1DB6BACA3F5
840945A1A888C2307DCE81AF7EFBCE8E385A33B94B45664A895B0628FEAA48C0
A4F97038266A4F21CE52D87F17F70BC44DD592644460504590627AF43E3C134F
76EEE7055214EDA3CF9391AF2831287CDE905FA819CAE013DA82DB30EEA3716C
E1142215969EDD52364C0755B802DD31E849909AA803D748F5AD4BF6F5307942
C795E935494511F33F158745120F3EFAB5774A077984EA40F15DFF5F5DC69FC2
3C3D197FD00F5C8FA6704EECF003B90EBE78DE09C5C9436D80EFC4958365C517
30BBDFFAD505A4D5C5CA12B4FA48A0869FE5D9041712349B18D719CB4BC3BC0A
4E3831B878BBEAC0FD1BF4B1BB0C6CB96DE4DE634D206067693B92D2D97EC6D1
8208AE6D57C3B026140BD0AB93FB491FE1B58FE786A6554F120EE19886C956A8
B8CDCD31BDB5DCE6915817664E25376D33D5F63204E4B1B48D3CC538205EBD3D
4117287F4A36B489FA458FE65BF9C4552DE8F2072A8F70FE2363E8584770C45D
A622B8AC2B285E0FDBDE70B83FE12E21168119682D776150D7BF097417262621
078059862E267FFC847194BD15BBE12E69D5932192920705DA77E0F0A52C10A6
A19B269031EC78F7FAE5E6A85152339F805140B5CA70EAAF018483B4563B75C7
917225F3396D8B19FD1B442293955252CA193156B50399F6E82C9258AA18D618
23D9560474553B52547481EE5A41D8BB1C692459C7EFBB59955CBE6C223CFBBC
A70B21CBE040A2AEFCBE9D9A599955AE8F0A994EE8E9D704B4C49C3463F60A28
BD08C558A789FF1CF159A36F41C517E97D6ABBCE4E64E7B804DF6564D57765E3
05A46E20FF918B6FB0CA4A53EB3B98CF65EBC462EF2043069365278814631A4C
9E9239AAB0EB2913175FDC6AFC84FCDDBB28A7C69BE2DF1D346B9D55B6D98BA3
2EE4A8C2279759FDE664EA797B1E3F86A5116183841F2013AF36BDA4943EA6AA
276650879607AACA822978722DDEF9E577F53CF24255C1DA9D14358DDBD8AF7A
696F76D4090B2D2C72B53F04D6697C9E4ECFAE4B90BDD5E4DAC316CCC76EEC96
07F7951829E0572CF0518DA691FC25D54A2CD5DF3A3E9026249C391515D22B84
2124A21BE551FA4F70362859BD7D91DE01209134B30659BCF1A60C8568777937
3374C85F454184DB90C1715AF5A0A24493204C69E3BA83BA3BF9F95C64372005
38DA2AC59E02AF436E1E4F28220E396B062CE53D2138C68BAFF44D74B9C7E8B1
17FA8FFD28C642EAFB863D59B8E71596560715F6F044D79FCFFDD7D6FBCC19AA
71CE7D5751C8EA42C6E1F404460A14BC0754E5BBAAB9DC70C349610135E8795F
53838875C5548104426103F56EAC689BBDCD4E89CE3BDCA98C1FAA88F6162D42
B2907AF36E125B0BE7B5C5C2301A9C5DFFB61F268A0BD839B8AEFF9A4AAB9422
3B1DBD90B5F177A4C49E577562DF563C9738F71D62E4BB01260BC6649627952A
C664B70875DDC656AA9F64A1A221937D3712B626E7C849660F282D1D1659914D
752D4582E0F3B8047C2916ED7C1FA384BD391CDCD54E07527C36D5531CD4DCC3
7362F9DA039637DB916E3257746E74FA94BEE69CCACF928B6D1A96B69947B0FB
2D3FA3F839E5B6F28662D2242ECCA721BD6C1342382E37C6CB50EB328674B863
22E4985A1EECE62DA21DD45AA241AC22278A29F77C4DB670BC8BC367A33CE93D
A814A439BF56F20660E1758F26E0B0F2D916A3C2091E8B051116F335B03F9912
312AE0176701441967263CCC1BC1FF0C51B2100EDADE83434F47BFF037FAB66C
33D2EF43A46844E52F08BD227CE7FF77CE6CE4B19870382915AB45BFB18F9560
0E514CCDA5F1E518835E042B002B9F30DA8624BC9D79251CD655382C4605D5F8
9DA46CB57C247D880E1361EE1A22BA0788B2A941C3C5982D33F3D86FB616CBB5
71B4FFA0295351F31ED9C5F1BCE40485BC0E2A29E9ADF65FB1C8AE13C1098A2B
F1E4D4CB265122375BFAF690A27DCA4268677EDED96782C68D878870E96839E5
D374CD021B5D05903EFFA8812F95336FC074602E698044EE551A9D54A7986A70
F0A9DD59A815A80DEC387CDDA053633548A8046C2939CCD55BD1BCA5B00554F5
224DD38F999FB464C1851C2C80369E866428FE04D43C617EC766F34A8D506BDF
6C9EDC76D87DA86138F9C179F762057F8155BBCBE916E9AF2912C66772C7D13E
07B5555D311D0E24AFB01CFC6EC1EEF9A1B208945FE233D1AD149CCAF7BABE76
D2B9F7094B4EA5DC23ABE175060D2FEC1F218A064C12BBBB956E08567F45BB90
1F76CCC1D622E713218D5A2AA35F1D588DB9F5009D5EAD7E4D86B16001315BF1
5335F8C68F88458DEDBC949503542F3B79839090A67513688C219B3362470073
3CF39E613620822E103F886E54506AB421DAC7FD144D8740BA2DB43F6AC510EE
F6EE93F70770819E753DB7A996AA1319B544665F4849ECFB1F6ECAEE7A29AB14
90C560F5D84C743047C63973A0234F76FE11759C8609E85E4BCFE8AEC9FEF8CD
8DB84C31C64E8E02FB5401147EAF55D7E597DBCBFB219579105D49DD99F43BC2
9D558666AABBC19E62889BF5D5096B1EB7FC836CDA6BAB72DBF658B6E37A2817
E52C650492BC58CA853A5D84620092D1AC4DAE7CC13CCCE41A111EAF04A66D9F
7113990DE1A441C021AE363C6B2DF220B746E94F2163D0655D8EE72F054C7DC3
835DF8FBAF2F5A064EDC10CADE05ACBC67876C8458A00B5CE20523743E70B790
6F6A59E0FF83D048FD8EE581579620C3FF13FD96727B4107B7FEDBDAD223265E
884F3F2C27E01680E970D220A2E4CC6E379CAB6FFE9F42D839E69B78D6A0F222
0C54B4DAF13D3412F25B45FAC584508F1A0A76055417DC80B4AE21C5B7D00A7E
ADB4F5D106F58C8903D20F208F5695E6E636B2D542336DFA53A2D9A6952618AD
41BBEFFF7F4F01870D003F72536F20548F06E6DAAFD4A77268E9676FE61CF015
DA4CED7DCE63AE2D90E6AFC9CBAEDAE505AF9A99C54E1E73BB20632C49E4671C
4680F358C6CDBD3B2232DA2DF295517D6800A01306169685AC27F88D3B572B16
92476F89D5CCB2A39E0EEAB8817A55F838A6105D9D7E8C79854E79E7030E0E36
767B749F369B82DBC573A29948B8DD009C32B32095B47082A9F648A05720EA80
A855EE4626C3688F6B61E321E131C4BBFC90323FCBA150C7723E2E15123F9E61
BE3E5405511ACAC7382B62C4AED0687BBEE78D984BAC1C9699FDC0696B93DC71
0B68AD9FEF4DDB7AC672A5765512EADC2C3859270BDF847A64A50AAFA247613E
58B8F853DD2A00CF16AC822AA9E178BE46652EF27731ABA8151C413B1F8CA8E3
1F3F6A24EF943BF36D40377F7E088686160A0960F52EC071CF7EC85EA253BEE3
0D355A2951CA0FE70D2398D4A551AAFD46DAE7DC70C12E2ACC7611BC6A5EE7AB
327E5F7F68ADF4DF65F56A649DF02C400F4F8678BF1A6C52F9D648505B577765
FE4E297F07524AFE406B25F7808A84F68B3F21D45A5F03873A0CE319FE34215E
9040E0F210C752104DAE296CBDC85F93006E90F5C92C686F122DA5DEBF11DDE4
E9FDCA0F39DACA6F1E4ABB130D9E89F65034B19D0576FE9C01ED99057EC12985
58B32AE9D23124D767FDD80FF4DB27FD8BCC2A2524CEEED9ABB453287E2F6BD6
35B6D253FEB47D6F427353F9210C84BE23D3122626852F818B35C74ED4940570
4845EC75BEBF0769E11D4052176AF0C957619B133E84C08B3A85F28BD005F99A
F6175A5A6FA83409D5947840C4B58616C7549C43AA04B99739
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.0: CMSY6 003.002
%%Title: CMSY6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY6 known{/CMSY6 findfont dup/UniqueID known{dup
/UniqueID get 5096647 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY6 def
/FontBBox {-4 -948 1329 786 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY6.) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /prime put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D6AE353EAB9DBA0D
4335868937E3A2D0F9C8A4FBEAE138AE56EF84665582DDEF7B546714518D224A
F91D19409EC600924626D79F58E272E3657E631C06412F9D42732B6AE0A93D81
E2B13A81C76CC37FCA6DB35A1C6A572EFFEC7E1581C57B1D22EAE9C407771F40
71D002A06A6AC249FCB7605C902A76EB298B05E39D543A63332A91B8A1ACE05B
F902540FEC1024680B8D5857E4931D00781747C87ADCC45430B5462EA480BE50
D07C5C9EA0D8D6447324434CF0D637BB13037B6E1C48F191C52CF2B9511690B5
405280D5C825BD376EF12429837CD44BEA223DC8E199D8F85856C0FD551471CA
B30481FAE99B71FAA56B639F549F449F2CA6F5450AADEAD4C09595A7A8530D12
B23E012978225E112D23BD1D48DB097994A9D5EC707216D2BF5DF8B69E66ADBF
DBDA4737737F51EB7A38A4207BB46456A8117067748659D654B1D14849F14920
E57462ECFF602A181700A346C1E95131C6F1C66132915FFD999FD4105AFFE7D6
7DA46DFCC4FE53265B14D7326F5A44A3E97902CCB106AE99ED6434AA9EEE7E6F
60B8034EF80DF885FC63DFACB0AD1C00BE56F79B1AD41B065C59A35073B450F3
7E6BC7B90C9D9337F9636943ED701398E6886947E126F1E12D74C5E4B5CF06EA
E60F9B121B9B15E6752B127CCB9C26017A84BE6DD918AFE46DBF27BC06E66AD9
830BF2D6CA9E24A0199DD3E732405F3210C97C9BD21545B5E4DC10E17C1A2C71
851ED2B272055831A6F95864137C218E555B054BE3616820FE671E5BC08E7A48
D683ACDB91E05F469C0C8919D71027E179F4911E878F8D13F999C63C4EC2C21D
ADE1A11979B539C4C5746AA157A4EB4A7A153BC5D966197A7FF6A2DA3FDB161A
EF43C2D906C617868617E72163D5B0BC29C36A60867C120A02E08264231FD46C
1D3B62622A05129188D818E2AE83FB2770DF1D466CA38A49D15F9056BB7AB8BF
D7DEB2E3B3A8157B59D138787B21CE3B3A456E230CFEC1374AC66B7DBBE788FD
5182DA23264093CEF60D5BB0073AEDB68A61ECF1C69669244A1FA0CBA44DB83F
352AEE6012082B8A3FD62F4497B1BE0E4FF77FF94BF221212D63BC1E35B9758F
2D7F8FA002751DC0380AB954331E9AABA6C122F8F3D7E69CE8A6B359184F0531
6B158ACF34C64C32F4671D430820B36C9A9397E9C877D734B17C3BBD8A88CE2B
9F96D7AC5B8D55415E942D6C05392D03DAE53449F8FBE2225C91F228704BE9A1
ECC568FB2E90C73F2F7AFA62859C35F0FB26756DE719BEA5A3EB81A6481507F1
813CD1680EBFCF612FD9D3AA4B90688521446FABD5C54CAFE7B879F24B54449D
2B30738B137B5E212B34BC5384BC2216A5D13F761D6E13A043DB2AABC0276705
5C80CA394A8179D60DCA4651CE8B0A477165FF48A31BEC6B7C0852C9D72E11BE
FEC5E4B984DFDE90218C105999E070FC83F1716D13389B5EEAE3F26C82FE9A7D
3C67A98027D15DAD791348A21DD922C71145D287C7EA83B225377744BBB0082C
22FD44E1B0DF60956DB9C4790F4E2F81C477DD4CA9F4BBB4287914EBBB4F6E36
976C9E573496A2311E5C7677FBC4BB755B8BF925F291DE0442FBB8921402A487
ECF23EC556C3FD66158727B10B74C778FA91EC16629F6E949624D265FA6FDF1F
772E965A2C30C80AEEDC4A1867AE3D6D116BCE0F96D1A0C5138F294CC7C2AD72
8BE152B314E26422FA2DDDFA89A054CEFC6607D932FACB035FC9FD9959C4A468
CAC0F4DD41DFB83297EFFE36C352CA0A6B1485BF8433522BBBCCF9C73FB7334D
1CFC92348F91C4D0EAD90B22BAC6B27D21CDF5AE65C056BDE3B30424F76C8EFE
D7CDBC854B13EAEE0485CC348AC52F5345B7545B4FFC60B6E7CEF8D32354B233
8DF503A03F5201EC012AA67157F4A47B902D269A060A5B8E10A37CA7CAAFD417
1A13EED9533BD4A6E8845D7D236CB254D40930C273EA4372E0B13912B2CE9261
275D51D202D461FD69AE352E95F72D61683267D4951BB602A0BACEAFF9516F3A
C30EFFF3ACC08AD374A730287B148FE8E168089D239E1084E0F7D83CB9815031
5428874FA4640E1C216514AA16C74BD2B9A95EFD7B6B0C575A5D5B3AD1086CE7
E8EEE33490CDCF2E3FBAEDC984FE53D033987580E75E74E455E44496E186349A
DE4B5125F69BF79936565986B3D91E6A25CE6E1C4527FE22580A39805A91BF6B
90EFC8AD31FBA71FCC90EA04875B5A7ED05BA2FFD1C04774E1ECE84B4105ABBA
798C339FB61ABF75C6FD3F24BC775A7FDBDD87BACCB9A86B4D928917CA62C0B8
56343CAE0051A1172E7F234001A5FAA947CAF382FBF23E57F1144425713423E4
4FC1AE1D096D10D6FECAA6A9186B0D519F51D06CC976A65A37E9219492E6218A
FE9F99700C0D0D18BC48632268DA0F0CC24BE660E30645E7F63B0AD49CCA26EA
CEDE4DED685DBD38F5C4BB6AD6CDFEBED1B14A456C27C448C91CBF6337FB3632
7B9A565874F9849FC5E22C5A0437AF29E2B7FA405CF6B7AFEF66AE7449E89746
66ED2D4C15A36C45C0F64E6F185B808FC788984C230B4BA63204B38C309F2DE2
2937A92C184077F5252C9D6171EC6378273C32B61CF65E4DC124B321A4049294
BB6CDD064D4E07605DA5FFB7B3B0A55A09D26C8624F03D8C197885BFF0A20B77
257637447F628A4A642F6F92019F9ECA5B2DBCEDA63C05E5258C9DF131EDD1B2
B4B04E7A5441035163BC2769B79C89ECFDF071E3517C59A45C9E97800724E1F5
FDF504E2798FA9074A37B210B1C24DCC0B78263E2297ECA31D5C258BDD92D2DD
8C53DD3B3BC3835E5AF52311EF0AACD6DCD159C45743B1AE7EE5A0111DCC9193
441FB81F945D219DFF26BF50D80606DD3392CE941242CBAEA45077FBE6AD78E3
0DF4FA54CC33CAC27A337FF307F14E60D1FA48FB8368E307441D6811676CFD38
094A558CBF0B92503014BB169E345C27C74543CDA9E8134F85AA0DCE45EAF612
1AB1D86FFB5E13CBDE8E0F68B19E30D0D9F5F0A3EF2A84AEE4D7F1F63A045297
3F5C3080F313B32066E0C209C2708636C33A6531F1A483F3AFDFEA62305EF41E
C55594660133146B24184070B87C22EE5B80D66C409076D733245FD100E936D4
E844D8A15CF45C0CD6AB04F3B5FCB0BC7B1517BAF21CED4D6CCC3F19D21BABC5
FFA9768D77A41BC3F5C4595D868F2FCA88D6E41558FA5A70FB562E4EB22651A3
886F0ED1B46BFFF297A28ED67BAA28A1302BC866AA7A73418BADE0870872CE0A
305A5E46BE0CF6B5794539B8509F1E2DB4E40124D72201589BC4B55ABA2F5C40
E167175C7F7378203C949B8967E8CCC40F44A2D1D555A4273733874265542C0A
3C47FF7144C4DB276320150FD5CF453A505BD3BC1E98738A1CBE175574037D47
8EF9F80622F57DF4DAB8FB13004ED1DBBFB4664F8D7ADCCBD529B22235740EB1
216799B2D8CEC7CC4D16D8273B6AEEA427D480AA6E3C463F46763864856713DB
05307CE674714CAC8351410627B8D1087155F3788E744158F3428A767CDC9769
CFBE28A30D635D7C4FC44E43E7F13128A867389FD66CFAE939AE2745055BE71A
AA7A7817E24D38773771C77328F4A755C872AA977C062A3BF7EBCD6DEBC7746E
70346293A661684D3988A5D0B29860E6789FA8911E0C0749ADCB9A6B053B0E31
3D490B9A2982CFC167001648FDF96D040BEFDB75A4EB90E2974927BF38F10E78
17FFB9DF2A65CF56C1F63544662CEA0E88A5141F990DF6B5DA79CEB5B4744083
C4697EB37422BF120332AB934D292CE8A3624E2C8FE6862C2211254558459BAB
D8F1D8C76C604098701163703FAED0BB298396C86A0427106C007A7CDBB0AC8E
35F39B240F8D9D43C1BCECAB622C02E721A323383973B61DB81115E3552E4260
9F252F18E01C1EA2B0A1DED4BA50A5822D10AC7ABD664C460A4022BA910804E2
2094A3AE0F2AE375FB22CBD35CE9C2542C240A79BC6A79F1135E58985837E1CC
1E5D6666BC5D61FE6EF590316F9D1E80C42B9A7B6106D8B7F575447AACBB2660
2C96D7F024FFE3292611E82CFE62D95646B92CEF6F03EEFCB3F6950A22B0997E
52C38B55B77C2EE7A4D047F27ADEC6BF0BC639589FD0D1E0A47C948AB5BADA43
9846CBB5B1CE53E96622B59133303AA0F559A481E50382A2A38C98C1A56D9AD1
1668FDDBB1FE8068DCE68E5DA13C2D9918D1FEC7F69A6DDD3A29E31A57B7BDDA
EAC616202162DCC7B9DC52AF821A9C1D2D7F860A2F294904A55499432C7098CA
BF79B1B0A1527B99A4C57673AF54297BA822AF200FFBDEC475158AD6ECB55F87
555012ACFBDD0EA527CB5793CA7CACE2FD956F30D7A8AC7F6A98979BE4BD744F
BB84A87668E3DE62A814B92D3139981200D5ADA86C5D733CF5107DF6CB5C999F
F6F63ABEBC9694F0F67EC632BA8C58E715D92FD6BDD056F29753BCC3E54B0A7E
63EC33F7A29740EF0D8351B5897B126FB6C33E9A33CC83DAB91691690B8B9598
FD3F397FAD45555CF5FB9CD80879A0CAC1CD8E8D536F05134B21FA4065452DE4
BC8F63C82A3C34A01D00F4BB254F2AD7F6171EFFF6D7BE1213C9456AB383C568
BEC17694C545B98E8AD734D0522FEC92EB3182DDDAC54740AD352E7645D08B4D
CB4DA9B381D36C920C77869619855B4CF730E590B0405CD25884D6DB4D49F1E3
D79EC4D0489514359CABED492BD751104091A661A510F268EC681F818780F304
D960A15E583F354DD574767B860C57CC9CCA991E710576C626EA909C6677057A
C409AEE846B4D5C0535F849F33470FA395CCF5C05CBB9A1FB62CF656F7A2AA42
34730F786153A9856C337112F6A555A70EFA76404E2B88DA2DB91E8A2BC5A05C
CC339DCA364A87738B60497CB790EF16875CBC506695DC7D70C6ACCDB2A00555
3877A013482D55281C83BB630CB3EFB0657E5490176CF23420B97265B22B4CFE
1DF9E0B294F064F5160540EF3A452641C82E347A96514E4063A7FF16832736A8
6F21F6881E269CA09FB66DF37CAE7FF46D6B9AE42B6396EBF9A7A06453A81EBD
808B047421B0F88F62B3FF217542FBDA872D03A476FBC7C0D658C03AF70ABB40
03F1A3027E0FE186A22AD461835877ECF843C0E8B8340306092FBC5E91783A48
E010EBD29F114BC273BDC53D2C94275F8956A74561813AA6C2D896CB3F6E13E3
30F6C230C00917A40EC6F4689B65BEE32F5722BB1D1147585AB3B3D2D5EB8273
CBE30D1C6CA1BCC4BEA9B87A014E7ED3CE53D13ACC8D426267CD3BFB8497E1DC
C51CEB14F9CFB4D4BC9D6EA5A49DC3871DE59C89F855F079299F45D363F78634
493829329E3F370D117DEAA18E7A6989C515667C2229779B9A5494DF0B4109E7
71D79D379FA7B408A4675FA3DE17ED0ED632F9A443527CDA8E960411AD4070EE
173ABBFAF9101BE92BE59707F98419503A85AC58B949E8595D66D7B13B8FD4EF
11B28FCB5955C5F147BD7FA141AE0CA2ABCB1CAF82FE22D3281852205087CF45
549F4D5B47F52AF50E8F6FA0AEC0F95FD0B1EBDCF965BC8A924CE0F4598AC546
C15CEE4EDE7E6DD0E5FEC3A531B944CEA406DBEE21C4CF3384A79D0D5CD51BD8
AA5B8B1FC987AEB57E86D3C6FDFADF998A6D6043449FA5B88BB2DCBF2945A513
AD7ECD01B39BE46A577437E1774C3FEA176287C51ACCA15909E987B5AC2CA664
709AA5605EA89A8DCE6B4014CFA781E822E8B05F377BD0187D5EAA0585A98E2D
6726C471578295D824D1FBFE89F04A67F1A360D799CDF92C1218F29C24DE22CB
C6B625D044404C22C89C433715BD77D0BF171030BA84E292B7A81E2FD99D4E67
BA702C2EFA11D4461D833E74E97C9E295C6D170DB6BD73D615D03E678B0296C0
F8BF99321767684127625942B4C3241BD0608460C81D97FA658BC179917B5065
74A4D1F729CEB1D51C82F9C90F0C712917AC482D413ED7CAAFD545508652DACC
1A03842E354F734C5FCEC8C7BEA4C69B066DBC83BFAA473D0A632DA2CEDF20B7
6C7C83B4AE2AF7E05AA2C081BB6870AE38848F3870DD62C7D56EF1CCDD4BA3B0
32C61ABE629BBC464BBAB06AA0202772C16D82427ABAB4830ACEA267B0109A81
BA5D832731D1E9C9F0552BEF7A9B7AAA73760C6A09B910009BA9D93F1A56298B
A43A32D43CAA3988643DE373FF47C176CE92D7931601F0034E6CC303876498AC
026BB32D2F656A3541815697CBA2B6D527B69816161B2E13171E073D7CD85435
3D32708391F63D592B71D98805CD19978C2BAF780CB124372EEA0A3DAB537683
DC74F9E9EF98843F170FB086AEFD526CB81A7CC88046C52E1E56EB40F6F5C75A
FE9D5ADE49E82078858072F68BCD02487EBAF4E3F7F309628C1FDCD4B01F7D00
E1AE0A7CD3455953FFC77EEDCC5B5ECB1FA583064EC17132A3C12C0153C4B87D
AA57FF73AD33C22C81C545F0593DC7EF438FF7A5F76A04E52848E00CF2C8CB06
F295B1CD3BDB1D9E4EDD765D3753EA8DB76DAACAD75CEAC866FC4CA41501200F
F12998E8DA573786AA9A7232287A6D19A12536026BA4423EF0B6D81D38BDCD9D
2BEF15BCF32824F8EE802B461F52BD926A5BEB2E6CB31AF83E98E849D4339FFF
95419941B12D2F3B76CCD34D6B78B91BDFA5DB4D4879501DF3E514A5EA8F1713
E96330C5B4F1B7BA42D42F05E229FC303AE00E954A81F9BD43016F5930A0C490
6C753157E4355F6ED3C5D1963779EB27402522B5E9D459206B3A06E594DF198B
785F96B96E13045594EB42EF4A8BFE0DFCB4C5A2DA9594431FBE72A5AE18991A
36FEB5FD9E8B238B3A095939B6ECAF5644BCE7DFFD8EA3E723F66B305F142B71
B26F34E0538E4B58C4B5984883C6B08F3D1F596B56578FFB0EDFFE3F95E3B6AB
63CEFA183A5A49F07F0F7559994F56D7305139D06AC8DF9466E715D90AECB1E2
C35E3CD3F387579B3C9CA6F5BD741A7A5D7B63FC0130AF374124DC8C6AFA4FAC
E40BD5923FE889E87126FB22C1AC4FFBD351F884D70803BBE1BD0D40D3CDA0DA
F6984C373D3174358BC41C8DD4A215283ECCBC24F345FE65E316F24940198A6C
3B5483129706AEB60D6C0CCE0DF9C130593475C72A92662A323EA5B689E5AD0F
C949536875C37AA2517281A36A1C1D5650AC96E0CC00C03266E279B54232A1E6
E6697196A4270E1DC794D8DBDF0690372AE19121B85FFD357E965228C66BBE6B
D2E55533F7A1BF30B2EABBAC98CE35C619556CF9F0A522E8EFE4BE3EC61FDFE4
E364608963C928AA8B302B1636DE15C83711C8FA060C5BBB1BCB8E02215A4F4D
560DBC4A235F6F07EFD20ABAFEDE0795AA3932556D6AE3F6EB8FD0C1C509FAA2
55CCC2703661C9F48233B429F020E01C1F3B8090D331C3B925DD5D1CF9D19F95
6B192C593225B5186109D3E6636E87BA6F24EFEACD1F06A29DB1D1F4DE0D0253
87641AA4A1113755D0DDA6EE4234CD9AF550DF63A46FC6F698E623BBF6F05278
858904B415033C1A33B7770D99247815E2A8F1216EB42EF9742EEB4E1D90EC3E
F2C0661DFDD996CE1FD66F946B9D4FFADF86861CF8EDCD570CB400D181697747
83F38B92B1803874C24AF99C66E5F966B0E72B725FFBC6172341596D8AE51C3C
4676A65E4D32F499FB1ED170554DA7AFD79DE5953988516A8B2B123FA207BC49
D80645DFB16A79549BD5E41606D80424DBFD6F5BA1DF0EC271C596EBB4FD0B84
DC5EEC45C3FF598241368442A3FB06B460C7D46678069011FFAA3072402D4DD2
3DA6139A548FA99A68AC61134087071ED8B4A37A0A8A1A3B48A2A8CCAA351D75
1828BA7DD5B7758A43F98F4D449ECB58B20B26C40B35AC82623961CD892B5DE3
777908625E1A91DDE62DEBB2EE5EA3CAD7E089F421DF613D976660D547CCB02B
3C6B01F009299124A78E46BDFFC3F2497C435678B4DFF0E94094B0DD3B930E62
909CED0E31BE64C98755D7887455928F3FD7439E6585D0D52DD944C862457E6A
4408DF452780C5726F169B1A39142DA956D27AB53C0741BEEC8FD4E438EF4781
F3ED5AA6793B1018A5E069DC6801A04FF18F01E98BCB65DEC7EFCD5FA1C9ABB7
F755BDB82E4ED475C601B80CF3B9EDCD76D865FB0FC7EA564EF02982F2C39F94
0B32D3BB74B44A6131AE0269B8D83EA7DCB011FDB0360BCC2BBF2D9252E1B54B
B5E92587253180DC2EDBDC37651A003E5DA7DA387F5A27E2AD94B2B3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.0: CMMI6 003.002
%%Title: CMMI6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI6 known{/CMMI6 findfont dup/UniqueID known{dup
/UniqueID get 5087381 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI6 def
/FontBBox {11 -250 1241 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI6.) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 71 /G put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFB83E8A2A6085DA11
61B1632328B94B21D3CBF2E7752D441A2C9A03F6681FDAB37C4B67D5857720F7
0C4BCEE266586738012A2237A85FCD0425DA7E8E8632543F5BD5D50F9DBAAE69
9E053AECA6027559DE42F7291EB381D866F1293107553809861D43508C6F2341
5E4FCC431AF4A9B3660386AE63E877DCF5E513D0D5702B98D58B34897FEE163A
75CD6F5A2196F91CE5060CA5E72F9C5F79D18F242EEE58135BFAB02D5CA430B6
D1B9A376849751A45E52577B1810C4F0C7F6C8196071D5B08FDB731C5384CCBF
03B460347E0CAC959E4A12620B6C2ED62E06A241D1637F418B5599A7FF3C1390
7AF66A00F7C31B4EDF249C56C268EC9D546CD0489DA51B734C8292CE7B3D9E30
71448C85ACC64FA99B2DEA91AA4CBCBBB9DE20833700AF96395DEEDA3FEB7D6E
D6E3BE4A62CBFA18BD0471C14F3A2FD025C88E8166A9830C5B5B94624A3D6482
D1A1D83805D0EDAC1C79EA858A523D9FA3356DF42BC01886E77F6AA6B04E4E3F
AD107D861FC626F0A439BC3F125D48649E5101BF79C71507FDACACBBB4C4335B
C41A5C15ADF1DF69E1D68C3EB9BE30BDD5385F81D26EC8F2F206C1C7032B9EB7
0392BBCA23B4693686AF8D2E1ACB2FBEE81D75667CD1DDB906BC5B675660ABA4
E63429F16623F20B6A040E4942107CCA26CF6C1F52DEED9EC7EB15BE4F18F2E3
9ABDEEAAEA9AC41E9F20C37C54B33F609F5835AE5A1EC9D674DC50FAFF6D3511
2198195590F62B3B8A6FC8C3431BB8895A2F910F0361062DE32CDA9A7F41E761
B09BD8545CAA2D7124B5688B54705AA52E4716E36C0303FEAD38E0510B3CB496
6C30B115C37E02043D47B4ED796C671E30360800EC13F0F0FF3E0DBF5A642396
EB0F39A9DAF0974678EA1D041F08BD73867065DA91B044EF2AB15FAA6546031E
189936C1FD302BCFBE55EAF369DBA4895DD0996BF7292762551A86C8A3604E9A
8AD29E38BF6FD40172051EBE7C694249F3378ED0139D37EEA3ADB66F3A80A1D9
9C3655F054CACE93BA4AD42DC78A03F42455ED1BD5C122F234F21ACEB8FEFF9E
3BFE0DB2DA6D368478299ED63912A234ADB1DCCF1E519AD20772B71F8522B5DB
24E9658BDC1333D76F07F63D81F7A51D12C445ABF698092A24E5E5C36A52206C
0C41F7DCA529BB0A4D146DB6B4B341459FC17FFA357CA5F93DBCF30B61374613
4846D619423BCAC59B7EB40C14C70ABD985754A0094C98350D01FE9FA371B0F4
38884690DC7700C49236EF68BD6E806E8937AD8B77648F552C0C907007465A76
1475BDD3FBE1CF69C706E703226471C249A3448F81C240ADBE4B5474216D0235
6B0816BB6935A2704E851E20C002F85B653BB0700915B358DDC168ED3FAE3D91
8280A5CA5C2708D622B03DC47A70E5FFCAD5A7C8D9AD563857BBEF92A3BDB588
8B5B55CC9B960F20CA4AEB598DA8488004DEDBC9671488011E836D9D8B6251BF
256D08E6F1808E9D498449DF1F18E48B310D561D4DD3146C2BA64D960E66447F
6DA8B07194E3BFAF662C00737BB7222B55A5CC206A1C46F252ACF93D2063BABE
2BAB874C01AEC438D3F86AE37C9D7FCE4077F5B5785E12C1E0B685134CE2E8A2
2E4DCDDAED2D53D13014E428FAAE22447763D4693E82600F850CA4A49E1ADC5D
C8DFC16E97B9F6164095CF7F31373B591F815621F45DFF77BFBF89EF60C9F50F
0C2FBBA4EA9602E197B9447FAB6AB57B19B1C801DAB66BF7D263F6572B9EEF88
E06744C1FE197B8EAA71E1EB67716B7CAB30C859A2D1B2DB95ECED02B83FBA32
E62F97EE4403FADEC936CC8DAA161F7B509B2723BA2B735572A80D7D087E6395
6A9D34D5963E3C6E37F307C66D1CE551D2F055BFCC7360FBE93ACAFDE2B1A849
37FD373F62BB23C1A2E3DF61C9452A8C995B03D44D6210A968C6293B4A3BE662
C7B0B59E6EF6D53FD293B2C290436B0C448E7D15A63533DE321643E53C85EF8B
060C434E46A736EA617EA00D185323460E77B95C49070B035194A2E7693C3B15
104ED7F56FCADABE49F27F9A576B354C574B5BAFFFC57FE9AF02FBD87B8874A1
24C53826659BEB1EC50446AC26EF3A95877ED3D81D33A8BC1BF7473FB9C11ABA
0F27B38EEBDF77D3D3EA63AE6022DB0D4F1125DF274B86EF0A4A263E108D6044
7A885F5E87362293A53F457CBA6C911D23653DA7CE4BB7D4FF4481AB97C0DD81
C13515F0E3BF8A7E8DE2CE69B25BA9C185D9BF31A65DD290B0D4FDF40B61E2D9
AF92BC6468B3F5AB5D5B88710C489ACC69198D697055B39AB3DE8B3733825C5E
6E763E2698574381A01352A7042A36EA96D17DD2EEEAFF04ABF7BF7D877B0FC7
B6BA51BA994D431F472B6EC4B4C327399576470A1773BCBAC61CDBF0F95DA6A5
0BE5239B7E9CD39E1E4D27EF6695D1FB56D4CA2C2370509547D6D01273CBE6E0
66A696C35D2D0282CB8C85D7B1C51453A0AD0BC80E1D183D11AA78879643D9D9
A3D0B2BD8EE3EDF29483CC5871426232A20CB058EEBDAAED85378B163425C270
B0F7BB46B7D1B89CF84E6A06791195FB17F11F34A2548FE424DE10E376B39A2F
DD9B0BA2F2FDF3ED4AACBD0D60E67C0749D6DCBDE6E79041398DF3FC8D9B6CFC
693B870683CC425C52705902DFD324E157C9829F25B14A057AA92AFA17F156FB
0BA949698EAA0657B03D9538288D887959EF24A427EE7EDE47F304A1A6A715FA
2966273831B5B3A9C11021C153E67A73FA606FE3233C3DB217404C6AED6A4C59
DD4C2A98B31AF5604D8DE8354448B4CEC66022E756B0056CD32E9B002ADC712C
0545C2C16D9457E271D98A4ED7DDE01BBD1856F5C3DA28794D2C7951FE2FE6D9
18643CEEC41CA4A3464D3D3A102653CD6EAADA59CDD44918523B8811C2ECCABA
AC0D188F5E07B37AFD56006B10B32EDD179F4DA693EEBF4DF5425D996585F21C
8780A4D23D24FB0618C12DE65CAD42A0138E28A100257978EDCAD168C55C6F07
78A067F0299890356C2A184820A554FB07448395ECE36C45211757552E288ED3
7DFE46CB92EB2070442AFC85864A45000C4854D728096AD3D4C552EFC26DB6B9
C340358451B50AF9F1B35C2E32D495DE85B5848D78940270DEFC07A14D960730
878B5B55916FB40FD805116C9C2AC8C6D4645DA67A978F1C6FE705EC188DBF7B
FE7AD6769F2EEC4A9B05306D5BCD6EC3A240D6A29ED07D1D82E697DC8CC391AA
015DB6BCD1DA5C9A5A7BE3C5936681215E859E9837027D108A54F42AB24E38C2
4A7D8CF3264AE049D4B1AF48BBC564BCC88AF19D37DD81CCC431D0C554DF29A6
94ABDF8126EE4FE1DFB78559B9BF36FAFEC9791049C865694F9E2FFB7A308FEB
EF0195FAA6BFE7A081B65C5125623903828372F117EE17E588B2FA26DC9AE37D
9A6F0043C019624D3D87AFDB4B90C46AEA78919CEF5D7ACEE316F30EA0229742
55E02E0E2533CAD78CE9BD6E0260A695D776ABA229D89CF9BEA92CE0397821A8
830A557021B3B90CE0B07A4B34C24337FA3FA4A3728B6E013BA01071CA7FA667
6FFB4BA3A28B5D5614ACD4E80E00938C2589CC6CF885A260AF7589240BF8987B
20A19FDAC73FAEEDD93EBCB3D46F735214164AFAF1A7828FE96E2BF7CE1EA46E
FC1FC4527A0ADF2B81CA51E3D96F3E786511AF00FDDD9764CD3178362CF9DEE5
F05D100EC21A301F40FEFC3EF05AFEC140A9466AE68FCFD6CAC1A143BAF2B7BF
D0DF808F0CF87FE2399CD9D2DD424227CA7D4073ED002CD555FBE8057A797B60
313D18ECDD779FA7289D4E7BF82D95A7535CE3F0F4164AF239AC666653736654
C13E436B526EC5A1DC97E1D85C4EB563C7061AE1E81F0B38BC45B17C15FDB0DA
E5F6332721A925D4DD5A97BFF3E3F11D4F4F43BAE4E73A294D314527397F03CE
AFD12DDF9D07DAD8D6C8EFAFC2F52E20FBF62026810C0C31A1EF71FBD612654D
C68B7A24112F0ABDD20EFF3DADBE447AF9CE568F873ACE72B63283CB26B89BED
4B3315F26084453B1EB0877065A76E7B704B27F93DBEB365574A78E92FDB4B82
D6ED91A1728F571FC9CAB636A6E81D0C1C4F5E3F6F4574B6EED48BB61EFDDC80
1831E2AB9327B37881F0CA5D5265575F210BF4BCD8653B4193F74E3FF65028F9
2968B8127C68CA2919DDF529EC882EE99901146CA629A07B4DC59E7868DBE083
6E546C5769655EF6628FE2EA78AC891D130108192053D5056A7BD06C09592AF9
6310B3586A2609DB94CB0079550358F5547B9FBB2B77917A327EFE3F972C7263
54076627B4DD74638C3105FB25DA246484799D5326EE80503F18672B893289CB
1FFF8D3F662FB33E93025D86803551A8A1DE363D1534BFA3EF968871B19FB189
DAD841C177E2AC98B6B69A78048221C5EBBBB86511939D3A9963B3BF021185AB
0B26CA7D0A779DC2F7693C7E48286BD60EE46615E31B93FB0E6992AE20C792A4
72AD6FFAD6682D0F606807D7AE63A6280B5967FAB889DCDF0F76347CE302FAED
A59E1B1AB785D9D0ED695A0D05DD3DF0EF0B275AFCF9EC7031E1357E99A3DB85
B4D137567875F7580E2BEC96B08C97ECB40876000B610E0BFE81E7884C9BBAE6
6BE9C2C612475396BC10EC7FFBD1118A7971FE1971DFD0CB677ECA65DD837B5E
C7D36FE9F20A15A941F1E77C11093C902DF5B7639580B9C0E4AAD13518E1901C
1162FA095F301848770C6C618E371A0AC3463D0D94221EFCC0884B21300194B5
97E03BCD5C4878CEBF352EDD1D2173B56C9B6A08BF3F33419DF226E1633CC5CA
A88A57AA85E21657569916E9B4B79E51B5535A57B2D6FA3EED1D0AA32DC0165B
12F8F5A681040B456D8DF175AD6053A2954F327F4EB4CD453A056FB1701242C2
59755058640C62632C764E002CE928E6B908BB137C28630A3CDBC7C34CF2B643
FFAFF20E345A86F31756C78A8EE2B9B1C5DAB2C863B29A44190770FD90BC6AED
0C25942BBD6A370C21650947B49AC8EB6825BE65DEFAFDDA32007754DFE0273F
B995B8986E505F95E58A3F8873545DDA6F3FFAADE992F3FF7B2DAB76D663280E
CF2BA18BC8871A7C361AA3600B192948CB918FEB0F2900AF2BCF169576828325
449CBF0C7AEDC299FCBB061F491469B9ED1D56771A03F9F202550E17FDB15B51
4772B2F06E6AABA4027D13E8730999532DB2475630D2F8EB98242E36F5B45A94
2D8083014B63A806BB9A01906143482C614B5CFBE8C5354A3F2438B2160F6DC0
81AFCEB201EC67F66DC5808C907A3C6CB664F444D24095D9A11D4978A7B57037
87C67552FD59F5713D0FE03462F9A1A323BB3EFF0AAD61B1792CB109CA9AE4D4
D7F7FBD3FB91258DCFFB4634669FA13E03C0AF699165311CBF37D24378022787
87D1320ECF878F859149B2F994E700A32CB7253297AC58753E4583A08A1F83D5
CBFF10F2D26D71CDB20E1C69A666E9C4D23BB0E6BF1097FBBB204EB736E61FF0
C3FDE1986938F8099694B9F998B3C735770FF21F73B1A6B750498BFD21184F11
5E6AF0F1FBB08EAD436C4AADE1E6B815F5E58988C113B4B2335A340798BFB201
40586D0BCD6AF5A08CE9AA042910197F47D98CBB4411A6D435A46F46B3964F85
032D7F8D880732276A8FD24DA772F642F06C9F3EB4C9090AE4A3AAE67D8768A1
7B2A57E15B7FC626450372F40E3EE28D8D997CCC8CC89C644461D1110740407E
F6D884A0503E05AF830994AD0CEEA924D935749F6EE9F2DD65A58ECD59229918
A303C90E19E9C411FAF24AD5E9B786178F8182692CDD508A4755123B4A594AF1
A8E7287456C1CE2CA485CF4CF9DEE5238AA7328DA204816F98B7EF49EDB30875
3CF8C48E0465BFFA8F2A1CFB6A8F165B63CC80F54C669D02BFD9A0EA0FDE2B40
D69F0101AE4D2C10185AB10953019FE7D373BF40C2F6D4E36693F118866D1267
12BA7987ED4313E8635DA02A4FC1F7815105F8EDFE8004A8801CC1AFA8D123FD
1768A6C39E838BD489C6BEFFD3BDF650DF48D5F8D99DD5A2E8AD235F2CAE8BC9
C13AE9B214CF3FBFAC7BDFA54CB6E675273330608BD35600775FFB2A96FF648E
DF55A78B43CF54CABC0DA8D574CC5C5C62E9D658EC62035EA5028767749E48D5
658212BD39C7E76ED0C6F3E0A1D138A0DB8BE574987AF1E43070F1F12C560009
F48993FAC935EB56A5793BA13C28293601D268B4880F9BC33D553FF3B6A7900D
37900BD3B4B558C84BBAB09B4BC2B14D32E49596DA090E586E28D560903B9744
7D014EF2A6AC4F711A025DBBC841F1C1C93BA1F8327DFE33C803A0993050D590
C7AE262261DB7D04B9DD91F89927161A69E14BB2A48D29578410E312A4793101
B6CD65B298988AB798F45B76E1F58BE24DB207C7E07014E17525B436D41FDB28
D1072CBEB526E17C72DDA00ECDD06394940DEE8BD02CD3C81BFD12BE0568A459
0F53010A0655942C932905FEE87183CE357887E2ED286DC1E89F2F401CDDDFA9
B418F218D4115043892882C09F2E3749D4671E75AB1AD01C78F59FE3F54276D2
A91512C21C68180CCC0E147E834002D7799FF393842CE88BEA714672E1952C9F
7CEF2FD0115B0E292079909A7775769341A7888CE6063537ACFF225B4F396972
41BF46C599D278906F3BCFF81DF941BF5888DE8A53CB0A2D71610CDCDCC1760A
7844F89FCBB892AEA853CF5D967648995559EFE852C95D2EFDA2CF063500F88D
2C83B615618831267BD8F5438DC53C6433CE7347E9C55E103B450EBED6229219
20E979C00B0B9D86345FC3A8EA2B049B7E148A7AA1C859AFE93381DA74CA578F
8FAAB28175D5B57F6A74F9869B2F530009E953913C6925D0045CB2E817A17742
3C5B7574E9BF3BA7B769C161C2496EA2D346B4E19E434120FE92A0ED3F4A9ACC
A8BFE55F04D17DF035D01FC0B06182D8C27B6D32F36551B9AA56D61FB6A34254
D0DF918C6716D8D05B973C8BAD5AD52C06EF3C6503D4E0F7F791511C79AE74E4
4B707612149D583C5D96E534CB45F1E7CA5B23642B1BDBC881FD8E4F66CCEE96
7CC0509B5CFB0B3596682A81E682DAF6AE58F605FD7A1F414F62572298AD8491
B76D0A23B4AC731FB8E7682F506B5CC02F7029827FFD866EF4DBF56E07E7743A
D42CE65B38EBDEA193CE5B172E87DC88452C3DE192E363EB9DBEC4EC65F53002
BE9E94180F73B53CE1E8EE9333DC86DF5FB2561FA1F9B2511962CBEFACA739CC
38A286651CEFBF451FF6568CFFBA8AA68555181147C1CDBA18C4F5C77BA8548D
2B1BA37E05EAF7F69879C3ECBD02783028CB1A8649842EB71023F89CEB36CEEF
A9B04E9ECB0577536B88ECE7C1D81B0D6D5A478F8E92DF83D194759437088D7B
E93C6AFD0CC6D568E60E2F1265A6613F97A6C4068C8EEBA70F6CC4E88A80F65D
EA7B498395390A74BA57221B86611D3EE5DC4632F139CA8A15E5B9D2DC97088D
7CC65197CD93F4803BE4246394F40EDC2CB4904BC273C597F13C8DC680245A3F
F1AF2D7BCE5D69E9CFC81E5E9F46927C5F55C719AFDB2CB1AF2E4D55B0E3ACA8
6BBBCF253CCFF8F02B8542F296CED0EB8A06A88549DC959E22C3D6C48F310452
22B32C44B046A61A4F7F8AED613DCD3C464DB2280D56E517CFD16DC32C83EACC
D3E936D2F3A883B265444D818393E30EE3AA59E6FA73DDC421F5A0FC8442F89D
CCE98189ECADC080F1973E14012C2B87F6A8289D7E1B8958E2220FA1C68EF82D
01A2B3516F320EE84950A6A54963ECD6F606EB5693F6A0BC74CE2B5AEF26AFE6
7BF5D5357C3D53CFF50F60599F2165B6E742A331B47F46D977FC721867EC9CE3
7E9BFA2149C9E3A47AF0D0EDBF29C1E6D92BFBBEB52F816EFDBA9CFF83AC072C
5FD264F8F24CD5A1C0F68399FF4B29FD77C4A54D8296523415B9ED81A3F3A9DD
048E771EDAA218A7EFD83AFB8DDAEBDA78535537DF0CDB33E479A03ED5D754F7
1BA7ACD61BD86BE4E1B947FA8D8E2EC2BE15D880D9254218DCA82E6B9FE93087
E6CA931AC15936DEFB6188CB0E6D99CE0DAD3B175F46A58CEDFBAF0AEE6CD029
395C5E2E29B3FC36F65A8E3CAB5EC8C035C91C3A46AA1EB497A04E1FAE0D893C
8C0AD68B2B0EF5CAE8F775B8B73457C0E6BA1CAEC1FBDB043E0B71D649D93D3C
45FD931589784E0B10355A5B73E7FA6E4FF98F03C1ACDD100012B5CE8EA6D7FD
7F6BEC86BEA39B7D9E08530892E7625DADB1925ACA5A88C17E1E28A7BDFAD135
60AB38D6A03BB81CF0207CAE082465CF485FF746670DD339347BB91DC5DFB626
94E175BF2EF54E56538669676FFB8D57A5DB5831FD66982DC773C343AE235C96
81A38F90405B5F05D1F6DA38D30FB17BBBB29848C13B6E5E7E9DE4D0F704640F
6116E08F1652980DD1AACF2C1DA6BEA4C625512A006830F5E2182E73801D164A
33886F6360BCED7B04DA2BA1D51D68B15F2B74914B2CD6B67CF04CF960FFB1DF
FD35D7CA465259BBA7A044C8C3ED46CA6840BFEED560927C567F571ACB2B684B
7489FD3D453A51230FF5EDBA8A3F0401DE11F127F9B924A81FC20CFD3F4D4024
EB9D6753F9FBEC914C6B2A38CF6C79EA2E536D221F6C324982CE6F9CE365C6FD
D01D7A7A60684299868190E3BA62755136429601685D5D7BD5E0243806BA3AB5
94CCB612F0557FF1E07DBC153703270B31B6568E57A87A8F094C9E9D24BAFC35
0D923102BA1482E187DA289390D2C8958B6C6D40E02391A53BFDF6BCAE8F1B4A
36618A5142708BB17CAD4289738DEA7E682ABA4D2CFCD21136BB28A484FF868C
A0C2B20168403E3727F58372E617AB0BBCD72BFF0E4A2768EC187F025862F688
DD7D397EF9F6D25D728A9064561946EB31787CC418CE64533D3C25D81A805D16
0CF9CD78F27B5402F4CB05B01D813049084FD1C3E0D11AD11B87224142D7AB6D
4C602958A935AD6DFBBD3AD98D745FA467D5C0F4AB94009F557C20E858D18FF7
42BF0A67002DAAA74F0D5B014BC4730B35FCFD1E9E6A1A2981BBC3801B98E1BC
25EDAF35E3B278EF689C67AD8F5001F0B0DC61AA2994
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.0: CMMI9 003.002
%%Title: CMMI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI9 known{/CMMI9 findfont dup/UniqueID known{dup
/UniqueID get 5087384 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI9 def
/FontBBox {-29 -250 1075 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI9.) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 70 /F put
dup 71 /G put
dup 83 /S put
dup 102 /f put
dup 103 /g put
dup 108 /l put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBD07FC5A8862A8DB
7E2B90C16137614CDAFB584A32E50C0935109679E31306B8BDD29F1756946A67
7A7C2D9BA6FAB9B20A424AA0E6F4BA64C2801C2FB5A1156CBEED0ACB95F697B8
BC2A6E6AA7EB1F9FD8E3C9B1A16697EE1F0E7400421A7765AB218FC837A49365
82DC6B2C877A7DA84A81E6126EE96DB25C17A207D3020A045DCDAA064360DFFC
E3CD50E21ED239D2A6450D04F879A26443ADEB6A20ACC504989876476C7D1A74
91564FEA1F4CC2C8C8FDF666DB537F315AE1886C73CB5B00E67E7B398A6C018E
540EAEE98BB8136C4F044EDD63C33431D2CF9740F051DF365A4045D9D8782112
7BB5D494D9235BA98CF2F30CB119F5A904C32AD04C960C43FC1F5FD8DA7D90D8
93AFB59F3FF4F796481AE2A7548F948FECFC6C127C4D3F159B08F206AE8C296D
EE470DB2F879EA79475E029D22D7A8535C09A18689DB0609CC233E5199C02756
972CC9C94D9FCE264DEE5D75C8D651E4E2D1189AD9588CB815722BB5EE3C379A
6F31C2E6AE1AE4CCEB29766190AFA20EA937114978752189F1A9F42B39483149
796FCFA123BA9CCD1D9BE28289660BCAE16C40B5B504058D55CFCBFB4F4E3D94
DDBF39F157E63946534DA81C018B1C01B9F10DDB55E0A5C2B3985ED1977C039B
D6755EA42CD09E27751E159C30B93F376DBE61CD3AED34BA36A768F232EB3B80
E3E6B77C4A48D408217818E398B83D995AB6BC871F20991DF57313D6EB0C793D
0F28088EBDB7F38DAF7E01AAB3476EC24D7BB38A9889A7D3038D930FF4289B83
F54A7BE1E2D98A3822098D2E4D067A0D400C20C0B2B4BBD74C13ED1B827490F9
ECF48F8C3994C1C5AAC9CF783BFA4F307528F51EAB55F961808A42ED53F00C97
72A432EAEDCFCFB622389BDA707B6ACC9433B065CF29EBFE93AD14B8ECD5F47F
F073F11822C49B8BE924CDFA6348C3A75E9BB9BF3F31C41716B34794B28CDAC9
4DB8B087E180A9B3B17680F73D9C12C8D86A922C948093629F5D7F542ED882A1
692F4F6696865E53E3E2DD43B2D5E8C989CFAA5CA5C4C5999045E170BDE9921C
BACD6F2863F5553EAB2BA2D4A9034729EC0C4201DE90DA89B0A27C5A5C974109
4E37BFB3F46B3A506169FB0C68E1CAFC844419A8D261A1FD86A3BB78E33D5FB1
CFC687A5975987CE45155E5FDFAF0CC5FD5568CB1C26212F92E88255F0549F59
41B33125946DE43436BEC00804063FBF03EC796E3361B1C852EC3038D107F80A
9198968265D5488B26D7670B22C2D75EDFFD1B7B4AAFA36DFD94640C9D0E2D20
5BCA18683EFB91834A3939AB8EB60E2F09655BE003582634C52770DA9668C292
2E02929D812EE2B0CC65F020064AD5BDAC5F5693B30508F40ED8E20E87149BD5
8DD41AFF83FD1944804017DC5A04512E593549FFFAE501131CE2FDB65EFD0B8B
33809CBAEE411B3941C241550B9C30DD28088708F1C0CC3125CBEDCD985EAD28
03313741F67DB5744A87B381147D5BA70AE1145C27F794854628D87D6C1ECCA1
749E3465B950175D3C3F40E344297BD92D3190041A4392033A79BEAEAABB8DBE
CC14E39612F43721CFAE6F79074429221CA588AA2501DE520A464DE157A03AFE
3C082FAE7628FC0C57FFC61D0330AE6332D20FDBB09BF36848FE05E782D6379F
64F9C82C45402481B0A35989027F9756BF5A79DA2D96E10F39167ADB4305578F
90B509B6891338FA1D67DCFD61804AA6621526B2EE4769589A2646581712AC05
DA6E98D16494F07D612743058F54FEE516BD89A8EC3E03F9D7F905175D3412C8
F7329077FD6EB25213F3CAC94BA0C3363B759401B6EF7548C7D709F3241D030D
4EB46A1AE81863C412BDDAEA6084C37143A4C5E41BC646315B1CD09F934186CF
49D1D8239E363A435307030BD79536B50B723A39DD763DB539F24A10DDA12BD4
E467339D2D6DB177D6FC539FA77D2DE4118EBAC161E928749F7C753ADEF86117
58619F1155C563DF2E11ACA8347908B98113AED58FCD0394150EEC94B7F986EE
88BF7171D208D8F1774B1DD478F0C2958AE372D257E7EDF0F6B5D6059CC4D5D3
B00FCBD2E9CBE79235B9A5A3E943CC27AABB58728C95C7DBD4F4A1F8A4DA99AE
7377B0CC0BFBD454794398AE0D5F7281771FFE87B25A819F36E692286A42D776
01794A43CA9BB30FB8FFDAAF014F909A369E34C2F6C75B7D4EB9DB0580E33F46
19654443AFF8384B95600B86FF8E41FEFD032355626D60C7507C058EF832DF41
194B48A36F11082D1DCF4723E21401E0C7447AABFAB4639B26E3D2730E348F55
53EBFF39CDD03E06E2FA5FB379603C879EDB7E1A10F89695C9C47DEEE52BE0A3
F446F187AB9D7E93E6F9387F21129034F36DF40605D28FD526AF82CA9D232BE4
412567F06B38ECCD496EF40A7B243E46C9FEBA4F1BF4B1ECA029C5EC239353D6
C0B100BF7E7DB33BD1277DE104F15AA19F37340A777741AD1AD693BC76DA48CC
C6F83CD84591ECFEE375979972B0FAC4C10B625E4BFB261B9FFFA83C31DA0108
4FFB6377466E9739E0EB64424BD9FC7239C7DD834EC6788A0F97FE714AF92831
E1BA36A8A9E24739F1DC82DC26CC3CE28C210AA7C569B19E1784D663A0CA4E81
AFF43E86D6F5F63778847700072CEB77A4EB946DC1F23DBC00BCE773203F76DF
00F0B085F31420672974DDC642D885E95BA6BBE43E1CA8ABF464D9881CDECC7A
E98E31B9754C9B72A8BD5CF6D4D214DBC3BA7A0CDF6635953F5AC1E7639C4A91
C7AECE4C75CA3389C348F656FC2CC96C84C85A926237B6504DB51937C9CFCDAC
B75C31ED570D180757884E27757783DB2D5F35ECC48C496CDA342D49AA947BF8
2FDAD2F19DFE8CD1C76A8FA08F33681F3E12E229D7DAB45BE3A3F258B5ED4980
F15340CF20D965252843E026803E8AEE736EC41CCA82167401977AB719AA2F50
0B791EEAA82027B3C712D2EB9D14BF8F94FBDE2227609BCAC41EC08DE2BAC023
28352F913F7DF08D4E1C66E83F764578B22B4EB7191E852B91ADCCB1BCFDB1F4
E63DFD152E86FA9DE9BC8908130EFDE29CC4401339C05B5B9764CF8EFF14951A
C6C13AF979546996BF22F2B96D3D585B90CD27DADEC78914DA48432C6ACBDD42
20EF583FD41F2F6D6D10C3DF7DD077304B5940BB0462656E306CBD91EB9B756B
7014B1884A36201EC582FC9345C386043DD2818FC301EF78791C1D7854F8FACE
5DE9801DE9F59D5B4271E003AB897B2EF49501589D681D59CFFD9B03F722EEF4
74ABD29997515DA3591496B62666744EA76DCA45504F8075C0652D6779DBEAE4
90430C2945FBD60AD53B51DDBEFC7ED703C418B4B244C8FFA5A3C1B7600C5A55
3EBDB93C16AC191C3A28EB2279BD3F0D67C826BC6A73D3C0AD02262368AB4621
98A1605F2887BC5880E1AF2780330E0FD01D7CAACBB0F008A42C427F38236066
54799594E515B289044BAC4DADF8B3686B4372C5110201221FDA923F131E07E7
93C44BAD406838BA4D1C277EF74098B8C0EDC41EEDD58C195D7DFF5FEDBF96FC
19CEBC6C3006DD2CBF76916B4298BB915663C2F61AFD7747E03A03BD7280197A
9DA590E3D081C6F53DBF94E8D6FDDDD910A70AB18A0F6D48A590FFAB314D6CFD
E3FB20C1F3C91063F00726A2C13A3D48323F9854839405E5A29D66A43E6E2B84
A8B3765F1D817071D4D6FF42BC785C2D11AB2B9452F141696CE19C6AFB9777DB
107D6E22D8CC6C26440BC48248AD8805C4329D46BF433741CB519B21663392DA
5DC7FC9BF37E5BC396BFADD7263D09F6B4D69594AB386B7BDFCF3BACB97A0E08
22013E716E642592A20136CF9CFD61D4E515D80E06A4CB4FC9D9B916C93CEA95
B83B98C48CF36C1D02291D4F5C0419338D64E33C90C90EDD2BA3B96D70FAFE0D
403A060CFF448D3E28A9B1E3916018465E86095BAAB4706CF7ED350D7C554789
D7F4FE5F180767DE8739259E68CF142040BE1E2E8C6152DE3417C1FAEA7584B6
20781DC4A9796431EE713DAC4E713C839D7A4FDC8AB6BFEFFE767AFD8B67FDA6
943AD387E5D3BCB09039ADB64ECC2BE2620C6EC269E708DD06C311F450099E33
AF46AEC644222E7DC4DBB9371EE12CFBC4F9B27AB46AD1DA96CE006E1DF8291F
A550A93026CBFFC1087B134EC6EA76F5E109CDA58FF47338A0039A786A575F70
B8A03A4F9C8D07A4C856C77D9BCC8E3EAA740172D0C2D0A15BA35C9E5717D7FA
2691774DDE730BB9D7C70D7AE103DB8D35F3728470C76EBA0E670634E1A0BA84
2FA102BAD7271DF2680D86A4CA6FC353869987700E5E3FD778165456033D624F
E9B3E80EBF431ACC934AA0357E824B8AD73E222B510DE8445C55C07C8E5DE46D
E478F832BDDECAF2EBB11941DCF84CCD887043FAED9AA90D12BC8CA9A0C8D94F
8D3BF1F80B14B6CAE6BB1C6AA405AA64BB94D5A82CFEA548BA070796A02F9642
87326D066101435AB9EB40BA9EA9E61B363F5F5E3B924369796E8B78DE3414A4
2B79C6A13ECB2F34E6299658D07D2B3DEF3D4383CE009A927F0EF5C196652842
D96B857AB5E905201E7E8BA21A5EBED1FC6863BA9A1A6E5390407F75055E2EEC
512FBDB3E82CEA13663F1A1944DA072C765D8CED06AB461470C5723BDC1271D4
4D1D049D3EB131743F1EC9A6ADDAA038ACA2C41D139DC6A84EC3C61AC7F1E559
6155CC2F49171F6E07CF56D721D9728E87FC7DCBCAC46455A3694C765FE807E9
9CBC2D304AF37E0F28CCB22F239541B53A4D24D09C662559267467EA487BD33A
0BEFD4899B581D20582930703A868655C31BE935364CA6A95FBCB22CB714C040
9718824DFE97929D0482430726CCB5A5307957DD2432A9B6271E849148DEB76B
FAA290FF6D0B18DC5B76407852E81C105EC6CFAB0F620C6DC9DA555A33C167B1
430A8BC338BFC7D75B7099CC906AD923FA107C74D3FBB719D77A4E5A685FF9D8
56424EE4AA074434B809D894ED50F6A60A035C5223EA25DD8983B9B34210DABE
718D7B2BEB293FF1B63CFB1CBDAFC69552963D90F5E3FF533A3FDBB626E9FAA3
F3C119E5E01C7BFF832A033C3515BF049E29558B1DAD652F2888E339E67D15AE
95F9BD14E3253DFE9072B24C0E7E85025B71096AF51C86AECB2921126A43156B
EC812B32B1164BD9B2B947D503C015616DBF2024F5C8CB3236C1DCA653D661FE
6B1C19A22D272A176B7F1B7F9E67AF40DB0EFD4940E58B2A050249CA4E55CAF7
6ACFD84FB46FEF952D18552B3972D79D808B4C263B8C7E1BB647A2D03E102867
630D5C3F2C917F765A4F6FB8106BA6A9D0093E27A4CB6049C2371287D94B5111
6E7020776EBD744C6C920464BBBC0AC206033E8240017F8CCB112596ECD7CAFA
89950CF43FD87ACA750C03A778A37FBCE9C82C2F5ABB135BB02DA8E8C0D24475
3BEA9D79372D0022FF1ABD378C151417DBC69FE5C9CA38D23A3900E34BF924A2
90777ACDC37930B67DD44A2E76DDBD9B89598D5F626BFD325A978D277265DA47
38CFAF16E7FF1946E15F41CA73F7B4B02E5AE8FC4C37B115BC567E4EEEFEFC34
EC8974B1465AE57759EDDA28DD38A9210871D35D331AE1BE6097C3EC21C770C9
B25D040B2ECCC3AEB1EA1BF99E0C2C0F192C13BB9152CFCF75332E03F9CEC376
9B8C285A35F53655BE38713E09AE34BA2DA9C06FA42A6FD2D00CBF2AFD2BADB9
1571629C65DA38A431710CF5B01FCA68E8B8569922FBC3F9B64A5509B6F677AF
1B97E91FFFEB6308AB68AC58F9BA43DB5E764021E75B56170EB44C2C0A7DB86C
62B8982256D3621EBE3DB3994DBF5C5A14CF34B4AF3BD5697F8E3203085DE9D5
84B0598169760B925463E93DC87CE70AF4C2DF0F4287D2F2069847BCCF7A37A2
AD451D5ACE4DBCCB2E14D5DF38B226952E7446BF87BEC736EF3D5AE793304618
D66D3299AB9F9CA1D13F134FAEDF36750046E27706C7CBD8E0877BB6276E5196
BC2A355D109C0253644918E1CC11B717DE6FBDA201E769812752888CD66268F6
4ACF4A9449378F9F9923D584BA1B51F33663BE7A306887BC14A37E3C5A4654E6
531D6EB63DE3946BD8BA95CFB037991174F36D61D842071E6625605CAA350A24
FE551025D10871FE0E2599A63900C8520EF4911C53A03897C8BEE152451708E2
43FCF4E700C583A5E8DBCC03BF9CAB864DBD19E1760945DEA0EC0BA38BEA8256
D3A8D4F70F6685A99C6BD2BA8B412A26C002D76138CFCC7DF6802931E5D97BA6
0151F6A4C572235B4196B22B7B2D14B32886DF0D2CA8A277ABAAC53B63F64CE4
E4C088192AAB674497E8AF81961359C389B51F4A257373D907C615030BFBEF53
DBD99058FD06E352450B658478C10454AC8FC0232B70D5CB916981978053E358
99D322A07294748BA427FFD1E45C909171017B52B7C742FD77A8560852D819DD
8DD53211A14D7B2FD11E42941722FD3985D627FDAF87EB57326A0D290B5077D1
8A4230BEB40523A8565F95E0D44F036A571DB698EDD9D94FEC9512369E5E5E73
A3CA5C142617944F4F99C0697ED088ACAC007FCE06E5A6EDE7D0E03A3399DCE5
362271BC31533866BA79FD1FB3F608B22CCD4111FFB1BA35D920A23AD157C6B3
C3DAE11069D5E46DEDA7158C6478D8B8C0D9DC237CDF0CC6633911673C43FB79
E4F9B7F27495201E5ADE66255BC2CBE9D9F237DECB62A19D62CB41A1C92432D2
07F0629E913A71B3F1AAF8B8C5AC66D3C8605A48F8913E39C859E163DB1DBC8F
0ACFEE80A40B6172032E95A76B752B873FB4DF23CF3A655AF1A1B88C8DC156C6
190DE72973950565454C0A188A33395FD3D529A88F2B578356DE8EBBC12F04C4
5B899F667D9E6F3A4EC6DD8DE71FD4C2E2B6D56823EE4E0526679D71FF1B868D
F261489F06F97B010CCBE640E2F57BA3DC3332B329F7958394BA9777D833AB50
005E8E9232547104065ACE33396772B0E0BD66D2C6CC54DEDD071E444D8C95F8
6F88B31E20FDB80F77C83151B7E25BD3736B4F9BDC52EE78C41E9475E5A6D94C
D348AB42F5E36B4F167D29EBDFBD43B03F77EB296B06A36880FF17D412E77EA9
F2E7C25FD05E16BEC6732681EA21AC3FF6893B93FC09316A370CDDB86D9E6087
F6042C3F9ECD742778389170F5F041329782FB9F9702F7533E51F355F71825AE
2BF4F8FE50D413AC9A20C41B42537FDBE8DDC5A5C793D3760C1EE13716068752
F0AF10812250BEDFB4D7133FD58F4587BACD572505C84A7D3802D27443175FE0
0D89C3398B55176D8642AFBAB5CBCDFD6220C8488564B4306D74A58CD2921AAD
73CF803C754DAC2F30A5324886E273064FA51781D5BC596BFEDDCE3982EA1AA2
62CA7BAA1B16C6EBB99B2AAC4E6C9CEFB3D10F19987045C4918DB239E6E63D79
5F44B9D097118D081153AFF96E5EB39CBFBB99A3BE30909F614869031358EB98
F07A97EA78AE50375941B2474DB46AF3305F2B208D45921F93743A6CB8AC584F
6BEBE25ECAADD5A789EF60C9F54446687E7B030DA3E5243189F02BA46BFD28B7
DC14822E136AC7E40CE20458DDBF356488045C95907363864CD6943643BF0109
EE027A3091C11EA392EA91320EBFEA3B857370AD8EB86D73F035A476F7058222
E8CDE78CA1AA9EA69A8AA6EBFF3E67324C567B914134DE042D6F8F18A9373107
536E8D90189917D343F5299024239E2EC1D2D177D82DC8E344A7CF2AC71AEC18
36F139E7A4EB59A67192BCA9ED0EB25DE13032F6FEAFC3B1F4FC81BB0EDC41DF
B9EB92618667C59EA499B788CD26C2137D70F1B0AF793AF5AD0D0941F2E746E3
F5A7F0288BC1EE11E982EAAE763CA422D72FBBC0D754AD58FBF92629DC8866A0
431213513744DB48E52EFC89C83FEB082588E4F30D7DA77BB6B55E30890DC9EC
ECA90BD66CAE64630AC3E0950B737B87F98D8DE1F454F39D7AD4B5AE14DEC7B3
0299A07EE003EEA52A9F21B3DF207ED212AAF2C9C5948BD748CB0BD2FDA43D42
D93131BCF262096E70C4001D0751CBDAEE2E909D4A63362A59E2AC93AA60D6E6
968504D9F6BC5A0A4704B3BD73F6BE22FDF77C8D02870711400474D78C418578
74448C55BDDCE0D5AC293EA81C57508EE6B278A96E655AFB9F3DCD82D86C4AE9
719860CAC7E62913F724A9BC98137C23F5F7E7BDE0B6396652757D178C43AEA7
8F5B436CF00051F6E4A6EFD5B55056EB91A0BCF71A8F4EBA8F159F55E806A23F
E806836B9BEF4B718033D3259FD65DA5C726EAF63C85DB6D79BAC6C494B59FFA
FB2CFB8DB491889A2C7A9B1CD0F2348C18E0EEF6D10E5597CB0FFA8D5B9B2987
6866ED15109F75C600E225FD77627F4E94E433A9B448DB22D34CC243469BA349
2354A0596680BAB073337DA18CCD0137D9379EF6249C123F31BCBDC33248D39A
1B72315337DA8ED49E4A4D934B2A76623D6ABF28AE3479BF4B1A0440CFC30B26
8D3D1F17661D4E0AEE658D69D82A8C0D9FCF7DF09857C153E8AEE99734AFD373
B72DBE0212D3E0BF0520D87440AF56BF7EDDCCF7154AB251548CBF877EA655EE
AE8CC7D9F5BC74571F0CB75D35BAC80057E4133240C63BAA641ABA92504C5542
E64832F99DB4E7FFCBEBE5526D1BEE40CD0FA1659ACE280A60F2970C3DB52EA6
53FA6C297EA4210FB17AEF1744EAB1793A474342D4594BB33A8029B313DF8E47
17C103A4B03A3EC07FF855E4D60621631D194DE8CE1373B34064551BC10B1205
43DED0AD95B8ED0884921EE0F048A46D7C37337C68DF94E734E41DF01718D1FC
EC1F658279CB093F56086FFD9584F70FE24ECD5B428451ECF4F0873B0F369641
9E580F7B60177731BECCC171ED40034901E85E417C99B9ED66894A9B0B1A32E7
510011CD8C031544B66805675E609DC465CC012104EB00378FCB512EC9162717
25B7D19D71C75F32F0DF118FBE5EBFA3EC75F333C2DFE909FAD7BB3A7BAB8678
D40C3B58D86E4A680263E9612994626DC71C82DC9CA2D0BF642A00D001ABE8B7
AD5365FC723205D9A7FCA68E91E4CECD039DF312947FC2A4DE59E910F0261E8C
6D1B95A94A8E731634456E2DED4EC0CA115F69149973FC9D8FC4E6A189184496
484B4D8A8F5D7BFE28CF0A34C9935635D94D19D3A3B564A211DB1F6BF63C3EFD
B70FB5032D097AD9912A3CE737C32C8C6B4112D4FE376BCE90DE0279AA6001A6
8F42EA15E2F810747331560E930FE7F586100C510C7F5DC6B76FBBF512856769
14ED66D4CEC6A534F0CFD0B95DF62BD3D01AF7F47971B295EA46B2372F8E6166
D3ECC12B6EF003FB0AD5424BF11AEC68BB9E7F70CC4ACE141FECB4D48B6AF7AD
E494B85D1720AB727B976DF3B678241B979AA50DED3B5428FE3E9FAD05BCE716
C937EB26E08179151579700A3539F144685D62CC00686C1E1EC475071E72718C
08AFA1E060338DC1EBFE00382B3F7912EEDE82BC7FA7B2FB89B3454F533199E6
C7530D799E63EB4E99289ECBA481CB93A6DF19C0EB5B7468956B4C3E823ED7AF
51FFD694B22AEAA0BA856E8445D8BF7E3BBBD119A85A1C19B15DA1AD11C5EFC5
38342C1E20120CB9AE3E6CFD677FD0BD442280D4C5CCDF5BDEC342ED87C5B711
20141D6D9C7D1BA8A83176E8CC8DC526ADB9C3759F049EB03A97E9280FE774FA
29083DED275A0CCE63CEDF5652D305C6D0BA6A0168EDF572A3BFD099F5C7B5A3
48A2F44BC042C0CF9D10DD6EBC939D95134C3DA575389D4F793F7996FCBA4DD3
4E842A1C64EAFDFA8E0CCFFBD8A45AA975FAFD6D3A3E189E5E533C539ADA8E18
A67900985016EA8F2DA57DF0EC1DAE368FDA53B2A2C2B7A8E5FFE7A9A7980A4B
C76F0E6B6A09E5DD06D159B2F94B263E2C7A3D9DB1383D854C7BB9D91ACF4628
A8E9F6EDFF03A01B69972312CD118ED0EE6E18E38D77F484BDF2A3C63F2BE6E0
64ECE18181B0FE4320E3259D3A694F65DCEC4924423C689D41D19823FD35782E
A91B1D07E6211A815A65AD2EB24BEA49C94F3FE015B33B97B5944EDB99A4BF00
FC1D6B5F792821A29DFD0D430EC9B538CB40E8AF9F98476E32D6B32C018A6DF5
26D5C66A22ED1A156B6D7BA198A28C67BAFA7715E69D7AF7C36C225C7167CF8F
B92AE22840E1386A5C362DF4018E9252A784701B69FCEDA824FA12E8B33EE132
72D359B8273450BB47C630CAE6863101F6802ABEB0F8B8E61AFEE5897E8AFB33
68C97C1766444C004DD00A61F65EE498C85AFDA5331918D163437AB002F6EFE4
9150A18E33442816AC5B57FEFD88662812CE7E8B3EB8A73A5DEA5F6E904B90A1
A884CA1D15CA3D482C1BCD786BD78A4D058749D4A328C233124939C24ABEC755
213822465FC6260E9815D3F25E3BA4607B85A0CD8D318F473B1693BE92C5CCC0
6666D6DCE352A9D7DA69D68675A5B615554DCB47EB183304435E870312FB2D24
F50DD4FA8E58294ADF5CB7348A7E55B172132E7339EDE8C131965905BB85C96E
2FF1BF0C0A2709C0FD611B706ABC6F30D5C9E9D83117FB9E437B9D00D5812F89
75C0CA0E5C69E1FE1E14D2F1A879C9A8671D3795AFB32D6DDE947E19A43DA721
F0316D2EF09F307AFFE9EE6FF8861F0083FC784448C81E1D13A630FD3D161136
02163D500E360A9369865ACEA32C9E106BD36153A8710BFFE315970A9E19740D
8A66F5B6A06AB8E3F1462FBEB9E0CF295FBAC02A265A97E3A4E05FF490B5F0A2
14587C652940C259C04DD346D12E541A6AD96573B78C79C5B7CA46564CDAA5DD
F1BD6C5065C4CE714E8731CBF218AD29917E3B537E913E1BBD1573F350A115DA
5E1E2EB3987C3388589915F2D2D9FAB94294870822A86B4DF3C66A6DF198CA35
86BFDF3B774E980CAB6A958DBAE721494B1FBB13F0FDDC2F0CA8FCF6EEB7B87C
A3DF885E6297141D718089510BFCE7E80D1A55B3E05CAE65023BF1A4F94F1693
DCE9553DF21AAAAF23BC6DA5841C4D5B84F83A1B06428865DE0F72F3B4E43915
49F6A6BF03000C39F4587A7B8AFD00F2519BB469E538C9F20FD09C432039376C
6355243B6C755C5C3D0E9CBFC64A615332F40B230F8353C311226A8F039E3B69
74B4411D7A79B8E65BD1830C911D6F472970044E2899273B1699389A3E21D543
A4A5C1134058CE58E257694CCF54788C9B338B887F255A23E727F9B15A10EC11
FE3B8F6FAC8276D47D851C4BC4F37330DF58A14774BDC8ADF53972876A1DB22C
7D0A245BEEA3E65AE4B02DA657200C1279A867E06D2E6D8B466C070172B4D699
071B589D2348A778B482196CB0381A0298273990C043621D82AFD8DE8909E066
C08A7F49D95CE2F9C5F6BD79
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY5
%!PS-AdobeFont-1.0: CMSY5 003.002
%%Title: CMSY5
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY5.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY5 known{/CMSY5 findfont dup/UniqueID known{dup
/UniqueID get 5096646 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY5 def
/FontBBox {21 -944 1448 791 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY5.) readonly def
/FullName (CMSY5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /prime put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D77D0DAC26A1FA54
D2471EE9BE33D2E87853491D634A3F05B7672519E09291AC2D08D95BFB80CABC
FA89042E94FED8DC9929ECEFAF741D273687B2127F5B80ED7D16F146894841D5
1A80D8085E27114AC35CD5E578760D8982CF4D8587FD3385FE50E21A253A37E2
AB628DF3500FD2C21BCCBC8C0B6AD3AE21DE63AE6586DB06B3FB1966625EBF52
90FEBA873F819AB480FF994D80C01DE1E2F28C665E74FACFF98B2972CCCAD279
96F2EFF1113CDA922985E095249765989A4C6A92A76340DCFA07AFF34AC5E177
09B739A72D0D1EAE1A6164F3AA0DF1651EFED335B68C8465E1A61025235D4A5A
C3661B9C0456C35C770242149B3B98A29784BF71030C7DBB2C13958E5CC263AE
FEAEB9FBA84E06D772E94A494B60E32AB8FF862E57175DB17F6162DFFED60EF2
D46FB78237E778C7321ED79FAC137945A46B2D90B778DA46308899577BC7844E
3E09303AB2DD1F64D58756DAD62ADE22C62DE6C9BDA77CB12B1FCE3374CFA442
E0CABC7C9AE699CD955077A7268FA0FD3FF5EEDE605990F0DF0078799F5CED44
6ABDB2E7D9214BECB8B2CBCF328F7F5B8F346B55C9BA5C785A252DA59602B6DF
186D23D5D90556EB52D7C0B44E4A9A189C180FA213E12E9838F0B2902779E289
3E2B7DF45A01F36D88C9CB814AE5D41064030D37393DDD7D5974C1A27EBEC064
B0403898996140AB14E6EF1B48D555A1C4DE29AD0C5D284988B92917442D2C61
3B15E55CD91837B0496FEBB51486CEA7DFD9787AEB484BE887111903124340C0
EB034A75292E59CC038E75E1DDB0027407492EEF92D70E0303BD7B2703E131FE
BA91B289003B7E5BF85D2E5E130CB37949AEE51EA57FD424402B0BEEDEDEB5C3
E23643F3100312F94C157C98939EA2312B11DE0A683D4018FFBA2864626C9449
0D656EB0C79246A7F5ACDF442A55C9188D8F3FA64A9B6BFACD8F81D7546E0CD4
3C5CC653CE9514306439AA2BD2FF2B965EA69A30331E8D65056D919476867463
97DAFADD16BF9366E95C7C4276093B639541F7AFC9AF745260685D84DD3095D4
1B925540372ABFB68CEF211D65756FE0E99733B5DB40D5A42016E8715208D4B0
7A120EEB34147BD179FAFA94D0880121D1C6B27F94965ECC1A93D1B73AC1B3B7
191B7B3CD4F2E0E52A3893255C4B3F1A70A0ED36DAD262538E02E8A227F6D6A1
8A047A91ED6409F1E0D9B40698C817918AA47B95A082E3394AC42DE93BF9CB28
68E63F3363FDCDB014E89990C50210750E8442D9555B0A796B243AB03190B2BD
57C39F233318B6474F1B3CCE31C21BEF68FF5E3F866789041910B1B11ACEB75F
146BB1A162AEFB268700C2DFBD9752BCF6F136ACAE815C0AA4147AA2CE61D282
1BA716B693E2F713D0653B17C9381DA86E1CFCDD1B1FB9A72ABDA1AB2BCAD30E
A4EAB601BE3F8EB95B32DCF5DD114683AA64E14F9A958D16CC6DAC7DC3ED651D
603959B0265FD36F8DA41F3173A708D88C73EEA1533CE48C2AB26B4DB7CFA662
A8A463CC178C31D342EF907B3B44751859F2BD510F1CA93D61AD39E8E5D7785D
D465C47F3EDFAC22DC2B5DD93B2F752EB5482E138A0A1E5CD62747E0F524E29C
A56E58A6BA543CB3AE051F4D90891B65712B63DB197E60275EAF5975007D09B7
95F916615F97C50D8FDCFB67F1B677DC5139E6F46ABA079AC552F27F507CAE8E
E5C04D31ECDD6CF5E8A447846375C1748651245EB9C780D87FFF162AEBCC9E0B
155B318CBF420DF0CFBAA5669C2DBC81B55B5042514B05B7B82FCC827E21462B
BC8F8FA96E2CC4441E07E0901EA72495013400453E49B7D243FEF528E4078AB6
49277EE77C81B9167D2EE1961AE265A8C01F7562ECDC47D9FEC391097474EF8E
54A5A7FE6C98A81ED29D42A3D54326219F638C92AF8A087607CA2A2A80CB1183
8571CD40199FBDB9D70AD83979C739F533359FB2DF0AC4AE3A0E9DFE735ADE9D
6E29B3F6DB9A5B11418E9C860EFDBCB0E49BB900BBCC85860100F1FFA5AC07B5
14F37C5AE5E1A35168BC48BA7012A297C7771789302AF44765A6DBCFDD418172
62DF3A4785385CC9D055A9B4FFF373041D9F5E9DA83BC1C5F3265E49BA624B82
F15BC17B135D8723324865A9CCDD2EF3A0F64C17914F9B238C946FBCABD92B30
AF90191996ABF2E4972AA9D0EF7B64AD0126D07714D4059CE032905BDF877D7C
3440C374D7B5D0073E13ECDF3DEF2938EAC1908CC60D0E5EF5F52AE8A1B0BD34
8A454CDA66E7340783A7152CCD74EAAD4112C7D70F3C867E140988BB610CCA20
F1BF5E3DA8097509CAB419E01CA47D449C50EB8FC6DBB75AE2C5312BBCC5CA91
86B221536517CAA6870429B65069FE3CBF3FFFB5631B57597E5C0C3E39199FF6
4DC35B155A759CBFAA96409BAFC7EDFF03D2671F0396641446605843CA4AA36A
15070DE52DDBFF487C5398CF7604DE843F32CAB26A96F8A9DCD03F3DCAA57E47
6F0D36CDA34B96B7F4986275D79A1BC1954D2BC0BE1509709E40FF23B84F8D65
3DE1D1D8A2AD94AE3DE202D62993EC4BC5AF66CE512EFFE7CF39028BCEC1667D
8782111D9D503BFA45E4960E6197D8CB5697B1662BD2D991532074AF5491DDC3
2EC52B4E5AF9B2DAA5D5E4CB644BED25DACC3F445E4C7D58A1E9737F4EC04A79
238E3578311D88EE6D067725C580A146FF150871FAB2B366B5AFE5CE3B386EF2
EFB540348505A1749BB34586851FB2FEDA92ECC395B618911E1D00B427251B05
15B9E42AC1F0F239827B938EAB8CD20FF9705F4D7FB5F5F911CED9EE8FDABE8B
3C3442DC3B716C3686E1B0573EAE3905C3964ACB336FA3C38B17F229EA10F036
ADDE7FA5CFC01FAAD33F75A125F52AD395C7DBD3AB6F2321D7B5B55F0ED237CC
61FA8278FFF9956C64B8ACBE357D4603CC4599BFA198AEC01E4F4AE047754C16
E155C8FD09C996D9B5EECDB243FA48B0CED1F0882103729EAECDDB9523D6BC22
0AA1545814579043F0DDA2D7F015E56C399EA3C644A15BA6B144361449609C40
A4986E00918A7B44BB06E7090F73FFBE4EE3E051121939EAB0349EE84715DE36
FB187C50AFD74C44C25BE4B7037466CD60F211FFD7044245159505196B0E181C
0177F14D0B486CDFB767708C171FE513AAFA2B60665CA55B1E5F9E0304B63666
3BF44EC4F5B7DA58891081F78B37BE8453E86AF3557B97D8B4969CCDE2DFD255
91FB4D9CD41E5F931751BDF7FC8C700C633470064C0BB00FE5745918A69CE430
D86FE46DEC014C019C06621B2EC6C3F196A8A5E1E613AD8B28A9D0B981C11A29
4AD11CD3A46D089F8EF7D8298971A5F9F6F139CA794AB4BF0AAB2D4D428A8E4D
B80EC134CC7CD74D3F08E7BC8AC5B1846E1E5DBFA97AE4DB885286C7D06B4CF8
948E889ED85E8703CB97D7AE19E1201EEA205157BEEFAA3E17B8BDDFD01BDB17
691010A662280C279942158F68BD351B235EA4EBE24D54C0055A19A3F230F353
77202A1D7BE371010624CB741D4BA2E690B33FE582D666E9788A3E3348A0E100
2843E0B2FDEE05DF75F4D49DFE2B69BE79E97DA1B3638289395444F1CF6CDAB5
5E6EEBB6F907807B913290C25D8AA546B121EA90DD113588011DBF01B7F88AA9
B9CA9731532478D3BA57786817C1D31D8C51C307D7F500F1B58C2CEC9594E5C4
E5E7239D90C8B5B4A81F95C048272A2C05EF0613463E4094E922F7326815EF3E
6E82D5A36840A76B1BB25185CD66B05FF2D140E0F22CFF73EB3F57732E935BA6
8C64BB6809E1B45089273527834789637621793414B6853A1C301612920E3F91
458D043CC1B6CDA271864FD4CCE585FDF025FAD217F975FC36FAF8B79A6551DE
AC3863E25DE972E2A4AD997E77A2C05A1A14152BCFDEAF40072A0AD952A3944B
AB12D66ED3C408DD104B8638D67417D2A95A87E226A03C28181047CF5BE58409
7D07D2529BF867BB61ACFD68F817BCA73815F787162614EB926563EE2F8629FA
6BEBC05465458A03C2A8673A3CFF7552855E082A7B5C2D4101A1B96449071485
279C1EC56610507DF786427B4E4D949BDC9127C2802451F3B21D60D5827E5B7D
0A683F4402725547EEBE27C38839876A3B1B7FE0D7107D6E2292631D1B9EFC79
87D05342972EEE2C413568BA971AF56A2D4D89C7C0D0120AD504D444655CFF3C
957D5EF19169401CAAA2C4C144FF87AC7DD3451A63CE796B8F6C600F913F55A5
A74B928AD676ED097740BDA578DA299F42CB7B7334BD2281E403129866031EEA
1219E7F9BBA230D049EEF401CEB412BF7FB58FB2F9B7D1E47F0D774956B803E2
872A7A5A38E5B7EC4A225C73522EFCE6E98E3EDA3BB402BC5BBBA209074BD2A8
C856290D01A092160E8FB0D9EF324776AD39D7016C63A500D0839E670009F4C0
20F033554B6B7CCAB7BF60494431E4F2755E4CD966ADC7A078D434FA59E5E49B
9903F4E722ED169CC3D0FADE874E3141CD47C69BAFA3183BEA4F37B388F4F48B
7D143D4B79CC5E701EEB350447D9600D39A7C03A25B5B8B6A5A7284A8DB4969C
CDE2C99C39EC07BD8559A45CB5AF23B849C1826713828F43DF265068950DDADF
3B584B90748657609A89008187BDE4286F95694D01760260274A23A41FA66A78
773902ADDAD18F98F045FF7D20AD20EB685C145D44237EDA272619EA9AB71497
DC8BBE9EEED31EA77C9410FE650C65A6CA71F0E72E7D83BBCC0A59DCEDA6399D
64A8F4865811A637838445D84D97204CA7A918DD476471A598D7536276C0F0D1
F0A88D8BCCA56409342C1FF678CFF90FC7B287C36CE682E1B200B54B2CCB12DB
D1DC9BB4E1CDE2B9B6BD4B80DC226E10FCF20A9E7878A16EDFF37FB874E4868B
A9F1C452EAA7126E81763A2DE2B502132046322BE26140F04FEB0E7167920679
FE8618E1AC5C03360AD3D8B5E913E1CF0C1BE9E446DFB050C3978165838278DD
23D17DFDC85DC7B168F173D0945D110976084CB27B6F8AB2D22410DB05BD345D
E4E38CC7EDCBAE36CCBAC590DA5C12D969D51B847A1460F4FAEE7D648818D26F
20FFE485D842C2088258F4F0B1FDCA46A7110645C25E3A31C4E6986C220985A5
DECCA30BAA3A4B5CE0152B8A9D68B1FD67F21050A87BDAE6B665036B9C73953A
11B16AA3285456220D09A03DCD8402C06A2BB18717B1AEA7594F748817176E12
87E685FE70E28C0382EAE8948A6E9FC2F46E2B70DAB208611DFD5A5D97D39CCA
8F9AD9A171DF53CAA6E3E5AE87257561BE15E3BB21779397A30AD4B22A1A1EBA
4B7235F59EEEC1FAB7294D521EC1E36723A4D7BA007DA4239C05F0E6DE546D5C
7A58CCD00F6AC96C20B7182CCCE3E5937D7A64F7CCD52A107BB8092D5F95A8A0
589B2DC542511DC89A0EEEF23E711C7444BDF95F64CF486F158CA162138A36DF
5400A5D03AE62A945373E95840F6D6C7BCCC4FE65382584A4DB36D23FBA6562E
1F3AFCDEF27AED61245EF880426B14B3DB5D9731039FB98F2F51094CD7D5EC78
1F8B03F07064CED40D139BD04C868B1E51A994731EDBA98E7D678A07F7AF6E56
92586848C58ABFEF378F5C1B4C3E20BA860BC7310B9AC48F2143B5495F9B3A35
85C9AD5AFEB23DF6376EE78BCCE054C8FAA925965E38EEA6F68CE1B5329D9DD4
DAB3F3342C6E6D9E0C70E63989DE8DD2D3C4C671233888ABF56C58F69D29A742
B5AF39EBF1092C2C4A906B872310DE0E83372B1C7F6E295D8DFFEFF960DC0F4D
83D7878BD8918B9BDFA17889D52AAF362B6162C07810672E23F66F8CF3BDBD6F
0E016C4FBC8CBAA796057A6B9BDE3233909694110279F81259A5E628FBDF6159
CA0CD6997EBD34C3038A02FA4B422A98AAF4297B998685D7080EAEBC22E27900
8B0178A75E5E52363A2E56507B3E44A6F9A9DD81886317A07B4823558D3690C9
8C722915FEFFED7F6CFF4E94DA744562835E29C97333CFE50D49A5EDB886F4D5
279DD9CD35C15656F9329CA06A0CE1BD5986784A910EC3DC7AB1A068C8ED4829
DDBC83091AAF21092234F614A6CA2C4A854B5049B5622BEBBA68AFC0AF9C6686
74555347CD055BB13B5CD7B5B6954A5794AFCFAF9AAA3682C7333564660E7C1A
8FB3DACF1ABACC3D68C26D07060C7D5B9AE9C9377A771C3BCD317F0ECE3CED11
C0438A29708D99A1F3C02E67AA1D7BB57AA7D8C64A2028349BDDD4BF6DB3139E
C1BB6D7D906699484EE2A5D83296BEE09644B62EB10658E06E4176C1E5E7BC4F
36F3454F2DE69F0C5B51FD5874F67287294399923B19A40CBCA4B580BCDA347A
9AFB7AE64C8E9070D5586086E6F42EDB8C0E9729649CDAF7C0337BE5E670DB9B
D5C038262B65603C1CB1BD00D4ECE2BDAE5B77A8A129DDD79DC7D080AA89B7D7
439A03568C2C826EF23C2ED7160B2F8F14C05F444E364DDE247748541CE7E265
1414B5A15E7152C6E9056B0CD43421D4AA5EBF1EC2CC70516F920F08B0CDC38C
DF480EEAF04D7F12638C9CF8DC4F827DB07256F4432345FCDA86CFCB637D04D8
931A81D2DC47674AB435738871A65422D3FD46DFAE9049F27DF0DE33A0E3207F
A6832153135BBE5A283CDFF46ABC74C78B3320EAB1E881E59E07C3134F3830B0
8216AAD3995D3F8F6CC988C73B2B7A5B79E81C6E8377FFBDAB29B4CB6317B118
84A437E14B0B213BE7ED610E9469405AB950965B2CFBD4CF0B3415BC9638771D
C2D8265D4FF0018FCD3851E645A82C179FB4995A337C0A854999E0D91EE8C98A
A9EB781A0DEAFAE1D666D2F5813BB2E79C232E5C96C686D414921DCF8EAD4C7D
06F79EF5078C77556346283940EAEE347B06F756A800FEB7656DC02597A674DB
6F8BAC8751BA046D7040B5BA0AC766522FF9657F71C7C89DC93E92000A00120F
301DE3ADB5D7D62B57E0824B9BBED388A5CF1B39B034AE2E44BE27CC0F5F0223
2A219166697692167403DC2083384A698551FBE48BEC89629820596FD569543E
75174901415C56DCBCA012694D671655AA84A8D8307B34066F1AC149C8B4BE3F
578F57A39B93DC454580C44B12D6D1BC653CCEACE809E5F3F7406B9F4A868D68
ED4C5C23D7B2497668D718621A94AF4938A16FDACFC6E3B216BB615324375050
24A7466E820435B11E93E91F673D609932BE884AA1CDB9D433A40D189A668498
A1B708DA358F56A1F2CE297C61D9AC19ABF79539914749E5DEE0FD0DC998F4D8
1A4CD93D0A06E68CC764308BCE69D4D53FB2F0AB742D7E9618321EE87EB1DEBF
14561A916C8D58B9C6AFE80D586F5FCAC3C6489038178E77B515108E48C7AF9A
AC9C3F93598A28CD03864C6A65659E8E6C782F50ECFBE2C27678ABF0978877FF
C685386DF9D9D8F51EB5AA618D2B3F63FC6A0D6107469DA479D540447D785235
2FBD6C4054C30D02DF3D2732031297F53AFC937F6CEEE01B2EF34D59FD0EBD21
854C5CAD32C59F6D8F843795472ABE1F73107C0F5A5B9274CFF2346E7627355D
5E7B3B3451C89DF5572F4E9BDCAF526425B34D71875B5109EE341F55C551DA50
31E2EC3BCB7A79CA3F737D3CC23200160C76E29B9A5740BCFA0355AFE7930076
1F621C801268E18B83A108068B8DB4ACF7079069AD73E37ACB779490900CB770
326BA14A6CB1E7FF537AB11F432809968CC441F418AD1A36075D948D487C55B3
C6FC12080681BC9685764E9348B28A29E6FA025EBE0C175AAA6CD60CE6E2417D
FAE5E146264FDFFE499FF7B6F04466BF3406D2AF6DE542862EB51614000D9B0F
0C630C2955964D0D808C8C65211DA05FF14547308FADEAD9A907B1944DBCAAE4
DAE093FAF4AE1AC91793F025C0F0C1E74DE7817154052436A369CF7F52E05841
5778334C75C7ADDF2B7C1D996C18E65366EC4F8F085AF9DE24D54FF213C73716
0C383C2741EC725E1FD07F83ED9BED3CEBA6BBF54C5CAC897D17E19F62A11AA9
B3D13D0649DE56955AF9924057555D8DD002A3E510703A9742F8C5D2AF2F1B19
F52F38F6EC4AB6CB0234AF158FB8F0089FE5FA699473609E4DFC2A90705A8512
5861B1347D37480ECEA70DF671DBE8696C5957818BA618D1AC24C441B47F0352
E7F937E5902B0FC5270C5F787FCE8ABF7119F741B36E5F9B70B1DD2CBC5FA90D
F3B40316B2097211A07DE9CF2DC319BAFF663638F729648AF7AFD39B5C9CC5BA
49A6FEA0CF977DBB7D1B2CDEF5CB6F745DE93CB22D86E47337CD0C6E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM7
%!PS-AdobeFont-1.0: MSBM7 003.002
%%Title: MSBM7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM7 known{/MSBM7 findfont dup/UniqueID known{dup
/UniqueID get 5032014 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM7 def
/FontBBox {-45 -504 2613 1004 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM7.) readonly def
/FullName (MSBM7) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 70 /F put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E9244F705764795A35B9047
FB548ABE6E67E3100BD046C8785EFC9E5E8EFDE27E12F8E500B0FCF1780BAEF4
3EA6864ED8042B2D6F7CAD4C111814EC2724D474FA400D377DA31AF7CA1E0162
2D6D635809AFABADC3C3E963B2B6224AEEFEDF4B792B439E5D266E15BEA751AB
DE0D5B865840116436E1D48A3AE5F53949DA7572A7C2108CE63F6ABF9B9B34E0
32338504CAB003F10FD641BF0B592F74E69078EAF516B03914824F5D23062147
029B08F6DB0CF3BC355ABC8AE7DB1DB9E66E263D9CC9C2DDA81B8D4E5944BCD9
E44EE4657B1AD5E8B33CF50E3B4B6EE941A298F23166F660404D74BDC8ADB898
97E9D3393E78E9096AC73A1362E677E79850E8E17B44656E7AB5804FBAAA5414
17A51F12F9442378E991735B7DCF51F3B96D08A8E55A2AB15E1FEFCABD38A505
B0E29098FE78C3C3124E91694AF81996310061CC563D85F98CF9BE5E9793C92A
892A2B9C27FCAAFCD7E6AC4F9DA6111BA64CE7224C1C7174994D344675DB1A31
1C169986FC61E7A2801419611C914EC6D8D12DFBCD440077B5BCD75773D117EE
8F6774890FE56CA86F7A3E1280740174699BC4C573C3ECA9E3D7B745AADA4628
521702D3246859CAEEDD476EC833204AB997558531589EF9657154412E791EDC
9E567A5D44B762E2823DABBB2C5F70FAFFD2B13F4B3059BFE38F42DD71014AF1
FA08A822F2CE8A3CB1741AAD742ADD05785757B417E082BE55B1A3E21D40A5DE
8FE6F244D0BF7889E704B1EA7338B9E4E65A2E6BEFC72D4A42CF449A022E54E4
C1A5CC4A6ED7B1FF1018EFD07F2979E51B6E4D115B6E880250D07E1C0215EA36
2B8B20EE75EF233DF5A3B09CBF02B8C539FB20F0075912EB6CAFF69F35D07D6D
DFDA88D53E98FE21C2DB8AD8AACAB446B96D43D5516179E91F5EFF67FFA5F6BE
D2958C53F28426E5E4E26FA7898448477988E9866A5B274C64F00DC7B8213D06
DF77BCFC05045CAE0797644D518FE84AD92476B454350F107F8D6D343EE0BE18
FA69652BA112AC9366BD84F9FB76D2FDA8E0DBD40CBD3C7B52685552C9A12DBE
00285CB0C85E172D0EFFA32EA428B3DE75B6CF075F42771C2E03753DBCB11150
E93F642BE762B63F91A9586E4DA4CA074F36380F883C237AC25F77A79DAAE9F5
825228A6C069E5D0C0AEE67546A964CE261F18A601A51A11D369F3E913D63266
FA9E9B836A22C8C8018C2B944EFD11212862931678E1E757F5EAB288107728C9
9A1B308088DCBCCE38E123966900C22CA5D3DE5094A64280B31836641A5AE90B
D24F0C169581A8177EE04E72F2E902F617E54373CA879C288270589012C18200
A9EFE698963379004E29ADB0743ED214A606A5E12086CB5A4711F090C1C639F9
4883CE06DE9FFD1F05FC92B7B9E5ECC94E0F5A5702E760D800D4B2E4F0B3087B
9B6FC43ABEF3AF01CD91B6C2026DB852C018CB76A5CD41EA0A2968B427C0A2E6
53649DB2A517D687834058AAB491FD849EFA037F0BC842942D46E7D40ADAAD8D
CE86B83AF344CA4746A7A4441D80C1403443E4BF6D8D960D2F52E50F1FDA7431
DC25F447085C30A5F19D5A751E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /bracketlefttp put
dup 51 /bracketrighttp put
dup 52 /bracketleftbt put
dup 53 /bracketrightbt put
dup 54 /bracketleftex put
dup 55 /bracketrightex put
dup 88 /summationdisplay put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A203777646037E6F7A3E022256F9B8F5E03218E29844B
569EAB78FAA8BAC908BF54E6CB74F2D623721D38E3F6E5E1FDCBAB8F1CF96712
159D4E51D603DF25B27B0B383BD0AAAC886EC6B9E88EEF2F14524F41BB0411F6
4D448641380A096303493D3AC7E24AEBCFD27811DD1BDACB1A0C0E1BDD0190AE
B798B8DEAD9C354D1ACFA95F85FF17C6F616E761C946A648F86773E5929E1BB1
D4C4A070B9F1CF4487E0A932F4AF6EF4AF6A4644A4AB3663E5379D21E8CCF339
0A5561C5306A2987288D21629A0561D31469DA8D4FB4E14FA3CAF1DABBF16931
700FFD3B4D408E6567F406C1B7B33130CA3D0FA05C94A7BAED35C69339AD9252
B2665330E4406E355B7CC46E27E122A6B8466391813B90FFC25DB1322C853D7E
5C8251CF55D009C93AF22665FD38E229A704FF126CCFA4516916E10E351B204E
15F9B1BF225AC76CDF3F028ECE6706138D5AC4F4E7C685EDA3A1565DAD1C087D
EAD56A338104DCC51E6D200B539135C56997364B7DC171362A42EB1AC8952FF3
12862E8D11BB6B6C4CD83678BCA41815C4E3596B95491CEF32C8F271A37BB284
656C1A822C24636E938265C52F2E92C08F39803C5B4E8F2E7BFB11462CE52924
77377870DCEAE808132A37FCF07F7E10D7DCAFCEAF5593FAF7A5E7CFC5B0187A
07E015F829B2032C9973B50E022C6E524E40B146A95DA735833EBF8DCF4A1B9D
8B0E92F850C41D767E22C865FD82483844DB4C66148E4CAC1B946B29ED9E3BC5
A099748BF06D110CD315737078F718AD7A5233853C39BA13D0CE2F8E2433CE4F
29D141D1CD8E86D576795E6AE4B2552004C70B372C4EAB0DD58C79795E5FBB00
30809C10D3A5157E4115CE3B9692F6653338F90D191EFBD46D075AB4A7560E23
2B24E8CEEA4AE8B52DCE7BD79EF837389B31F7844D3245534BA305E9A2A4432B
7BB65489265EC58DB37A8DCC1346283E4C0D50E7AD95E19816F2A7926C3E40D4
A98F14D29FF16C818E87C5BDBD6595467B8A2E9990C22A0B26329729CDDCA75E
42395A77BCB905512D1222DA4ED68A99FB0C55A82DDBBA2694376C16EBD1CF22
918FB2BD8391D26844F321253C1291CC64680202906F693A0391E3598203642C
4376801AD79E7B909D1FFBD1E2FC69973C670EE95923556DE5FFC6F87B59D854
EF0CC0F3B9148ECD68DD3906D1411C41D8587740D1DA2A22CD8C2CE2C1625D64
E61144A14978CD69147650AC093E99BE856C98AD1CDD91B52283DBD4BCDE8675
B9FA58DCC778FE2A8AB6A59AB3EA2218BBBCE12C75CB6D64E9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 21 /greaterequal put
dup 48 /prime put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749B8F
E470AE25C9926B7085F338CFB9102C5ED5A9F1AE7ED883C5F69BEC7DCFB2652B
49F29C0B0869BBBBD14E5A0233477CB6D50EB70E0111B24CFD3279826C464A9D
9065621E1CF56B06632BB1E91AC2603FA33B988FF2A7D18056EDF2EE897306A9
2F2BBF8556983A809C6A252FCF5F1AD6C2925E38CBE6CCA897724AE8F908EF48
5539C3BABA111186A0F38F642261843011FB3389DD944E430B0CF7FD64C0DBA0
64ADFCE9115EEDBE11EBCD36C145CC25F858E34B6D27E13A4E773B8D621B2F28
A52F9B53B3FA27F000DD189ECC42864A1D5AA933B10F327FA3BE68C541EE8DA5
E0A6923FF60DEA152FCEBC963155762A1019FE6A9467DB7E5464F6CB14D781CB
4CAECABF8616AD956D4AE6BBED390863ABB69D3AF1552BCEAB6D7C717D511652
43A8018789AADA8FA4F20AD5E46CF97C055E9664C66C0CC224B7466225C6E631
0AF757B139B935B1A77F2261F775A90A704F1BA523C967FD2C65D6ABF97193CD
6D3FE7BA5A1C3DF74BEBE1B8CBBFE8C0D69411CE4C3F21137710DCF7A1E8EDB1
EEA965DE1CBA0C7501ACD0CBAB8090ECAE77C57CDF3EC817B5F1F3088F2E177F
CFAB7A39E32BDF28D892E34FFAFEDF7C568A9A3432362FD2D0EC288C2D95E222
EA6F45A68D4935DE7FE03DFBA2C3D5015F58D85116FF6DD88EC206F4123FD05A
2C727C5A095A2AB2C2DA6BFAA0063FB8FAA38EE7A9FBC88A15A2BFCFCBDEA85C
5BF95DBE48FE4DA1BBA15705EEA3922E4C41C8D31B59DE1FE97EA0643CC25D18
7243B4558EFFE3D41F8BEF2922A7D0AADD004809A8ECDA87CAD549884851F669
F4C4A01A54B7E9F94F6A76061DB4277DDE0E6C635749E76498A6993BAD350943
FA804E2C8E7A139CF395BDA585ECD7A0EC5E75FB2D623B4F3AF7D4A8EE1FBD12
81D2595AADA75195D3179F72361640CC59DF2E936B01422A555F3E39F62966C0
0E94C67F0EEAA6A6577D2C948E5C05EED2512CCA69061FE588EE68D520705AE0
F06AE7E231A2F65B03482A5830111E83CAB75910D52EAFA7A3F9FFDEDA0A5A5B
EFAE26EA994839E58507005359E45FC530AC59F508D208760B854DF9EDFD0BA4
1F947DA889FCB79642FC702D3013E17FECFCCF05CE84EAD46D64BDC540F10C03
88
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI5
%!PS-AdobeFont-1.0: CMMI5 003.002
%%Title: CMMI5
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI5.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI5 known{/CMMI5 findfont dup/UniqueID known{dup
/UniqueID get 5087380 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI5 def
/FontBBox {37 -250 1349 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI5.) readonly def
/FullName (CMMI5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 100 /d put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFB9CDB3B91E19AA95
B6070999687CD39CE05B0501BC0F19F4FCE5E19BCAB1989C541A47F00C4947E1
FD7D566D95445A20A22834570ECFD7F17970BBB274C172956BD6458D36A306AA
51AA40FA84AB99AB3D1C47256A2DC605467A7F2C77963B2D31C2CD1971FF9627
23D5B9CE163D84AD3071314F555A564CC82CFB80B05E31708542DAC587837E6A
8708B83AA4527ED523623419123FB743F544A691FF62C172E6FC42F1EA9D96F2
023DE87858FDA38BF3FD9E2AAC5F05FEBD28A5DE1E97FB1B03F6D7BCF64ACBD5
20083E062A50A1B86CD28E5DA789361A19511275636562527DA0CB8A62C0CF8D
8A46EA3505E7C597428C86B3B05FFFCDA0492897AC6C6F689ECDF468F49463DC
F193DE83E34D73E48D23ED37CC1BAC6D1CF6BFF1C6A0165B21B844326B418575
18E1D044C1864B27AF65AB4A031C767FB91D2CFAA1729386A7C1621D859572FC
B604B35455D870D5A757DB7BF44D9D079F4F70FC669A96A0A1080F3297B6353C
6161E0E815C054EB6709752A8C104D177FDB4962B988270E9538E944E2FF6717
6389DBFE95B71E95EC57335EEF4F3E8E7B041690F54039D546937028BD0E8740
A9F8719E08AD387878420EBF7D8D1807B6A594E98E27BE8C6314BACE9CEC94C7
D57CB34AA7DFD06477D62C981D9D686255817A22E3F49DDD47B28FE7CEBCDA0B
30515EE8EC56542A3E3E68B990E5BE8FD65B953A0EEE2B066FEA586C75E4978F
0A0357C0C37397AA22B9EC8D9081B44C71CDE7991903DD5E071B87D081A57064
A143042086EEBF8640F36E61D8A0052C726C25F1B3CCCC6A58868E00C30D5CD2
034835FBF999CCCCE1CA0ADCE3A4EE4A36475FF6D00E1D7A8ED65CB0213FCC76
AB7DA81B9A97FEF3A51754A48C76E80198A2475DB6047623FCBF2CDC827229A5
C1DD7E79197C29CFF591EAE9547A1B21D381FA04D80E87F41C9A00A71B5424CC
D7550DFE38CC7BF2B11B810FF09DDC48046BEAF8EDE7CBF8847DA0BD5FAC93DE
09EA6AE97B193E9A31F1174C337C72F4CE28CD59ACDE969712C57701EF3C48E1
38C650DA766470DBA252DD9FA657F7738D31A864E26A89C0618EB611B36B321D
C48CD0F10C4157E210657C6CEA4BE0DA047F414C16F18B8A49E4E783164A83F5
E59040752152EC549ABC2F840ED955F90188E8F91E4F4533CB5F42478029B90D
76A996EB3D99BDF9E1B3019AFC030536449C04275DD78343702CC302461DDAE0
9CE2AAB36414A34066ED793CA7313767AA897AFFF6676E1AD5D4E3CB3C3A66B8
C5E91C170C41B7233D544D8EC3FB6E7E6EBF4E1CFBE49E3F00732256EB2495AA
9D206A20E902CFC57ECA3CD1DF324C834C75DE927C473650E4FFB299509557C5
9313ED07F343B6B4FD9F3DBDA9B3242756575AF54DEAA7C6DB9F1B9E1128989B
312A505411EE636BEBE0823610CFCC7D347185E09CC8A1A78CAF7F20C9668C91
0DAC60D889D17BFF3B7AD694F587ADCBD4E48F36DFA34FE98CB2E8A17929A683
0B66E005FAC311AAFA9814DC9CB2DE3059E0966106CFDDB18035EB255906F843
C8473B5E66E8FB4582FB72BDA4F4EE7A8F3A178F02EF1264C0692D7CBA2B1906
DC27331F86B6D88D3233FD74CA88D7041B4A2025A7024F467B64222ACAA24DBE
112C83886821994044EE5800F1F81F7F58ACEB07D15E22D38EBEA6F5C4F7896C
BA2EC301F8FD150832966A0C46EB35ED3EFD0192351AFD1FB9C394454BB1FB79
2BB86FFF5B846F412C1D28C560C00B1FE876684EC864EA6F88E7B095CBAB2B26
29EB6928961BC58633B7D5A5746996C3DAA6FCBBD2D42D59C1273B786511AF00
B60B0E04C7365E4AAC4AC20288ABDBF0A704B6F7CA2D9FC65CE4AF36A5CC463F
F97844B79F772F1E0C6F4A6DCD7AAEEF16A4ED9CAB55E692586C5C9DE8701A3B
111D15F99AD44A3F375E7C4A531020E9AD5CD77212BAF0F9516B7E865F5F5042
50524EE6502209FA562C94AEA4555F868C9FF68368EC6C2E52253E0C882132CD
DDBB83AF15DF29B2DCF516A004DB97AA9487EC2CB1B772E8C84DB1B82841CE64
D4D10FDAB7E162E079FCBB9D4670AB4D2F9128E48183A3884EB8C74DEF7F0E70
A587A300CE834A739244A237936A78D31617E4F8D298EEF7A783BC573BF464E2
9FD1F0592DBA4400AC25327DEC2F28F8EE0CBD17F012E9E15FFA98CF1F1F9265
C2E4B8F3ACEC102196B4F9F973D747979E38DA36558D6CEFF3538CA7E1427352
CFCFA0DDE3C02A42FA39CEA5DEEEC5F3F7FE7C1B1AD98D51446772195F08FBBC
D8CF46DFAF7D78A43B70F9B660406BC43FBD32374C022C3A58CB24CC43ADBD80
4E7AD6C418FE43DE31176B9128496C331085DBF6FA883042168C0FAFAA9DC403
7ABBACC2B18922C4458B49FCF241C0399E969937A2779184DEC8AD5AC3266E40
3E81D9B9AC5A06F9DE81785668B2CCB9BAA20F89120C9EB9A5F4CDADE6F67C61
C5E89C6014F4772FC208723146587687F8E14F4E63F2FC952D2F9143275F168D
B51AE0A66333D957C9D5D7253A2362C30A0219219BCBC770D9FCBAF0F7F45FBF
E85CAFD899BBC1EDDC416ACD9A7F83711BDEE28A683900E672453F4527F44816
1F284A4C488DE221333EC9249D1C70C3FA41F37924B813A3C54BE3206349D955
8FBC6AA9115F9061C9674958D40EA2426CBCA704E0AB35190F473C72086A2B2E
DCD7E6C1CA9BD9D7C0C2879E414EA6C61923A60FDDB53957680DD30951CD3B0A
6B743B1E7952601F61D4413C3A7BDA4CC1C65DA9D453704A1333512560B2EF09
C2D6D34B5AD4AFECB4A07A7DE5122ECEAF0CACFCF48E78F440071570E3F171D9
96E2C6169DDC77A3B9A61D5188428B035F8128BA909C26B448B6C95FEB52707F
AE0687C3987F75F1BF90A7F61D0C492C49457B59271BCE48F3FEE78E12D3271A
F5A91389DF2ED566990BEA84AB699B3651B2E81975620CEB607E2882F7D29ED3
A4279439107AF9AEBEE47CE85DE5CE9595A96A118ACF1EB1E935E2251E0E7F1E
D675E5D89D501C9CC98EB274B6B00B718D3EC50EFA7E170F2DEA2A2D2C8B5760
E85A1AD504660A93140BBAC19A48B456B3FA48E05776CE9DC05426520692922C
4AE3FBFBBBA2C4EA2B92663E8D316B9D5E733E0F2FA092F24AFC98B5D69063E9
8AC28D6EF97D3674C04176197050E49709D7558F7A32843A2278160DFAF9CEA3
9A0A8907B19379083365EF866E2272A9ED2B662614C57F81DDB145E9D460A572
C573296761CF028B0CC562B5C73B1933F0F78935DB0771D1780C698A874290CF
4F3D2D0C000B9A4077156A0B15F6FA23CF70586D3E341796ED8BD13BE5CE69DA
D169579BE16C6BB5D74224F380490855229FA64A762AC6BBD0D06ECC13E57E56
FCE574D51744431CBC8A369698B3F9BE35B7C1BFC59FCF08C04E3554703230F1
2ED2DC4459A256FCA63A759407CFC0B4D8950852BD11D9D631DD0B1EA09178EC
B5C85FE885F3E048355859AE345B73EA0C9FF89DDC31A7839C86CE36FB7C9C65
33257339FE7DE8F9826AAD599B41B8AF40F47BEA4399B65B7E114FAF14B9347E
4627B501AE9905A4EF4483551D8D5B5F291CCC25506E38A5DA92E127FECFAFBB
F6BE02A63DC1B5090A11CE8700402A53B9DB788ABD4910DCB8F1D0C9FAD68668
0045C5EF2F0F5205F4A4CC2DCF43479DF053E2DCBAD3AD3EE779129E7CF4DE95
34D03F05FBC72CC02C5E1BF394AC39530D93C70739799B7E2FC84D99EF7E636B
900185158DA3427B30E7EBA29CE9657D3103060934EB58A514F6CC06CA0EF378
2447416AD37A066B63F2BBD53B06BAC2C915AD28CAD86AB1725BDCBC12D0368B
0F0DB1885ADA0B4214F59DFD86F15210763091E3E5E7925A39F7C58DEA801563
198D8146DCEEB18EDE7EFEBC5610208CDF7D42B23E15AA911BDE63C0EBB78D9A
DA13B882064E1861DA9B4688A242559ABB1BA404A516A4C7357D18E4C7AC7D41
878E2D8682B032DCAC20FC72BC0D18F9783E9094F59D3A35A977CAE583B5E517
4E8A8C991E5311533BFD4FD0B9B7DC8F129705509D194DA9F18135E7B87DDADD
D06929F6D65C8AB18895447C4E542CAC2FA8DA064681418E49807CE61DB77720
4D7538917F5D113CFABEB51A0E633DA5ADE4D3A09462D2E4C11125A31C3ABCB8
D2905C09E4E91D11B92F405696A4F1996282F44F34A19748121C0E86C3DB2CF9
30073205E35702C191BCC6005822AFAE9EB440CC7739C51D391807AA5FC768E3
928AE0860D52535397395FC31BAD93D8887146E6BAC26891DF852FC5E277C3CC
45A9784386BE5A1926AF84E7F3BF380A5ADF32D73CA695FF1B78215F2D2349D2
B1C3AEB04DB8B11A611682E7F4FEDF08716A801D84D47FCBB5FD4E9AF027635A
74E8C12F7AC159840DD60728DF43615BBCDF8EF80B1D761D34ACCD561F5AA2B3
15BC21A4856032E4F9005F93F7FB3CA7613C32E67D74796C5C819457378FD94B
89E45341CC2B774F16C035079A741B0D2D54B43FDCF69DBC30DE45BB3695AEB9
CDA1C7EDEDBDEAE0079C5FF03BC855E5F5235CDD99A915CFC78373A4604E8E66
3426FE7AD92B8FA0FB0CFCD773434B5C624CF3DA9F77315F0C58D42CE9180BB5
2D2B7DA554300CD38C592CE35966B1EA45638CF064AAB4CCDB2CF3ACE7A816B8
360F2F5D7EF9A36DFF363B87541744CF36ACA31F9B17872C96B8214740C7C0F0
0E251B4B3306C443487F71ED324B4896231B91F909CF28AEB3409DE1094E6483
E851326B4CE4E56DF03A929913926A8D4C52C7DF7A6F7EA62BD9343AAABE9BA5
403678ADBD2C125B5DAA08EC695F6448373355FF5B91A4FF16596A5D172BB3FF
7CF9AF0B6A744A2451C7399E969E6E5A9784B9195A497B43304111165973EE28
3EDA3949E5D891E1EA363F8A8EF4ACDC82CD14BB931480409A5EBEED54CF8284
55FD70C98822BD9A31523A3C6A6F26B0216C07B6D63D3CFFAD15A1B83BE55D9B
4008654433D80F11754E4B4B09FB22569164A8DE5669629E07ED1ECBFE365287
690C6F21274ED9DE2156D06AEA66A323450B29E4AA42CCC9C9261DD499FD33E4
A974570C690D2C0A1367A7487D57427C01203D2939E89A1F18A4ADE84313A2DA
B12EE671E3B42F44F6B32E12F4F2E51479FA3420A3A13087D9BA76BB1756AFBE
C4654792600D79BF52A32EC8E02587753351AE7F192D08B7EA9314FE4CEA31BD
8646E59F96765073ED1E3788C8DC7C0AA2892CA25E5641B338F5F207D37B2757
C7FE8E52649C38062566E420F8F0A6B83043F758DE906CF91413718028C9675F
5E0F7D09633361EE152116C675BC3A90D807D3A19B848DD34BE3BEF950287C7F
021E231262ED6A134208AE2FCB90B7436614D8BD33226D8D519F8F3F494ACBCE
32527307BA114CF02BC765387DF54BC1E231CE3F51D09F7A9178FE80A62D8371
533508ACF5C454CC72400B444D177A36B9A096489CA2761F1CF1F7C788A9F7BD
334A5C24AE6A648EDC740E36B28D6752EEDB64ACAD640CDD66CB98448C7CE7B9
8EA7CEF9E2A80EB270A22ECE1EAD0FA85EF5E0C83AF23F0B4E4669AB41A6B427
3928CA4421E216A4346FDCAE5D1349809C97D059A2CB6BEBED01CE0BA1754863
100D49634FB84A06CEE283104046A90396245601756BC39A63460C2660F54589
5A690DDE53BFEEEB398355E0FCBCFE9CFC664195CFE5BC9C4905700FB9FECB7C
6E644861E81E0C0581130D253D861801958F04A543EF20C99B52E246139B8D7F
B7C78E1E658701FFDAE6ACD2A7E79FD434B1CE834DC7F98D16048A2964EBCEF4
BDACEA4E6FB6EAB3A270FDA758BE633995D1A39EE148ADF8A169173F877089E9
1A560D068ED72051FE7FE1D6C3BAC81EF265950598475B84AF1486CFC55D5903
3BE1479996B48A6E9ED904C66700DF63029ECD9BF1794BA67A7C0A005B00DF52
8A6A0374F4E65CEBC1CFDDFCE3EE53B57D78203D72A0FD5F9699277126B4A5E0
70B9CF50FB9A46D0685B563CDAA61EE9903F0079B22ECC56F0BDA3F1930FC6E4
637DF29BA68C83DE60EC2AAADF31CB46F337126706EEFFA0E8DDC29E5488C2C3
E89CE98157CF908EB04C55ADC7FE853E152E0D963915F5104834A9F73E0EFFF0
BA20972EDA0F691CBFFF3B0D379B0FC55B77E4891B7B8372F5F79662E610AC3A
7A02E99A18D5E87E519C45CB8CA3AFB38A74AC99214C1A182437C15F57963CA1
60709AE4D7A9527518FC6EB1ACB5220932C53F8C1A0DEA53B1716A105922A90F
10E116FDEBCB7491DA52872EA22B8280595120AF86B49759E5D61FF3B39D310A
68685F464915FD4B9A19F7F797BE424748C94F4636B2AA06C07C4A4CBC634CF3
04E5B400E7E4F0419B112DDFAA0C4758560F83D80A525C09B67B5906D65FAF7F
6E5D42E5D0AA0EAB4C189E34CD1AF532F27AFF45FB1B954B3DCBCF75EE60A9F5
018F023784C394FFB581FBCFF4DAD820EC8C64F08360B26A89657FD7F50AFDEE
FE8179573A3CF350FB4D216AD4BBF496AD7A9191941040560854A5A22F2DD997
0B6DD21DD3EA8EB09C49CBEC6CDCEEB0BBB1B88271093BDE64DDA024D67F098D
6C1998506DDFF7907AF00E4A13A0E7C93046411CF6B38DB4AC2A8A0B67A027E7
96725D60A0A50B983A1541C18EC1999A99D7AEE5688407D62BAD5B13725AD3CD
0243D3EF4FDD9E409795D8022D4063BA844909C67ACF82AA9CED304D5F84A9BD
1EA3C7F5D2A7BF70766158BFA2BF63B3078593F3EEEDD0B6083B6858AB0E3925
8588CCB7BBA9438DBD430AD29F127063AF4B9F05EE48507ED3CA9D232187D3F3
ECF6B44F723CA243C91BFA6CBAC2D055A7DE56C0038114145FAA7D6D35070A07
5B65B916EBDF3A8A76849653DFAE3CAF9561D85CCEC1974DCDECC6592040CC64
5745DFBA8D9BADBD4EE85AE9662F32185133FF9A7E44D66410BDE8B1BB1873F5
DEC1D8341D039537358F7EC07365A462A58013C7072979A427CDC52AFFFCE7E5
4D922702976973206C0EE5806C33706C59C7361AD626D6CE7D73B3F566F01F27
AA275388FCE7FD284B031E6E262C2511B3FB2D6B93E53332C2ECF4BF165C03C3
1E16D2FD363B562B17AF600E4EFFAE42CACA979C6CBD4B624732090878288562
D28DA255FF658D7B2BF12E71C704E590188B62B57234540987FAAA373A4E6266
1D72C99948D78EE0BA5F56079E2B75EF5612495DB6ECBE036E13DCC1B79D14C9
5F085D1CBCF29D52C7CCB0AAE0CBC720E909CF719DE6804AB3A2164CC5D2621F
DED2AD5EDC14F9CCECA26EFB9D9803197435588CB476680F7FAE7B8634DB18F3
061C5289F14D2E2136783C42F2AB2ED12973BC60AFBA29150C76C118E72CB788
E61E561574114577F8D14ABC37C23445297753EB71A3C330F984885006154BA3
E1A07EAA256B8E5F5EB5139762EB0F4A641B648B0D781DB48A55B5D15489BAE4
7835562F4B0158AA1C2FD39A76A40238DAC16668DEC357DA709888966E72E933
1F68EA16A3221BE420EBD5CD48F491BEAEFC0E9A77A1670363452518416CB3FF
BAD590D0A3E461EAD5BEBE6EE7B2A42697CFFEB22C6BF46BBD3EA9155A30AA89
7FD1F319335E45B9E6977E4D6AE67993F7BD617356C8476B612AC5F8103603CE
A940D6978F7FB59FF1123D8C3C49A4D94B1EBA8D4F698A0E2AEC4915D3822CF6
251E59382CCDFFEDE240D483C77B93B8A98A1E989FC6208DE3257BEDF187741C
103F1CDA93CF358AB9FCA3BBF85CAACAD1DD3B14B69236D94EBD6F8BE03AFC1B
A888B18D76A99A2DFDA9B22773F34FFCFB52DA232DCFB65F66B2FF61B4380D93
ACBB9EEAFAC007352614C0B6C531C06E1725F39215694891C91700EBAF3DE4F3
A232CBE21ADC4189E1493FC3DC4C0EC8DD28775C5765A293D8832550A07BD9D4
7C797100747C7353F4D4ED064CD9EF59E908C9F9590C15DB00EFEDAA1F5EFA3F
7A080233266EB525A9DF542AB4A9C67F423536F0D04CA26CED51F1B1C480DC41
89F24E742ABE0538776082891D1C59D2020EA83656226FFF9863B77F02E6360F
E50058B11CA131C0A4EE074CA921C7CA7C88B373D0C868CA456840F0F32C4172
12F9294A78B786334E2CA0C9BD0D71C00A6D44343AA8538F7B8888310B7AF5A2
20DC6074423D0EBB11BD126D8627CBB5FBB8564E9DCA08096000695F8E8DB262
E46DE52CC01A232CDB8A7002987F1B22FC646F4F256441D204FB5D50DA8215C4
0D6DA808ADDF19595A5E235BFBC7492BF03B836120DD424C730C978D8CF8BE16
516B90AB4C2605D35FD5FED6842222BAB3B7E39A8BFEB9EDFD2E78D9D7F23454
07E52C896231F471EFCE5B42447435F26D6C71BF4FD7D537A9B763F137D1F789
3ACB7BEA4CB698BD773550C844EC8B38D44C268407903B48A4F8255ACB501E69
834FDFD9C23EBD24B0242A7243EF4D094D9ED7D3D3B1722F6E359AE7A0B46624
CED878E16CE37F1393F4176A2E1C857E7B93C41106578D399DECB3DCD9F75E4D
F4113274A5F10BC4F97B6E7BCF24B510429B231FBADDC652D050A10FF2811C07
B8175E5517B879E8BFFAA4DA11614A90E3A7B66BFCB69E1C672E731A5CA07EC7
CAF3773FD4F6CC64ABC70AD540C2381E8080DD7B6018EDD45DD13299AE7C0C89
81F17A342F03043D277CAEA8BB7B57E354ECFF14185F954DFECBBEABFDAB6E5E
6ABE5CE0D9E700D8C3CD0F49E2304F1F5E04138B5F22A5EF4A7469A8260AD7B9
F6DAEBA5CDF03FECE29C6A28E641020346CBB83745B1C5116AC5AE6E82DD1211
5F9170151C11D585F84770504B1B2E58949EE10E331E3FCE3C05365BCF3DD1E0
94
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR5
%!PS-AdobeFont-1.0: CMR5 003.002
%%Title: CMR5
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR5.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR5 known{/CMR5 findfont dup/UniqueID known{dup
/UniqueID get 5000788 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR5 def
/FontBBox {-10 -250 1304 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR5.) readonly def
/FullName (CMR5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE26BF1F487876AD1
16184ABCA7446A2352AB37C36E9C9BB67CEE105C612D36566FB459D6ACFB1DC3
7A59448A06EBA21F8824266BDD0ACF9E356251A897A920C39F1AB236EE06C039
8C4C0AE55FCED464E19AFAF548D454FCF73F6087102630AEA03E622AF2596870
1353925801642BBDC11F09963F4ADF037671B73D48CD9C209DB4D5BE7F4CB381
94887E8365D25C45D1F87EFFAE360104ABD3235E4D2F4BA163408448E814D49A
3E7C171B8F1275D49937C3255326069007B302844EBF2BC1990DDFF1A34C2770
A262ACCE874DA1E0002188D6A713C79D5E9226178EED27D6F4E4DC24ED2669B2
3873F42A48E5C1365AAFC83FAD8B849E5D7E52BFBB01B281005A9EBEB4EA2F35
B691489305BCFE5516DEFBA092F66ABCA2D739A9277AC69F74F786045E63B0F8
66D545B12B0581AEB579D5E1E2A412DB8F66276E05F131EC3B9F543E11F40FBA
8CC47071DB04A5D38A707C9F825527521CA1FC412FB54DBD72E912BA4EC8F747
306A65040671237C8FE84AB6D6157D96EDE13B3A8FBF7140F1A9DA55B666953B
C7FA638353F278D07066AB8DDF0DFFC832F7025DF1AF9F894D52E9FA95EBBEF5
9D6B97768FEC26E845B87C6ACF5395C75B894B5A1F50B248BA33943C5AD6CC2A
8D9AC65C08B3206E7F5E5913CD0D54C9FF741A4D92B628F85E43F52082397891
66E6F922E0BFA2E45F0072217011D4B8EB40893F151E4E2E92ECE5862C467D4E
3833311B08340AE1C0C692095AFB739E9B9A4F56BFA0F0B2AB8455A7470C22C2
0C2EC285026195CB73EE2A713ABBDE4945AFEB92630BF852DD4845FB4C9A8C8A
0C8C971F29440B4A786108D0DA1AEFDBE03568B6B2F3953B4D07A5B7D6FF564F
6CC0D8C08CA459D556154A45133BD7AF70C7D8F474DE66E64FA112D776478A83
B282EA4E941CE2FD6D8F7B68D129CE0093AAF7C1D345C3D65BE74EE9391C9B89
2D4D31764F1BA81CB12CE46D15A6BF941C9F0EACB4A2DECC8F2F6B85FFF490D4
ED7BB6C7CDED10F03F68282B2ED20809F95840A904020C98299E17C46243D9EF
05B5B8173BB2E8CBAB3AA9B8207A9EFE6366C91A7674DBCD9FAF12A2EF4B5117
5687F3DF1244F5439ECD8AB0587F492E990DD7B516C664AFAB76CE71084FDD70
E7F5A38BD46926615659488D3548C5066C06E443016DD40275CFF3105573117E
369C8C34E48BEE832D93F0ADA7674FC6F5A64183DB2B70FF166E02E044B7063A
41D2F396A9158A26D3953F12982ACD1D7593F474DB98ECFD00EAF57FAAF17C7E
C1E4775B37FCBCD6DB1B5BC6209162E57E21A6AF427043562D9854B430A0BAED
20D31A9AC334C87875E53E0B956D33111955459DCD98D54E1BCC61BA58CDB41E
03009979C0A541FA9F69B55D3F3750515E5F268A7B55254B8A44CA732F2B9242
18F34C029665B31EB68331B0147607645983340D15E322E3D0532E6376D40FA2
1041F7988EB9F56D83946757786737D8BB4A996EA7933E79BE61B4EA1115AA4C
286B7AAFE80AB7C619329AD5FA772A6279FE85FA6B623138FAE1C6AE3FA45AB0
95D8020D2EE2979E8A87D7E7C5DA2E6B701FEB4923F401F892D83A4928807152
96CB664018AF24E829E582FA8B4F0E07387BAC53530AB3AADF74404EB2F311E6
C6A70F960FA962E52A30CCC6E15097F9B7BF011626DAD38EDF78745B60C0818B
34663683577D897B1B6AEB240F3A2AA29F1F1800FE0A5C205B35C6A6438259FF
CCEC942AD2D7C3CFE01F956B795C0349DD5380D0140D3BB54FD99EEE5171DAF5
4FA360A740589A1F8AB4FBC275CC06FF89A8350F4982F87E747501A74B7C81A0
0F40FBA9D2875022DC3D417FD623D89FB6A0C0F1B930ACC2117C6CE94AAE5844
0B5C9DAD579B7DDB73F2B26B05E1AAE30AF69937722E8360987AC0BDBE305B5B
DDBEF5A6C03BE1743C518E6B7B58A85AC961B8755BF37688E37DE0632BBE06E0
53FAFAFBE52EAF276365A0484A1A682C9B9486CDCFBFBC4F4A1D6BF71378F014
56DDF9B15A5AE0276827ACBD9AB04D685F52A62BD3DA33BDC2A262B756B58C26
4F3B552841B81CA60C951F400551166C72B8D357D8122685FE97D14AC22AB6FD
2EE4CC429D580AD7B8D12A9C601FEE5D25C98BCBCF96C87FCFBF28419BEEFFA8
7A4FC7B6E5FD377EBD5E743C3FDBB7554A1FB9663B648B15C4119CA952A8263B
278E5845AB929942E1A0FC4CC413F36134884EAF3704865C1478D6988880EB54
C5C5C1BDD7CB0548342B9C7B6F94DD6341C5744A9A3C4A866F620BB70575EABD
AAA42E3B6E23AA029080B299294AF2E9388520367E964A3A66A84628D75F1BEB
C7A58C92EF7335F30BD0A26D072A986635318E0473CE3CD5B4F1BBFF6E781938
EE4E3C11AC27A1BE0C3B55586A4565E4B967ED2EE4674121A46DA1C32C5D278A
44BEB43CCA246B730D337918AAA394728814C726DA4F9C40AC6EE877365976EE
A53276A818CF25E995CAA34039339C55DDDE74B3C11742786C1E9FA5C432EAC4
E184F35560EA31D687D005843B02F9252C2A16F9E4C31C18D0D45B7D5F63D589
3C1FE3D33C912B9CD79DBCCF9FD8223FDC18D55762F0DB2DB241625B91DB17F6
206120D6300D317E82F3DDE6D2D0825547C08BE7E6FF8FB54D4DFEF2F4E475F7
F3838B4ADBE49F8C41409D85085DB5A030858AAEEA5AB9CD2D1172C8D0EE31AE
507D8048E123AEAB05979C872ADBA4833D36626166BBB2A2CEF2F3E641DB429C
AB15C97D7180E8E6AC0D871E20678516ABAA4D616B51C132F41E5661858B8C2C
ECEE4A65A2B0FF310DFB531B213196D2E2AB015963246F44E22E603E741BBFF0
16DBFC284906983A8C15278A36F5379F46C152304DADC8D90C313961E5F58180
EEEC5A15131E5C48AD27F80B77EB0370482D528735FBA3E6C0548BB66CC222F7
CCE87194F565B9EF7F32E656E6964501CE32462FFA6B87087EBAF45D454CFBA9
ACA808C4397F3852158F1C0AE44772253ABEF6D278F726A03A9CBC4330EC80D0
117F9131C5974445B81093C1D6E093C669CD285D1BFE864D53E5F140D40BE4CC
2689C42C50C4137DE564374B2130609785D8F519E0083DD24A44DE24A68E4071
4A2122AB8AB9649660D1C96DC58F37F88623528078BFDA3BA3085D527ED4CAF6
25BA663A61AEC4938CA78C49623FE0EED33DA2D08CC78F86A807E791BC9CFCFE
8FBFA55EC2259B64C31F6EBC45D2DF9B47EE09AA54011D40F55B6F12F49F2266
EDDB09D44C521EC9568CA7E62283C483A436417B65B4FCBC7EA32AC6EB4E7B30
080816F29F06D6B09E5506D3149C5D758BA85D820357D4955B0C1FFB383E10DA
4D61774D3B23C84A339C7348ECA6078080FF8B436B2261091DBBDC02583E366A
622ED9F95D2A85BDBA48DCE8BE45628A4ADFD5A48869800D9B54F530F43A8F53
F765F5D5C44A9399FC1B9CEFA343966118DD11CB102423D46BA0F096795AF0D1
BA33F089AD80A104DE7FDF8A6E7D935E6713963FE3C57CC673BCDD423DF3DCE0
C57EADCA2AE4DBB30166C2CF1F7113DF96A27D4BBB23ABECC5A4795F1290F4F5
5293B5870F892C9A32C776AAD06D78D0514F047373879CFC5AF9D624DCE5BC8F
7CEA5055064050AAB2F24A1C792B2609FFDADC6AB8D0F31A12403CF3436A1E1E
E24BA5F92587925C4D6795A3FB163245FBF054BB1B0FF01FD63DBF7C192D0F31
33A17E7764699B669A3ACCF7C36849EEDA395E7F55174023A79904A766F21D58
3DDB7B4C2808DE7FFB8717658084E70DBE046A13BBF1F9BB97B3AB527D68DE8E
924DE65486C3B883CD65A95901B0DE57821CB6C6AE37644E02F5CB0163617113
C91D2C649A0BA10736F3709BD504F22DA8831A09BD0B2D6790A498F2FBC2F642
7845796E606ECAB2356238AAF40323D71B236CBD1E3E43BD5443F304D52F3CC0
28DB5D33A732695AA09C0449C53C656704D820217AC035DF45F59AE445946481
E5BFBE5D4EC0A42B5662FBEB9FF6ECFFB5E8517312F56C91A01824E401E7203E
258C3BA073C1B2532B8312F5AE29E37F5EA71C52F171593B1370D4ED5D7341CD
567390ED5B75D612D5873BAC518587525A591164E8D36D2BD89F792BD9EE6ACE
99FB72B23CB2445F12B8A6A0876EE711166C9E34897D370174C17A2495D58B4D
3DA19DBB1AF2E09C72FA42AA3D8047D05AC4F6A27F3EBF32ADD2AD2FF26EAE05
A9AB34C9287EE00E8EC29C6603036D365AE08E00D1C7C410EA2551696954EC92
92080C8FA5C9E67698BD7B895C82ED29391E015F83E0DA145384E223319CBA74
19494F070649E03CE9FF905619C6CB40F562DA49C1EDD2CA221DD7D3DAFA8279
AB50DE1C059CB8D5C9FA8137DA711B9D30F236526AA389B2F79F3D5BA6ED9534
8852BF4448DC1B72E361A6A2B94CF865BC9C3401D995529E2A36DE755EE001FE
C67B184AE8241D08AF88D626BD2D8AA12EE791AC4253D4761A21917C7F2F5AEC
795CD14B33F59DD7080C7654DEFFFA669F50FB1AC8C0F2E60201673A78D03DFD
DE0CB142F0F616C4051772BDB837CB4CE87A0C8D61E0FC7F90517EA0F5F6B1B4
D57143CC0AE7CA9521C1536962867D6318DF1C9CE6476CEB9ADB21655D379B26
7A0EAEC2D28430C14D38764C493BA4C06EF4BE6780131F2FEC066C4866E0B258
51C48BEF77011A0B5763CB3D69A50BDD50C2D7EFBBF18BF42544B1AC196377FB
4826BACB3C16DB805D38C34F9E92AA9AB5F9A9B317D8BF32AF8A758017269914
DE3B748625D319E571187E1BFED9CCBE11ABC18C0C6123D24D2C7303DE998847
0F6F644748ED225135CC3B957EDE8567AF3EE47F5E942EA9293F7BF74260D1D5
A6F5E56705E12C8379DED158E66DF54349F0504EF584C6D05C44CDD8B720809E
3DC36FF60BF55FDF1CA8C968E68346CF43C568E0B3175CB7D55343DE21CF9730
C9DF918360036E4204CD024A67E764D3CC7677E5B229C1B909ECD1B9042134BB
DD8E47FDBF63F212D401A797EF60011F52EAAFB88E3E70E007BF19826E40FE4A
73B57D52FAB33A737B1341381EB2ED307E0B83B45D6911E04BE623DA82DD6BDB
2DA096827E6A498A8D503668E45926525789D43D1BD5B896B487C0CE04FC9DAA
CD9078D0C8A0639E27F0DCD82C552A7FABA42BFFEAD66CEBBD4D2E4B4A1B40A7
B6FD119D37FA26C14C29A70E2EDB3253A1AAAC2650009CA3B97B430B1A05F2C6
F2120C8981683D0976BC42FE98AB2D33014B983CE1E2F1E1AC4A524249C3CF13
4B36652F96FCBD3660ACFC2F9778B729AFE2CE1BCF473DC5A846FCC3ACBE455E
2C37853F5204085ABF3BEE50C28D99312A078CE2F6F4C1D2D3017F0E5BB5B614
102BE45CAF8108407EA970111B5A97CA8C7A64C70D52D28D2EDCD27879B1003A
6D168CD054E87C063744CDE097887CDF268D89180AF8BB4F170804AE5DA779B2
1941775FC32FA189038D6050EC0E400BBED364E0CCD8DA571E902DAD812988E2
4BF761F472EBEB411388FEB6F901777D090400F695D823C758882CC008D889E1
02678FF81B252C33C89E3B04157C889D4F0F86D432F0B3DD7811BCF01C2FC041
0D4B1DD9CB6F2433F9B34E7E8ED8BB1FA4F9F7CEB5354A8305C372C2EDEAFE5B
4AE23CEF34AC457961B15CEA084E31B3741CF2EC317DF484736EDD688737C380
6D868BDC02D1E63A52D21C8E7C1FD1BD8717612FC247293CC91E0EEA08D5F805
70217761CFCA0F9C13996DE0F045F28DB67378221722416236E4DC00194E9C45
A3839F4BB53E226919C2CD13A44E4F67334454DB7E133B2D308925CC2E275293
F81AFEC4DCF49230F22EFA19F48CAB7E09FA727CC2E11E5A5CCF57307506D5E7
6DD1D26BFD3DF97E73C2DC019B0A75B9D6386469ACF1A00A5AAB55F99BA1DE49
9883DC4FB0E8AD9421B105E050519976705F7BC889FB3B6C2921D2E198FEA294
E192DB3738EBEBF6485075728A0E16ABD53A25BB0795A21B65AFB6ABD7EAA3F7
1DAE1BA012651B4BA0ABE02F3CCCEB9E92979F17A3338A376C57A1F13E3C90C7
9DE8ADE421329A57369CCC2BA622840B79C0DF098EA42B810C596DE85F51EB9E
C8F6FAA598C73F359FD7CB1D337E3B083833389846A99C87885A7537D35772DC
A7EE51E8EEECF4E4F38AA04C3F4C447080386A41F1461599739D73C58CD02D65
0899177F7D707AE793B4C915C590AFD6E6810700BC0C3D14B67E03129A4215E4
953B88C7A9FF1AF4B6DA293E1DF2EF5667D408AD3F2DFDBA46EF95A1D8E1CA29
FBFA01A4B965D1101CA6C0C2BF4670E94776753FF52C2751AE41872EBE3DC66D
EE58BFD3BF8F543802C7614F64E7A9CC4474DAB5F4C59F8085FD523C91F0FCE2
0CAEE1B9613064F9C9CE9556C841563A43660E0E71EE761F0448C41589AD0312
958167F62FB166655800150F9E81A558949071F01BB11C9ACFB2ACA4F332D2AC
598AD5ABD3D5EB17AFA97456C0DE4D3D872750F548C357FF34919A3EDCFF9658
F3DBF53BB3D0A204E84702DF6FCF5022E753CA92323ABEDC81071ED44C306A7B
C10D15F905672783BFCDF28D97EE156E293046C09595159C735A266ADAACB887
7026C404951C27B88CC3EC1A6F15F016D55AE6B5DD739914DBD6861098977064
762AE2867697967117DD7E3CDFC24D046F1D83856D49224191CBAE95C2E7B9DA
4DC5ACB06B9F637312C1378941EF6B9D966E84DA69E66C43EDC0564D4A9B201E
5CCD830900AC4D4EEDBBA4AD14ACBADA20179AE138CF35D6F830801D7F9D1F3A
B48B6C2EA3B77E7EE42DC0A26C7FDA6EB64DF4136FC3AE0FADAB84CD30392E44
49DD3F7DFAB77AC2E3A8D16C9BC002AA17A9C1E9166A21648AE2AD7F9DB250DD
2F3F480844C93059796E89238B0DD470329C2AEC9F178B83D421063BCC18CC35
2C562DAE86EBE6529D19066FAB70C8E73B260C71924B0B3DD652AE37DC2ADCD7
A3E3E1936FDD259A3F32D669B6CD82D73436212D6CCBE436578139AE07BA8C5F
07A8D2158C8F21007FC0B96E2B3588466A6FAB4F70363E994AC4FDC2CAB3A478
9C98DE079DF219648A6219EC7040A8FA91BE9D9451BEA89906677866F50B6FAB
E8FC00E826B115CD65FAF738492A919CCB657186BA12260C2816C44A632285CC
25CA1D797DB0D901EECA675FFA1182AD6D48A8A96402D07A288CCC02F8A7CE0A
39084DA379C5FD08743060851BD02A3C9CC298FFA0AEAC5F5E1928C46A6EBB42
7D2AF9D32BD0117A8CD7B453C66FF39163092568B5A26F210900D466EA5CE01F
14BC1F57BB0D3186BEE9BA1A5648887CAC06E23057199A31781C4C37B1A07C32
B8AE8A40F5C481C8D2854AE5C2C3C746C4A2B48189A373A438F512642A55F2B2
3CCD2D5A06A1859B50C1C3352B1B5B56E652F00EE79060842A33A8CBD002E777
3CF6C051A6D5F02E35480569E9D00493C494F9FB977E665AAE4468E6DBBCC950
33876A21B75095CF391E09E814D7A03EAA19BA0D7A560610CC36EC3A9CA39CD1
4A359FBC14B07975379B68949C9FC2DFAF037C56C13802A7F66C809549EF2FC5
25EF3F517F06F90EEDFA6F8A3E5F1F3531A5415F3191B8FA7B0F28950A20A1E0
6E354480D09729E3A2D6796DB81825DADFA4580FDC7813B7989B18020C3AB1A2
87E948890C25563CB26A068ABABD94F3D42213218F2ACBB2F5B317311474B222
BE1844548554B37C97284940D5B7AF9E4CBD884D4994A76CC1ABF8E6AB0676A4
0A8130F05B0ABAC088FE4F9FB536924A55451C8772B29087B8E5E649DA3B449B
4A055214DF69D0218549440B3665E4D20C5A8660B3E0C3ABBA3426E7820E1A94
5D273A6ACD83E2E93232694810D24D32C52A6E1BDF6B00E0D533504E8526C2AF
267EE06D621BC343512D008F8D70F26AC6E0B3BA65634DA8ADA5F53CA25E6761
D24AB2D3C0E18A2FA4078BE2070F9262AD90A5EA383EE2CF941113C43BFEFF97
3BD3ABD3FA435D32F1E76E9888F48E274893C42B72751C323F28353FE4524C1B
C09EAE79EEECE6FC6EE3D0D3B8687A28C461A69C8895371AB451494DCF9A395C
304D95A82706F582B7E6959FFACBEB3D7CC5D7112DCC1AB43359CB8E090E1524
3E235930A608462480E1C805445D7D14DEFB86FCF17C795B08FE92EF47C12179
BCCC3946717937976DE08719B4417A6CD386655A1C0454CCDDB880163FCB5B53
9F77BD7C021549AA98C0002B88BD85BC8A68DF4A50505E77C887BF8037DA525D
E6C68E3CA023622BA79E5533258E84DD36ABE668BCF5E4EBD1A8F251D4704724
823353A84933B88896A1AFB03CC96E0DDEEE9F0A94CBB1983101AAFCC3BAED31
03163C075EB93DF9BC0ACEA2284448BC1F05E3752E8C124173CEB837E8CBD1B9
2FBDC32F69E44671E261B9C5784C6E0884FEB75D85CE67A7DEA262EA2E3F7AC5
F78C5655FBD2DFEEF95DFFD9EECE99F798FD0710036065BCA23A788F13FCD6CA
A0DE5EEA7F32A466C13F18EF410A98472502733F7CCE53B7D26CC3678D79D2B5
22D61FCACC6436E5713A61AD6A97EE3E159F92E47FEF3BC48A0D3CFDCCDC0D5E
380FAED23E1B3DD19D3EAC30194A8A7BD8F21214510773E8F87EE2CD4808F520
9E2DB98F67A6E1A795730E53507DE83A5EE38C2F6BCCFC97E71D38A7AFD05E80
2107AAC949B6E07FD5C00419C5733DCFE2F48CB8AA9F81184C3B2573A8E623FB
6D6ECD74AE40C27C061D7676BD132E3C85ECB9684890AFB2AA9D5F3C4CE0EE80
76D4B128AC759F0AF8DB8FED664522EB02972E7BD91BC7385FF6B05C1743279B
140DD75CAD8199C362D921C9BFD3208BE9793D3408D175E7DFAB7EF20C806DA3
F884BF85CF0AA57B816C8FADA6C972BBA045F6D319C9DB66E6AB06B619B27C5D
6E22CF8975E3F05150403E73701B10D4CA95E0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.0: MSBM10 003.002
%%Title: MSBM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSBM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSBM10 known{/MSBM10 findfont dup/UniqueID known{dup
/UniqueID get 5031982 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSBM10 def
/FontBBox {-55 -420 2343 920 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSBM10.) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 70 /F put
dup 90 /Z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943E919FB4E3240FEEED78EE63
0677FAF39AB2543D18C08A2B98B97451CD42CB7893DA8601CC0F45A65BEAFC64
EF72554395DA801CF2E9E3B03F65F1BD98F8C5F8EA06D7457842303C1A817E7D
69821807328AF426B9DDBC188A79A66FBB9E6193B4A3EDFE3136C6574B9C4C94
E2CBA4FE7997F949BB2DAC0D329C2AD8E4095BD18A037AC9F77B794FC389E5CD
56CC4C0B74D64FB0D02C92B88942C18B6DA84D4CF482DAF3A01E80BE483AC6ED
AE98F5F3E49BC762EF6BA937D528E751D9588B0A1E82EF0A5998150EC3854472
5A91EB983915BC1D6E2C3E615E0267B39D6937ECE0EC16162FE76676E5B69F3C
BC1AD934BECA284B89F0613B70876247D768BCD246883CFF4D819D6265302730
7E4BE6B2FFE7E91CCB8C6D2AFACDB4C5DB9688153E1D6B2DE136BF7068418A4F
2D1C0CA301B1B97290B46EE14B8286A81E709980F67382A5132F01B2D44DCFF0
9753E776AEAE2141D580E64C82598DAA6DA4057FFA9D02C3B77AE15A50AB457F
3FA5A10A3C986B22F8E154C1E564A55D3BE4487677613DCF793F7E1B57C9A925
BC57746C25FE567719A9EAA9CC44F1D0FF8F92C03132B205F57E3AFE9FB66632
D3FB3EF5BDFB9848030527FE759A5273CB81DBA2719611355F43E34F8FD7D0EC
9BE47685A2D122C9B60198A430C5F5E3F972376F0FF4BA52BAFF64095F7ABCBA
022622692231FF87514FD912B80C07A0EDCEECFA629E2734B5EFE2604E8DCB24
32A4C691DB4CCCF19EF897A9F4EA5B2B5AFCDF87AC06B93669F3007C1295E016
FF0A99324B80E37020B1080E80949525B3278DF111ABEA48E7182B6F4DE2DC90
B8D31A953343D5DB78B1F2CC6CE631EC7E3D0041A823DF2A4702AAC0F0A2F018
E5ADCD42EF2EC8AFF6F4705D30042BE7B6F866C14AEA1CEE04DFF82BF14931B8
D297C38E6DA6E587C23EF0864F69BB0DBC9C1EFBBB97B92BADC336A4AFAC6A91
0A6B158DC42E975CB5D8D2054CEF367FB112456AF50684C41F80B1E7ACAEA852
EABAEAAADE1EFD16DA13E367A6FD05F6C5D61A321B185BD0D596400C8422C933
BF332800160813A68AFB7152E8997DD0B0EBAF5DB938AECA11B6FE9A100A5194
CDF78D10913192CF9F9159FBAF5DFDD5E48376E98E4B8F2950504885478E6D92
ADBC4C21EE80A6E648F50518EEBC617363117B9A8F99EBBAEBDA7191C8F1D502
A0965A921774345BF96E2C2F6169C7F9441BDE6E1A12A6D690EBD7F959039184
F4DA90A914A8DFBB23FAD21BDE6F371A447FE77119CE145AF00627E581998E2C
8B88A80FB2DC565B1FD401CBB7DE397978C098ECA5851EFFB735DC958663C9C6
E9CD75DA2D3B2F846AFA26C309890A7BC2009C45F76DF9889DF68D79CA7F83E1
32C480E079C87BCC90332FF747452273D8CB3FCE8AF58D3C01B4225EE9F1B4AB
1E36997FF7858EDF7220AFAD961AFE21534E115EBABF14962E39D89B49C40BB2
67260146BC08AD1A15E098D5898F931118E639AB5E1355B58317BA6E1A88A57F
39CC438E3033F495F4D9AE7ED3128B3E04BD4CDD0242C62BD1AD814F86CF9A79
EFCD91A35B5BC210B67F9840974DAC5DDA34E6AA8646B20366D690F280B33249
67F3C961C9446BDB3F38FA5A1CB2D0ACD41881EE348B98F57160A225FC02E32A
BD8C78548AE4CDF1EC93AB62710052C7FDD96A73281086F27E4B4300DA560170
DAA13FC0CB89DA343EB76F0E5E93FD9961906013D27D9D256A53DF3FF2D57AB1
89F9141AF4F6EB7E00EB7B1891703542A9EE15F1E45B8ED5184D71240B5E9324
CB81D7C40B3B825BE4095F750216FE2AC470918F81F92FB285D2E55373D4D262
62F85BD259B1150102340E5A6BFE6977BBD57CB66FC571C77304
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 39 /quoteright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 58 /colon put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 71 /G put
dup 73 /I put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 127 /dieresis put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158DCD1C1BC03B83FF94C60B1DC71CE8A86B46DBE661C9F8F4677F8A2C7CF1
E41A91EBDA2304735147BE66CDFF2673F09D408297302124C127F0B35690CAE9
CE1679120CC4D582FB69550AD34A047DDFCD9D411724554CCED753DB52D6AA7B
22B0C55EB698ADDBB0F8ED15C971AEF113C74B9E25DA29199237B98DA4023665
C2A63A837E4CAB38F8DF37DBAB5DC80C0AB25B56BCA5D899F1575E61ADF75676
F48EE26C054AD9A75FD88A3E17498AC26FD4DC8000A125D6DD423540B8A98779
B28CE97C9CAFAC45693FF43249E4B559E7F19FB349F94B60AAAAF05B5FBF244E
982B4B51D997DA5811CD43E1917DA885DD96133A5CE1A290DBBFD88AF285A879
D3136C41C839FD2276760A7B4F21F4026AADCDAB3F113FCCCA9588C7FB72643E
AB8F6D8AEAD1DC3DCA6E436B3DF24E7DC6AD37137B49327871EA80F3B8AEE932
D20D9A5B4779DFFAD7B3E5D447023D6433575F8F5AF589D7E094DA3786555D0C
046A427ADF128E00AC7B458D5A131A130D6F49A7ABF47833791F172D69FE6393
EAE0E90E7FF7BC2333D4E0215D5201E4B209591782F8A664335F67B9DDE36DBA
793EC77E5EB405862D14EAB6A99218B3F66F11EA2F345629C402BD8FD9CA0AC8
FB5A2E119DAA9F80083C9BC54F4586C44320993CB5D9CBDC8F8522001F82A16C
E307F175B794F4426E5D273581A6D2844444D82093FB03482B270D693391DEA7
CB26D4A418E48A2989167B7DCE251F0D54F414A0A2B1B15A10417CBAE8887CC7
C4FC60D6580E5EE2AC0F5B718F75DCB33CA5058EE84D1258EFC559FA1920714E
0C8692F37CF1D7E3DEFD43B2B428FBE2D1C8F5DF5891AF008F869D8A0AE61F9C
13BD60B22AF15B084A8B8898F73D7AEE05D7E74832DD2AA8B85FC266116DB6CF
97066AF9A7BBEA976AB7902376D5BDEF977E0F5F2ACE9060FDD7E1E140A8CBA1
3C4EBAB408D908B1C5AD935C3A60B8AA7CB100B1D6F2CEA9B27E71C0AA6E7545
07F6C88F2D7450AB60F6C6C5F513560C5B9328F7A5D76A409855639AB72C04F6
ABC92A92C3F42F4101AC88024884C018C7D0DF66A662DDF433A635DFBB1FA3D4
48B363C36F9830029A7CF02D1758D1786AD39AE16131B522ED1B7F516E62A714
0AB9DC46A3E01092F57C1CE1A5474A92C4CB86DAA0726454C7D49477C1BD064D
8CE9D646DCB9085D68E9217A8B47246B7C4D03A5B1814448ACFB10D386A520C4
B11F89A33FAA0EBEC92FEB04C3A6A0FE09FFC53FE2F29D25BC8614D6C29F336C
5E9F60656D2F7EA48AF1A0B3BE75E98F6E712917BE7D4DCC8E5F7C579303D67C
1EB45580B80C4B1937469032C36588D4CCF10C1EA26A509F71696EFD6AA65FE8
DDCF6896665B609FF922648E6D6191BFA132B8B8B2F95468CD1EC116A5BDFB1F
A225CEDE409A83E8E129216035F189CC962C1E53D5C9B29D359A568F6DA53FED
350B9CE6F0E886D3B710E27AEC5C52BB271E73687D2ED469C1BB2E4B21E08EE3
469CB16495473ED6BF5F7B254305E3C2229B9E4E2D24B1ED558651EF80FED18A
D83CD98C7859164EB104CE6C16FB0A6FF881EF3CF533601D766DB924A61258BE
45CD7C9278DCB8B9138F84C83078E57694342C156492733FD75811F371B3895F
A8A7E9FCAC965ED71736140A8D1DB84A09E38D72D45842EBFB3D56452CD02B42
4E3E3CB8EA0DD99752265DE6AB34E5ECB3811D95422BE55968B1E8CA12133930
84A44A29593E4A81378405A7DC9A8AF0CFF1DC3F8AB7D405E7421B44C297B193
5AB140A1D53DD3F637299C83C1D0444FE7F383AF3E0716A580A7A43405CC175C
CE34464448C0709C17105A6400C7A495B2FCFF3816B3A61380F863B5FD0C01D2
CE29B9AB09D81E427E3BF24E80DD18210EF0387A7CD0F3B557197416A3D8DA8E
F97D0AC54D7A089A4D488A10692ADA35F0BAA27C28F754521E715BE96350ECB2
40F696BCDDD1A9F0465CB43B82445785295349B289A9B088BD9EC3B6580F2817
D63DE90FD71C98CDD5B85319EA3EABF03C0D21319F3267804C0E1F31538603DF
E21AF0CABC4387BE9CE93DEE5AF9E6B37E842A5EB8D49CEC9F91A24D50CC6E98
094877D596D70CE79FACA617B327872334F718B21D74FA8A73F64AA5DD9DBFCC
96B5155C7598586289D89CE268A05C9C46E01317BE53821233F1469476818DC7
A83E11ED6B960A8F329E2CDA61D7589EAC0C58F63336A59B9521EB39D41231E2
082FC41BB789BF950C292C152AE88FCB83C99D86095BE64A36FA09464564A79D
E07CD3D62F7C3B3A6A190063E72F4366663348BA89F1ABBB3C0976E79E8841E7
080BFEE4E632E36C1840255BEBAA30B5DA9EC07289A639059A59F1F07DC7F74A
0D25041BFFA8B04D46246C61C6E51B3A7EC2135DD587204FAF58BF06D09F3B3C
BD117AE38E62F8B9B96E2D20C12051F15E42189D550A9F98F7C6E1B37348F0E0
EECCDD1ED43CE8C8AC766234AEF0DCFDD0A57365ADEF008663290F10C98D2A79
3EDA0B2772B05DA60F3D31E094120E0E5117526BDA2A586190DBA95A4D89C065
ED993772BCABD0A455BF8E021369148456ACCE89DA82E2E766554F3B0C7332D6
FB2ACED5D19F188D2380278FB9B8E12A95781076799E945013469C3D7DD270F0
BBB5B798A5D0F79967ED1002A74C8738FC3DD1ABF15229109BF9296C681BB34D
FC847994B0639D860F9B43CC73F55431F902C010DCD2B820343C96F968FAA7B6
D0D7751DA58803170DB43BA18C06E34063BDB6C74EC35FBECFC19D0B8DC75E48
819BF0A089884DF1DBD71F17512992925546D047F2BB1EE917B0391D8DFFAD70
27686250959885861F76E55234B9D3F08D50F8EACF2D535E13400556D1D07217
4EF3491D6307F7133603D9D27B57B517453A7067F8E9D019B06836D0C3561D41
4D9517A1ACAEBA112FD71031133155254E4777D96E388E4432DA217576D9871A
88FFFB1444B6D0F630EA3586693EEF0C467B5EC7C2AB0CB47CE252E8555E8250
B619295F104EFA71C12BFCFB3B473A8E735D338B3AC33F681C72698FFEC369C5
AD6FD797181E0DFA2DE78471491E1E13819CF6A0595EDDCF46E43E35EF09F568
16CBE2F8D847205E8CA8BBFDB1AED73B1B2B46417EFFA97AF0A4DA57EDF7B97E
3D65BC69C6BA042714A6DA75B6594AF1105354054F1264256851BA5B21F9BB11
3CBCC18AFCB5968FAE639FE06FF64199038C006BF4BE5153EFA1A2F6067ED0BC
F8C67B0E2FBC757F9DD3565AC9CFE2974D786F4E6B9F785A52A7D3361A1AE3A8
2DE1D384E0C61898ED380BA895590E4999A373A0ABD7CFFE6948E39FA117B079
C8BEB0706E68DD0F9F523ECAA12EDCCEE24E3A304AFB4241A91FED405240A6FD
2DE5B292D9F376EC94BBF24E2F3DA706FEC3942561715495828B17EE7E94484B
1F6F44475375C49819F90022A9FDBF20EACA6D52ADCA77B56BAA08D81F6EB1A4
EF484D539E3F19AE3FE9FFAC261F750C1B24F608DB95C1341A77C60259AFD7BF
BA9AE93D591648D3348E15577ABD8222985FAED7B6A1CC891D07185666E2A424
6990A7AD75FDC24A2207E5A857C0E850A953352DE63CE230CCD921ACF0AFD759
72DCF4E96772AB4591B11A2DB1F7319A971FC2335C4E366F39258F0DD99867D3
980AA56971C138DFF295E5037622CD33BA15B639ACDAD9FF928F43971CEAFEBC
9763B03F3BFB7C57E0A3DEC352C10AF3EE307E159C82A4E76C543EBA4ACF3EEA
BDF3EF110A4B6E7DC0D313CEAE3B7066DCDC196EBDAC55DD23E73408A883CB20
46E8A11AE0931744CFF490A7B2B8657A4A5AC14F9C0483AD689CA5BE15C3FA96
C37B6ACD96F8E6E8FEB1113E969D08FE643421AF1FDA615BDDDC19A558ABD727
88AE5D700D796AD83CEC0735AC8216521811C8D8AD15AE525FBD33764655BFE8
8A742017422B71F1F2FB5FE356A32BB5F337C05CF64D81FE3741D934528E4AC0
ED206A6A1133D8151A00EA214D1C4BAB9517B42A99BB88B018D3A3F40B8FE3A8
E1CB81221F5C1A14D41ACD313D783C2BC9CF5EE009E1B7902E070BE10F03571A
DA0B35F1712AB04A1FBAD50270A2232C26EAF0E48AD2E317A573FC1BB25EF161
AFEE736536905683E26E0587D214979D400877B35DAED7AEAFA49D7442EBB26C
BABE23A220F662A45BACB4C935EFFEBAD860706B7D55C00E927EF7D853D4E996
0EB5D97C022468E1A80A4FE5DFA9A07A7E6F5237A6B7EDC7826DE6B5E4D09DFA
6A1C5EE9444C05FB93D23322B9564BC4CF243C75355E9867EFD910D18AF228DE
2A59ED49221AB2CDBA458C2BDD31D9576C35490EE88D8F49FA335E8F14A92C3C
4388C401999F24B839979B859BAF188491631DCBBE30EAEB1B52FD5F7BF8D85D
23194CD7B952C5901213BBC9F164F647FB02E1626519640E1071C176BD880F2C
4ABF6F017BD845B7071BC508B06349121430039C97CA4F8E4571A716A6B6FC5D
8F3B2125A9615E461E462D80E1B8BC22EBA07F871B671AED6F27D6BC7E94BD44
8FDFA6E376B929EC70D5FD266BC3DA0E1D7794AE6006D5F0448B68F988B7FCD6
F502764D00203C21F1D0860A117B87F222A30D31C3A834D7D606F6A00F284202
E2B150F0DEE700DC894C5C7BA522571E88A2AF8F3CC18C7927382F350EF284AB
DA1EF8723FA3B3CC66ABEF72E01B7B14818FE67BBC70F729D915BC8C6AC23725
4C2B82469EC6B352E795241A008DC910650E8D2301E32DB93CFC0193D85C4A7B
33F3109B5EFF065A6069283D7435A0CFF1150AC79E5B186B4E1DA8063141CB14
8B5A25628BA3644DAE010536B0D63CCB8032FB954F83C625088C1768B3AD3A9F
3844200320769F2304046B181CD487056821CC78F37B3C4C0FE09ACF5AB67C0B
B0BE9413584883AD2F6E22DE83B7B19491BAE8ADED7D2389861FB4BF515A6541
EC430FB0695966CBAA3444D1AD0204CF1836582586549002F1FB457A9C24468B
33000FF3C5084F4DD1A21D5940C058FD9B42A8D53BC39736A70984AEBFFE7DE4
97B3454E1B8A8C1021E76A994AEDAECF7C1E156CC29235EA3083B80C251A69D1
68D537BE6FBA8B70017CAE7E36F1444A0152B230C7C20BB9E019AFD70C5425D9
229F56175E220736F182FC94FAA7EF9C25F8EAAAA2C45B906E7D0E919F844FB3
9F4C3B475DA34581D0AA650763DAB77CDDFF399ADA35D7E92C0420F9419D5DE0
5893F5DDBB2E42F32EA77285A073A8183732E7FF588B7C4B9E42013D467CA6D2
082AAA48A4607DF2BCA505E643DE4A228988517926E93D33E5C211B1AE71064E
7DC1058F38C5026FB8BC9640A2DC5D595A3B93C8F9D121697B83F80B44264570
07C9E1DD92988BE7A2DE8AC5ECFB61AE12AFF16EA83DC5F9D0E2BC1D7B77EE18
AAB69834EE8571453DA857E129DBFA7F8A2A9154385844ADE954A2A2F82AA04E
B89412C6C3A3798A11F7016DC2D07A2ACDDFDA46922D73A74BD82F64ADEEA953
810890189F57FAEE38A6FFF56DD7388F18BEE6052E009872863D1D2A3D01D60E
09AAEE8E4F2147C851A6E84A450E5151431C4D7FFCBF34B9C72A54EEF144402D
6D23EB84A6B34E51E79092B7C1103D94C55AF7EB7265176A4FF27D3996318A96
BFF3BCC6E4F3EFF7DB85858F3BD0AA4253D6232509D64D765D750E3F2C9DD271
B359EDD9BBEEE70AE56E0CD91FC472AEF355000CA3A772E8AF8A7C98768A8B86
ED3932FF095ABF43CC274C7011372F250DB9D43FB35D93AB918612511D9B8243
A5B8104884491532ECA79ABCFEF536DB50A4B530F4F17084D4681EFF9B8BF1A6
F9279E743D56DF5BEE0A09A28CF916A0E3CD85BE36F2D25F3EA9C398774D736D
F81949B56F785E3A0DDDB1BBF3BC78DDD08F9B703F1DA3712FFE6304E6070AF0
AB97E9456FBB48913C6E7091DA8C2CE671F8BB1BDA010613F8BFBA81CEA75AA0
3E715AC1329D703832F7B8AC3819C9E5A8F5AC620A9CF7935D22BE8F39E289CE
955D35795E77ACDAA63569B84184BF32570DF04B1B434EB12C8D742165D1D4D2
F54292C7389BB1A3BA4AD6863CE732A70903A0A0D2A41662B3F8DB214862D9F3
C45D0F1C73E562AC5AF9915E67E7ADAEC8C87970243CFFD7CD36DA0CBCA1A52F
4505550BF3BE0F878118F1F9FCE1FACCE9BF53057B67C6D6416D64061575278B
39D95092F3E0CAEA2068D14F2278E3157FEA02015F7EB1761650A006D9B62210
E9620AB894C8E33A0983EB121C1FDB137F3E61A7F1029FA5E9470F955BFA4416
40F88249D39E5AB9EFBE81A01F5A430B353A63D1CCA1F0A3A1C2F507915C3E42
0F59ACB9FB155D4941DD3D7BD3445E68BA9DBAA5DA40358C1B19BDEFF0AC6B8F
10275F530DB5ABB8B1B17430E84218BFC9D1BE5AD351D9C1C6C446C4758464F7
F0C49D9F8E469091FDFF1139722D4C77BD969FD6B00E3C44393B927B9613EEFE
AE0CEA66C61905B6E4D45F660315670C44BD1B6FAE4E934104194B7A29D066CC
EFF3A8FA97BAD8995D7D988CFAD66E4C42F3BB98768E71A8C964AE4B03309DCD
5BFEB9AF0E0310EF961C08ABE4E12050045CAA964AE95144F62C1A2E412C3CA8
8C921410C3506FD5571ABD4F6C198E0BE79765ECEE74CC29D58A0F30BD77BF70
A0E5D019AA1346C042C657CD9053BA86276D4F5D23A0BCD6283D8D5D9245A5E4
AE474B2BCDB5FC9DD94441D6C8FF802C21B6B1345347319532A872E382447286
E7EB408A53AD7CBBE2F3F4666716DB6B8FA74C7D1FCB20B40D62BCE6842415DE
9877C7BF7C52F841FD3F19C77DBC295BABB6F6990C83BBB2FDFC748ABF265B29
815B15E6AB739799CA1C1A44585145CB7EC707DA82C53ACF19D9C8CA25E69488
1F1D1426BE6F2DA28FAC89267BA95F6CE5500809406268835BE4846DB9AF9B2F
CE2461EDB7961B67960BCB697B8E2F66DEDEC804478050E29BB070E39F2CB859
FB3AA382D85BB48EBAA73D885C78CF4AD5B32C75014FF2ADE78B949828E1A5CE
ED843628A33F2650617388F4094B4179DE861EB57FB46FA0F029BC56CF85A4E1
43A9109EDD32433C6352F4319F03D3453F8736EC16849589E9BA6B7450269B2B
9904B159C12DF3E3E82B76004235C40D769CF47230B79633D4B8CE2CA72BEDFB
135EDF7E8641539C40E20DCFBA4E429F79E7A6FB723FB7AA70C37462134C1D5F
DD70FF34EE0502D3A9222ADD8E7FB5D1FDF819F684E724E78F754FC5CB9E6F49
03509B7D4DDF1B134FE6BC02B85EA91B91613AE58FC37F1669A5F67901DD672A
1280196A774A6B6473BC3B9C363CD64905668C3B96B77C4887B07D2B23E115EE
0D05FC20B264F0D781DC565C8BE892B8A4DE25BEAE51981E1FC51CE36B0FD795
C9143C994A83C78F457CD789823E6789097EC382B0687A8DC9C17E3D5265E23E
013B8C1AA0D7CCFFF79282B0A6C88BD6C99C1A02EAF6B96FF274222DF1862028
A595D7296CE02C51987EF9AD7C068FCA390362A4F33583C23FE6ED05633E944B
983C21D20DCBC2480800EFDEECF165E9C3B7E6891586CAD166DE738B25F38A8F
43CA2DF22ECB7892021F7E6AA59A3733E01C191E5669AEBD39F5FD7754C74143
8DE35C8D44F17EF6E0535687BD18F1BEAB105668318AAA8CF65F9DB3EBDA5E6F
4666017A35DE4032E30EAC216529C44531D3340E9B81DED4B01DC617BA47CBB6
1022B3A8F7413CA1262CC7ED0D26257E3C0CEC7DCA1F2911BC207882C269ADD0
9C3B8A948088CB208DD32B76D83C4E4EA75B03FFE0EA34B646BA8A32B49C8F88
6E6B10C3AD9A04BDCA95D72504D0577DA29CD5B1AD349A41696D73A4C2BCD865
1CBE06EA678F55C898CB1B7FF2A2A9246928EE056BAF5AF00C7C006555AC6A4E
49628F2B993A9627AB2FFD4FC4E20275CC61242FA6EA53DF4E643AF7EF50278B
98C70519F40768493D0DB698C7AF68FF2FEA801B918627BE5928AE68403AC7D2
AEEEFFD1388E991FB6D3F4FD793D1CDA42C72D89571C928040E5CB0515E7CAC6
50569B1885BC5A2077E4904969E61225C6B99154B9E775C6C1F75D7961772995
63F89166C1B626D31C22E96274C73CF09C2E3B97A93731B0552B70BE0F0A36CD
552E2E7B7CE37339AA3BCBF7E3BB89131941854BA8C96C4651716D5D24DFD02F
8FD568BCE47618333B55B37B0F3887311E1F887D088756C0EABD75E0C33F398E
59ED6D2580D2A8991358BA5C294D346A7085037D6CA52955CAAC4DB37140723C
595662DE4038CCB967B6E1F37580A3CDD48BA218F3B5B36F9C34D59C0F4F0145
9EB3FE9B16F31C7CEE7337B7CABA23790B5DAD87A0399D7A3C4D84AD08F144F2
DB410CB7F5BCA6FFFE0B3A0B20E62591953A687C4EB8C877ADBC7AD2B7BC266E
49EB46D9A2FACE274D350EEBAB87F9809A5B1A94276F4E581DEC6B47E3A3EAF5
D98A8AE38ABAC13A0AA18C12A5A0150C48E36BFCA01662061AAE0FACEC1DA414
A25E1062AC9F97001AAEC280A0BFB5D2402DD361C1D2677F77D443B473C56A43
F05FF5F5E7C045C502AFFC93C8AD16855A6EED7770D52168D1A5BFD391593473
FADB068AE555BEE7FF4C20233910BDD48A9AA94115F250F852C1C0E96062030C
ABB578612846F4D1047AEE460B0E7131392C96E0347BFE72A5A2D40D4A2E880D
9C6F27ED8117EC81D4965B8E286BBDAD5710EBA50CB5CE76D8BE4EF3CB2BE3CF
8CF694EC28EBE104426178878E75C2C107BA8BE38636BC8AA0E88B4C23C29F08
2B737F54E89BF6F70AA7D586AA29E15F8A54D49716561CE5ED123545EF52844B
6134495F72AC7F8277B42B090EBA46AEA6AC9570AD3A97BB6E0EAD6925D9DB7B
8560BA8E4C2009E9B43B614FF9D82414D17148AA21FEF80589A0C77C64865344
5187360C7507B7F04E245952FA5301D902AFDF5035EF7BBAD0493E0A7949CD5C
D87C063E349765C9208E2A3D58754D75DAC9EB79FBED269547E88A6E93BDD2D2
CC4C205516C50BE417BEB7B831E211BE0D449DFA547AE0320262EE410FC20198
E44BB108B4A28D66CA5529B52C7DACFAAE2F2526794167718AFA0DCFF424E1D7
F508FD506109190F1D5331EDAB7719F15CC8156D91F1C3ED3E3D9C450B3FB437
5C53A58372677DA42117A68C1E58A959AC661FA9039DC36843C3A24F5F812350
3147C1F24D393DB9A996E299ED0C91F327018170EF359AA53DF7F4CCAFEAFEB7
425A82DE1DA5433EE7693CB43CE8F7EFB0CF3049C356907ED89A673310577FB0
7A750390F3CAA1B74EEB8A6FA6C9FD39592624CF5B7E1836B73B68CA76FB18B4
EBA477377096A04A19E86841743AA4B226EE31792AB8F24701B6873EE0D48528
FD0C540E7137A726A3D5171BC08C5E512A7BA6E7F9100079BCCFD7B3D3114E32
76853DC19BF2C5D0A0310AD7D9ADFF5C985210FB80A4816A81E741EFED5E55CC
D2439D2311517598843DCD73FBCE9C78E00FE2C43D714162C0EAB7A8E830A9DD
92943AE40209CB81282C53D34BD458FE8C454A689AC68AF862FA31FA54EB1BBB
D57641CC6664DA794EF526D79A988FDA74188CEEC9EEB02C2F0A2325EC16C7D7
F258F2B6B69C632672CF7E3BA47AA6237531FCDCAD3C5597BDE027C4F37AACC9
6226775B037B29505C5F8E558CBACF0242168E5F2B2AC0236BE8C6B7D7529525
768EACD84CB519444433526395193A33C8ACD5E6DDA339BB86FDDAABA209B994
F1573FA67F1EB88210E39463FE4FF6D36207FC79F9EAF912EE150986911F169C
187C47C4E4C0CF5548956F69694BC548EBCCE232BB7FF8BEE120183EC1D235E4
F8059814C123CA62473FF811572C462E20DB539069C2A811F3CC565D63CC4335
AAAFDF6D62999E655FABBDEAF1B9A767D5C9CB71587ADBF1D0DE4FF9715A77E1
E60B7F3221040CD790734EEEBDE368849C90F51554921FCF04AD71890ECAC31B
75E5CF53189912D1497840218E5A0F58D939CAA97A39510667CFFE9F8BB82771
94AAC9ED328F3925D372192CCC4DB5F42D05734E7B498443DCB3B7A3C18964A5
4C3B99C296688083CC31EA0F91E3315A6D9F106AE95D0A0FEF2F7BC8FE53C8B6
5ED37CDCF2D0C2B2E3B8EE1B18B967E5109516B444D8C74FE29DE48173B1B571
D3F58D16176DEB349A80D82D9D8146387AF8F230705FCF0A21C8EA785E0A01C7
C69B06E4C3C04A2125321B2C0B8421B2F57E7C596956BFD7DB30BD3E9610F3EA
D5806EA2B29A673FC8C724A3F372C626FAB977CE023B72EB20F11AD923CE4301
4147F3BAAD3AD2AA5C77F07DBE10B6FA7EAC640C8180BE7C34AFFB253301C239
FC7C7EEC7F5AE6076F1EC3DC798ECE1C922FE48430F9A95B0C3BA1FDD75E8339
10BEAA0E4AF39B04118E68E693DE1093D033893D953F09DE48B32004072B5DC8
86843C925C7E533D9D3F7244ABBFB53E757F1E153AE2094446A4AC22E7BEDB65
AE3E779971BF9CB883DE59964AF7381CC17D7490C7A12EB54179D7ADC1BBB7E3
9AB0802759D8C4EC22FD9F51E2E485DC4CB994081484F7D9147E2835E4B02404
BF9E69CD2F691AEDA197B2525392E56CB7A64D8570FA06FFF272C481B6BDF86A
13D84B670D5A1F20DBA1646B27B89D9F431E42291DCD0893907911A44362A10F
1795E0D80FF3251CE56989ADB97E81A72B6D53DD7150CFA1B02212B6AD5568BB
69A5C875F7454B1515FE4FE4AA14D4DF70A93C9D32CBA4F52F8DDCBC27E02E32
C2D832837FDBE5EDF3BC3262F1D0B07E5322B9FA42A7DCA7306B12A65740ECD9
5DE47D22B8E5EAE4104EB1EA0BAC1BC86F0D99CD15E7ABFCA898EFB7406804E2
19953A0F96D5F89F93C319CAB4547EA2A9CBD0006142A50AB299D25884263CAD
2D928FABECE768C0F4FC0E744BBAC4741BFFA5D53A0B8454B123773E5A456DDD
CC396A3B796D035DBECFB6240829AD0EE043031F235A3CA733935A81F2DC06B2
724FB3A3E60C51B8BC5DA5D6AE5DF8E975EE8364FEE301E7010B6F22F1EFD394
00F698036494AFD4F39BE927A53696BEB2759503803746AA5BD10EE90E3F0C30
C7F4E1F0F636F8C1B4250BE2C886387908C9C05AF90310BBDF257621749E7B22
CF57FB628924BBF7705C1B74B29C379031B671E672C980A923F4BF642F6B1172
251FFFC646A8685F54C4512BF37A7891F69089600A19597C8799214FCE9FDA15
3A90A69AA1D8C5686A4833D209A6F6EEBC2128EA8C93CD6EE8072F67580B34BF
F98E702CCEF38AD8570FDCB63267A9A7701D64F708CA9F1DA2F557E46A9645FB
3BE2FDA96F4EF1D5EDDF50270267B77D9EECDFC69A2788EB949309C57B4E6683
D7B4957F9477D19D487A67EA1D9A221E637D046C080E23DA5D3AA2D9E556D2F2
F1C8138EC7626ECA053EEB30D08DCDCE76D13CDEE2401EA443EAA8CCBB82FF6C
720EE1F583831FF595DA7915ED05AD3771E0F282F2A4B768FD01C72B0FFCBF8B
96C44169617EB84B44C1C346DA449D0F87914B3684E79D8CCE01F93CB905B25C
A0556B5594F4844BC8DC3BB5AB60BA158E1DE8630A576B94DD03951C2B402FB9
BD2D033ED8C51D88514A355BC67D8CAC23EBDFFE4AD0887AE6ADCE1F6CCB7061
5DFBF8CDC7EDC70BE24EA7593E39B74F2DA8C1371A02BEB7DD781A0FEE3CAD4E
36DB7690B09046F41520FD3F46F76EA708326E8373095606C9C89286FEC68AC7
F799BF946EA67DE27BD0AB5543E4D8C963B57E4332F3DC5D5EF61828F9897519
1275E5AFDC686A9BB75D707BE93E3F9555825DE0373519B79A7F355FBCAB4FAA
35313F29F350CAC11417536CDDFDF8F29B3C5909132A0D98F75CD6E49CA4B610
97848D43F8951909D514260C07EEB610ACB1785BD2160401DDE3C6203106790E
648D9AAA5DEDAD1713A1259DCCC2C7EAFEDDECB160C084B27E2BBC45E1C82EDC
CC5B34E5A270970F683F1FA937C520A8936C667EB3DB5C138FBCEA5A6F9B3CBB
830095AE655BDE73A8AFFA1885C7D19E6267E6445272DEB3F5937ADE034CB7F3
4EB10015AA9AEE55527BA98C3915677AF64DB415E792C9516A29B1F6101BA822
040CC355142FA4BB02FB1328DE684D1632F6A9D409201E308317114C7B02F313
218519E1CEB9B5BA5597FD98147D80F5E94019B879C21033326878A1752BD8BC
8C0053DF80C3559251E12113CEDC354E77F30752437F0E4F913E6CD8A57351E6
410CBBAF81D8FADA8F444D137BE46B0788E9962692923B34FFFCB3099F1845B7
9154E0A700B1353AB59CA4C7A24EFBADAB4C04997911B21FD4FADDC33407A372
E094A1D0D9EAB8A6F92349B8A2047B452A8BCA12248D6097B1374380C2DAB07A
FD926B4C2B5C335BBB24E0750DF3C4BA5F5ED5713F820BB39686CD99028713C9
E64711883578904C1AF7678EB3A23DD9D16E27A2513CDE1D5C89E14CF24DBE7A
4AE51767516C710D1AE44FBE33C1D7FE86571D0A98AF2B5B222291AEA7CCBC51
A759C8283267DC72640735984EC4C085F0FECD1673AC17B5E6AB55262D395273
D98D7A00F323BA61876B27475888F8C859FDB9BD15ED777946CD03C7ABA99A03
7748AB94859BD28C234C3E869950A7BB566AF79D8B63A8A96DAC04BCC009FE24
13B84356290A1FD52E08E78433D87D80177389EA18148F4FAFD1F181DD2A80BF
72380D55A48D680CA8F47022B2BCDD4A9EF8FD721736046B5DD23AF13B9BA005
2741DD38D352F7B6E883F2A80D327ACABB115773339F3188405D0573DF4F5F40
3A56F11FC9925053D691CC7D377AA45D567E40AFA1FDC5E6F7B166ADE44AFEFD
C588A96A470A4EC1973EB59EBC2FE738B6D9EC0DFD6FDA0CE1175D79F527C5FF
739FC5294F67C419FA42918E2420D857B3F1B08E824B73CB62459FC076AAFD07
12C5F5F925AED01157EFF883F48CAA16E1F70450053DCAF8D61DC232205AAD0D
4CB36DE8A3D878ADBAC5A57D524F9BA22A39BF83338415C513D80B41B4A3E4C3
4951038B8406F74C6B5A657E36D4CF49098E89869810CF53E9E9B9C8D6568C44
2CB0DCA5E8A1A238E9C8AB8017C41767B5116E158058FFBF9AFEFC6E2E41DDF2
DB3EB3CC27DC21A7E12F176912B32DD5A10BFF389FD6A254D897EB09C9E9E5DF
0CBD92015F57F349A2A4AEDE6E9A10B2D645002F7E9BE9992BC41A06F78C05FF
9E4F34FA083F2C0EAEADC5ACC539D45A8A1A7544FCAF8D42C4F74912332C25F1
FA47A8D80D79FE984495C8E842427DB1213C052BBFFDB47B91959C5E7F26F467
A763BFF7602B6944190CAF5E957AB8CD15E3083C294D175BB3AB6F262AABCDF3
C172EAC23192483AD896772C992B8C1F8255E78F1BE8C9D72D448D54D9CE7A4B
D76EA30AABF0516CC9C9AD3C5597BDF19CBF6363741C04376928F45CB8B97611
91F9BFC6AF4F62F37AC9CC71730A64AB2E56917BC750E119900CD3A199572394
6E0E3B71AAC0F16EA50EFDE948D3DC526509F9E09F8F71AF3D798952A881431F
BCD6D4B4074570DC0EADA7644A6EC1DB2918675F575BC432F7E6E5BF1ACCD9F0
13A2C45C7129CEA4EE650EEC62E2F669816030C30BAEA49D53A78357725585A7
E699FC96B97B9B4FB102C2231E943B37F8A22450A49A15B69B482EE04AFBBE26
80C38A6381ED168DB0F0A84AB17B80B81D0A450D9D91F2C1BD1ED027F543669C
3BB0780C4B0828FA663C6A1D72B6FD2A9DF615C9D01D71604F5D28564686264A
AFF656F1E69574089AF1BD2407B346E347414CBCBB870CFA21BEA45E9F40CB31
B279EA0C578E95F5C4F6290110EE4269C3F88EBBC73852D655CCEBBBEE705BF6
194AF3B3E07B02B800CA1EF0E397733E79BCC7BD5A17537F136501A2558AA1BD
C4788B0ECF8DAC8BA8F7D08977808EB187BBD1AD43B88300E75C3EDB110E3DC5
04B3B91B7D4317ABEFA47CFB049F55F14E2645009840B630A7C216E886A7606D
2D2A97EFB0D86DD9BF81077E51598B01D2F9A98DD10A038008CD062244040034
E21225E5C90B92B26808F822A1331C51C2F92998BE37940B02F3A6A21870A4D3
8A87F122CCABF20BA04F35AA0806613FA5F72B2BFCF65539ABAE4C0170EA7E52
B93E062EA0E1D347D6B4F0D37A6073988F5B70E327211248F2104D7D56F2D05A
1E540E65D556A880E7B47823295A7EEAD10F870F0736A8EA0BB8298F18B85117
45E989C77B4E467F763F089E0A01A454C29B0C55BF40BFC7EA101740D6ABE060
F8CAFB79B6360779778E96CEE5307C9A01DE33EAC61D6F8AF8119EC90EF5CCDA
413FABF7F72E4DB9B03D5AEEAD3873DB278AD8F0EA8B0274BC1D0C358B2FEA8C
A004327C5CA789E28533857FC21E07A4BA1464F9A18C56C607994AB3FA9582F3
7E80AC749D636A58365C4F5F8934C4EE83C3DA3489E751E1A8A1E751C2DBDA3D
F0B0281621D1AB5CD49CD2F0A2DDCC45FF8EAE4B0BD83CA7C5BBD17D681AB38B
7380D826FE7BAB39FF18445346E3D87C0BDD08B227DBDC172F11E583592AF9D8
0ED736BBD76A505C65980A69A5EC57A5563D6061812B223486726C4D377CA89A
BDBB48C825973A698BA894B5CA18D8C8D0A7298EC58558FF1330E89A0C630BAA
10BE1B5E8B06015AF6A0D3D4346C3787A8F5CCC3E3277D1D3ABEE097E27DDC13
57873F399AA00B3D492E3A35FC82BB305480DEAC16F1098D0A6CD320B23DCE62
DED03CA536A0D62E2386B247139DC7B77F53E3D12729E089142EC7B0D220B622
B9FDEE3375B5088C0DBEE120183EC692085369A9D14DFC671A349D897BCAA28F
FD0454152B067423F7717255FDF0FEDAC3D2732E4232E30BBBF16DDC5361FA3E
1899AF6FD98152F9F713CBB63522566094DA0415A06745A56526A2C3FA4CE6A1
82A2CD93370F4EF6026C40E0A4C1D483B9C5738EFDB6DE3B7030F318A1EFEE0C
CAAB07D2F736BCCD6A600D468377B24E1E846D5B831E7F61A2E6B5955D8FBEB9
33D1B9945F9BB94ADFEB9FD44C8FA1560F5453A99B3AA6C91643A7D6444A4C94
15B1D7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 2 /multiply put
dup 18 /reflexsubset put
dup 26 /propersubset put
dup 33 /arrowright put
dup 40 /arrowdblleft put
dup 41 /arrowdblright put
dup 44 /arrowdblboth put
dup 50 /element put
dup 54 /negationslash put
dup 56 /universal put
dup 57 /existential put
dup 59 /emptyset put
dup 102 /braceleft put
dup 103 /braceright put
dup 104 /angbracketleft put
dup 105 /angbracketright put
dup 106 /bar put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE7A85E0215EB2A084B2D8EFB2FAF24DA0F27F12FF910D04591FBF06C0EF7D9D
809EDC6FA73EB1D6156FA9B2DF3352F6B4BCD75DC4294BA653D5C26C224A8397
4987373322F2FA7FEC8145FA9978972E2437917867B549E8B634076AAC197C70
2AE6723B670C2D0E6DD203C2D4279E3DDC0C371C3CC793C99D149740FCF90D14
217EB9F2CB211A56CE3F7F66EFFB4A66236511B240D37A4EF574BFB25739E1D8
411B6F790C10084E0A1EED582783434FC91665A395432660EFAAA5E5AACB6E16
59234A26BC93082A01043F40669EE7388612D08F028096ABA3F25264CAA0ED33
3D8C10B39D179F91BE5A36B842EFAFEEC95EFAF679DD2665AEC4A3D102AE6291
9901BEA7E071A340B4184D7EE48F37873133D961F5F93F0CE705692F48435B00
B78D8C6D33D151E9D09767ABC7F9778F8DB120F8BDD902AAEA5DAABBD88E5B98
564C6C232A3E4073A338EDA157233EFB8324677E235972EEAB3998D27C11477F
BBE99F52171A4C14F0C756FBCAF9D5F433639AE900A1D0575A360BF95B455CD2
83835A71E5C91E4DB7F0FFDB4279EF5CB00FDB146E06DBBBE77AD69312B4E3FE
5C0069DF10191FDAFFA10D35C19EA5ABDDE7ABED7DABDDD360E412538196D30E
6B8F0C5F332AC705D057656A9844C0A0E77586F012A0BD83AD6A26FCD397AA68
7E3BD16AFBDFC6F694D7B0D33BE0FC8707F728C2EDBC8A1D34A33679533937FF
30565A9C32C0148FF3E697DCF9AA5EC16FA279DDE54D192F8AE53ACDF347FC85
8EE2402655D304DB282E4CB5532BE7CD5F292460B0B923CC6C018B7E9452A8A5
5808927AA88241CA78B28FA079A7954F2214B30FBCDAED56C401AFD9435B7FAF
531F1F45644460DB8A8128BC82C894C795ECF17CAA965E158695FFEF6FCABD87
45CDABF6123E73BEDA77AB342D156037A7504FF9A4A9775DFC6B305B3578A8D0
0FB4135EEB4359A9BD2F5DBEA027A13DAD7B2A349D257FABB74604806DE88716
BD717E9554F00B157713B6C6E8C0FF7F0C6638132685B00F8E4B8C17AB93FDAD
DA39E2D2B387DCF2C6EAEEC1EC40B957E49280BEFE2ACC2026A048B9AE870158
CF3C78E858E38308F8937E0D5094289D9469575C5DD4F453FB2AFCBE9DEB343D
8D291D746F7857622B8D4038EA8C63E7559BC453ED6DB7A97C4884A3026D37E7
487BB5DA79E7AE6792663CF572DBD1210D3E5D644CCED5BEAB2AF55726AA8E7F
0A78E857C26697808F4B76FEEBB93AF46C797B599AF0B0C138FA8E3B98414349
524D828290EDF1DD39DB7BFE24B04B76C11F675847AA7FCC56C65C32E3C87C1A
E5B801D15E35DA2A895FF1F0E64538AE887EBD9EB543CFC5807C551651363717
47C81CF7FD8C6AB68E647FA9EC4297C51B5B766DE56E93F20C4201F25E2C209C
572B6812FC2CC1F4F2829838514F4BD1A30328486D27BC8D99227D9510558C9C
F268FDE950A414EC995663A1AE214925873E114F821425B4ABF51ED3E25B0BBC
3DBC18757D10E47748901B9927017310CB10AB754AC870502D82F4246C193E44
D50EE2829616A62772AC2F49F34ACE2F137B5E457202A41DAB9FD0F18510C4B4
663C3C37AF762F43D296646AF7FA888F5689FB8EB8467F5D1E8328816FB0FE16
8728BA849312C3BA453ED1AD12CC9BA06E52CC3A445D50DA2D1F5374D4419DBE
CAB9F005B795648B05A18621ED8A5921C22B8ED36794565D8BB59FFD20E2F987
419BF1E3F0394B8E96CA0A4645BF1A44D055DB20C595BCF94C4F632FCEB1768F
0B611BCB87C11CCF4074ED8537F42E4637E5E94829070A3E6D71C2175D03D48B
27C7EF81B00DCAAA67B815CE38AE62A4343B7E437F636197525323F052FE99E7
9751762B8C08CB2EAF08BDB5820AB4595AE77A97AD5D3F5CAAC16E264CC457DC
C8723880D8460081D315A79A3770E3787BC5C5F28EA65B5CFE5D573FB3C26A73
10087D521535A9EBB24FCE182F7C7CD8C9E110BF37621E8083132E1113D3AE2D
7BD2938E8048C96ECC211465E820EEC67E933B4CE67C470BAC84BD347B73486A
E92D19C948D194A472B61139E8B7FC3DAAD094D4A9666A86813A16BB789E3A6B
320FE6DEEA7A26D6EDDF3860168997EEA67B2FC11A8D36052C9663DAC98E27E0
09330ABB7624760BEAC2DD1E62C202089181770F201D8974C1B00E87053FCC5B
DAD878B1D98477ECDEF27DA901E2F4675F13450EA8E00EF217643E56590D3017
2C7926DED8426FB2FD4B91EA5139058B8A65C6FC11A56932A21B6DB089943F99
EE4174A9DF9ADE020CE1C656C8A59A78156152F5BA88503B77051EAD9B2BDE37
E7579568E2CC6FD8A6F87E59555DF15A59DB78465BA6769DF8301BE8C9EDDE85
BB6B24CA4052A1E6E7BE53A5DC88254DB5BBA645AEA5FA422536A1C9E3863DA3
563792F826A50B2E69B29C41248DED1D123F304966D491ED6CE7A9AEDFF48D2B
4F067212058FADC299065D91569F35CAD677F92539279A0640ECC28B5C08A309
580ECD02D445D51E3E3C52397767A977B22E85899532F5731AFF17610BE72449
6EF2579DA1FC355358EB266A35084F0806D89479B94ECCEAF0790AD0D62A4E8B
C3D574CA322EE50270805CF6BA8A51E9340E1E9FEE5F45132524C3AA40782DEB
EF24C4BDD8C5F9E5A0F3B2724C38B2AEEE4641343A949358C925162ADCA26C40
DE7275CF9B4AD81FB98AAE56995CA71590736B4E8E5BDBD50206A4D6BC140248
36FD8DD87D94D2B104E6C192AAB7B13199AFC899ABB1CFDAD7E1D9795B08D2F9
2E370B79A6A2C82636C4624B8F2673A62A0B5C43CD9A7F52B826C8DC282A89DE
441C9EC09E2FB088415E654801DC84C2A3092A3BE2D4D191D2204496EAFF6467
E8F393F1D66E6A04D1C5EFDE6D24098F3EF2E4F54F801AE00A84FD3C097A5716
2974E7A0934D3FECEE73075705B0A522A7711A9AB241E18F974E3A5BC82120DE
0F9CE8946664405BA266747AEDF9B5EE7F3DD48DE54FC97086A7D3360963A310
36F418629A74D4B1EA8CCE0E038CBA3F2C3D6255C21E120EC6DD823FC2DA1A2A
EED93D8A556015B1378837F799A6466C7B8F05F26DC1759120923F28B90FDF86
D22E733FEC0DBC3EBA19210DEE38FDA2F83993E8E2C3C8B1438C5A84D96138D8
73480B6A663133F1E8BBFC8B81BF05D02275FC5E7EF48746B363945C507E2ABC
B6B5091A00060E070C84439DD09D0C9E96117F8948CCBF9A96169AC539ACBDA4
9DF38F6724A128415FE7681D6B8FA4D7C9D25759A8D60DC484065759FF719A6A
9AAE4BA49EB3F8DA3D6FDC011E2BA9E5DEC800D7C234B910AF1ACAB065185E20
17BEDF0FCB85D709553C151535E6AE1A218C5C15275E2D330E727C60B2EF39E0
209A72B8B86D0A33027465F5C7AA317FD974E478071E7DEA1065D3437E2CF2EE
F78B500D4435F2A3DA2792294A1F15575806384E440768B73A8424994109946A
709D6827A78981B80AB33CF0A67631AE534B8908467DAADFD3E8C01CF082FE41
2DFDB2B9E42CCD3BF01DAD6824F1F034883D909FB2288FD288DF6CE1BE462778
111ED7E959C44FA6179050FDE623605EEB07CB5C867847610703D7F5C8BF245E
E64AF9885B4B5F50F2C329E5EE8E89DFBDB5A3F79C62302C207B8D3A35D88A60
84601E4F7A3837DD2E57965945C7BA2548E95E51D75535CE204D20C62063DF3E
0CC14EF307D0A182A0772835AAF60DE34F6FB671596740BF73113298371228B8
E82BB0157E9C4C1308F5F6FAF961AEABDCA961F116912977E07C21F0CE83045C
361FF9D16F6CB2FA29652FD67B8498F95C088CFDC5A4E4269496C7AA2CE47DC7
4E215C0379E4DE6096A5B344BE1C2345549A456A40E15F60B424999812073139
6815A938768EB31F2BAF67DED28D195C204F682179BB8711747005DD50094D50
A2BF58BF641FE8BBECBD8F7F35306000EDAC3A931735047F04F7DA872CED9F2A
6FA7200D2D7BB1A48275575B956E9C692FB995EB6F5BBA7740CD7B7577DCDB81
264122A730F8ECFD449D7706FD55DD3CBCF1579F0DAA2463E34C77CFE9A8C294
0B089C36E659BF3BBF7553097EFA114495A6827345951B1F10362DAD92B0B6AE
077D8558B5B719D0FB6D2CC12F1F8FE96296F47C73
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 14 /ffi put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 58 /colon put
dup 59 /semicolon put
dup 65 /A put
dup 66 /B put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 126 /tilde put
dup 127 /dieresis put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E
2AB2ADB3F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4A
EE96785449E07F0C8EBC2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD
8AD8B9BEF0B8E5F887B3B0B331542FC8184DCCB753DB6ACEEF98B85756B988DF
CAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E32275A64946C3E4D0476FD2
7FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E5FC851DC
32A5A6EDC43C770A71419B2C0C8074EF3F222C8A2097CD81A91F333A521B3A09
482A4FE1CB231CE344AD126AA284C3280AAC3AD162CF0EE241BFB4C8F20502FF
118507F5D1B5FD898571015E73E5CF2281085072E00D401F6F59761EEC3E8381
1F26F75DB66C504AB6BABA87D121B1E7040A07AA2FE01F80DBC246CC03C4B2DC
C2A715980C52B7F96BC1A78FCC7F4F52EEED5F705E08FC1E5BBFCAD121FA88AA
8EBE58172C162AF409DBB0728F14923ED02A65EA24E5D52B6AD07777455A70A4
61833D3789C719BA92E901232599767E423D5AD9C807670BE0E7B5CFF8256A20
C7BF7214FFE0342809570F5966A2C43E784F35015D9040BA34FEAB6A6F089504
3A40A9E9D711A2721D3F4998371430FB3C94BFC619559B97D49627BB630F4B70
9D0A8FE4E916235335C3962F3CFDB04C4A3CF714DB5E260F4E66FFF2F27CEF2A
D4AA26BBCAED23B8BDC98F8F453BA27AD7758537561E766B82DC3032E92A9EB0
125D98A22C5466AF069BF72A9BFA052A8628FEC6A6AD0B711DFFEDE3AA2D7CE8
34EA487038EF50F953B8B4471CBA6FC3C53877EC1BC94582B1123EDF44B4056A
30F49394BDE22CDAD7F01951C7013D26979277D18EFA594E8F4F2B5E615187D9
39E842EC28461B9ABA52020A127D2CB9002A673A435B13C10602EEFDBBA6BD49
9DDEAB9E68D655443A5C2492BA061C1391A51592BA8C353A6F6A0708E8860184
2B5D031D2CAB87D618E9F6F7A0BF3F66B3FD5A25BB91F7F1F5F99CFF56EFF4FF
0A35C55658001ED2E97B26C869292F6274D433A5443179DBB8EE987196306348
3F9E87C6422AFFDD30080C9AC4EE7FE5E2DCBFEE4974331F4AAE479FD8806D4D
9C2B85FC69EB0453AD827A1E767E5C484BDFBF5C8D6E2B3C96298B390F22D757
802643A79D5E29CF3AEDF0E12CFBECA4663444FC87F2027571DBA9ECF688BF28
FF0DDB3AEDBA0FB28447CB4B5D5205F40C1E7A525FD7373392EEFFD910AC82D0
98E71660A1B3227C4A2592F3E853CA4CDF64DF19A52582E167234F4036FAAAB9
5446BE102DE2BF43E82F0112C2A20F15A3F92C6571AC761665A905362C4F8BDF
AC8705519C99862CD9C0D75113C4AB5FBB83C880E46B82715B5628890D9103AD
A2329638B95D93C4DECDC5E6C588C9D5183EE6FC28FAF9825F02DCA567306D93
5440987A81B51EE7291107A08F201C609FEF91A8F0587E8B13D4BAF74A5A6815
DE9E4441F46AF8E1DDDFA2D611C889614040B144A5EC064DEE4638C04EAB2E37
4CA8F50FB8C4D65BB296DCCCD39F1F554CFBED96670A91F515CA10EF896874BC
8EF48C6447752C70FF5A06F928DB55586354076773BFF7E94C4C3A7A1C1F421B
A9B4E3936EC26E0C19BBBFC90F021E877F54B62108F6DD1C7F6D5B8E64FC9362
E173F01BF2904B7E5A08B3543611562C2714099DE7D4FA330DB148B560A9601F
42A84452811CE213DCE782A0D7809CFD954D6BC1EBF2BA4D1B18F50FA8174C96
3E0120E266AD5DDB40B3F6798AC28CDC5C3C4BC34583528F5B5DC8A222B80B59
A3A93DC715D061EC6915E6E6E21A25425C25E8747C60F170D61047108826F96F
7830E220C108B441B6EA3198E33C49BAD8D43086E49F5A2BC7958A1A8CD011C4
49045193394696EC3DDD0BE084E8F2E9F0B9496F035C0DEC1CE11409DF566428
D50043CFF5CDD1092F6E0807E660B68163BCA738E8D98FC6EE3F713164CD204C
0BA84FFF4F33F47BC31750B448603D7ADB9AE92FA91AEBBBEC0DCD66980E6955
CEB425ED07115B24E40F53B29B9D840842EAC691B4F591F866DF27556474B485
1C6F53DD72499847109B16C7093984A6B8487D4F3870DD517945CD90E648C1BB
8A6861E540FCF9D75B984B5009B5CC760CBE297042C240DD624111670B703388
6FE6FC0E89C6B4C88F51DFF3913D0CC1FB4770C8CBEADD4B86393605C0B6C468
83CA5594754411B6FC331EF56D7CD6D247FAE42E966583C29239A8F862348D29
60B177984B6B957E733DB4D275015691D91443BBB13C2DA96097A29733CDB284
42F89C85A7A743338C9DD3BBC4EE53F695E5163E6E1ABE5791ABF100B198B9B2
1C21E2FA2FB4AFE7F9BB2D381260CDD3A2CC05BF513AA1E80ED69FA27BC5ED5A
21445BF00BC2F997B356D94AF13736C6D3B0613EB6F4CD96A685FEB672661DCA
206105EDC3CA07900676EB2FAB37F48D2E8207BDE1463894DA3C5B1488AC1EE9
D39DAF691648048F5D7A384B8927F8DA2BE3602669F71D80686E427F395134E7
7ADCC611BA91AD4B7A0237213C60CF2C905359C90795230344FC3C50A22BD44B
55B2044792509F50F5C21F53D9F9E9F063ADBED3AB99E2613B23334FE8DF70B4
6120F2EDF69F50BE793EE145B9FF9C73179DE640FC2ACEB5C6617F918CEEB762
4CD81E665B2E544864D13230B058717B207D3CC5D6647D5343DB4D0356082392
871EFFA896631A7E0D6477942B632074A9A4EF7B09D4701B1639BAAB4E03A40E
9B54A7A4F845CD63F88831EBFA4FB847847CB98F3455CB5957F2E0A0F5623645
DBB5C5564C7F8B117D6E27E65C0F3EA81AE67B4AE4B201E7C4FB0A8364FE53F5
41A7CE8F834C2C4B322809B353A5E63BBA7BF3B7DC1A85EA700BD287C2BD3FC8
2832B0BB4695FC937FF5EF06FCD87DCE6DE793C2B1EE10E6450352C17726155F
220D550B1759E15AB2C1D5968E52C8080CD280E99D3CCC0E80C2EF8BBFD96001
A226FEED7311EFB4B67F424B557A877379A15BCA54780F0CD2CCA00400B9B39D
981C6B552AFD2506D1B23618FA9AE6D8143CD7198A8482CB416CCE62B992347F
337D505A4078713BBD91E5535BD58EF0351EBDCD749CC24D4AD39F8CECD7D6C8
139756680A4C03A58B3374CEC658D30160AE4863A3938A891BB59CBE02BB451B
1BA4B2B6E68AB61DEB85F95E3C909B8B66E220B9F18280161C279F10F7093CDC
100A53D542F071CC0A5AF834DC1D18738F5DD62A5573E884E1FFD22BD810828A
1EA47F8218C15A2E97CBC609927DA3CC2B802EA4A0D7EB57627C135E3B065905
F97597D818A2C5CC6F328AD25AD11FA50F1E4FE637980B7474D6F85A521892FB
72989AABEBE02A2D0EFE88A6F67AC29F5D8DDFEDAAF465C439983C6B84389FF7
A6434462BEB7B07DBE4BBA61ACD4A60C55B5C0AAE527DE381DFECA2E6BAFDC8D
310364ECB42CAFF72BA93C067B2F02D1CA7C34AE7CDC46787A0E234C8BE8A928
7A6F3DDE0338FAD532A9886E8E3525B85DD39364AB03EC4C0DD25DC179CC1989
1BE232E387E857C78332D834679195E10F1E7B87B7966DA3B2238F53D1E13FE2
8F55ED6A92A750C7250C9B91E29796621E7E9520373214D7DA81B2875A986D33
80382AFF6DE1F829F048E57664D9C4ACE91E4684A51023943A4964AB5657D610
3A5405EFD4CFD1EBA684243E15093C9667797BB47617B66054EE02C41FFEC45C
C1BAE8AD56B00D323FCB1D2744F061FA16E161988741A319B1564E04BA210996
4F9F02A3268CABE450D166A763F5284954564A1C86B76544C5F5ACDFE0D758DB
865A1CFCF9FE8CD5F9C3B2998C56468FD52DF8EE60C6935A3D221EAEC7714E3B
301371C7DDA0B03A2416238F2B47BAD3A2C5021C886DF51C695AF9C87A864B48
3BB3FE0B355EED5454B59B25A0D8A1B8CBD356C24F64D9B55E16C30C011365C9
1E0380753BA3EDC0868788D5F50B9353D0227BCEE1BE36998B2622C0759BD66B
E4444250589F9CEDE766D8B940770CB6B89503E925B35C00CBEC2873D2DC4A29
0823FB7A3717B69A7DEDBAAECC067949932728E89BEECAA91DE3AF9BF070B9C0
30EEFA8C0A55C8388CAA2F0515915C98E67FA095BB98967D14B0DCAFA9622E4E
2E0EBFC768D80585ACDF28D8A5C2B6EE2FE7AAF62FFB90F569F84A0903996DF0
C1D5723366C436E4088F3E2BB9B47F9789052A71CF5C49908CDC1DDA194BFB89
14D7E3D7D4D72A150FD6FFD8303E9DE5A97A71B808B8BDF2AE466F31BF5D7A4A
44F81230BBE2B456A221E2F72A8B59F8FEA8D31F8A005A5BD93B9F49CFDC3DCC
CE2B67090460F632271C7157BDC2F05BC2749FD562FC28682A616A52D1B67654
DF78B7843A9EC26A7DE2EB168F874904C2915B97534B2D4D9F74A9573A771D34
9F7BC855E8F794621BF6AD471BCC347E2DF5F620F5C209E33A4CBF1EA85AEA87
4492A77342DD33EF615FF34037D660B713C908786D9022051B825226545827A3
2AD1B05D654DB6E6D261B4E8AF0933AD1F0FCFC7201E1A7C1B4199F160C38676
21ABA2DDF1CEB655B3EC3226E0B122976EEA998F7A5241F062E54AD1DFD6ED26
47C99A439E0AE95415059179867CDD3F0FF751F3141309F40E00A6C7C28433E4
F649BCD5DAA64177580E05C495EE7BCBCC5FBF104DAF360CC2711386655B26F9
D349D887EEB32ADE595241560FD5924A1745A22E6A01DB9C285EF14596EBFF0F
03F36EB2E0A7C3864F819EF7B0855121292D49482F046A55CD7271FE03F02EA5
886864D9D8EC22A68C23089EAEFFF03DED6484D8C341861EF8B6FD3C5BDF5AC8
352DA4E13A1E30D0CB71E090E9CFB9AB2CAFD0CA7C34AE7D8E3B2EB4666834BD
9CCD1AC2108348AFEF6071796F4BB2FFA4A67ED917E76A109FA2DC2A30D744A0
9AE653A748C1D18FB52595D84E87F1C1FB6B2F32667FE203262C66627AEFFED3
92B23861E5EB238BB4EDCE09DAE1C65BAFC198CDD1B45D42CDF93E16BB82D35F
821E9E49067E966AFAB2AB52928F8DD6359984071FC37AA652FB834A09E5BD93
3AFAE161140E74C6531E413E8FBBFC42BFE8A464B71EB1D8CAA93B33D7BCC3B0
47C7EEFCD3E9FCF26FF9441DD9BDE68D77AD7251C06BBB9A2103049E8827CAF0
F26BEF33F656A690235DEEC623CC519AFA82DE2AE16FB99F780FD7D8290DA40B
9B604AEF36B529FD184239E7D50561A07428D28E51B55546590A1AEAD4B7F2B1
AB8C5B9022C1FA03E33F8F409B24911AB8BFCF6EF4A8E415263C789F89063E71
C0910DC20347469380B7FC1EEB87D4CED7F4A361E58B61C91AFCABA35C03F978
B9FB5257C31657EE48504C355CE893FE3C553274C641DBC4004F5D5B879CC5ED
D3F21F867F6DF054127067DE86189F0B59A1B90FDABCDFEE61423609D888EEFD
F4A1367129962110C651D9481CEDDB8C5C2576A59AED64E95F7ED042AEAE2F7E
81AC0C408E593DC30DCAC334EDE9EE27D932B98F040DDCD195D6155607DD2038
970EB78221A94C52BD4F0EAC65F1FC10E5DAA93C17266F351669CAE56F42B68C
6D01E1EA03AE554D63CE76D800FDD9CFD89F80A241EAEFF7EDFA41794EA25CE7
97BD5028464D2CD45B53834B4AEF8BF0B9E7C6ECDEACEC887E8790A47A93F668
A9095E5FA1116A122C0E5B74E2226C654D3187C6CFD8807917820423DA3EC1DE
AA020EEEF2280C44A15209EE2F3FC1776875308CEAD38571E7BF889F287E4594
971A83605E0B4169D4A23EE790515223DF8724054EDAD905F57918FC0BC64F96
514B4BF7DC9BA79E763C22C977FB6146B10D26FEA1BAA7BAF21312F78D1625A7
8E242D743471DB5821408AB786E4A7EA9D35E30E85533C617689F95758FB2C7C
392E759C299DCCE36689686DE0C4DCE32649493650BA194A6208C5EAB670B170
3F2C70BF0EF0E3BE2FB0A79224FF4ECECD6BB3388C6D06867A0E5E3DB93C1B2F
464C23E44D3132E7D4086E3B59B1D13F49EB4772DEDF8EDC4F603217233FB7BE
C13C28648E9AA51D53F11FB896839F97AEDD8834BCA53CB0021AE91FD8E95E2E
F8A094093AF556B9639F508A401542B06821FF9DE1A745FE9AC5CACD5E8E1053
911442FC15CA5333751ABFE2C617D38FA1DC332BFEF44AE569DC631C93EC54D6
261583A695F5A392867A57F59B741EFCD2DCFECBC55D1EA5F2317601C9DFE9ED
D1EA466210FFA905A8F85BD58B98991BEA58DFD1CDED5C9B086D42CCE632DADA
147941917B879139E016B0DDEB8446BA017FC8EE5A354533D667B0835F5D027D
C2D580C16B80B3D05CC92C0465CAE077729F0A15B2DAFC89DCD349B3F81D0516
C65526EB5C10E45A8A85D716EE35FB9AB201FD7C89ADE5AD925A174169DA20FB
61E96C73A143DF964C20589EF24A0FCFE6195317F2FA0D2249C0D8E649C3D9AD
FF13332EA2E4C9CD36D8443EC8F027B61CEF92C6A6B72DD4ACBACC16E429A9A3
F5F29C1631360E32F8C1C93ACB22F810B86D2969A7480F486F62F8488BEEC74C
2C1AF13BB92BC578E8CD30BEA6BC8CB68ED730F54CED0167605FA76AD7B7E88C
7AE7688E598F91C471BD65A542E96D64B1EAF19FB4F1234308C48C2DC86E2193
11ABDB4C6189C6F201627C693691A86DD07FF55C30FDB3F72381E09C6080FD7C
9182762E5001E30F52A216E0B71E4D2D4E2F3B20F95DF3A11FDB2D2B5B5FAA66
C46226D5E0C77066349770514E5675550FAC9394FB27CD2C2F974F1FD58C04A3
1EF53A8AB3B2202CCA1CEFA66228E1480A0709436C44BD3319C40CF888AE4692
5DBBB52B15CF3A518F627F672135A24D5DB9B2EBEF04C860AECF231EBB5A3BF5
6DCCD5E72FE4B6DD29E896691868A7DE4120AD06AC573F5608B8449B38E71CA0
EB5CDA3F942482EA7973661170F81DC88D54DD5B92323F46F833DFA757107E9E
F62A47CC50FAA1B68ED535C3E0E1073532A05ED339C8D70B3B9864808ABACD23
AA95E9FDA43D54C66A675FA074E0A5B8777D3C07850A09087F36852B5351F35D
8BC4DDFCA35CF29CD5E3DE118A741FAC4DED36847F2E2C6CFE08669301722D94
376F540982958074E7F1383C409652F6C99DA39FE90B38221E75BC1ECB93ABF6
B00F410A0C5651DB418566AB350FDA1789AFD88286AF3BCB42B98386F7BC144B
02DEB8940D20A6B3062F0C4244EABC50923390064F1D027A8BACC3DE45156E56
4A942D1B87F1C4A76B0D4D6801AE792CCAE3009BF25368B31B6AD5476FBD3BFF
9759EF463EF5E78E10B7BF64005B2ABE0E8813950A08A1808587A98E0021D0DD
751AD515E8278F1A0759E85D8A084490BBB0F8206484AA36388B1013643D3198
3509078847BDAE08E76FA5BF3E3A73C323CE093DCC148E3C02C2DE1E26C94D5A
40EC8308ECB02FF7DD04EC1005A2A0DC74D4E587F10A3EF349E828F69FD38962
2F0C74D5DAB3ED6CC9F97008ACCE74C086A503948DEF1AAF58FC8BEC703CD360
D32098A56AC776B1BD08442052A2A4EF6C8798F7CDC102AF1A2009657254762A
0793F79A39DCD6ADBAA5EC84A7ED6018BBE727E5D477893D84F157074B24C13E
8D4881C7DF8ADC13EBA0D89745EF93B7616EC5355600BB0D2B630AABA3CF2946
AFFD0B2B724EF0F28393F2034B2E69DA5061426805353EB4D80E20739BC4C510
6C45275B8261DCBA10DE1D104B12F46ACD230977EE7D7D1D35D2814139E38C4B
CA6937CCFA653349B1EF64A98457F7B4B5D8F2978F16ECCEF7054905863AA46E
DD524CB33459220C71E9EFA7845A3A760A507B3D3ABC525B35930B613710A13D
098832C58EBBC8B0CA6AD516E6385792C59220331D0922A1F6F838A8DE13C337
900462F952EABBDC2EB1FBF94A66186C177501453CD3FE3582073DD86F04406B
41B6AEB440DA475E13240445D46726A6D45185D56BAB8807CEC8A8F7CE1AD149
7CE2E1BB5DE4E5B95FECB4C55C32E08DCC3D1306993E5668603F48472874883F
0901B977CA097B407F1787B2151ECA715CC64834FCCD3AF3A939F19D2314398C
04A3CF831C233B5B63D82858951855644214B4E095F2C33829E7A0740198C15E
1DDEBE00D82CD890AC0F7BEDD9169DC90F709467321455729E6870019A33335C
C4745F5BC83213180560C7AD4A85180FE1AD4B3E9909F220E99C367B96C474DF
3C2D253A955CE4A1B47F35DCB27088203D33828602ABD42A72FF6AC99F3BC27D
C082CEE2920176CFB38E41D0055A8ECE3161724F0DB92AD64423134B399E4B69
5D468639C395A057AA2E6A0C77112AB99ACD767CEAE5A71767EDF87245ADDC51
567BE32BBF93D9C26BCEB24842D23FE441A1772ABF88EE33DCD6EA24A6E5CD43
F43AA9782C79178D40588BB5BE92C0D4C2B34A084B5770B22793E821C567A694
29EA3D1E8F67944BEFC3322744D8F8A6C8D22AD2907FF1C9476D3540344C3F72
671D5A020E9A7811DD9012B45CF0DF0644B2E663562FDAF5B71B02810FC3BC44
04EFFB1A389A34264AA235A8448523E4FB61522B51536AD69F860DA407659845
3B144FDC93E5DD2F33705FA9D7CFB97ECCA0DBDF5B7963E6EC917BC6FE271EE6
C23FBF532ADEE252942419C67A9EB8EB3D1F5B0524B381B623616474E217AB45
7A7E88D94943A49C2FFA892D362C124A71DF9DFD9BDCF363A678B06400B5F998
91DF77169067A0F584A060E04852E7DBC79CAD84F6BA9F7AE9BAFC5772916A4D
8D2997744A09169D3B1D3F68287CA28771D1404671122FA1B93A70E00813C212
7C7B646853A228AD935833B94133FD5A809D84E010C37AE06BE77056EFACA401
5C8618DF673187D32007866559007E80749FD65F2D942C2E736E10A0374AF59F
F5CD14040D215B6555B32B69CB55983BA444F1B6A11A2B9B38D79C7736E86579
7879DD5D0E5C010D6DFF96EBD4B106E4DB39D7617807E129EAF9B11C0B6E976B
1DE9AA697807EE15ADA914708176F244903D183F43E5C08AC3B7A4D74466964C
4FD35FA974E9B3FC245E68885565EF3AFBD23048801E7679DE570F79249E343A
2908129D592215A2652E7223810A365A9D8E21D90DFA6ABE49A8F0F36883E7A8
D13302730C976B3B7066DCDC196EBDA76AC8AC2D64F115B8DC84694B955782E6
A85AAB70E4EC39AEA8C2D74319A02A38266B1AD4C65D9D013C24189D0C233DFE
8180D59111971AF0444B8E0F8451E104A617DBC20C9B054E97386886EE46BC0B
CA3E40FF22E495086F99086BA2DB80F56C0A00A2A06E998BC239F96D24325048
BACC9ABDA9206FEF9C61B5A8BFCA634397723C6B86FE8E94314D4C04F42D1029
940F329B3C0DB22181D08A8BB3C39D282B7AC35417EDC281EEF14315CF0F1411
CA8C7CF22F114773D293DFE14BA2C40D100BDC5FE1628592D5D67BC8114EB8ED
D7F83D54A389FC21722A49F59AC01D4DD039CDA9D368D16E0E13886C487C810E
FAA15B381E04E1FBCE0D66EF2B59FF0302B3225CC87589DAA1D9A79827ADC877
0D6064D45B9BF1000BA3D539250A0626C15B61C0697ACBD53B94BD7EC9430C3C
2F85626ED5D28689CC476C4966DC9F37F2C8DECDFF05904E68801BAC3A1A21EC
3491231733C2DE844A1F915F73286286D7C28DD4FFA619E712F5C243AD4FD8DF
2C4833C6D197707BE3BFDBB93447356A0FEDA43FACB6E6023EFB71ECD3C2B86E
A609CC2E72FF31E7B915CCB7D4BC44580F4F475E25D15EC6297F1032A2AFE565
89BA8987525C4D665A92A34C1B6608BFAF62E4D710E901DEF8ACFC761593BD1A
E3D199B59F038179DD95DAF5AE4C1E037041529D24FA8D49CC56ED7830BC4B0C
52A3A0E98FC71CAD88FAF3758B289F60FFF8C73282D6D6E34340ABD8B5482ECB
2961082BBC2D419ED46968DC0AFD5032E265604CC6786A679B371DC5A32A1CD8
B3C61FAD91142BEFCC29A76055C6764C60BF3923C4A22A08CC5EE51D6375C1C6
599E7CB55C2A1E9DD9F7AFE1585403B3B7B4926F65410ED81F32B3D3F7F9B8C2
B9E639ADF075B2E0E8609E02E01CE34455BA72495837D993CCC2992E449E9DFE
63B159E15955190F9A853784131516285478AADE463AE224B0E4605522E11D50
A8BAF39883AE2613388DC49BB2F622F4530F6DD45645C3B98ADD0E986725697A
57EAEAC1CD4E47093C97E0C9709DF0F438F47031D1A13C84DAAD94BF15DA61B9
E53BF531136A5EDF0CF27D5FACA13705AEA6051B0D78CB18DA4DE2EBFEB7FA21
49AAAC666E3943C6305028BF2AEA2C6C0D70582DD753E5E67DE90FC46EE0B126
9CC8781AECD5261DE48D9D7DAC7D5813906D41D43EEE525D3F994C8F2AD6A07A
F13DD6ED0A054D50050EA76039D072FAEE7308A2BD2F95F198707E7865B4221E
3E7E43D5204ABFB28B628D917B28FC8ADB709F3D7BFF403B536E7DCDD128F1EA
9823F5B25E2EB81C78F8B1D72E0F4B662DDC59B237C58AA729DE6A845F4C4F01
F4E1D94346192F95DDE110225F335C3F5E84FA12A11F625291807F9E1F7D2DDC
C9A77ACC00E5483637E954F8C59CA4A70A37B7D2EFEFEA6220A02C0CF210D684
AB0102EB911B932009615C2C12C0FFB18F8F90BE0BCBDCF732A216724EF75A6E
53B435F0ECECBC992BEE86A200A643B6BB77A9CF1AE84EB3C225C2B2F3C7F7CE
05147AF22EBEDDFC94D50FFF01A050A999FBB2B69EB00BFF8E5C69A653FD0DCC
3D379C3D530FC8E03C60B1AE2A27628CFFA976AF2C72A29D2452751BC6E32363
1BEBFCF7E7EFA5F9963C7E6E7A0B2B0C6FC9AD132B97D5B51DCC3B7CBCAF1FAB
7061D8B13EEE9AEC5E28D5473456EF5AA5B71E3F213913815DD746D8CF154FF0
D63D2D566DEB3C44C274786E2F499B61220509D9CC12190BA2EE97856EE5BDC9
1DF1041E8496785E554275A5D57BA6EBF43D3845123A0162C4B50745DC6AB988
5E9F076A560589FBC271B80817F17D39F2D022E09FE42C98B1C96C89750CD214
72E5CE1A373AA2715F1F8CC190117B38D82EB4C650577BD113B1F0FED84675B4
768BE8A8D2F00A0D15CD29D957879406785AD5ADC6FB879C82105E8E1AA474AC
D55A1BBC109BD0AB44533C4BE83034F12D86B9F0F6FBCBAE97F4958A11132577
65E6423720C71AF3A79BC8D3B43EAF7A44CB126BC13062CAD2B680FF9DEAF18A
5230E86B4B14FC4F22745B61FB7EA15B8A01E9A4D635198B95F8C136BBAB623C
7F644B6146F3D9E7DED1304D66C3EA28112A69E7453D8539E09819C101A6E750
EFD5D493E115D8922C018FF1FCB85FAD52F9BF5C1870C8C7695270D79E02C247
029BF777461580E588D3519DC6A5BFE36265B32DD89E351523BB9253A3E0F7B9
2BA38D90FD8F6875BEEC5B09D7D681E6B08082C9523D63021D6F4391E9D4CEC8
1EECE1858F6FE27AA7B7FFA4836F13A0A596A1F53FC51E61F3FCC2A6F51C91F2
4489EDEFFC6FCDF7FC9D992415930E502042DC68B4D5F8467C6BD45B2AE7E2BB
B8D5FBFDAE2370579D328BE3E94431547940AEAA09B566551FA540803F974B38
4B187F043516F5DF1C0F2D9D2D165564C6B371490AF9D0C5B7EFE39525EDE3E7
82460390BF3F447F701B9712FA1A20B40EB55550E38B9851B70604D207A614A9
3D5F73BD74E7FCD3ACBF1C30B68832D7F9BAE8FB97B8A9EADBAD6D726799A0F0
BFB84A24AB052A4D257A761C967524BE5A5950E5927904D208705A965C73A356
C48C374BA974F603235D8DE03156B93A0E4705693F7EC0CBE7EF6D6E275DF015
1CFB6471691C04C9B2275E92EAA1B14B80FA9E7D97B89876C2E98217DC69E212
AC5A62E9EDA9CC9E45A95D20C0CB4967CC7B426CA792C4483302A06EA5BFEE30
0AE14147444C475341FF18DB8C335E1A8B7394B2A8BEC8C453C2DA1DD322DC5B
6D2629ED8A055A3D98644D24BA6EE2F373991DA9C9C5205705337B9135527E01
D9637C239B78484D7D68885C31CA7D623E508F4770BD452820E57581D7A24A73
C161D10FA58374A4E7917DBF19493B8049C17D558E2EC270BBA2FCAD0301FECE
9FA9C7CE5830FC406FB17D472B2735C754F32609372BA2464D679D68309659A6
F4CE16140828AF26ABAB24B85962CBB7F2BF7CA1B490AB2D96C9DBE48EE1192D
79B5D221CF93B5E030AC1527D5D1E0280896E1C0732CCE8A4FDC4E3D805F53A2
AFD1A776285DFEABC41C860B70833B92213BC9C11FDEC1152BF87A7883D0CC3A
3DF34D4D8E4F3F40043207F0B4972FCBD76038BCB61B03E6DE129F3AB0371629
3F61D89733A444E13BFB6F65EB35B7604A09B551F2A31CF847D33C7E98803D29
1EA3DAE5B1543396FFDDF65B55AD4BD7633CAAE98CCCAC9D5D718155492595A1
2366D5714D96CE2EF37C3309E9D78D4B2189909D2C389C921B7C93BA13ADEF1B
95433C08902CBCF62EBDDC0F4C1EEE53D57F0B6BFDBDC0347A156EFAC7339D08
31CE9C5CE562167D1494C925E3D3B6D255E87922C771BC60C5985F66792410D7
A64AC825CE96CD5CDD217EDC5AA71FEAFE31D4738A93227255B184A08B44B4C4
F8C45A80F701E910A88A0090C2F81B787652A10BB8CBC7FD73D4D7BF962E99E5
15300386B2921B153A179D461646B37DA7C5633E401AF0DFA0F5EDF6F654A6C6
ED12304AE507AA7371379B587E8BF61E66038A87F3EDF5FDCFAA247FB3B73BAC
7D3F40A055A9C73A5CA35E42A1496A6E3D0D1939C6FD1A3AC43E2534336DB70D
58FB6AC6FC8887CC340E8302088CADA68EF10ED5D6A9B7E4822E593AAF74127F
8E2190616F793DB313C4BF24AF8476CD551137C682BBA13335A224A4C9DA9258
98CF5BCAC0F3904C0B750251236E89C0DCC8ED74AC123C03A18B2D7A6055003E
979B120300DC11CBB8EEA0D00F4BD0457B0E1ECA68D97839BB21F4C43F25DA92
DB8FC3B6496687A648FAA232C72B19BA5B42A9FB030A69F353CD1E0EFBAF6DEB
45E85772CCD872FD42DA3B00BCF71FBDD5179E805B88856955D55710A226BDD0
8EE21CB0E599DA63538CD64FE9D85C9224A4F4B833DD5DDDF873FB119A42A294
5E88817F0850FA81D996299118C9FB908C2435247D85BB80E62BF9EDBD0B557F
F3D8FB3243A1DCA59E22F57BF4BA96F6483809726D02AF9989AFC62E89A1DAFE
576FBDC8BE375B95200C616EF726ADF7416DD7999819456DDE397969715D89B6
F9E8A51C1ACB5F47A9924B606AE39EB19060B20961D195B8C66ADACB694B8FA0
D6753DC439D6DDFFB397CD20962A37A1998F58AE3BC5108801E3981B6F94EADB
60EDA5112363D0CE8C7A276C2E6459C13778840876CF4F7707D95754941F2520
E79C6973F495A0161EF74D19E7309CB5EF28C47E5A75A7316DC6D2BADD6360C1
B0DA28BA86EC767E730EB7C1C93EBF74C2FC7A2285D6A0A4D0C8AB8CEA9CD1B1
E7B1203595FBA11B78C708B7D712D8669E54DC74D18A8CA65BCBF1C8311F4F08
166F4EC64970872BC05D0958C2F0F2D3C168FA0E71BF2E7E785736891FA2997B
DB005047D1CD114CF65CC106764B3866276F00EA556B33C2586A6B16D055B1E7
E118E482A76FF3E0416BE790EE7BAC07D2DCEA431B161C558DA9D89B6A31C45E
AB463B97F46271C9AAD83BDACDED91879E7D528F9EF3C11346A782D200522BEB
0F5810C95002D08D3F08026BFDEC27CD9112B0DAF00BC4B22C3CDC1F682637DB
7F0387348822AEAB7F85D763A812E5615BD27D1727415C83587A2B2EA35E6931
5D7F520D323350D121A49402B85D11AC94057AD44AE8C87C87D478040427A4AC
24797F28A13243205F6C7A1F1D0C22A39EF5C1235C84D5263AF58E704E91BB04
E6D62749508D5294AC39CEDAA5DBC5C7FFA20C325B65338976ACBAF5037EC14E
1EFAD92583C0E2CDDA3B67A751015A2BA3FB1FB5603796342DF57B24EC45D7BF
92EE100CBD8DE64A89776F54106F71AA499EE6D2D8C48417875BEDEC0C543BAB
D91CAECF61E213907A9D2BB65C0D3905E9BD7ABD743CDCB717967E317DC851B2
C6722F952A59812F73200C88CB980F714779A426C04AE0DFB727989645D19611
B2B48FAE94813FA1C8FF6E564B53F926CF801439D1438E2DBEEBF7BBF4090A3B
EB2BEB4C771064420CB337FB67A4CD248458B516DD94A9429FF594513F409549
A1720CC0BA955AC47CD7FFF5D2B737FD496ED13FB8C09962B9FD1CAD1A65DBF8
0BD8BDE29186C9DC248E7293B3455232592EE095BAEA4FF8F640C55C89A6C4A1
CF5E7D5E9CADBF488BBB0C4366996CA6D2E53361FA63AD9734EFCF5219CB6EFC
1D4127D10F93E2A5115BF90BAAAE15B7E7074622591D05B91FDB792F65A13319
2250D9222BC4E0A4C34E15A5F973442115239D9504E4752B23ED86C8073D7196
20102710A6D056DCD29F0E5FC5F378766DC51C3036BB810EF0F0B144E3B064C9
8DA29601FF42891B29E0C63A25A70FB0BF328C8884821C012E6F6BE6116F557F
69C9B335A3F96461715CB07F77767B9EC8096C9D448CB125BD2666AE84A7818E
E38664B2802DEE7E786C6F152B85ABAA7F9E6F579DA3E1524DCAE5DE663E91CD
114E852CD76CA90AB6531D9EC0BCE00B840F5D7476A7479D51B068B4E5BAE920
5FA3583B90014BFC4511339402AFC27BA6A02DD01017C8A3994A667663363DDE
781928870556342055573DE0D57E8C3989B5A1967DE802C23D37C379F1C75114
EBD8335C5AF1CC6DBFFC3B5EA9BB31F45E63430DF785B8333EA3C4B0526BFB06
CA96FD3917513AA92AA6417C3F93405CA8D5DFD7AAA31A9D8055121131080193
5DA52681D9C8B6DDD2C595F663952D7545D19EB28402CD8D8B7537CB3F15FBBD
79796456939843C72F901117C006FD68E477EDC59C560039847BD4774751BBE0
1CCF47BBA31570FA92A10AB69CDEFB1EA4081DCB55AB00C7E34A5C98E8B0F342
8B9797A401856534E41352D2C85C1875D7120CFA6E1E396C4147692B0301E041
2C16D1E58B3F7051358CD70D7EE0EA09785BF8E7F0C687650966CE2D1052A0D9
D020E30E592E5BB58FC4DD18730D30639C7EA5B9FEF40048F84E8B9F9AE3145B
32152DA47683ED906A89750805B022B093B162BA3E8B662C85C03EDFB9F39636
0ED8EA2AFDA75A6B8C774F40FA75143D905E61DC9E1CCE6F4208C894F04A4029
458C8EC512C6047DF0AFDE09C883380E6296734893B6B0EF45F14B7596907D47
F11B314D82FF61E40FCC47E23DEFFC14B8C4D6AED6A5BADD38DA0311CA442354
49E94BD0F78F23A3195E9356E39A0932548C52FF6129D8F4B3E0962BB73FB242
EC94AC39EB78D778FED76B131F03973D8C7C276618C9838D8EB83A6786D0E8E7
229EB9ED3C36905FE6F9BAE58AD596B9F5D94D7FEDA15BD5B2B0336024448917
AEBBDE8C69ED7F226EBF07E265A57B8C6FC9D3830241EE91B3857DFE861DB560
8DCF0CE07B2178824374C152F2A02D48451E85EE3D766076DB728E8D1A4E6242
0718AE38C96DF7E20198676CEB9AEFD043CD4EF07C4D90042256A1D07994F377
B2DED1C7C04A0976BEFFEBF1AC8A019B4D3F7D6A402D9B36FAD72A18A0B80077
AC081BAAB5DF74F194E4CD45ED01C2B978B053BF8A595DF50B48C351BC21F7A2
854F39EA2EEDA0E77FEEF2EA3DE10F0227F8F4DBA4D859266277096F9B0FA84F
51BB24E1F188308EA1DCA67674D852C1FE3BD9FFF00DFC2DC49D98840E6FAFE4
6AB986CADBE8DAED30C2EF156DBD95BE28F1984F491749615018306755B404B1
8E6C5FF51296750A3AD9880E77AE03D53DC8B5A8585784058080B1988B0F5527
D102EB951F662D4A92683D7432C081D1470D74571C68F33FF2E1F011F6F9C9BE
701C5A55EE9CAE8961A29BBB293C080D81B29A5F4CAF92D2EAE19F44011F3CC3
784776B70F2E388FB55A902A8AEB9ACB9B18D99FE3165AF214C63DA22B18607A
7A92DCCDFBA9042215B5E73ACB7C01915DF77E4B30F2EF4B0B3984E2556D263B
1CE05EFDD5FFA6ED732EB76C1662D80A7E0FFEE314E21E189FD0337E737861E3
91FBF6ABAA0CA7F761375C97A25E663C5B6DC494C8186A669B1706F0E674ACA1
C0A08BB2B0827DBB3DD7F4ED8066C4AD286727274591A482781F5C4FF644079B
3BA7E23C6E537565A0BAD9DCC45B5686D6F98A7827486F0AC7528323410A0A4E
C04557820C5FEF3F137C6F7272591FFC56CC208714DC7B52E408D92572335C87
B772AEE175DF663ED76B1C7BF988F6E670890E006D41FA4CD3B5E5BE3FEF3C28
0662056D9E2DE41C0E785A56CFD54C1BBD85970E938C3EEE95AFFC57369A3DAA
152EE5B00C0C123288D192BB906BF3998E768684A6C1F0D62501F7EFE4E2665E
71D51E5F3D3FF50615B64F79268E65BF67CD151A11361EEB3E347A329662565D
683E78D922C9C6F4447CD17885E8DAA3859C6EB9F817BC546F4EE77062B73444
38D5AF2CE8B3860D4892CEB373ED70FAFEA92F461DA10E1A777BF03BE7D42E0A
69811A169CB25B30CF70D2809C637D0C5760C610136A3DD208C55DF4A189D3EC
13D0AE990CA5FADEBCB684B4FC57F919387B9B41B342255C0C8E38B5ADAB24CE
2D029EEE5E6D64F52DA7E501E40F931451C4EF699AF395FB1F38BFE0082112E1
7DB41D35E2784843880090137627582588C49D3FDD581042B373C494C0A87FEC
BEA3AE932EB7FEE5E04679B9903DBFC2B31679480E47A896C4118F2AC7B4734B
3EC12EA707706006E2BD6E67FC01A6B8F54485A7F8D1596A91293A8D6FF4C8F6
8FE1E9B409A9A33F1C12A39275F3797A11FBF2A20E98975FC213FB11A16B8C56
2DB91CC7F30A9FF9467A84FA415830075472DB889845BD9DE5310D1ED2DD3F2A
A9A27BD4C814B3F950AD099803E13D21B378F8516190E0AA97B866E27F903453
3D811A2C3794AF5BC45F5818804E6AA6B5EA78AAAA1BFB6DD10F5FE9C12147FA
EC264BA2678DEEAFB6B35B7CB1DB716520DEF75D4BA27B6D8F31BB80C2410DDE
96C59906A3E05F74BF0FADD5D7B3BA2B70ECF0458EC715E7548D8A100375B01D
B12AA2BE671D258C2699CEBDA545427245CB7055EE315445BD8DFC4A1D7352FB
647B62D844985F33A2298603EA5672BC67AC41A5878ABE060DAC3FD8850BD9B6
E06F2FCC0A9E62D26575A71F16704BDABA061F8CBC3F5FAB363922BD21EC4BB4
FE0165D070207AA32238A4C7FAA3DA3390F76B86A1DCFC3E59EC7A1AF42EE9AB
0DB903099F3F784FB125EC97D4C2844540DC66994F3CBDB38C4FA29DB7426CFB
308F7EBB137284C2E33166A6BBB00C227C8ADFC310F99481A68FEEC535A0408E
D26EEEF04026378A519C1B91E093B4FCAED37E1A64076F16F426DDE92E47D56B
72A0620FB6F54FE037CD90215E67F03CF1515EF942AEFB5FC101DEFB935F16AF
699B5E66C779EE8A0A4CF46B538DE5E916EFA9E34BB00364B5695DB3B8D800C2
9EED28F74678C5B27646E311C06566DD01840ADDA53F57797BFD881E554C7894
F7DD422DE96874A9F02B30B72B11AFFFAB337E321E6F6DF35B18EE9240A1BB1D
E7302D386154F86B8541770032CD6D1B5DD14E541ABA8C1CF29C5F0DA0ADF936
2755D9C53B98C4A3605C19FDF0E12FC682421F430BDF94A9FFD19228A24959BF
B63466A38329083A04DA0EA454B23928B132D215FB77A294BA8E9E38830EF1AE
67A42B47C13C323364E9CB13981C32C23F14C0AAD3D6AB869E6637548074015E
0F6B8406768DC4BC702DA6EB55EA3F8A39556B29EB802B55AACFAA063C414E9E
AF627803E437FC5455FE6626CC135EB55E1851EFBECBA677792C47CD642BB8AB
DD189D4585997E4367656A2CE0A11ABACEC869F21918172B4D51D2F96A5B6B7E
9D47A921EBE0F0C3410880285830D313E5C815609FE98DA06298157C3DF85B14
3378C694022D2A44A34F6E66B5720C9842C43CB824D492BDFA78AB2BBBB27A88
E3160E3A68C5B2F11605B68A6CA39D9B57E516793ABB5EB7EDE2D3AA39ED747F
609A997556E6BFD997FD4030879DBED30592778D359C427BFEF15D1182D86260
CB0B9B5FC70F6C3A7EA50E7FA6AE2BCBCD7ED97E058020829C4873D470A22007
DE35249C4DA486D3737AF6D64E6590681782F531879F1B52C2030DCBA631967D
4E00CDDFCF0ED70C1BEDB656AC0A5C7B72CE63C12CC366003401ABC5798ABDB3
0A61F974511CF2D0ECAD6DD1D96D3325F65E8026BA87553A0AD0D9D18861C526
083DC4756C3564F368D60651C2ED3001E3902DB46DB9BA30096AE7D3A3D39B4F
989CC7120247F5AC18471068212CFBE899CE375147C189DF3B56B0D7D788D731
3204FDE65F42648991CC38D9366229D3C796763B7D5B9F90A964946C89193753
399346A503B1F8FE7014C750E19E62E8D9DD282289CBFA99717E4AA34CDC6C8F
A4A5DA792448078042CFEEFF353E77FD62E576315719F0896051DCAA9C3252A1
24DEAE3D53811894A2FDE449ABD3AB7D6CD242D06BEDEAB7B5F9D8EDC6BC41DF
D83D379E1FD7C3F0886980D222C1820773BF874AD536C3D429C71A8803509580
5FDCC68E4F9187434EE3F671C7433A1CE25CC08B1DC7B54F2348E8B0E0491961
768292BD3DA3BECAC068960724EA722CD9FAE52AD81E9BF9B87C6C807C33BCBA
9C3E1CEA9D94E2F5038CF656E3086C5E4667FFDEE2AF8A301425A8ADEFCB49F1
96FCB09A2834332C65C958B1067D60F4E39D429696253BED415704DB2663AF71
121450490158098CED951711BB85E93D531F2756FC7567088F57AC9A1D436D3F
AA00FD4118896F5CC89E9F4B1DAFBF94FBC1F319DE28CCA4B8C6861A79448BB3
3B454900FB3652D7309598AD9D2F4C512B2AB35A245FC3C4AA478C80EE2DB57A
30EDBFDBC7A6E8258C932B8738CFB2FEBC7016E5CFE11293CD4D04071A60D766
BDB3E4AAC4E7BBBB45B8F3A5056E37DBAD1E85B6662071FEF3AF41C0A3154AAC
5FDA4CD012674694FC218AB7485C5E4B49A8E0E7A2D18E95D47A918F15566283
24AD5496E6A030DFAC5926F2097CCAE543C5C4DE8DCCCADF96C4C05DF6FFE0FC
D927306E22350DB7D5BAEB9154442B846A5BF4B6706C638E67BA9DCF15F1EAAB
C435F925DB0D3515BF71A56E0FECCCE3FC129140F3588D49691C0FDDFBA88490
F7AC23DCE4BCD954173E5A729A1B860E1085D81B7B5D72B6EA1B1C20DA38B975
24D989FB565E598073E90E45302C0BAD7D237C46B4CFBA856164C6F3CE559980
DE7307EFF050E41A027175D8957ABF6C34BD3DC46DA5C8A7C3DD0B1671756484
63C13CA7D137CD5958C6058599EC5E9663DB8862CE9964AF55303A496D5D3772
0AF0C466816CD4DBAE67C98B5F612C81522F0E3FE80B3A2181BC314726E08ADB
AC7888377CA2987F56AB26994DEE4235083ADB897C0752FADFE106A25C3C6A37
8858326993193033D9926E58F50D735D0038D5F4F4BB5605F018B93D0AFC5878
57021912C87A93ADA115598A03397233EED344C35FF86BD73EFA2975D204C0EF
15FDDD61034A4A35A23AB825D80D86D67B7A2E3B4837D5E5F02B5D26B7AA74E9
59042D1F6B0989D05A61168601DB68A2D8D6F3CDF62DE112B763CFC02480FD69
3F989EC1BBBBFE8182CACA069465E5A64A0E76B22444390B78745C55E5A52436
4E9A541F17D6AA46F94B43784990529E6D9C69CCBA3D3B1058E23572C23813F0
F81E1D2324C7B70F737B1C9552C3E8F05C8852CCD710FFE908D82A65CE83A5A4
3D8ADD5A198145CFE6219852EE471F49146D5D2BB8E68FAF510D2D74E1531546
A9C75F8AE1A3363374DA8CDA62B0C292ED5EE10FC75AED520A9AF200F80BB380
FFAB152379601E10ABDDBCB0E3E82ADF2DD0D3907BEFA62D3EA91C7DE9E88AEA
F56A233A629F16DFDCEA2996E8F5C29592C0216DEA1CEF5B4AB1F20F5170F8E2
CDDE9A25D58E61D70FF329E0EEA8BA0E39520E1127B2B1060A6603A43DD718BC
7A968CAA14C9EC0E1CC41E289E365370716DB4D314E39DFF711D7527E7D47FCA
1AC30483F442A5B2BF6CBAD68E3028546A65AD9A6854310D9F496F041ED131B0
CAAC8E3530F94B4E2DF0A6D33AF4CA08A15623B50AA95C229FF0215B9D8D1415
9069C268D31D9320A7CC71639490806C250A69F8D7B14CBC2B16AE44AC9D5C8A
13899782B41AB4B701262A1F358F5AE16230BA4E9B7CD0237419ACAC4B6651FC
EA425F4A30E10925D7D22D0930794439B300D1284E50DC0C7303DF0211C6E150
4D6D9602308421BC243ACD67DBFC082068AEFC12E34A6297ACC141B46CAE718B
2341EDC48FE6D2807404B78E647DFDF796801AF222B13C539DFC20C099769308
520B2F3DB9028FCA6E3D29270E2EAA04BC6B893BA13CD1BF78C82EE324A7F6FE
36639A675A0ADA37B150580FC9461A550DC532E53564CE35EF9C682DE0A71FF9
38A5991A189954092C109F3247A59A5079BAB8B7EBA2B43E524141E16279017B
5538109A1EF6DAF6BC5018463971217A4EBF189CA1619D92D14F8E1DAB26FD88
2A608389F4247A02A280474416BE2E0F204E8694B18159A1003566CD529B9448
3A6EE9BAB37B53CEE0F0FD63504E2631F0B17395B1D72CECDAD280ECE9A273B8
FE524E4B14BC7B27B47AB8E9CC9DBBD4D58E2F7F19ED1A9017E891EC3A38301B
F69A83AA04030844388D0109303B7129D3E39E775FD511A6A4718F50BE8DD0A3
EF41E0331087E9A8FD7A514C178F29823E4905FDFB300BD020961078A27AB5DA
A0D95FC0D280C3710B59FAF29C821527C6C7E6E9D24964BCBFA84B7949CB98D1
9954AF829FD48EFE4D7E848862D14058ED8938D3E6571F34A07297C5F788603F
CFE9A13CECA461B974918BC2B84681F4D7A3FB7E1A51409FCAF89ACD92CB471B
6601BACBCBDAD7D5AB59C482261515E35E7A033AEF0268F4A45A845C46F819BE
D0904F21185BE718EF66EC7FD40D20D5730698F365889D604AFFB295B46CFE0D
61DFF1DF39AF8C35B7BA064A93A8C8798AA96934BD086AE741F3A6DBB226F670
9933F936AEE13455048FC451BCDB954DBBF7165EE1B96417E9E85CC5C4C521D7
3EDD1CECEE749B54ADCE415165212B8E42B251CD318DF65F3F6FB4AADE2D552A
B7AE2E49D0BA731FDDF91B41018D7536C1C9B7AEFB4D478210BFF6EA36AD7857
5CBEF0944CD5A6E7482686A6E7DA433FB489DFC3E803D387B3F0628E885196AA
A3E358E9ACD45228157C80060E78C74ECCAA5E92495761BBA422C276A7B47D0C
26200018D33C45AFB163D44C31431FB7C0184668A3431249F4FCFD234A2955D3
778A25495AA6D54930FD760DCCCFADC9FAE93D8C33A30DAD00ECE182779D422B
D9CBF4B0B705F77FE013A162EDBA59F14645F883B300FC592B2B9D289A7A6721
ADCBFBB4B51F3C8E64EC996A2988A5C6B7B69876B9B6C1160B5D69090DD735FF
6AC94DAA294E7B7E4604D99E8DB6765A26C2628FB8BA438D108E20B4532A891B
F1606D49727575D95E1272005F31997E6CFBEBE1F063CCF3BCE1963D053A7122
8E513559A390C0DEE03C405D0D9414ED79403FF84D9C8B7D29334BE91C8DB9E2
5656BCAE2D79B3268668430290B0B95CE23AC063C7E4368FA4A338E090269326
43AE0E9B10DC5FA713B731AB26C19DB24FCFDC977C23F6D93773E8E12B5CA077
4848332198B6DDF393A94EF0BBD58D453E8766DD0EB070FFEB4AB1AAF50B8709
174F2226485A1F930FF0B313439FDE89B331B09B0F0AEEF94BE43EB3F4B23C85
225364DC0870EE74890D4296F2BBCFE7B6CB048EBA857EE1280F92350B9EEB70
5404D9D10182B58037EF2C4392AD13367E83B294FB664A7C0416AAB0FFF59FEA
4653A5E53B3CB1EE44DF18F4841B04F1ECC282D595231F5B344207C72D27F1E2
C6DD968C4CF012B43CE0EE70204C648DF0F411A5FEBC5BDBB54CC5AC0C5511AA
58B09A9833B22F92478B46B639418B68FD09BC3B34FCAD09C3B811812D3B88AB
C3DBCB6CB2F78621C442285A7C060FBF331CFCC7595406E8FFE55C39247F7AC9
B447B5BB86BB00075EAD250C6C07E59821D5EB04D32647DA2D0A04E30A519843
1ACE038E0C7DBBB13045EA8090E83E97C580F8C45FF279ED307A815B7A1D200C
28949BFF50E8B02E2317959594007E846A04C30B0074E2723065F296625E6118
3CF7B4D0103063AD7D2F630AD0B25F2EE12EBF94A75E11418360ABEF3F886FD0
82FA51EA2684441A505549575E7998577AF5929DE2C0883D1FF45685B9D651A8
620083B3524747381F113D3C3B44BF3A627529EB310AC531B605BD9B5E20933B
67754F85EC06800ACD01D7AFCEA8EC10DB4DE78463D6818C186563317AC06344
B1D52496ED5AFFFA76A15A1D71A37EE167EECBC3351170863B5FD1D6CDAC6769
FCAE5C076DF49D4C6C3E41DD0A52ECAD91234DCCAC0926459721D67C4620AB82
180726A740DA2FFF20F18DFDA1BAC0B69F29D8F4CC0E3267AA40F8AA5BDB81B9
2A11E66BB9B1CF5F13F05B815A9EAEBC5ADC58200AE37E24CB8D18BF86296962
8B9BCCD30D795B34FCFE8AF15244E8940C2F9B76F426ADB4C84BCB155A490ACF
AB9579D8025D41002BEFE31BE412041FD41ED77F5FBCFB1E9525DB97E9694D39
22BA8103FF32B792191A590954155D80F7413768CF0060935D9F4B888D295449
BF24F5AE8D4F29DCE7FBDDD1B1E363F5EEFE7F10513CAEAAD029C2493CFA768C
7C57182387DC57CF294ACB360AC777977E10A81077205B8D60D492CB1BD23840
952ABEDD0AB75D873B4730918B909A04D1E40497025B805E72C7B383BB7D7BC0
38DCF0B883EEB7A29B5659D820345CEF1D3D65F84AEA1C53C5DA604A3A809806
FD1E4705D9E258CF3D1B930A9233B639B7CBFB8491ADEA3E15E17AFA02F1FE16
CA19A017946F6EC7FB4B57406E69268431C1BEA84A679B0EF064997A9E018704
E3642129562FF09984B42C819D4FB695CFB4872604AA2F36C1417F12205D5612
9B1FB0E285BD72F4108D0F779D5D803A93285BE1C3BE746411BAC12C13FC00FF
07538A98B08A3F26900842D62332C03FAA5A05569FAEA3A56B7E718331F354FA
8DEAB8012A32576ADE575E411DE20C7C72FA7780A819C050ED5ACDD2AC51E25D
AFE0916614732A46FE1A4BBF4D4982D02024D0349DE9161D6302D6B53B38478D
36D99C5BD8C57AFACBFC9D20F172C28162767BBA57772350FC448166C71AE36C
F40AAA88EF5F5DC68A3D59667E96B203A5CB8CCCC870E4B02880DCE246600318
D5676D8478D0EA36CCC5855E5CF1BC01E017ABC1F1FAC4857D305ECC6C68E414
CF6407BC79F74712847FF796F3C6444B8E41C9E0171E70640905BF0D75678240
9BC7DAF1863C2B01755D1D09493FA853C4926E28BFCBE4DF1F343B095D62109C
E6D8D617A96E86F969D738CE13E0210C826C1FF0D05CC93D31FBBF2D4B5DB6CE
D72C092844146506CE2F862CA9921B7ABE29134BA1D420354F7694BA74E1A996
0933EC9877EC3A0C2AB06EB411A4547C592EB5FC9EF728394509DE6944953187
9EE9BE9CEA4E3BBA196E47DC73AB8C3F205B786282BC337E9855AF960A7EE931
158D91762EBF365B76D80C80EA603BF93F6AD1F460984E479C21D6A7DA9D86B8
AFAEA3C9EA884E4E08F7CF2575544656EFD792E9A4923CFB57AB4B35F7258AE4
E60EFB6FA40070887718AFE86D7637011B85069A820DE4CD33EA10200AB3DB34
A91DA6157865B52E6A3E2ECDD9F4DA67E822F1B171C671E251199CFE4105305F
26CD42FDA4A0FEE76AF04AEC9DF14685D0E7438ED386F8F306CBC47DEAD3C5F8
D0566F37CD62F7B3F5282344ADED127FEDDC4387DD67A682DA906013BD6325D7
66620856365F3E1AD8B6C94F09279504C02698AE55DE48442D31A6B29010C3CF
1E5BA30C969515E502738925F37CDAB5EDA2C3223F83B63B883B067548C8EC75
17DF797E0F5385D324E5CDFA4C9A8898006AF423DEB859616E76F86D88DEA348
FB3A92ACCA74EF94E08A6F24B65A352010C5E2D5F2C8DD041D43A7AA784B8450
0D73FB44DB4426DE6631B6D17F571B9CD70C529992B476C5B31028D0150FDD39
8D9D30F4ED7FB97529E814FD7433E50865FEC5D9FCB4D66D3277182F425987E2
5C7AB94E4C153F26409DBC1B4563132E77EAC9BB75D797DCB840957031EF20E4
30CC592BE9AA85DB063C641A61982CD7225FCBBF32539C665073ED09BE4C1296
D816BA0966EC869040B1DFEA49EC5C33DA0605A81E9CCBBAC60B7568FD928B7F
463175AB088BB74665CDAFC2F97AB865EDCCDE15C74CA4A3BBED7BCD1C124471
B4DF3ADCA8CAFC2627814B42DF8BB14473E96B8B387F8813106BEF5B3F388143
AFB83F96DECD5EDED6B17688939D1639D7F30CB6C9889856136D5FDA86846A62
CCC2B90107EF748CD7EE42FBA8FC486B22663A3F1C3DA027057C3EFD3436A2A8
9B45A61AF743F3FED1B0A1150547F504078C9DE66A39923B9097987D49E4B659
7083D0E939C6C262EAD28A2CDF6F8E03BC5B9E454D63D7638866AFB9F5CBE668
21E6982FEE3E1FB287EF91F20D24F5846746A6F6B85BBC288D2670B16A1EE95F
2EB4B13AF1B95F486F76AF7A58C489D0F20E2392038CDEB4711C5489C8E83B5E
5302B01DC6321ADDED4F37876251F3B4C496659D11381FF4E63CF62587694131
FE9D90B423B070FEAD2C2305E0F4B2C070C8BC1A7A62AAA2CB9F5F77E2154D41
4C33497DAEBBB666FDC866C384FBCEDA69683578876ACC519D1EC2FAD46CEC71
E4213C889552887612A7709AE763D19F532133A39DA3085CCA600FE2501665CE
B41D3B472AF01F386AFC6F684EFA85577E691AA7E248FBCED888B2D16AE1E103
8257A396244CF01DFDB08943BC26FEC0373FE8C8934BFF36C8F8329630283720
4BDCB61BE316831F9BF2D292D90BC3804B4544DC4497917989F5494AC60566D0
0628B1D7ED9D3F09D411354ABF03C92D765C5B8F6B12278152DCFBB5885B144B
5CF521629CA7ACB0C10BBFE3D614C7BE3BF17D522FE2B3D2C6D8D1E8FD328F17
A4AD72305F06A9871798AB17D64FE8FC1E39888826A1C9C3CFDF7AD65A69A4EA
81AD5E538EE47B2F2148D1BD7D6965968FCFAEE8B0C12FB58FA749FECA673437
F294857BEE72C085E976F7F77C7F5F787F29934B6A9A3A96AFB776400B348C6F
7E7978CCEBD7AD2F84BE35951AB19D46C276A97B089CA580E6A7FB059ED56262
6C33470591E904FEC497BCF4BC97912F0C2B558B1C386E902E05EF2E09ADC04D
587A814275073E2FC44F6476D155159D155DE4BA11EE168A36D3DD6ED9BDE82C
49779CB6E2E4982CB3E5E81D3AC401C254ACBB2B67A895E136AF15F46383A166
08B64B3AE36535A1C76384A1D7BA55F8E689113C03F6F58FB96A9AF600C9A8A7
833CC9D222206445D6A8BC5BA237768272177F02AA546237E03434EECA06A2DD
A4B131F4D573A8CE4F526E006B00DCEFD9832D9020EB79A82F9AF77EA7FD8EE0
A473350E070FEEB15DFF6332FC05F4581A753D27311B9751C80BCD3A174FF31A
46A1BFE6FA986D1C322DCDA07579DD709ED42B53FBA7668B33730B7AE1F302C0
60FF85F67BC55DBE8D582D6E3CC0A718633B9A00C14BC6278A268F17E1B2C557
A5570663914D36AAD40149A61E286ED79A2722859634E33BAC75DCB6BDE18822
60C0A32B0B1C23B37C4849E2DC597762A532A4378029B8CAC4E969536AD33C0F
BE186144C4FC55EC06A89C753D4A64CDC91A68D112A2B901AD8C64F67DF9A0C8
C2BEE85539B3B974D8A7F594E008440CBDDA3B71FF1F8FB07317FF32CDC5C5E3
40571EBAAD72925801642B8AFC2E89D04DB4AF360B4B943ACCCD3589368614B8
78F4C4C66E523AC833A38B673DCB2ECD5D992305C0E55B6D9AAADD079BAB3F38
1AF174149254AAD5997FF262A0C14BDEA8D9CCF4870E1D2AA8C851803FF68D70
B6C66ED6C5BE5E37AF5CACECA8E1B613588BB8368B04FCEFC65F88BC015F4B66
3CDA92CB58F00F3AAE3D59CD1EC317785700BDC946F17C993CB29B3BF2BEBD57
AAE2D3C062B5B7844F24C2FDFCEBA79DF5B26827BAC5B39A017933DDCB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.0: CMMI7 003.002
%%Title: CMMI7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI7 known{/CMMI7 findfont dup/UniqueID known{dup
/UniqueID get 5087382 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI7 def
/FontBBox {-1 -250 1171 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI7.) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 76 /L put
dup 88 /X put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 119 /w put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBBAAB71645535A2B
6F0F22458E1429F4A67307E01F0BCF6F337E0E2AD89658D880B04C26306F8179
C8121B958459B923AC3B05B594D8AB95F75870019130442FD29578D44F5690BC
7281357A5041C8A809A59D0DEE108E2A07D406656BC74A9F3317CB887E712318
46B2ECAA341F8692ACC2D14ABABDFBCAC6F35858355F1D3228B0223EC73AC56F
3C987464DB829F243E304F4C59CDE3EF6EB53A4EF9BA91510CB89A3407261F58
A2AE66880BA98FC1EF546112892494C85A2C39F9DCCAC5766725894A7AA148E9
42360AE64BF3A4F1F9F0A0D0C1AAFDC4D50C52233AA595B7D0CE557D4A010D86
6E6B76A7E9523E8A6633DA9348BC3F59302F72F492A30782AE7EF220516893D3
DE836CDE311DED9262AF01C506040541EE84AAC539B404B23033EF56D4BCE6BE
B05F79CD633FE75C6728114D2749E39FD7454050F67763AB636377BA8E1867C3
996C7D7D4A4A02BC49D1AD7FF174C1F49F1F205BC9D5AE42BCB02CF8554E8F5A
D1876C9285B6CCD7B8C165F75843B0AA11D8462B57077AFE75BAD086E9D9F91E
30ACFF91776132F3CACAD1CA5E08B17B36A0E45ACBAC52393B9AF9089BD821D9
CD5A9CD9BECA59F7445D63DECC1B4502D299DB85B6E2EE7C69A1DAB91E22A3A5
89B524FA20AF6005E7A586B90A2C6E5A93C9EFA4ABEF5F7E4C7B81363FE8D2B3
0AD637FA863DE787581ADD7CBE463F7866C40F4E280260ED0E9C8453E5C7E668
FFF058B9742DD3F131C264F8FA102CD0DA05F3114D13D34D422799181453FE23
2FC6EFB01BE420C930B879D671F3DFB036197874725220644A5A52DFB467BB75
8089E4F40CE9401777B9FE1D0AEE02E782A6EB2A185A454AE9394094CDFE7CFA
C03C23A78EAF242E4F811E4C83B59EF4DC5ACE4AD37B41616B46C263358710B2
6137314545CA6CE89119B42A3518EC85C68DC07D26839C68B1FF55C4A9CD518B
A1FB32F9C475BB6110839FCCB94156E7B3648F27245A00D2966FC4DDE3996BFA
F463A663CB6935B596B1582ED0ABBC648AAA8A86068BF0038001C753C8BAFA0D
2058041DFA720B528E2D4B16196DB1CF30C779D3F4800FE662D5B60B208341F2
A66EFCB8448C2FCD12DF0DD899911A8BD96C9B670054D328790E5D388518B146
8CE92E368EB1DB3CAAFCA4834CC9D9D9DCC80FB1F34F39DACDE643052C977A7E
A95C5FA8DFED9B4DCE769E4E46256D6DA8FB18FD7FA4E4CED5D486803538F3B4
6D3F5B3C03184F5C26C66DBB4C724918EBB6A89C4602E4EDDA81EEE2BD18B683
FDB459F2CE0A9CED23DC208EAA8BEDB304B00E093DEE926A7B32FDB2EC70DD85
94B9137856DDDABB402B2C76DBA87149051ADC6007018EBDD571BE1D092EBD95
76D4E063AD7D5F62E6C26EDB88D38678F2806A1F4900B0ABC4ED034A818119A4
E618F1A902315BC98F26775E59555A3DCEA1D0F8B20A9084920ECBE3F7F245AC
1182A40B518B194669D95DE968542BFF80FDC89669BC256C44CB66A2AB8CD7A9
E42C69956CCB6BDE8C09AD22EF3196939B3B84EB23A6E071A36D702909E019FF
058F27562441EB5CAE87A4407F67C4390810BE89BBE867D636468E73677B84C8
5A1228DD7DC8EADA221B1BAD5F43E832F20ADE7ADBFF170AB306F5B711816FD1
39B7882556E30F002977FB88D8B28826A75DE0D20354A2D41F2DA8578376F7DD
F27B0F59D4DDDF5790E11E3957491DC74EEB7625CA49FAD90FA47AD8E0BDE824
FF326A84846A47A21B70FA549BEE307F9C6970009F963B49A504F0115777826F
1D81203F655C242FFF15BA97E3BDDFBF435B10E74CE8543C98966223818839B3
6BF3BC63F882B0AD0FDACA8C56A570277952E1D83F18BEDF084D2AC004E2B09D
70DE1740D7D220E92B54D2FD0DDEAF1E08C41FD321A8D474982DD105B23166A7
AA9E0129DC88065B1E0F9382BEB4B4E1DAAE3EA5489BDCA921AD5A8175F2841F
9400478DFA99C5E5553F383882664D73FBDFA29BF32E52C28DCE80DAF4839434
022FA515679DBC13FE98968D2894DF5DD69C49BD23D00F5D858B69D1F220F968
F0700E13873579B3CFB658972098DC61F1DD580105BC27795DB4AF11A871CCD6
2E1B9AF7F0DAAD4CE315379A7B42CECB983DAC5A2B9426B4E5E0A7F7978504C1
DD7E30063AE3CBDFB24EA2BCCDC478AB82084FD30A4793F4707D9F8F9647B413
F8A5C5AC6D5EA0E35628CE1096A434FB8286F4617CB4D0AD30A4A0B255A5A356
25AA5A947FD3C4FA44B4AA80BAB44C48CC1E2C6D0A711365A37A58C3483D07ED
301A83D2650A2E8CBA9EE62FF5C2736EC82C1402959F64527F9B640619F112D9
8E0F4A8A3078C72ACF3F34AD855AA4008C96E30D9E8C414607C34E06E29AC5B9
2EE5DDB823E8C3EEE6A8DE228313D476A7F39B5DFBFBDEDDF7C45C1C88EE6D01
7FB4F7BB2CBBD5DF7F0CBD98DC287FA6940FBFE1B3B136613A3CF16634CA7B90
53D5FD5776515EFF5D37F8FCC62D8BEC8EE2216503D54D6F2032D3C2BF861E15
FD1B45B71576F15852EEA65DD372E911EF4CC18283CD2FF4196A3F1A9D81137F
F1820EC604D6C61AF318C6C5AB6DA1EDF305CADEF7CC0183B86D31310A09972C
A4BC37D110C77ECCA614D1A281EE1C2040B4A5ECB31A3FC61760F608E44332D1
D2C53C7891B505A3020E9E4915F3618588FCEC80B9ECC5E637D8D0F3C94B1F2A
C53FC46CAE0AFAA7E12266C212A73AAE60199752C042BD55A5DF1CD07FBDB830
C83E7832D8554AD9C9CAEEC7CED1DAEE622090897641CF2E5B34A353D83264D4
4687522DB290D3BA927BA315EA5D25B0D7B69350C6C180AB0C322B05E01F7C7D
F2F48651567F0C1B49AF3950E43C94D78F7B184BF2946B924BC4279AED28F3A0
17A7D8B235698A516D3FB5DF0B18A422B2410C385E7E9439C6D60917EB3299AD
E31471616251FA40C9FA098109BB31A54D9C03B2F12947E4E9252A0851B81C4D
F39E7FC44752504B589C3911571B1D3EC3BD1E1807F99CED1DB20270E483A805
CA2A016E7283550D1B1D35C226FAB63F983CED41A4D02A2F228FA9EF065027B3
CC69D6F2E278C0A2D238D3A37154B0D22281F62C61D9182A69657B027BBDED64
11E261E47620602F865221A534C5A32E2BF5B93A187911A146F2E96538B47DBB
7BFA7EF406FE940F4DAD17E6E4B80C4F031D71F65657C2F5C8233EEAC68DE8A7
E1FC3055C122C1795D0C71A0284F89A9BF04837F61C9E08DB42644A490C97D34
A5D3CEE475B8D578205005A0D68AF94AD27C0E855BB8EDB74775690A4EDD6543
BCC10CF13283D6FA8A7CF3FE6C4F96470A11FF0B0160D3F9816B13B0BAE0D8F9
B84C7631063FE658D13D108D6FE24A89799FABA72E6A6D1C943922CBE676C1B6
11A4106ECB4F1A7F8A84B2783C2E6A109C58D63FC0B74D8C8A1CB62D527441AE
E656D94B1AA8581B4F07B653ED6486AAE1F8ADB30FA8D8914AF24721C74B0908
D84F2EBB91144ED4BD7EF533F2584048DEE37E17CDE5FBC2992A6F924FEBAF07
B626F988599DECDAB43C931CFECF99FC6EBB72F8E542765C26295902DFF60B7C
7B9ADDB4858BC9D808B7F0909690CF8DFBC59A786D48B891937C31A219842A43
234425B4963062DB4C4E9F534C77F4243408805B5A6B8BBF428632CA4AC03A7A
E336DD181CE0CF3E742079E2919EAFABE16A63299771BF276EFA8D85C920F995
5B9D4E8F1ADFCC5C29AA89BF90C186C5DE7679906B2FD4DB279D245D27D08837
D3A8D541FE37415B706EC585C05804108C1D938E543B8B63E275EE85CE9DD843
0A8B9163144B77DA1A552A25D5E77E94F29CF252BE9950F4E627D5F72536B6F3
3278D4A45D10759F16AE42BAE8460865FEE84537F8EC9BF4813570E883B826FD
1ABF3F4E66DB6FEF8366E07BCF290EA67D39C9D81B2A7EA48E0A228FE3D5AA50
1A56CCBF229C9AF2537A8FA70EEF41096ACED34CC7BEECA4EA1F23B39FBC39D8
CCEA93E63F508CBE6722C11467A3D0D5C4C52031DE43C449333E4295104651CE
E13B821D7904653346067E971BE0042C571ABF40C3A1079A675FE4264B784D46
1B8FAA4CDE9851C4EBF69ADF51A7B68CC8706C08D13A44909D4C1D78DB0E0B2D
0E0318304B229DD2FDC968027CDFF65722059C62154304D6F9C3F06DE22914EE
928B7D1BF1FC7E74B4D882998D59BC086AA2D4EAD0AE39F6B75B5A3FB9994506
E21731E1A15F0F2D12F88724BA72898197A80FDAC00243A3038871EBD2F2BAB1
C616278BB78490CB86F552CBE5DD0862F3793D72C68AC16AF8E38FE1A523A5FA
9B0428745B1455671CFA1F6BFBCCF9CA23C833113C2948E7A6AEFFF1A83509FF
C559BB5EE7F92BB43F7F37A371E661C826F63DD0C1B25E34A8119E71EC82FB66
23C7B126FB6554E7560B1B69F2EDBB742F3B20D1648C151C37A8570CBD330A9E
7592A8607D2D727F3AAA0FF2057DF4E2A4C7D3B658C6CED38824A770420D89E7
F6AD385DBCE9C9A9095CF0042052A67AB804A6675BB9373A99390CBDFB715984
A069DE543E4C6ADD7F1EC7A15392EF834EAB4584679A43443953427DB13E6959
0F2F5061C99C6D00FA5327FDB5330AEDE19A53DE3AE092634DC6AEEAF63A5BED
990F8A117AEB1CA0E7F7DBE02CB3D86465F1613B976D1CF6F3A1E69740A2FDC8
062ACC45EDA6B863B60015F276860FB79C31D28F97A799568E66D0A8757B2C41
E939337B467303041D0F4C59390B2E41E5F298F275DCC699D27C459ED4D5ADBD
02539F00095D7E1872862142B46BE06513D3EB1A406E6BAA64BE795122100F09
C37E5D1834218EC1D11B031C7DFC9F5AB071A8F4DC08203821366959E9191D4B
289682D915AF28CE5858F83338DC51B6B0DD052A181D9133FBA50CF18F70EE65
C33726A0450EBA9D0E0C3662AF6C2121AB7911AA9880D6BB6811D6D7515888E7
199A0E632104059A88C9D85B19BB35EDF4AB95E1515BB2339572928BD5FE8CBD
2D4DAF55DCFE29FBC4C3D56336277BA0C9A889A129F9FA7052AD1420B8705163
1A808EC1284C888D78CEA2B4BAB71AD76289F5F4986008FA9BF328E8537E6C91
E11DBDD8447E1C9ACE18DB0EC3D5742C264C8EFA445C5D16C2930FB43669774F
A2CA52144D99EFA8FC427DB4128CD4C036A8C611B087335C780740FAA419D39B
5DD68EA89C95275F9254D947EB3683D0130255269B10C6CFF29EA0BE484C9949
96188FCB747618A8044E2E37DFFD2DB8ABB621B34DC024259340677095B6937A
78EDCF508AC91D4CEFD872AD73F50582DC8807143CEB9F109C84DC5DA30B64E2
E56DE973088A9D32583D6946DB4F3523902FB1781D993B89D5F56D79D5D98CC1
7FEE73FC3A7D1BCCE90179AE450829E228B4DEAD3B2B4C79A400CFF899AB26F9
048B0875EBC871AD23BA96F88CDA8B87FE5809A13889A6AC349ABB25E54ACAA9
C213C5DE2D01BCB9CC0D7BBD384D23AE12E289FF8FDF1F611F5E14D4B20B15A3
42D9B3B37A83A9CA39B5DB6C8316C51B70F211530A56CFE54D63E88169CF5233
D1A7B2388025B3EBD2BEE0716C3A2D589EBC7A42B3DA602AC4E2FD9C9052C922
711E44408DEEA1FE0C9FD50A39AD46D437F61F284A2EFD42EF158EDD71A1486D
4865D6B5E20E60F4F4FC3D646909FF1EE2D7573665E4CD8340A1B232CAC0202C
C35BA9BB3D2267C7E78518F6711633F888EBEF72DC750AC2CB362D528CFC8B2E
A1AE1C05456F50EED8CAA768DEF47FF85C4322F02D7F9D188C6F285C674EF589
251B0B913339FD701FDB281338D96704ED7ED908BC113B4275A24D058955890B
12CCDD5572D63688426B0E1E9A40D6AAECFA5555C1CF9DBEF8C04CE1E5A63F14
969D39B6DAE8A91F6AF4CD1E2DA89A4661DA34E272B6032C442C031F081F5DF5
858F4620885773D8A2B2F5EB6DDA74C1408DF279900450E4A3E80BA9A9B1295E
F24EDC3F6EFD81A741EF74B0202820516C4FB720687BDD915EB2396128C3B262
20E3075DA153D6FD36E1C05B855929DAA4DE694B6F15EF2145C63250B24B031A
4CF0AFDB225E91D99828B83BD90F1702D3906D45872587A3A116B138AD9627CE
E778A949C392202823C670FDBC56F1896FFFFBCF52C4B400F67BA36B5FCE44A5
F18EEB8ADFC088C99DFF8E0A593E81A5ACA2E3693005F723C7D3E0AE2BDD3805
8C6007A00542DEB2539709558A88B21003CE4B2C7817AF207ED576B25A41DEA0
FC55A459BEB00ADB01309B35920F04F84B7B64F95AA99EBCB843A06CED900D99
97BEFD7CCB9F4D85876F10160C8D63E2FDE82B7A8D945F37CC9933ABE0FD1D76
268296B1A5AB06B2E814691128771694224781171DC6266BCC290FCE1AB59416
85530368115BABD4F1DE45952918D1945D51EB713C283DAE8EDD559F437CD886
A4B1DA6120D685C284673A3EE489FC1AE4297A3623B339B7D886B6B4B8F9F4A3
7BF85E320A52FDC6323B51879B98A14C33C567BC069D9B44616514EE1BE36F90
EC5FA33E1B6B0A46945D876EF0085E74935DF2560A03321861A752E59742B9FC
5C501FBC64BFB1602459885B63873DC857ED37F8BE1A9C6E9517B9BF5A6161BD
DEB6DB0381FFB34A8A96AB4AD48BEC40D4C198ABC599C3758AFF638AA75BBDA4
8545D5F95FA426FB25587301A43E176F6CED7851E815AD907F2443E70740DD2D
4FBD5D978B9B37F59D6DCF0ADD0F90825DD23558FCB858513602C8BC82BFA383
7AA6DCEA4009961D06DF233C5381A7F9541259926446B2F03664BC5978A1B6CD
EA6EBC9FE6100A65959513EEE32E69D47B55BAF30A893D77142F943982019C01
715CE29923795EA01C58A798979939B507C5B29A32881877EF7EF0C5CB3DE591
6B9A6C3F3FFA847F396A396F078860B59850BA4CA3115CA2376AEE6B30C05DC1
6F9DB6781ED0F9D45D10E096C33B1B7CD12A9D57C6E49AD833C4B093DC82811F
16B3BD902BE764A1680831EC5A6C1CED84AE0DC0A65678EA5270BF20931E6409
7AA44EACB22CCA11098F8A51096BE83A1ABA56C9EED4195D5CCF24FDAD92E823
C439DAAFBFD652157D728F2754F28304710D3CB33763156D76A259D446647A11
493FAC70DD28063A4CDDA162F72542368E1AC2826C4BFF7109208F66371910C1
068F21779FC39DE03AECF1C9FB2F417930C22791961D801284DCC89B0833B6A8
D63F153ACBFB7B7D547924613BBCCAED37D90BAC5B0264ED31C7B9DA5A2BC620
9B20CA48424D0FF58905BCD6190BF4B5FC6ECCA1BCEF13426920197CAB41C4E6
E82E8EE7BCB23C6BA6F8B58001533B225ED721D6CE3D6E89116EC33CAA6E905A
649F8C6A1AA187A48E20DB864596481976216DB78F0F57543DFAE3CDC0A6FC77
2CAA49442527A5D94DC54BE93C875690CBE52EAA4EDD9F2A511361BC0F0807EE
96AD0D26B62D809E82EC14EDB158EF48A748A6FE0C3A7EE5D4479B35425F35AD
3EC7444F6FA75CEA5011AD571078293448A33C7647611CAEE87974B0A756DAC9
4E1BA78DEE477FA59AD50BF5C52E068A5E044A4A4994D5B24CC5045F768A3C51
D4F65E2A5AFD271A7666C6835E28C60751EE528C0742433165AFBE71562A3016
F59676D56B0B5F7E4984D664BC3ADDAF24B4205752EE21D4B57057A943018466
09C3FA5D2C5BCBFC22A643586BC9E7A965DC34C0A7D272B5B1617BAC2B0CB510
5DD5EC6F7ED1226D19189FF547776698FD48B7A6A038131F869A9E24006A4FCB
9FDD5E4A6DA9C531E1F1D1F0131CF8BF06B78BD2C6109E3D5251ACCAA6661142
7E0CF66D8C1998ED3DDDF69890FB2039F35BFBA2D9E6EA42F2E2E88E8C66D0C7
6B2A404F1C72AD3C0A327A90E16092E727CB2BAA0128995EB7C99569C8CD11C3
77C294DC2CDA70D0CB20DC0EA68FFB6BA42D64A1609E07F378A1AE072D1E66EA
6A88B6216A65BB5D731DF9B83A7A1136A9CE874779495E7C0FE46A3BBF2B8B22
DA689E7F7C3B338A431A90A49DFF9ED14F169994780D0C8F40FC70D603C006B1
DEAD24FBAFAEF1E4FBA1EA3B99A66E0B920B9EA26895B88672CEA49CE0A426B3
C76160D8DA73AD222663472A25B8F4C217490406DD523F6D467FC718462DE0DE
6E1439BEFD7364B9F9EFCF26684CFEEC75B1EF02448DFC762008EF500A3C76B5
CE21E337735800063ADE6E69E1F4F7CF977FDD77AADEA60828A2E423B079BA78
2D8F694431DC3004E7F4C07A863D1D648853F32985CAA910B77CD65CBEA05160
66804F9F752F5AA9372A697CED3F61E9BAAB544833482E37D38DEEF0B88E81AE
CFF8CEC1E5BD28FF7E5ABD8205BEA4CF36A4AFAC6A910A6B952B96A30162C352
B069025739D0E71E15C15A2F3604019C1E6EBCAABE11832EFCBA969ABD4FA6B5
646A0FB1FF59F8674C407253D123B95EEE00F50D4B60B976C796C142BEBDA980
4B9720D95BF38C8D251D8FCCD90B2B20B7EC6EF0168034094B2FCE1B8ACC2052
710EAC02FCB68474395E39138D137A303FC1C758558FEBEA187A47D4158FA0B5
970D8A104B5D136B68F26E1A71AD0AE7E977A3F9606C3A1B2124ACE3F0B46E6D
D65747A9819A437F68E4D3425B5372E8697E8B4AD031B7CFE11C9564A0B29E8D
961E75131A48FAB9CC06C61AD02AC317658FBB2E67BBB0A1D7644E1AE2A38D8C
3E522F427765777E3CF044789077A6CF25C0C8818E449831C066E21989D23AAF
F3AE449A97656B9B1A9A91029A1C8B02D8E917BBAEA84966E1982D5610F7DCA2
F1695C82EC9ECDABDD66CF15E61D81A2C51E3743F660AA185CF9DE9BC9D24A3F
9D7D9636805CF8C3E8F7A18F9B5CFE7B3CAEFD50680E3D865BF0FF07C37FAF71
A4630F3C1B313C435A9FCE93951ECD901579FFA3AF73C0A64A0E29146955DB91
7EFE6467138C121AA641369FDB2ECC1F44FC66C938D0D4F69504FC011FF97A95
3DB66939E562828D1151B0367A2F9E0486EA7064549C8DE3F7C011BAB9CC3601
090A3AEAED55D159BBE8FD0F55D1FD0C53526E89AFEF66D5531943B6FA27CFA1
81B3C40787BA5F9DDCF8E7BCBBF6A9FEA4611D0901DFFEDE6F809CCD0DF23AE4
6DDF8B4F81AAA809B6F0A64F1898DA56963DA77DC10E5CBA33926DCDABC63174
9EB925EA93D2454A9121F548C4138A498D8A1333DFA516F9AC9ACFD5E5786965
A268B2B64E4EBEC3C1F7FEE22EC24D8F0FF82C587C80FD855F1733F5D4ED3B5C
72B8D48CEB376082BEE0A1FAE4D6A8599BC02D830B6C4B601FF51BA00A2495EF
3964BC25EA163EF1A18E61CDC49186FEE2AC17D0876D4DA43E36C09412E192D5
CDA77A1074D5D5D1106333EBC16406622511A96458B22E5B1428DABA34A4B2BE
43456B426BE00B72EE12964C296B245444093CA1A02BEB4E837305CF2FF377CC
B6A7D24CDD872788E04B7976BDEAC417067AF61E8B7782187A9E87E2AF37CA3E
B7F4EF88F02B5E4137E61DE1E5F073198E783B5B5D8F861CCB47BBD6D67284C1
3AED0D7FBA0B25A0DAE825EC7CF6A2A9472687D71CE7835EB0E42D4B9FB9F632
62E2B576BFE1DEE1C9C86EEBC5FA2AC0045E12BFEA8AAB4EECDB1B8AFA3CE2F5
7EFB3B7F64C6E370826481E4C39B74277E43563D9990D7CE5970A5574513926E
300E09CA8D73C55BB771DD444FAE666688C93C91E28B653BE5A78E23AD6C4D26
50DBDED340730347140503600A86E24A60BE3E72F4825D12A963BA50042485CD
3E4BF03E418C4C355958C8C31E985D62956A3FCAE466BB6BB3BDD61C70E86BA3
6F766CDE56F5450A66AA580512F1843C5347B16A9F62FB74EC45D0F85CCFF119
747B4F3A0BFA931198620524F013DB34F7E8B9C1E0041B0D1A3801C8AF03EEAA
CB3CFAFD89EC6A175581236C0C0B1EF1CB650A40BF52815F65169A628C4AAEC6
12394E9956B46C81EE3A0BA73DD6C3C4F9785345DCE650EFCF9CEE8B565AAF21
4DFFFDF4AF52B9E96529A2E600B7EC3EC0F54C4B6E5FBCE70649643A9D6D41A0
89123E6FA027CAB97CEACBBF3D25F87739046F23D8F09B0C809E44AB7F723267
005D92CD87DF2528F82B6990AA543AE1683F79C265ECAFB686F264B1236AB018
2F7B19A6B1CDEEA8D4E3DFCF5F4F6CFD1826DAD6E2EA792FFD5F3B990D1B8BDF
1DE8271FC0D4A20495E1247F1E4D721E6DD57D055893420C08270E4FA282F589
44B40019A6D49D8E130359E166BF88694D242E2598A2364A0E92ADBB537DCE58
3351A95E2B9D4FEAC485B42BC3D1A5846B7407B42F2959B7D6FD408BD3BAB774
D1F63E53100CCC6DC14CBCF308B4AA4E4EA3275117A27293B17878C8313AEBF0
4D6F5B1E97B1A41F95E0DACB1F0236DF4E5BF4DA7615587DF724D0EDA6D7A13A
C18B97A583790237893A28EAD7CD16C37C1AD11D474F3B1BDFD29D2B4DB19277
20A3501488D9C5E8E2A957BED10CCF855B7BF3275CC3E5A6DAD2C67CB14A711C
DFD83FFD31371AAEF75DD4E38CB905B2744A21D58D8C86805561236AA92AD568
4AC3F07949193407B732B7C2BE4D5CAD0C1E8E695ED3ECBCC35337725E0164D4
1B3D9E484C6299494C6D7BE6122010E11107FB490748A6DEE8B4071F304C512A
CDD0547BBF4BD4F18F8E56B629F5B97409F9227DDAAC9189EC85A2253FC41375
71EC88CA202A168AB0C0EAC17446C3D27AEF283ADB7A1ECF83F754DB7F143C67
0FF93A796890C65EA7EFEFE0255653C4A999B52A03280F9EE29108C342CD64D8
B3624F4EEBC57C2378909FD4D31F4BA946506859BFDC4309ADACEEDEEE23BCCC
C2426D55EEECC02C22419B3C913045D3366703106492448E7E1A5055D5DAA0E0
3C382559ACB6DE6CA5DF0234A40717A27DF24F26E5B906F183B6B177E0F8E101
8F7880DFEFE640D4A9ED2BE50B512C74487AB56B3E4EB1E599A91BAADBF5A4C4
19FF7D392B1031D03ADA8491D962770ACA25DA4EC95F12A48296FFF2FE5D5DD1
C3EF81EF8091F8D75A30D605B8ABDA480938021A7CC28B5AB5944927339AACCB
385E89D1EA7CEA82A83A81DC680813B52E318AA01EEE98E8962DA676F10DDA65
6D5AF25C348C321F7FB7C989B469A3119BB07484AC03E8EB358F6AEA0EA51CC0
DE637EE337613BB107F1516F3728CE5732AA1D3B0B9DA17525EAC8AFE26D4623
D8E6DB0AA29186BCC07865C045406698ADFCBB9950401ABB3ABDBF2AC9A46BC5
8F1AF94460F1514406416C3D1695986A8541A5A9FC3FA5BFE761F5AC1CB44519
510AD7BB6CEA8B52FF16346E9D58C44B0BB18AFBA532EEF0F089E6909D938113
DD00EB7DE53EDB7C9FF886B8F648DEAA689CE06570D5151E00148FCD19748917
9BDA3A7E51DCF1CE0315B8AEF18594034126B32E6FD5B2E50225B2D5F08DC293
4A7E1DEA000A3E1E8B842A5ACF41FBA1A46B75992D4B60F1CF6C81924ADD48C6
BD134B11935123E035ECF44AED1DFFA596A28F65167CB6F583F9AF0C2F5C71F1
07E50CEDBE1DBA4B0E70DA7354194F4371EC44D3D3DDB8874BFF5CF51C2E2B64
F761230F09AA0A4D75EA6129EE6D3EDF23EB32CD46214F8D417BCA52362A73E6
696A74D1374B766F2D02A6EEE1271CD0610A54ACF3FA66D04B90CC2E843954EB
F7D280D4CEBA3B31F5A547F86E7B01C2C9B1CA97C4B9035641423E348F02C049
D5E7154D6723CC55299AEBF72AE9BADA616000CA0A5906F2214C4626362EC2C5
15A771D3E9D9B6DFBC07C63C2C778156888EE130A3E22B4FA5832520071F22CE
5C2F3AFAE53CBE189C51E2869973C1CB3D6A47F1F61F7C34081529080866DFB4
3584FC1DA4DF21DC0A6142F7EB1C4C8AD7F5540C1751BAE72E207244ADD1E7EA
289E49493870C50BB3A0BB83B030FCC68A1DAF1529E5857E2F7D9A18B61BF5D5
87AAAF13445D2647A375742A1B2D2636672B717F87EA810C12BFAEC23EF5F44D
471C1D54B706F3E5141A1F3F0312DC0B03F475F52DF1E16D1EC936955A962FD2
99ED2EA77D9C7CD835AE77ED7C3BED19C14A0408BA5281CCF81BFCEDDDD6538C
8E7E17189032CEC77BA13ECFE46894E9B5960E7019DE452351DD58808FFF2768
5FB9D18F0D5AD30F2CDAFDD5EDA394F3BB6F6CA48E9C9CFDD48B6B9BCC1D4D50
55188A599DC47A709F524648449F5761EC333F4833468BE2EDB612BC0E6D9321
8D1432888B7B3E4DB3FDD84893BD13E2ABF5B2EC4E5F99E6BF7DB0EAAE2BEFC5
0F4685BCC0B99618F03183B0501CBA8519E5A3424A9768958890E11DD94C831E
1BE0C955BC463AC1B9594671492175FA96FF81418CDD0965078BE8DB1EFD7ECB
6A1DBECF010EEAE3D9368D5749B73859230527C34BD7C734D9CF28B1113BE5B5
C76371CB6E7ACFFE3EA67A8C6117785BA27279FCAF849370C10A912C7E20C6F5
293AAB0DEC46791F1A24F77DC6EFD0505920A0A6936DC1F5F7D00D70A0E1EA0F
4B7BA78865BB5C943A88172060465500CEA05090F47D4DA37FC3FE29C7E1D8DE
83DFAA47F167518D511534208030A28E838B8703535C62831ADB4BEFC44665B1
41036CE2FAEED0F53EEA3F714A543CD8FF8D89A61EF1230D63DCAB5BE95B50EA
7D221ABD1F25C56C2DA39B79209FE3BF1A030393A6D146F3A1D2998FE10C490A
C99CDB5572D9A9D5F436EDEED1E185FBD3C500DD134B083C50807C26B8FAA374
F0A19D74072479CAE33823DB04235243D2F4EF2B9CB4F3CB561849817C76A4C8
721F8443C1715744838871180BECAEB72E3D2B458938D0FB09212FA2FF9DCF79
973ACBC5B0DC71B4E8429BA750471CD333456632E16D9B692EB34374407E9A81
B5D184FD10A9BF85741F2985F378B138D692C8E77E4B40698F726A55D8A60BE1
9549B2132BF7CB4C3CDCCBC4E0B01F39F25567410E7638A9DB79E063E0E95D7E
464D87E4BEF3F0222DF8C520E3498488DA6AC960A3C9C90D0855C46E1EAD5DFF
841D27D34FD4A0AE9481DE2A8FBFAC57CBC6AA16189AB17DACFE21A1E6F480E0
D337FBBD96B1147D1C3A1EA32E1813387F306CF83AFA7696C0E3D04025329FFB
108830B618D1EE5F3F6FF6CD0817AC4E6A0B786C952E6BB4FC39D92C98D01CA1
681A3FB5F4609EC9558553995C149348859031B3E5B6F20B2638DF77137E72C9
0492CA1038FEA46B2885005CB31305F9BB1F111891A469914BED788F93790754
C4E421A17FC10579EAC993A07EA8FA70EF1AC52A765F42571B3D4F41F7E24FBF
D3D06DF61B166E7CA5826194DD18CFB2C16BCE83D09E0E21FD0CA1823B8EA335
06113842FE95417C6F6C6FAF012B2B9ABDACB5D206543B528B20964C86A3235F
047FE7DE06A61103554B58F08EB0F2408D1A697376C5C3D813217B24AE4BC463
0D1B3855008C6AE2854426BE0ABEBCD73B65E0FC74824AFE63F3844652C6EEBC
E0735D97BBC31E27D76D1CA21996B7F8704FC9D1648DBD992372B1B1365A1C3B
E8414CB5C08A36728A45ADFB9E4026AEBBDA4B08EAA7CCA49D7F9EBEA6D1B3FB
081DFAFDF7B447B374FB348A6AB583CAEB7F4D9433C46C157DBAAFC86FFFF428
AAAAEAE32033DF78BC4F94AE2A90E804116092EBEE7EF234D92ACF528CA12B57
0222741C24502DF9F96D7F47386A45E5EBC9504E4EB12EB1F3518E90F2380B8F
705EF604C47768378B6EDFF6C0BA3EE017F193DB72601ABE673CDF1E837E5689
F0C1515AE14CCF44FF7E6518C646270EB92E9C14B1674386355EF34C9D35A2AF
A60A6DC36A81D624B06F00FB0C48348F95966EDDA4C8F4FBCBEE6F3EEFE4EA7E
C6B9F13567A2841B02952AF7BBEAEC0662FBF972F500A57F6C66F10204EA44AA
F1AA4B49259C01084E5B008DA35FA792B2101497A695501AC278212E1D992A42
A84D2A50233D8DD82F2BDC0443157F4AFD5AFE78CDE4466CCC83C8888A0C2196
1543DD93901D47222B8B569BC237C13F1E3B845A999CA25DC06AA5E5CDF05ACD
2E912AC6E19EFCAB09AEF99CE1BED9BADC968D6AFD91B24CD4CBC25BEABDDA76
ABF384FAEF8C83672A66CE174A4301408C43659CAC799A7F7991C951947F9360
436710605182880300535CD61DD72E186AB03BA2A3750B91D13329583B8D3209
57D7A7AD4564C219BAAC75E7F58298950D4DF35DF34FF4A69BC45C30CB81C50E
441BBF9389FD53F3F4A8D318730F9F8D33F7B42439C465B85031191722275838
9CD541FAACF09ECFB6C63E63ECF046B60D6F9EF8388D2116C57D570CE12041E5
60B8733F5DE2CF5EA98A8AD8BF484938F07B7B95F033ED655A5941B688B20E30
3A66566281FA16F46738D74E49DAF9384C66336BF08D59DCDD7D5FFECB83290E
D45350C348FBCE006F9775D8C25392C2E9B8A4147DBD899F52E3CE941054AC94
9C31BD0B08BF2A804D7E066E7D9A29204FBB42B9C3C5925366F5046D33955C3C
1A12F4C6A5927CCCB8995038742A07963C23CA4312A4C13EB8D58799BB41020E
3EA6C81F090567F6F3D7D7819A2A98237A34423D8FC8294DA275D7BBF56AA61E
F6E0062F58D697A57EF00DEFE3BBA870F74856B3D3A31B9CBB41F89E21D8239E
CAEF83DB825A40171E916848F3D7DBFF736E1843EFCD4CAFEAFC2279A37D1B38
AE34F8503296E63CA984A02DA7F110F5B7D984C57D94D4E870A6D6B31BEC55D4
6057C73CB15B3F7F7C55D996F2642D0DD1F1874C490C3D078111002D51275AD2
064BADA7AB98A16A8453262E5D72C2003DF05A738A1D564616EB9E309F25EE57
61E70FB07AF19D37180A1ACF0DAA95AA35E104CD4A66C790108B9D171B94A453
031378A34B729AC54F7088CA018CCFE4B7A296F96AEBF7122570D99E67C60D37
10E94797FBB05840D26F393FCC2268283560196B5472DC14CBE59584266439D4
9567B13B32F86122C68D37150D885B32F9A7F4B2D38AECBB5FEADC24119A2752
AA2AD62B7F8D86B5EE05CD86A59F3E3B487006723B4F91EA4429630E543F1FBD
84B7ECB270CAE78FF19588852EFC17501E1448B125FCA297224DFE4C29E5721F
DE4E7F8C86ABF1DCDAEF489D9652A81CD379472FB9D62DBA573519612B930321
8AC05C7FAFA9E5F3A5207F08AE22BEE7BAFBEB40D8153C4D3CD08BAA426FDEB6
8936C0BEC02C4B411B393EB2D5C1944A57034DB0D0A0DB3BCEDC075C8F2CC743
FA96597E5114CF86261C223EF34624E4B1AC8A46B7542EBE605E493D9ADCFCF2
099128D17D2204B88EFB706B9CFBCD6C39EA21B9D059A94E1449F0681362A43B
0658A74021BBE7FD6281DA8E348ADE1A12619751EF83E731103DD862E4BDC986
F339F82910C3B53E9054ED0CAE7B795964EF11A7CFCDA546D913EC6B515A2B79
76323A093E2DF18E3F5212CD5AA75F37B6888021F88F7560442AFAC855D22888
5507F76F7103C987F8F1C583C81E390C204F45F5FF6B8149D72A82F621FA0F11
00BA398B24B31D3F3FCA447DF6BC316D540BFBDC8A6DC1D97DC1AFB5F62D4412
CA5F160399D41F66C04A508FF57572B5E2E29CAFE2E6C93C547EEA1D34D0545C
CE544D417114C1B6202572ED15D26C3FE3630040CE81CBF8CA471E24A3CC4D7B
8B99F8A7B80C7812C36332A50B7F2A5EA29275F39620B8F1531E30D8F8EBCDE1
5A0A1E006F344689E6F972E88DFDC6578328F7BCE9DA92D72D2383C03F2D329E
9C5A667C3780B1FDDACC693E3537B5CC64AB903975B6E1A72A06A6312DDA4292
47F4AE88715A1C8BFCFA038318CE5D5CD358989309F871672F6372CD637153BB
92AD403600C8D2D8F064789255ECD808387216963077E98CE067657FE019BD67
682CA7FC6408B1583131C58A78D3285DB3BCBB5238824CF0C15C778E60AF47E6
7F37F8072D0CB726A1B25640DB33FB39A712F89E9D41F15DF07DC4300F2974
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 62 /greater put
dup 66 /B put
dup 67 /C put
dup 70 /F put
dup 71 /G put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 86 /V put
dup 88 /X put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9042537872831BF5F1F340A
8D3E6DEA1D9675E87B3425FAA0172DBEFD7C28E30906B9FBA65517C9B58FB6BD
E0D474E69BB90B0D130A32C4130974A1C961CF064A5BE8EC1056858553FFCF7C
0D78627BDE04E5D0B9F6F72F92B61A915DFF7AFE7DC3807891D039AECEAC3F50
0A09579E661D3DC3022206061E0250B09A05CF198DF82D4F28FCD3671E815A6D
94820D0C87AB1DCEC251605D9490BC465D8A62C95B7352250D76D9FF1D3D5A32
9690780A5B56F9BA2083B29AAEA996FA95246D55AE88B0D3F6F307959251AFD9
82650287B5A98758C8FF3A60C40CBE3445ECB497F3E04C98DD52DCDB2F632D5E
FB5654C417A12EEEF2DB5F0CC54A379DA75BB9DEAB9FD9F256C1B832D55382E1
22A7DFDC37044BF0CC2CBCC4405D8A3495F4886001D615E1737FD9877EA3EB51
823C2FA1940BD8BD802C34BD648B41E268B825129BB13543961334C69DDD8407
97E868B79C83752682CB506FC1C801F63AE7B3B8D7EFD23C54232AA97FA8B2ED
EF2AE0382B4ECC8B24CFC62F698F8BBC90215BEAA8446BE6D261E30DCBEE8CE7
6BF8D0E51BE2597E8086F27D4C58573A208D55B58D663D654564D288F81DBE41
D101A117712983C9F20F034DFFAF36266EDDB105E979E9534ECBF3969333F31F
754435EF920C29E6097A206C910893BF28854BED2EBA9AD56818E39808EE8FEB
691D079E4B7910F48510B7CCA436C899C15994159B59EB57C40EFC2572F81DEC
0187D666FE6E2BCB56D9806C85C373842600368B13CF250427EDAC6D2FE73B4A
CDA98A7A3E09AA8157BDAEC4787D97CEA58C20D18B92513AA6626D82AFE4192F
912F146A32B4A67BCACC9FFFE9445647B9DB050ED51A87314AED70E3391A3CAA
B514225CB4682E0EF94B6F2C48FBE3C2922DCEDBF55E0D3BD741F6BDCE344E24
8B80882F870A52C4E75205E93A9DC8534EB0D408F91C156F0E6A45FC11FD97CD
85D258D4539AAB1A8B75E6DF629E5D5D99C858B664DCFC431D6FF622555A6C7C
8A09D5FDAF33ADE1F814FD8875077C625328AAB0231173D36638AE9F0C890EF4
5729376A8CE35FC790DFA0D7F9BDA4DE9DCCC3D9364BECFA91E8AE1BCBA6A8ED
C4C90E33EB524375059CC1B9B8773E9FEB5F13C5249C89703F465E0BF893BA2A
266F88D359E5C3F074065D09E13AA18D0183C0A686BF8F5025B349A000DAE7C4
EAAA88A3ED737C5D9D1BF7E01E5BA923D93822E2500BB3B1A1FC5126B875BCD8
C70FD29BF9A631F99B84D2F378975462E254AE347CB480F35523B9A1468F3713
0BB4AAB7E5DDE2CA0F469A828BDEE11BED849B25918C66EB50E264B14FCE5DFB
F633EFEFC755B0E2B6EB06391B529C3643CB91C9D1DA4014D4202196393B6663
2CA2E70F4E1F55292D62CA06693DDC6672E484C4C267A8350F8F4E9A54B9A0CD
B3E5010EEFC504F5D17197D8F67D05E220791130AEE6A17D53A3EB2099B987C7
3109E72CA5AA5EDF506F4D42DB554613B9F049065EE994F2DA6856D20FF580E1
3737D27AA46C2337F59127A97BBDC71E12216730948E1369FEB19736A35E11AD
034F878B91C19C9B413C5A12D3CC9F353876F2111F99485E61FE6BDED1159B2D
149844DED165C2DCE05011B9BAF4139108ACD9B6542CC47C8E2B4B5F4D189B7E
48825DCF9CAE6B91BAD3CE0E4567BFF9E0E4F6E0D8A7DA810F87128787E0A650
864F32334EC8808AB9C80CE9A4E4223E9B561F06085E2C1731F7FA43F030651F
A56EDC05C9ACC699C5C6E040790A2BA407CE6ECFD1CE379B1A3CE27D81D87614
F0CCEC0635DDE05F4978C28340DA6FC73434C3919DB2D7C4DBFE7D02F8E50206
D653BFF28B87BEE234253D4899CC1D3357BDF19B0A08FCB915A261E49866D27F
117B681197D2429C219A27493D057A96009DEA939A30060F7CDDF679D9BCAC4B
738E07AD0D0A41DA313CCC2543E658315504BAC84B771D6B57976689FCD40F20
E58403D1E61B5B11D5B16C64DD62BE95DEFA21E5372A76BCF00292D67FF3D938
DC4C55EC811238BDDD30373E532CBBE5F000B05F5B926B9E16E6020253BB1C0F
C08F85973CC11E3DA8EAF88F2BC51ECEBDC4C7E292FD83D2B497D052C7A8754A
FFC624AF664E67BD2D5C81EBE787ECA3B7AB98540B40205C7B4B520FFD1A767D
099C0050F77E7DF80440322FE440E76376D7FDC6ABC5E3C1CC961954F3D7644A
428022AB25C00E01B29ACFA1D9EDCD60E6E405B224EFD52B7BC0CC17AA077096
5680DF09B07202888CA6B129D1ED0DBA1049C6DD308D362B285477ACF3A2ED01
D52B36348ED1046EC9B0A0C534F7AFD694500E09D1C8750C45DF865B15DDD8E3
6AAE425F90F220F5B84B1FC2E4CC7C0FD12EB81155C32E4C33567EF3C4E04FEE
71B9E59A34D185CB6D87948F8BF1CA348A89898AEF7A49DE30BF66AB6101EC86
D22A40D13D4592F5C540456F5EF1819A454FDA0865527E7A1356D2572786FDBD
8A6A9938AD2FE247DD818A09FB152C9B7350CB407F0B386D6C2DF0D0B90148C5
89033EC666E333863B61848679BF7120D7ACB3B2D7523BCDDA7882E9E504A084
316E8B6929686174E8288EE2A1632F643025CBA5FB9D82DCE49A9D0A9BD55A4A
4EC512F546440A53680A11C934514CAB57C5D3AAAD036715EC18FD6FACC4B779
BCB1A399E21BF39FBFB52FA751B97FDE160CBF5AC6F2AE47A03F9437FC8C10E3
B7A456E162EADFC6EC36CF77FEB8745F9B5063597C4974169A87526A454261EF
8FA41CB0BF9E73E2AA159E9A25E8E2FAA3DDE995014666ABD6D96F8D5E1EB620
A1D0F93EBFBBD8A40C655B11A59A17A82AF66F5B3BC9A83FF1CB97D2DF4E9ADC
DE95C88FAF0583FC43944CD5B331BF272AD8B083C54297AFF1097AE9F55A2451
5E0CCDE6B1468ABE32E329442FAD5DDEA077AF28DD4000D6598034760CB72F3F
15BDA2590EF4608F43A17711F9049EF8CEB0036F3218A11863AE6AE4A41F5745
39D53EB310E84A01DBE031AA3513C751678F054402B1BD607F45A7408426CFC9
8811A7550A2B5253546149E4CC66CFD3FC34E3AC6281B31982DFF6968EE8BBA7
405EBA9553FB481764D0F1FCE2871E65C7B4E93F9DB22F468F9B369C6C106A57
B1A154E551F86FF8C3E8F77ABEB4DB11F819F47DC301DA865130A3E75F312BB4
432AC1EAEF46B1FBABEA652F3799143801F7E9C0D998A39F574452898DBB8D2F
A5FFA540E6465B6FE692EC84B235431612F51CE6EAE1B75238015EF7912C6828
BE27E1D24AC2CF464DE14B78190307C4F5E12EB0D0BDF95FD1E2CBE1C63C9CAB
8EE48E8607B892A37786277C8D0DE9886644DE139B728A61ADE58D294D4CC359
545E7C07BD226DDC044C5A5A92F2C9EE4905F0703028CDAE2E9C9184566744FA
328A8BE2FB6B0E33DCE27CE596C6D841D7ADF7112DB70A58FB969D51C26AA106
9FF1BC7A8493549237D67299CC8988AA64DD815FE3430B6BCC717A3E379C4C4D
1336D1082D3D2469CB5B999443F2839F39EE708A7994CC810204E60CB3EAB44D
FFB3724FEF6B423AA52666062DEFCF0BD2E128C04ABCC4ED16D4955C2DD822BE
7FF211BDF52394B293BAF041AF9CB91289A589F2C20207BC5E740F2CB9872A7E
49AE14C26AE5BD55AC969ABED550477B5A7B1D169E5468133BFB0577619B7C9C
B08857CCBB238C3229FD3AA7A95D96691D61538E69A18952D19F6E2E87151073
AD2FE72CD286BD5205D458270E68A814F70F2D73D2B108CC81CB1304EA45B1F2
843AF1CF67B86B2C05C86C1B18C15F9A2B57F1BDCAD60048EE3FB47F0ED5BD7C
7D25028464FAE9400910B35E424853F4D3E85D706CF4EC96615ADAD4F5776D14
FD015153E8C7F3BD124FAAD006BC889B2C65B27C673E36858E49ACBC08A45EE0
EDB0369CC06EDDFAE0125A1B05D5C05DFD09BEE567303177EA3120AE4C5DFB4C
5C29EFC267D7FF1A6B09DF48D598A9A07542E4DD585E0D75341E7BE10FFBAEEE
628452B249C55650DD5BDD8F86BABC67DFCCE77883007F685887D122644312F7
2F54082D011E1905AEFE609FA3F07741A7F7DE8809A414BD47D10A40A89185B4
652E263D9DDCF8B1B783CCF11B8569CCC7E06FE72490354F1841C0F6D83F6A30
F28A78FA0F4BF5F8D0DE62AA5340C271EE961D4C9084B8A5A55D522BB4D69B02
E9679D6E4356C7407B8430337DE03CA22FBB7964C766C7954AE3AB40EE2F485B
7CD5AC8EF421EE03CB1F01547CD612F7690A5ECF4E297D04D8EE72A32760BF8A
B534993EF071F9E7381F186ACF5C41D06C71A73950F0A2D008CFC1DE6E086372
D8CEB2175E091453576D9C446DD56ECE223B8C04D0FD0D05CDF252C185C74797
83B90CEE5F15B74B05F42D0F180F08DA647404FD07743C22A55BD08A179C99C1
948AFA217CE2352E45A4758656A39D1DEB55523D1AB233AB5DB30C3E18E7E426
4072B7170560B6CC28BE7EC8E679D651C429D35A2227B1A4991C24116F85962F
9E2EC53A2394E57C00E74FDCBF4957A1155E73C3333C234DABF2CEA2BE304BF4
1A0B512A0D995A5811CE5CF7310035A383BC590E28F6C26286554FACA1E57B4E
6A8DCD1D04F18CAD82AF124A396845AEF5FD0C68375EA6894B275D8BAFB05BAB
F960B1A4ADC5F912B6A9FBC7286E4B5C5A763392B8FEE30912C1A0DA8B80A054
6C8726144FF44D0FFB324426D59C53C694E685352030DD43D63188D45B664236
FC8BF71F2598BD2C86338DBE4FC3758D49EEA778C736159290F6F77A631626D1
7C5D90702E56438B04EE3997EED85AA42AE35B14C230EA7D8AF07F1631331ACA
5C2B3B478588B9B854091378EB1F992F364002F45ECCF20C22C707D611A7F888
7E25E0FAE7CA7EB1A0EA4F85EF682C4A5CEB35706F763FB6F73B68B75006E778
F8F701ACF68AA870257A43AD153E2F8A7CDBC27D51A48CB92D4A03423D0B1B3D
0521758525E365AB0F8B66B1969B0DC1F2D7FDBE891A420745F88D13720CBE18
C5B1B504780AA3E043AFC43506CCE9F432A3C56E1510842ACFC82671095D4385
31C26BA06E30732A232E977F26B8151BF1DBAA607EA13A09B83AAC60E9E44CDC
678BE007E45D170FFD662146F68E20FBEFFD2CF85C6EBFAED0B69D02A2C1CA3C
B002EC9B89F1F8B31F563043A5094843233528050BF10B0320718687CAD262E7
C540C425B122F01CE6A8C5D05CE75A3DE78906CA5A1875644ED003225A4A95CB
374279ECBE4F14E85E94E2ADBAEF002B899648EF220B3B0BBD976C9FFB1BDCD6
399400030006BB7DD29A73257DFCFE4A0B6E4645E853881175D144904D82C375
7F2806129DC979F0F9B9ECED0A30D1E1BAB9504B2F499FCDA147E4A549D0B17D
3AF9DF36996FC461558DFD10F77537B0C7FE0862338744575248F2C89A901C7C
BE81328872B098AC45492FE99C6C7FF7D851D55E4C1C9222DB50E7FA193238B2
6A7DC60A0DA5F71E3E6A133E076EB5A69D562D0F4BA0ECF93331B17C6F979A33
9D1DDD0E0C444BA592BC82F31CA6CCE0E891E08DE40927CBD2E2B38C68F2650B
E64D205C1CFA34AC2629E0238D10E1A3DCC9F4FEE462D8289D03CEEB09C2A070
F5F4B6A5EB504369DA994D68595CDF24AEB6C591A4AA67F38C44DBA0C853472D
301352E73BCD931F8289F740A9176A499C09767BD7741DF3E7D792E7BF8E3AEC
D0B7B50DF3258589761269DE4EF13723727DF0D48FAE278F34F4E1AFA8900695
AF2911D26555BF1DB5237D786FEB47A6BF4F1C96F6F956E05F17CE4778C18B46
36887D93D1120D17157BF682EAE9EEFF58C0A285791A9605F947C967D206CE14
C1A25D8A56B7FC5E42614E7F7D0E81498E80F78FB1AFFF208F81412BD481F656
DE4DC343CECE14DE528C314FB0B42E7DB602D725C2850EA487E5615E607F9A2E
7494208ECB8F7F03EED3677166F1EE18E76D67D8E747DAAFD6E61A0F7163BFE0
DCC983E4FB116E164C8EE2C41F5D3246F6EF9DE7166F8D41E7D304CBB84222A7
FDAE708648C29E9ED1DAD4BAA6B218E41A028C2C099035E2AFB02092C494C3F1
EB7DA240E8C0405C05650FE52C5A118550CB0A3FCB5A83BFBB6275819A7D3792
5E87DA460FD5EBE96B9F185494CEE1685BF1D788C4637338C3710D04740DC260
6FCC39F21BBE5258DA06683851E463D4947FA93A651B90352FEA1B7679766F6F
6570C9E8F4AECCC891473215628C9C072A34C012AB8CDEFB0AA85311586A0F8B
00561F3FBD781A859A5EBA8321E43929796B6373A13B89340096E4F468ADB67D
1A604ECA07F8580A2B3D2B5AE81152AD68817D04227D6FBD09775CCC7DB5CB2E
837393A079E3A0399BD4D50146164AB48CF66F07993495AF448F4425DF45B07F
F87B9A699AD7061DB61009D1DCDAC981A7A1925B7724E65A8D92FCD48549ED03
8D2BC94418BAE6EA709B35D715022DED3693BF6197AC13FD0D7273ACEB8A4A80
72F3FDA5ACA50262F89EB3B533C94C8F95F854A81DBF49B82E0CC5207D2BFBCC
6C957D71F8A8FCE90FB68E5AF4D5B77E7AE693474B1CA5262C0310B44B3CFECD
A14E18B3BF9DA2BED80DFD911017E8A50DD9F51F6DDB7F36BB0F78A4FB1B68C4
9EFB30A2F766AA2C70062C8C863EDE31E97ADF144865C6DA516EE1712B2CE9B1
26BD19B5EC6FA5C24702F790D0BA5F5A29C3D0BA1800DDD84F3195B9C7588C44
4A1AC924E74A2C8BD430CC284C560BF8C4C588813B1FECF2B731C752659420F4
CC956619AFD08BC707931785E589B15030D5A02E5D070A48E3087A7EAE949AA3
C3EECF245C92FA0FD812457852B300D810F1A9DAA08B65BB30BD0462569D2142
15382ED9EBCAA1D81DFCAC0A668505C40E16628BDF0E14BC1DE4C9F0F053F6C2
76114D9113853460AB90F4BF067C377C44C64EEFED99CFC4E44ED524BA7438BB
291B0C1745EEFF61BADE2AA725A22D5FAA7874291E1BDFFCCDD8FF8677DEC2D1
C79706362F1DEE8B9FEF7066F089FA8E62CD4D582AE72C48F24113997CB2CBD0
534B8951F860CCD6100359410C591786204242C336710BF3A42A2395350C4A88
B08E9830C46C0AFDCEF4B10AD2C283538A3F4CC18BB9FB0852613252DE125FDF
CE6221BE2A9FFB6220EE4DCD8AC008910DDFB3A6A5EF211CB33F0D1F6345D55B
B44AFED1A46E78350629221518BECC7C57891C490D4B3BC0DE9550B0395E796C
63379F6877D4304D89DB40655F43267E9713229F7B3A19F8FF38811C06AAAD7F
B4804D540782F18802BC7A63B1AF39FC078FBA163A076582A5A15E5ED6F46676
77DA0571A9C1B16921EC25E7D3791C36C6E41AE7D65CAC8954123ECF3A49390B
331AF25DB3D2ABAC7CA229B329FCBF9078E9B4BB1F632F051269A4C5EC5F6372
13B3788C232383D3D1DFF447E3D34337042D733762468F62D8308F3AD0FE864F
9445CAD487BD96C7A1FB9D0F3FD7FD3014D5F0D733B79478BC49D346FAE2A96C
211F7B40C57EAD1D9368D9F5D915A84A2E2D1E157CFED3CA8EE9EF422CF56C16
1F224B2542D7D918750CEC567B049A5887164D6BB5B6E74392F18466AEACE8FA
BDB62FD086AC4B0F000C5AA99564471DD2A2EA65508FD8F6FFF63F09E30273BC
2A8D9DCEB92E45CB845CD3B383E905D97978887DA905142BF7DAA0D4D5FA1FFD
800297798C516E18FB894459E09DF12AE36E03CB5251140C28744E58DB6AE233
88C80FA146E8A6815FFD8D1EB9749843EB7C373E7AA3D26FB3590B5A0E6498E3
8ABAF78648D6B54D20C30F2BCC6C92AB80B7A3047EFA719C1D1C5C10FDD44759
FB353E9C239DA9ABC8692CA6C1D6C5215ACE33E5B47411B2910B88F363F169E9
70830D242486452BFC73105A76E162017846D35E0BDE31C2E7DB9E60CE23F134
90470C44250598A727F9D14D5FFD4051DF2C6609506E32DE8D2A5C1F68A9A698
9B60D14D56215D050DB30FC609FCB2A6C01BC9F12D7A8B47246B7C4D031918B8
32BDFD0F52EBE2AF319C7684200B946C15FC28F968CC8A590376CCAD542870C8
BF6815D277C3AAEF9A730CB319D87F8EE4845BEEA9560808F3791953BB8A5585
39FE625FCFE451D1AC9A8AE2B671E5A1CEDB39A462554F535F453F6AF7D726A8
F17DEF8EFF7DDA642E830D9C9194E1CC6BDB65F9B1BF840F0F727FECB251C07A
0CBFC0CA32B2CBA15ADFA2EAFC4D379A871D283A5BE0787E8EAB50623E51A4FB
A81ECAEBC22F5C5A9B451673A9FF18798A5B706090580A9D60A5318998D416B0
A406399876939A4F1F38CBAA57C47CDA86AA62AF318944968C28A18A2E9039D3
24BD1257B32E764809FDC1A04DA679D98C10291129BC8358F19211F45801BF2E
8096BE4DEF62249003D374176BD126FBD35BA5765E2166E877E422A55C870768
B80F6F1E497D6AB828F5F68F4BC769F29EF5EAF55F801509D588EE5B50E2827A
E3BE9C7F6444307B430CFD18F5A39A0E15037402404A08A7520468C0788A835A
BE479464CCBBDD3A0F3EA4E0EDF6882D607D23964BC140BEAA38476D59886E3F
7B9444A07B47AF86CE585432A9F02A9541CADF6FA4B7F634900B5F26623290BF
3067C8C2B7E789FE7B757C512C8213DCB81A01FA51BD71322DF5D672964A15B1
A0476E660F63A73F446AC1E03E8C0BD921F06EFDC910AEFDB48BF73A1E618AC6
751DB6D2E5DD2CF00A8EA8D763F9EF5090CF29EDC36A4D535B31895CFAF3E4F9
D152B484B929AC204DDA76ED7B49363BC6A5CB51EB473C2CFC67CC006661038C
F2C93BEFED0A08D851057675F8DDC1598D2A4D4EC210F4588E351189CFEC82BB
89C870184CA9F9FF772F7A2DA153DA1686938D601DC090F91F7BA14C603C02DF
84CE172D14BEFF2700A6D2C7BA174BA2708DFFD8E5DB535A600784E1468D4930
D67667CFC0810D364CF54E7A86DBD39FE92F9BCD653BA0B272F8DF68C2BEE64F
9BC0D8EC3D81185C4969E1411D16B0E666EE5FBC3152644B46D3A61D5A3AE13A
1924B9E9965583C9EF7BDBC0910076C9E946135F3CD4254888A324263E328490
0D37B439C03D8FD602477596FD917C4CC1335EF8CF93F6DDCABE14EF3CC656D7
FEB7DE051F1F52E56F5D9003C0A77FA110B55E85A9296F872FE5668C9F43530B
402B786902D6E52181AED4503F6BE7D5E4A70A2F299F05769C9E5282B7DDFEFD
2C127F177EE688B2225A5B299DA04AADFB32C78DE3CCD548BB9AD7AF7F358699
4FAFAEF022C30716DF3FF3C0D8B6316FFC6D1D84F0D546A845E7971871356364
E10ACECE83C4B66AD454CA716627911AE5033E4889FD91907C1052B7FD5B5C2C
D757F3007C5EAADAC4A068400C9C5D0EE02F8705B70D3963E79850FFD748EA8D
A86DC64DA63C4B075AE3B222B94F91527AA116CF31B971631157C77528C0D62B
26013A2A8473A02378D1B1CE91EE3C79C2198592248BCCF947939B036D3CBF96
38E3F9F4A2D0B6CAB431B0CEBD05B8D9C8A88B02AD2EBBC1C364B9325BC6A250
C911AC4787CD62956327C472ADEE7094F1A8BB7EF218321867F584EEEE467AB5
EA8598F7E778A28736A6644FBE554052BEF6655E178DE2CA0656E35C86089B84
0E047CA409DA46AA0FCD84A07891EB01B13CA288AE174CAF322EF5D9343BF819
EC18FCCF55172762DB1FE87B7504F455995A7CD1F1525C8B2CC4A1B76AFEAB17
51ED633A8C9CBA8ADB566EA5FEDF09371F985AB5B03FCDC98A860BD8613889FB
1F64C6F92B14D9DE372CF4A6C4E9DBF51DA33B15D90A72F79D9B8FCEB1C8B1D2
83447979B4582AD69203B674695D0B4225634ED0D5EEACC6046A2E0C44720E0F
CA1F63FE49FC6BD6B45A609C8AFC641BDF24129F859BF1AA5FCC0A81C17A8928
6709D600589836EB0AFF5C47DC4F89117B4A9F53D50A146689FCD40F1E087F57
0B776CFD06CC2C60C82CC639AFC819B5D25ADFC050A17752DDC523BBFB8E7EB4
31EFF5FD1D98527A9E68A0726392A0AFD0CA3C360C653B147929471AB2928769
C580DCC53D69BDCE9036682412B69A0CB23B3EE08763D7EB99F9480788B9A5A6
19EE6EB23EAE55510F9BF2520BEF5641A3069F4EBECEA919DEC8AA6216734E1D
3FABF2E20A926BAD20192389141F0673B0BA46C33715118A3C80B46364FD18C9
A15ED0F98917F186A2279A0BE64CCC32AEE5A7E3D1530DF840184B4568C02237
B11920AC9ED6BFC7A224AD1F8447EB2E7C77DEB70E81627EAA6F6614296187F3
237C1042AD65BACF45220AD87B055E0D7E6E6D5C22DB59FD0B83B799FF298B48
0F9DDE6CAF33B0BA1F3AEEB894F3FD3F4F319730FB8B9EDEDEEDEB712AA4BC7A
6CA9FCD0ED7E62DCD1887C071D3F2F7F8B6309257166F9C82E75986145
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.0: CMBX12 003.002
%%Title: CMBX12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX12 known{/CMBX12 findfont dup/UniqueID known{dup
/UniqueID get 5000769 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX12 def
/FontBBox {-53 -251 1139 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX12.) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 85 /U put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 127 /dieresis put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43A151FEE81296FBE
0CF37DF6A338C826464BA5198991445EC4BE80971DB687336AE8F74B516E333D
2D8AB74D362C559AAE6ACFAE49AEEF4F52E28C869222C1301D041E7A0BC1B608
1BF728EF9E98F3A12EB2714E7F16B14E055FE1FA0EEFB058860ACADEDA9D0E4C
42E3C6F1E4869471BFAA3760175F3FBD842755A9D7847EBF605F18293B42F557
FBE2715002669091BB033E1AAD657532F34F7C66E4F04D63ABB07E6CB9D9AEAE
78EDE8B79DD9BC87A1FF445EAA05B5572BB880E69F4DE1F82D7F0E9980AB0C18
22C448B0B1722D3CC33C56FF287CECB80658B3AF5E7675BE82CEFF3DAD5942EE
A03C955FF979E41E54BCFB5316A9AB8945C403A73180D0961416EC9C92F49811
4B91BC4C788392994587517718521E416D469F69952149FF7F9224377EBA1065
4A727BF806A112A7B45B0A1BA1D5A23683960575368D9EAC8C04753BF7465AF7
95F25C258C63E4FDFFD0B412FD381946AA38C0B961652BCEC30322C47BF4755D
9F91880688AF066E32FFB22E1A52DE741307AD3ED830D6BAA1D1F562919666DC
5E8FD9862AC8600B0AE0BC7FC779252AAC57248744ACC8A8AAFA836BCF09B0DF
9253DFBB1CB77EA8A59D42D1B18FF25E9AED72FA62FEC3F126F030F5D7DED9C3
CF60FE890BA4A48E39E687BFFAEAB96AE542A6387F6624486037C8924002A511
BEE5FBFD780AC1D4BEC3FBC47A930BAD0280D444259528B6C565DE11DE36BB65
9BADC55C1EDA1A80458E98896D782DFB5C137897419602809F9BF8CA39F00C68
EFB9E076FB324C2963F23CBFED28B9EF70EAA4E4B903225D1F199A7162AB239A
D92D71C18B1B682D04C6A48926275BCB16D413B2A0E953E1257E0B12D8B717CE
2EC84CFBC046A4338A69F454A469B12118E562B4F56C5FFB3CA5D357513E6FFE
947A564B229C7FD873057D5C7CDF03E958294A1003B37D8DF565A70A00A3734B
0138AE5277D383D10C2BD853EF806D3CCDC47739F0E374A3DF3B63638B949ED6
4EC25869DC1C0B1F4DBDFFCC97382841D8F10F3635C792139A1EC462FDBA379C
BE0990CA2E70FE73137AFBBF30CA54954D7E7377CC50BDD780DDD4C7FDC77AD2
F3EB1169F14A0041F18160F43C24FAF556DB5D621709FBC544CE55424F7446D4
6AC07A51C8CD5161AB0AD5084A96FB35D77F1CA155147DEF8D7A590EA6939514
D4A226588295CE0007BA8A550895511C8D80BBE5CDFB8A50D249C3BDCA974415
F5557914A9B805782F399E4078DDB6264F1A49A9A5BA45E284A5196E9828EBA8
481D357B8D9E6ECA631A6204439FDFACE7D7E6A2392726107CB7D2517CD19A24
FBE592C119626DB221BBB635B6EB84845C16A9585282E34958B961F4A543AF9D
419B6A9105BF185FC767712D923437BE08A9C0EB92AB6792DBDC671029B6FCA6
7F717FCE379C0F3B51C6CF042A762ED04898FBB4B0105C3C4ADDDC18C51BAA3B
70A93666669547081D9246732CFF74C83EE90DA17F5B4F8BAF47FE4D81590988
2858C9B96071341FA0A0D23BDD4947FC9BC2297913CFBD4FD6CA4303AB3179AE
0203F1BD502065F90CE9BEA3B52DAFE4A29446082EA0E6B1D7AF1F31D0AD02CC
9A7FACE2CA86E5FE0F6A425B28A5940ECA306891CECDB3CFC7A5BBC76B5D9E8A
C754379ADE80B4D72CE493010317BF21A0CF4A0A55C1246218839DCA3F4D626D
1F4161D38F54AD5142C1CEE95C61D8BB10FAD4B772F4955777AFDE8AE5A837C2
A2BBB11D0BF5DA2E63D0B75ED421DBA9C789B281B01846B65DC572BA69591969
21265DB722AE86BD8CAA3D887C975A617ACEDDFB7AAB341F47532AC0F354A530
7662C089DA3939588774FFA16FC4A52555DED6D6F51DE718BF5F345C23C90198
17B77CB8B5D53A5CE7A79F3E286B6A59F3F6178AC8BF15C0A15C1A8A95D03B60
30EBE53DE328CE085CD9A1D49C69AA299C5B58B24334A546F6E274C1B534DC8F
3289553F560C2F81E413ADB92FA0E7DD1C2F39D5FD268EBA97AB7335ECF28257
96B4EADB7D0778706CB41C7E9C882760E7670936774A1088FFB2011115FDADB3
B69EBD5108760762521C25C968C3E282DC3400001AC8FB1EA27FF643E3025950
1D617BB8BB321281708E496277E11DD3AE0023DA9F25AD06B39C7CF527FED27B
57397E88D3DF70EE4FCCEFC8A0927D6B05517E571B3E70ECC99F3CBA32CCD4DE
B8BF22626B6C94FE65598A88AB90D238461EBD9A098DADEA4091AF1CDD7560EC
8E1B9BC2321686E1759E6B8A270C8CB4A254F7368039602EAEAB86ED21CDED91
8F2DB9889F46981C494C7EAF5E819B91C129F0740B8002B510014985E5791F59
B16879CC6521D8E9F1C4C1890AC85A78022BE614BEFF318AB2616F0C3F02405E
BB425D1555472A2642BA7686E431DC3FB8A1688B76660D9957C3FDE8D58109AC
21B1234C9DDF3F0FAF93BCF7B2F88A001F23162E1A13E5E9118D51B485B70A91
D0CBC39CF44413FD8686D9030782DAB58064F5B987E0402AF5B264B17BD31BD4
FDF63951BECD73ACA6138854EF35B062D01F33073850D9C09A818828C581241F
A625AB3638081DD0F00F946BE5450D38489CECEA4E66B4D85CC8AE0157E2AEE4
A22A9313829F24D573101D84CC1784D1CED7DFAD5DD966601370C6CCBB723082
A86BBAF0A5D867D0D2E3CA16E14E5109A29EF02649C47E12E88B3B397D65CACA
DEB9940B92100744D686066F8250FF30E5F13D81428EE238A2E4E07ACE0F5C38
7D79D4A336D0D26AF9C2B84088ED8ECDF94A1E3FADB45AFDAB46CAD6FF950B0F
07AA2CDF82374DA76C56D29C80138841EB13F0D02ADD32F88B23E282ECC845F9
BB9AAECE9CDC644AC2D49577A92307A83A99434F6493156DF25DBF0FCF2EC21E
8C50A312C3D19E0609C0038554CF4FEF3ACEB7A833FD54B06EF0D617C2971C89
E4C06075B09B84A4F78A82152B9A9C540B1D881313C2C74F20ED064A9606EC2C
B56D7BB4797F1EEF4A9B13579CCF311FA4A4DFA62D80FDB7F535CC6526D1AAE5
45C008EAF024B48C377522F74D939A475970533E645B1BFA81997549AFF26F67
2AAE6C2EFA357DB3B525276EF330905688777057F4E4CBF584520A534A8587E5
5A8360891E75A15205E8ADAC4A4E5A6E27D0C4A7D492216E4BC023AB027F37AF
A8DC7579BA50204D5F45A51460C5BD8A5A7F87668CA6451137F2F59E117BBE28
5C40820882A5546FA76F0CF49F8A6EC445F0647CC3227C400F56E7E9B84A6975
E85E243CC1666DBAFF4E07EEAF3AF71BDACB30DAEA792F2B8504CAB071544F01
5D66243D529C479D276FE22F7E275D9E7FA9C6EECA18716B2F213916E32C1D94
6E32397B41AC6779543218E506569E3544803BBF9B404A983EBA62A494187B30
8D3DFA4E1237A2E5E08224A60492C09ADAD8775B7CDB830520829BA164209ACB
BCDEB2D574CEBFB7AE4BE72DF4EB1945FEF2458761AD8DCC0D378AEB7DA002C6
9C14A665DAAA532B0ABA98D7BFB5A6151FF6703385AF7AE8FD315A492FCCDBCB
B825707F9566B3B4943A3C61C3DEFDC31A843A2D67AB06891F3E110DD8C73D3B
B5E4151B51D9F13905D7D94DB9ABBFCAF35F43B6EEE256B1A80ED6D1739D8D5E
8C767F6F0E8704C5345D028A2A6DAFD9BB7AA048B8B895FE9423A7ACE858BADD
595CB074A128DAFE08FDFFD6BDAC0114159A702FDCBF8013804B0CAEAD7AF38E
FAF086A3248AD4FCA1401A85AE2F72E3E6956DC0996FE8ADB18F89B14A208A15
13F81AF73D0DB72F78C4DA634ADE3C73756CAE6AF2E149C26316DFD93370BE1A
FB4A79F77A67C07CB0A53C78367F21661D4AFE9E27328E077B522B50FD9AE2E3
DA087BE481515B5DD7BF894A96A84A6C78874100505B7DDE1D22EFCE8D58B3AB
313AB5495F72E2CA4E6AE22C0CB854302B9990372F1661D9F0A517F90686F248
C5643008B3D29F7296E5C8FD4049886662EFDD4106E17C879F5D41CE84F87E89
F6A3117C968B95A35940CC29C43E1E0DEF51C1E46B676301F40D59615C3F73DD
DE37B72FF7105DB84227DA5241583272AB1C3CD97AE11C1EE98FFDB5E5F44844
8FC41BEA5C54B26341AFF6830D9D0A5A2901B0653D8BD0746838194D240FF753
E99750D3383373F453723D86BE97B571B8B84D8696089B5CFDD53E6C562A2197
A8C4FB0CC690C27761A816B441029D3D306245052E0C41B53025D8CB7267CFE3
C17FDFE348E765326F91AEB700CC49162DF748171214252CBC821493DD01AA20
417D66DF47EBEFFF3E9BB2B0A2BE7D9B8C68BD570FC2EB0FA54CECC318F04C43
19598BDE93F2F13DC7847354C99059AB20593EE51E94F9D4E9241869D605AAF4
9D9B5FD88C3798A039A67993C5EC68B6326B132E647F67EACCA7F7AE7F718D85
12666E90D7C73EF210E344964A38228B236679A2B18F5E081234CAA2458F8D83
3F0CA308D19663CB12EB904076EF88E556407C33C9380A6A3D68A9EFE65387C1
A1BCD2D26DFD2AC0881EC30E81C0A4E76C244A2BD822EE88C4A60B480D107E68
90E419A1F512E865BA922A7830909BC2611A80931CB2E9344529586726614D94
3AC5200FB9FF68AD9686506C5EFA8788C0AD0251AFE7F95E84683380CDB421C5
B1A783B6D5F3A6BD1BC1C14B363DB01C87C0796DCDD5BECF41A1A9F43183CF6B
82C2AE49F0BFDC5DEF7729F2E638EE6EA9E4D059EB9BB1B992AD8C82D501A550
1BF73CBBFE740179B54E193E84A55DCD61B343C1852780FFB44248FC9426AC94
AA2B3FE20FBA30F6C4D1E0FF3EDCDD8C0F57CCB50CDB0EFE2E04A8927E239C1D
9B026C7929BB48461D4D695FFC766C8A0E545B1BCC2AA068D1865333108E7985
2D93F9B00EA0A90939D0D3840D59B6CC0CE2C147B2E1A9A4F14270FE3ACF51D5
99F7349106165AD627CBBB0ABA01ECC6D3A14C1DC1ED23A9DB9865BB4396C51A
31ECD001EAC94B33C34E29C5611148EF3E55DD61813470B8F3CE32564C749414
3C93C77EA5A3538A0B5AE3FC4DA32813B06772E0E48E25BB39F3F6FDCC077E86
F86FA50E18FD19EB2F37311CE87F18F3BC85CE7FD71CA92D5C3264E34E04A2E5
70C79D99F54D6C6D9D527AE45EBB48411221134587D2253E7C8ED7658EDCA34E
5E768DD14E0200470F73C44D006CE8CB35DE1CA3EC10ADC668B0662A7774C891
84EC95A31DD872F0728D9F65CA80940080E04630BE4DEC77A2C49E3913C39978
BF145F8832AF2C4385EBCDB15F9D32C22CBA0CF950877717D6F1591D7C0B8047
8C9BFCB16AF7124ED83137695F3D69228DB633053208C29E0ABA1B06A7FB3EE7
5625CB44927E2DA6E038A6E62DEBDA2D96A03177982D8FA33BAAF4426E05F4B7
9C1748B3FF7691F9888E7FF864A10B9DF761A41E6B5CFAD2BDD7E1C4924AC97B
F4B352705316DD1A58637CC12D71C18A5CA691AB2AA8F171590EC24582B1123E
94D4DC587D8F99E18A711776BF4013C96446BFECFEE4C809EA94B169088024DE
0CBD20199A915AA406F0BD5F3D63D1467C49B4691AEBBB35ED6624F2D7BB74BC
E80FD92B9FD04DD9C2BE9B6FD29EC7EC07FAB447511C61DD299C783BC09AE2A4
7B3CBCA6A20C6631D06D0B2E2482A50612BB7C29B7E7D0A205EB0E8436702581
596BC996ABD58CD8D5BAAE4B1478195CAFF98FE0141287296C4EFB8D2E7A8442
F0A3AA9F9264329982532295A176BA1867EF732BBAC49AF485D9D0F7130F617E
7F7DEEF935874D55A22240F8EDE4F247D5F73481373A392D40A8076BD91079E1
1CE5998BA13D48D56B49A92B4A18430E316405D2E2E391B496A1934671FF1785
AF42BA3B2D14B8E04014437FD194455C50289DFBA61B5C377BCBDADA48E82DEE
4E70EF5E9DC03064907BCB8BE4D59DE069FB0C0CB140DA54708E630767313F9F
744594AD8A499CFEF733E640A11FD74E46A749F9C7D18D49251BF85C6EB4668D
67598C31A8F90922FEAEAD4B83B6E7184567DC798E4BA1C4C9B3461A478D63CA
054F13B502DACB674EB49D6BB935E5EC82BF99FDA7D47C581AD7F940DF4FC6FA
6C6D25D647033AC69505F0CAC58DE99087F365531A6283CB89CB644688963C3B
8B2203A94294E58739EF23C7803630A1F9121D62BE1977DE2F41687C8CAF87FE
CBD7AD3B98E0D95C8C6E1A7CCB0E09465AA874DC90A0F5DB2C5E7C130297FD39
EFE63B0350B5139D09E6864D22C3F1150B29196E40EEF9723E71158B7ECFB8E4
C426FEDCD439420B7F1C251FADA347C9A2C49738B5A17922E1EA93CA7B125B76
57449EAA9C1D591CAD327D0E98EF2D44D614EE9ED49DD31ACAC0B956620B6BA5
5BF6D08CA7541059D5ED2EF00AE2EE95488F5645BF6837D9241C0D3959B7580F
C9ECB2BCF3E65C07D52EC9CFB21C11CD4C883E44C173214C900C44D2E1E43DD1
CE8DFE3DA93C38B548BC4EC46FF91F30CFB97525E1FD4E77686433B20BABF8D2
848C1CDF1BCF185CFD7A81D2D4BB826E837E2AF35CFC4F419F698DB0C43E9F9C
B0FB628AC9A3CBE9B1FF4A067016E70333E78B32AB2D89C483834B31F5808FDB
77492E099F1504DABCA5722C7860CDCEDB2DDEB512FFCC7D287F4945FD711F28
87BC3D36173566B81FC2C1290C717A09697DAC6072408E20926D39270121CE58
3EF97CE12EDD7F87F2C8CFE36C3C0400869C0D813B71C425343EE0CDF717BDD8
409D5297D0F8F7FDEB0257C0A391F5635E0DB1116058942FF3E7C94D5F2873A7
A3B0ADAFC3835AF2BE474E6741319BC6695FB37F59AEE388F81F6E66F910000B
72E6BA7531B4378CEFEEDC79CCF4947BA1703823B5AB4F4AD73D9615C66C489D
99D68E49C9BF765B7FC547BAB9640D51D5A7A2396507AB5A4DFF3D14F52422CD
8FCFEAA06A56C6C7FFCD29C9A7A59DDD2A909A9363FE5F1E9629616D25ED38CB
E754C059E4379318CC491C3B1A90128693AC53F80F8210FAEA7EE638902A7D3C
82B95B3F5AE340EC1B648DBB9FB679D6E80B7F426D8671FE7136D97F51E2D2F3
C9CE9183E4061CA40091A2A70DBB9ECBB19CE3F65ADD0FB346B54BAB182E2CD0
EAF4C0F402C25573FB344EA771B297BEB615FCD0595172E84ED2A62FF8962634
23C19076C2A9ECEED5135994EB397303A9619C76DC55E032DA83FBA441BD484A
59F70A5110A8927F6239A14D4E223E189A5462E4A92EAEFFA4B961A2A32B320F
C2B4E8C1821FA67A655B5042C15E4DE1FB3652B55078DB123573C4E986B19DB0
1C5131F3DFAB271C30A5476B4A19D8FC922E31879C34BAED94C07A4841B8209C
403369FB8E842610D1EB4662B6171A4465FD0E819964F62EC5B0ADC92F08CF90
1DE0B410FFBAD16F6D355E8AD72CCF67961EDB6CDA82398021007C2D0462E893
75EB0710AE4A6CDD15077C9DEFC5774EF4A657734D703CE42174259B58E5277E
0DF26BF59AF8D1A3E7DC12E3C12AA4B67CF35B19962F6950C2020B698D971B35
82FF84E72F72FBB0C54A112BADBAE6C4CAA358BDE6A705AB59332C3850CA3D25
C7564499BC1319121CE0D93218210C68080AFF33420E3CB3A48BF9EB66BC07C8
A79D8CD8E78C200FF7CFA3DAED0B9E87E6141C88B436D8FCBA50AC195FCBB9BC
9512B95FE3A37FFAAB39850FCEBD4D50A243EA416E73F53B4B00F3B6EAE0CA06
0693A774D95B3CCD3EBCE6E4D0B66D4A77C0D54F9300B1A5B26124F8B0D1F26E
0D181D08FDE3D629286E320BE4C2F2B0568943DE1A68599EAFE8F764D4A1BDFC
B3233B9397EBFE8DC4F4C411F79B1D23289EA3FAA825650D8A62496EAB5EDBBC
A637CCD068A86773A3FB74D01A7D06D59729E5AC2E58C07E573EF02AAB806B6E
A3E14F7D7C52096CC941F47D98620403DAFC454A30381E07F915846DBCB2C690
16198828BB42507B524B622F10AC8781B19CE8AA275D02388930141B4BBE3E2E
D75093D9DF32BD82288116FBB7EFC6E67AB3B2412051E7B3061BB6599DDE3A81
9C1154D1959FE6E01E639A11009281F078231838B6A6405E742F8864AAED4DA1
4AAA966ED2C03C95DED79E46D6E14D8E8B0ABF40C84FB2CB114ED1FD248D88F2
3B32D70DDC423BE90B3C80426173BF08F59AC8ABCDF3B30EA6EC704BF556C2F4
DF9535C724ABD7EB015A830E25AE0250766E29A79AD6AC0C79701F4B82F7DE13
003C8E552A087DBE47A27849EB21C7AD2A20D606E8D26BACF94DC8638D9D84F1
1D45DDECC7B5710E00A58E963ABD7F13441149655413DF66D898B2087DDE052D
5BCB25547C22337EAEB298B18B089B3DC8E84B9AAD22FCFD8AED5F4CBE9C82CA
D470EAAB26B11C94DEC9F363B477E3AB1D1B0C2D0D53EAE4C1F8B2B42DCDFE99
DBF970485920F3236767AEEEB5000C7410C38483B64009078EE8426C8D28CBA0
BCA23526E4B0699062B7592BFFAED338F3DC65049512B73F78F36A6A07C42BE9
F74CF75349B8CC472CB5AA629282B30C1B75496BE638CE59C5A750BF7F78928E
F8D8528C65662778CDE01A19D33B02EAA35EC14F1180FAFA53E7F50C22DCDF46
04B8908E9D81D928F64AE442DF7742DF8C726DB07106CC10A24793BBF25CB8CC
4468BDE0AE341E2B487F28B585E2849DD0D0FC671E49FE9677F4FBF6B9534B10
140072E08160BF9FB0DA3CCF69023E3929C82757FB57356D75735F770E096D30
764344CCF1B9E4B5985238A14022AF71B5C87CE4A50938E390B8337B2C373D0B
A16B6154A33703B67AB503567C83841A26BE63C796AC9C1BC25B84C193FE976A
4395F248305E5E3EDCE8050E35481CF9F1852F2369C9F0443DA01F67D187BDFF
279A58B18012FC903A7B5263643ED43C9DA367049188160F834528BA5E92C819
C4E5936634F0C9327B76B6750AC2B612089EF30756A2A83BC1E6791C791A0005
560E53A8A55A28E5F4D597EEBA5F1AC257E25D43BC2DDBF9E8FAC288E21647BB
7B2BE574990090DE96A9B98FD0BBD8D5300029F9D7AD900B0797151AF6A11E15
6BDC6B89C8F70722E0762C0EADD062BBC74507910557C03B58DB487AA9F0B2AA
97D84ECB64D761B59680F024565E738A3E54C25DA6443662D508C52AF4D257CB
9856816743E4BA38A9483B28EC413480472558446101A5BC6804AF83FE453FB9
F7BDF2E5097839610D2F1FED5293277277D44EBCB3056149F99865CDE9D7D871
FA45E7C0806AC25D729C4EAA04E43ED4993995F9EC10B9016F8D5D0BC3D7AAC7
EB8CFCEC7EAD999D5EC349EF68E4C5DC170E6D37DEC914B2DC4A1110139DA5DC
A732194A39E671610747B53CAE87851A6F36ECD0D4562152CB86A4AD5A7385E8
D6B364B29C659C2F61D7A934543D2297B3AF46C17C2D0785F683E7055EAB6D62
85AE6DA9350F77644ACF6712857AFD845381DF90872F925598158F2EAACD821B
0AFE2548F79FA08B002089BEDCD770F4181D042D4034EE13459E57A00001BDF7
9987B32A7FF3784540836E588AC08048169F0EEB6EE087B4EDAEDD7B15C79D62
0FE362BF8D9944C138BFB00DAB1EE49456B935662E66526B671F9DAF2D5C71D7
BCAC37580B0DB4FD142F2C218DE9C1AABF576913C4596DDC607890C84465FF28
9FB8B23B01DDB858CCFBB42B81628E022C4140C9663DEDE691FEBF1BA2304FFA
B55DE825EB68E2B9D2738D0277AF34C8092D87362F9F869A021D18B6C6F47775
CBD59EB789BFBDD0D47A7D3A4B208864422C4248A2E8DD2F6BBB5E50C550E19F
2B2A9C6910E80DCB2CC33772C1C5CAAF0AF88B52E84800E6ED920D9C942E7C3A
578765A98279614849BDA9CAD6300C34538F4ACA5DB614A03AB4294EC03BBDE8
F717CE0B7B4C55B67AAB1B0DA635A91184B3A53FC8BE1C9A6C9DE8F83CF079A7
01D489366159080A8B99DAFAF95E6A6FD9B3A53A82450854252162E2CFA0FD3E
E0568083BF8BC472F659C90D99E1000DC9C5348B55FAB8DDABF1DC7A6ACDDFAF
C4FE85A29EA675421EC4446A266E76D26C1ECCAEFBF61F9BDDB283A65746896F
ECDDCE3BD325D4BB2CF48C29BA757DC38DF64943AB86AA2C126B7E7F000A82DC
6C57D91B5231D9B352178525D841AC53F882B634CCE9E5C8E4CF2CC8DCB0E1AB
9FD2F7858351E9E546145CFA680D4CBD4DE33956C902DFB0FC278B529CE2EBCF
F2ADADBC6D7C1ECE58DB095A1254B987EFF83ECBC3B40CF16CE4CD359531A268
4AA845F55EBB740234654D14673BB0F277D04C9BC87F70C3E8EC899AFFBC7151
F8DFE208BD967379FC9AA3996A7E347E9983A299FACE53ABDC12D9B03ECEDC0C
392FAC5C279C68B1585AC57DD02FCF7BF973EC73C44C1A182439A99F8D9795E1
D98C0BDC8CA7BCBB531989D5CA2192741E196F29AABEB77C95196CEC48610A39
F33E9A31F50BF8C5CFE4D12B25821A196E84F975812E3D6B878B2282BF7B2862
55D1B60E05DC4B6163B54826C73B220E9E8A694FE3C90D80BBF8E299A7EAD371
0B6AB48C6CA01868C63F7B31819457C477A1B7BC3AC44C189402F158C7E542F0
9AFCF38BEEA7C3A2458552C66C06A84885BA9B7A67AC28E5C78C98E2850685FA
3AE92E323F8E052088FD68D3F49299022F9946AE536A4436FE314D474A15A896
2ACF633CFAC92BA72420FA32AB7916D45EBE817DFF660D65C6BBE7637032283E
D574C4A522AEDDC724AEBD3FBD708D7C7B223586C3AA18FDAF6032F777403420
B941486F28E6BD67EFBB4E2F64576C375696AB3AC20A06576A599D9EA2A4E77D
22BE996909B3AD773DE6ACCB80E7C859FBEE05409C273198BAF3A624E232244A
AB825942D509B3193392BFE7F1E304F2BA8B9BDCA32AE3415707DE23A0910007
FCB397F4308BEEA982070296DF82B4CA4BFD2F9B95EFB714E70D8B4875981B35
90EBD8C6409D7E6E4EBEFE336A8981D2E32142690050790E0DA3606D7B07DAA2
E283C641AE219B6DCD58529CB440A3729136DD5B3B1792CDF7C98CCDE0193FB1
094653C573DABE612603DB7D2D13A5BA31E0C555A01C5EC1010E852CDF5E0C0C
3AF894CF73A00B9537CC4354D74BCBBF955619A5965B92DB28049D05BE5167A0
82DFB3D5672C861EFEFC7092F6E721834EEFC18C3D2FFF6DBF80ECBEDAE39A04
F3C38E8366F7A565FE203055E848BCE51583D1BB956F4C6770A5EC873329E972
363F7278CB6BE3ABADF2D44F29D690204C402AA82AD30395DE8DC7E0D26B4907
8A39AE63D57E467CFD9BE4225277E0DFC1C4CF9DD110DFA648B01BC120ABE4CC
6C7CBA02641F1DED580FCED1AE0B40B731F3B29979ED65F866A04E682E409829
979F768B9CC01A9884BDC1CA2CCBD09FBDA34FC7C97E8E2E12F58072AD6BB701
A0DD56505E04B86242D2BD7C062982E63A983D3C674F8247090853BE5F02F956
3193D10CB2C8DAC0A6AE42D0BFB8C399363F933C3F2A2B8413A3DCEFCFC24886
7A43B215A1BEDACD00CFB0C7CA36FE7F3C934AC0C56C29844903A36C436D4849
6C16EC4378D4A7424E7A36E26CFAA7563512FEE844218DDE7FA7C0B66AD32733
2239190A53389AC8EFD18515778D362425D7223462126CDB65976FCE477B852A
F2E90C6DEE473F13CE823CE3F600A9613564C94848582E1354AF1E5B48B9CC86
FD5A96D1BE2DB52F53B94D127F613661998AD28A8B0AC8CB85FAC9790AF2C9E8
D4390DD7B6B90F4F82B37314D992E6A661C2849FF4D830BFF755BDE7D7D58E4D
B28302C23BC72A9C02357A5F2B440D8AF309B82E190D3CEFF41020FA15DD5DC0
F3CC8F41C814BC72BDE11ACF28172E2D8AFC6288386BF1F930FCC7E8FC4A7675
B193C5D29370EB60F711AD865731C189D8AAB07BD86CE0A17E6E2FF0CAF84502
D742A1FB8E0BEA6C77FC04C161E2DFD5A1667890076A35365EB5B642BE19B70C
8B20E7E6B23F019A3039BFE8DBB2909E59F7D20EEBB141C1633C25703046E5C9
9C410D557456C7E7C78437F00335E5A854AB17A0AC00BFEC116C9B315BC845D5
3FA3B46CA940CF187CAE26052D4961FEB9C4A94783024F959893A6BC75853042
FEA83F7D988627BF757E7E8069EE81510D583C6972617F9950946625E138D796
FA03BDBB3363EF69E13536719749099680DCD7313E60E4028C2FA7B77409E5FD
720BD6F7CADAEA0A54B5F6327A417C636174808D01C10A505B04D1C3C6EEAED3
E32432BEF7C46E009DEBCE1C59B8B67173F60EAB5915D3AD591660868F532463
9F81CADF008DE67EE14D825F3AC77722C9066AEE3E0359499DC55E26220CEAE4
ECE0805F73226B01437644238F2939F2F1D0FD48D6334AB51DCD4D7744F802A8
7BA68D8D419C34A40E33052E796BE1C5BDC4F1B018CAFB206B9D14DD64DD2D47
1F855B3FEFBC99A78EB14E597CC7EC3B429678DC423A61E523DC6B006873FE17
8003C99AB6B00EAE41E9017D08138FB101414FEE75A9E7EFCF8F55AEE8CC6F7F
2A15799B2CF0E616F8D4CB480FE4B383AA63CBCC04D75D05EFB50B46AF9D1FEF
331E0136D7068396E8BB4B81540E025C88F1886CA50824FD91C9336B740FB33D
7F0B4B53797C68437FE596B6BE45497EBC8AE56AAB4DB942AD7E5738968E8BAC
BB4697AC63C6E2B79CF71452017BBF6777A55920A27EAF01DE5271B65ED53227
5807A8EE5CB892DE482C8FB5537B3FCC414C64C6E9E9940AD51E7E9DA5439E2B
8801407716210971C256F84C2F09B8652F28AC66192C7C3C4C2FC990A549029B
017130E87F032ABB002345D1557A92ADF74CA77D734884EAE508E0D45D51F1E3
AB75C485D7495D0D14CF49D558B3090AFB2949B2B1D77F41C810AC329541245F
486FF910A68ED1BC28A4AD8F570D72B8BBD1BC468B6166682231AEA28A808562
AD231DE36EE6C77DD6704ED1B516C3B5A2207C8D4AFC26D8CD3DF75F0682C38A
8971048AEA740673AADC8D55474C741AC2DA381AE79D0D48F9BCA50E807D2C5B
611067411F4027294018580872B73FCAA6517BD0CF0663FDE2969CC76133BE90
720A197DED0D9D574BFB1CF92E13B4D23DEAB685314266FD1681F228DE991BBC
38AE84E73898549D5BB8DA29BBC8AFE89BEE1B1B0EE9D40D50FEDC4B76B0CD4F
D272A53E6F94B06020210FF0FC7556D1EE48FED18AF723B79B8EEFA32A178B13
EEB9839EBB3509E6EB149570080BF04FA6809C2F0688B5E6B416001024D67905
A0CED7C26E24B03F28F3B517CFEBC459E1946E0FB2EF57A63CC785D004C8127F
DAAE6C869DE3E486F115D3D38724DAB6F86E5E8E644D02304A2A8260E2015A44
DF8BB9E5D43B830F311C52D0D8931D52134E985BFF1FDA1E3FC5D56FF4DB2C93
322F0D910B0AF8642BB339AC35EC16544ECCD69A398097B3F631DEF7BB38B195
8225E1D55CDA3C4B3939A3B9FDEF15DA1FAF0F339EE5327BF2E80B2875D32748
ADFC93C348E87300228C9897B3CA985BE3A06D527010CC18D07EF397FC38398A
894A1D9EF41E54C4B967DB085A6FEA73531A72B75062E6DC941EF6FBB0E171A5
0CC133C5BA8D91CF237017DD3118AAFD2B5652F92EF61554EA03C87460D82608
E6532CDDD4504DCEC7150012B112C3ED9BB44C19F6098ABC619A97A5B1674FA0
791161C4E307E11115942E7059AD09B1B22DE294CE2F9F76AF477A1D925174DF
E1054F35D8A8B06CD0DB144A2DE91AB919A14E1EC4FA888A7B1EDC6E349B9416
7D1904217E2D1EED49128F8CA5F6C54037588493885FB6BDCA1CFAB6612136E1
70F8FDC33747C1BED6AED7837EA14D40D178DF82E66A626DCDAAD74F885FFD9E
7196192FAACB98CA2806CE94ED0DF6D08575E427F479B870F93C7DB9E8465FE7
EDD2DCFB8EF4822069C858BF09686FB1B9BCA9324BED2ECD1CFD1B99D1311076
DEB3E5B72D3DFB3F2F670745C913EFE0C497A99BBCD85ED7FD1EC7DEADA6A98D
EF342FBAA31D04B580E3228FE4A0B139A7D54A396FF2386A92E88EAC8CC8DBCE
971868D794950A3965030A221BEE8B2CD45516911D4D69D8639C20957E77C3E8
47536B62D999DE414F497143C1A63869337D44ED19A35999AC7FBDCA6B236DA3
D38A8DE5AA082414E2B4AE462CDCEF55E75B0718B4DDD15D0F6D44E8ABE0843F
67A77EDE398D15558EFEAFB3A075EE26A778149ABBDDEF26D72CCC8B30C8F049
95C618216DA402FDDDFA3A752CA841413CD5CF6BCCEF6DFFE5027992343CB350
8E7A797385BFE5FC9331A7486005BEEFF3FA45A3110021936D5756E06F76143B
F359761CB5E6FB0B240589058AC3E57A0B79A997D6F33259DDF2F084176D0036
C1C99836E95ECB623F697418D9ED4222B7368FFC838DEDF0E1D6757D8BDB1B2B
07FE83EF78CAF136B220A793AC1AA7B0D4E356F5130286297C64CDC7F83EC980
F2431C6E03E79AF8147FB949552EB3B6CEE60638BF77844955DCF9B838B2F82D
DB6C214A9BA5250465933794B857C72E7DD1A8FBB57B846B1EEE1209199B430A
30DE7C97E25B4544CED6AE4253830E68A03FA81EB3B97D88704CAE66951083EC
B7FA23FFDBB8E62F12852702056D45B9DBC0AFA102F5E6722BDCEE37330D950C
84DEE09676A1AF0143570E5FB22353172BD0E614A106840FB7F57998EBB1812A
99E02A1FAF66EAA940BE6CE7EE473F1242FE0FE022DA59976D6F889E0D193CA4
97F2506CD1BD1C30E90F75B7881E434C7E13C674E6D421F82A8FCB49EB1AA9F4
6EBED379731CAFFE1B07FDBCE2599FDCAE76EB960CC5939922D3695D365BC06B
282613C3BEC0000D07E8B6E315A192B0CEA9563B2FDD9A660C102349ECEEB057
FD041DA43743AEB4BF1167396A95D893820CD820F1DA38656CE175E3F2A8D0F4
943A4F81D735F67BE3D500D226A6D1FE86240692633B1D06A203D12A05444DD4
552BF249E5C09FD34268DA32E732743328067B989F58BF6EBFCA4A72B375C217
9F2093D828187863681BDE52A28AE736298D3E42CB17B8920C584A2036E2560A
561E0A4600BB2F7D5CD26164452EC238F3064DD159CE98BB20202E38B0FBE965
AFFCB3C34DCFEA568E96EA8764A9B7E4822E41D39CA8D77C30FB52A523A682F2
D686DBFFE81D815CFB6C2AB1F09EAED36257C711BB37073252D481B90279CC5A
F78C37701AE6CD93AD7A1F61234E890DB6B039785DD311037220125B6BA9C7EF
26464B4AD8C3343EB2C759563226B9C11A5E2E9D0CF98577D0A0CA0B6BFDB3EA
C12D840FE3260C888A33DE3268218324A2842F4C2FE5B3F8DAFE326207542DAE
1FF398635BAED60870B5778B9D064E70C951A814978FA408BA34F6D51CEF8536
8DA263EFAA222A53ED2DA18C5741F6DEA306DF2001D22B9F3B32B00694F99724
104A92C009BA53B39E60C6E34BB19325D934CBDBA23FD082FE65156AE24FD71A
FE15A3053C2D7D08AA6A46E4382B426FB7F994FC742AC64960358D6CE5FCB921
CABF8C6B552C6BB84FA662E97AB195CB360B1290D21C6F65A8EE6F0DE4E9F490
E60C0EBBF168B56254CD9C302071E2DAB4783F42801166FE8F9849E94F8458D9
82334F359E364D34190A48E58B6FCDEDE552573F567A0D35C98938C1271B9CF9
B3C78A83A7B87920A0911CD0F00538A7AB0609052FCB15B01FF20B22B3B8E927
4798F32E0B76D64D62FFA5F6D18315081CD5343CF326DCA4BE4CF0AA32867752
C9319D00D1AF9AF4153EA101B21D0501744667DBF747A4E43733F866CF940D51
B5AD9F26EE53D7673E512844E442C9F69646681F9FD9F6B8D1F514D71D86B709
37CA4B2D7414C1159DBC675EFBB4774A39455603AB73BBA2EC62E8570089BFB1
0E1FD943D9A13F5326A647795838588D98EDA5569E3EAA5230BA7CA3AD5E2DA3
A0E57DF64C32E3042F0519E84FEA1719052B947F407C2324A1C42E1822E42917
6907065A79F1962790870231CCC5E6654EBF2A45D45F461E9449B9E726A400EB
7BF14E1B3AE9942090E07F273AF3B214965F0E23297E4560536F4265A3592BAD
8A11EF553FF30B10076F49ED66DCED228DEE3F40EEFBBF9569D3C36E6EB84156
EF4EB6CEAE9F8C3054D191B814CE660EE1D0A78BED8B9C2E1120A88A3DF4D154
1766730510F182A6727735040BD30574504FE428BE327EF25ACE8953DCBCF5AE
7FFB6EAD869EB84B791EFC892942B54358DB34DEA44A617225DB1FE8034ABEBB
A2C37B401271856AF1D63C9034BD35E32854CFDF04AA56CC3B6E153A34ADABE0
217DB23C4743146C8AD7C63032FBE0DEE026457EF38257AF248618DAFF923A0B
9AE69070CE8DB6133823BB145A0C04C6CF3D08E6E3C5509B0D8822E597AEC778
703F7D04A5983EF71490641F360D008E73A1F49B60FD3139D28728B710F8D7CA
489CE5D10E87CFC779CD0EFA1D5CE5F38F41AD85090745D434816A108CE02D6E
9DD0E9E40743D38A2AB62FE2DBAF8DCED29CA02818820605A65C41D9D2C9E15F
DB16F768B0691AAA8446004971EB680EBA6723BFD84D80CB7E4B612DA9A6D58D
AFA39EE25007027F352CD0C97EB598CBAFED916D25431B79A6849246E4EE0403
7F4154A18CA5AD74C16495EF16B16AF99775E2F1D4E03846358EF7C474713D08
BD2063DA7F78C31022E8887ADCE0F46D02485E7662B5BD64A144ABC3159C3D43
730FF2D183F1C42C7814BF2F043F1A593DAF1556E00FD18AB7DB5FE59923A102
A30BBADA91D03D16705CB9F0BA34930DA7DBF2D774DF18FB64C2C569C078A1B3
71D341E30867D93C4CDD83A0887B57F05F564E9D707CA0F2D8FFF36C5B6732E7
ACFC4F07976E934318E664E0A6571082A74DE0EA413F7D89249439F12FB695DD
19388A046C3D2682F51F3D542EEF57BB334A8B31D78DE318C101F3466680E840
95BE0177D9B7D7476D15DA5F3B3EAB512BA8E1E258F62978914A311E3F4807B0
930188C0D5D1FCBE563CF27352F9729F61028A08255FBB261D266D23BBE0960C
F65D70CE9805D299D0709DB66EE79CD4689F7553DE74325B6811AC70506C2650
CCB99949D55AE015785C0CFD1E257AFFE1FD2619040D42A3CF56FAB377FC9E6C
DD5B7D608946C07EF1F4F8E40F59A09348EB7D0CA79436F81C594DC2B8D9539C
5984BE79AEDD47311F2EEA00148B63231600E1483D7A9E40F51D7F9D4F7F6B3C
05037F1D2545E95261CC7581F9F1D988ED21D83A399890E0F9373E212263F664
32CCC981D0743B8F012E007BE3089449B82249320B0B014AFFED01300C36593E
188BA2EF4F6BE41055E4514193A4C0C0687ADCBC5A00C55E85ADE433560DC960
2315C6D5E276076768EF1EDB4C2F295E685983CE46351C9131522A1B4DA3113D
5467A1A97C87C379582C102D322A82260A8420B56A63E698A3B0C91661A7DF2C
BD10658BA3114EB57C1BE1116BD0E7D3B31303D35C45B8062FBA5D740144BBF1
D1C9F01716048EF3A5F3D595F5612A99803C08B70EDAE1C210262E6221A627B0
4E2645ED5E637FC59CC1EBEFAF62DE0EE5673AC0F8093F8BFBF97376DFE8C8B4
452A4EA2AC5B998BF3BA3EC1F4F16975F9650316FA4C087600891F4E95A17895
D4CEE45B0582588C1CC08821DA288DC941F6429CEF20AFCC3D5C18001FC5CD48
236C880C4733D02E12AE20CBAE6B593FC759D5507BDB9AFF9AC17AB9F3746182
91561E1C427AE5B091F779BC7F077A4F633EA928D40B940CEFA90BBD6AE5A9AD
F74483C2D611EEBB9E9844EF069F926A5F4D61D8692B3A725A77AEE0D069F402
12FB74E0EDC388CD1E5DC8B99E0F9696E91069CC9E8FA7EECAD7E2A0BE992AE6
FC74FE0E4D754F7DF6D9D910D6371FEEC9D88C0101811A7BF3274F68ED303A70
06704EEBD602BB32E83444BC237F0DF9997A058A0D862A0F2795F0791F1FF2BF
76FDA60DBDD27D86A174226B477150A3FE2EA3840A234CAC3C772253BB28D511
6E4795FF4CB4BCD6C74E68FB6BAE794507F90C71531F1DC39D86DD08D0659044
16E4B598B162F94EAB4E754E6F95A0E5C9A7836ADA26CA67424B28E1A92A68B4
679DCDC8385F985AC546D1782E56DBFDAB8F20A2034D8EF373DA5DDF307321F6
93C9942B55ADEFF5BEB9067109C36FC66AA7937B845EB7AC0D9B6F983E8C41D4
0BBA2C7907ACA5C9023CD60802CA47542866D110577AD10EFD0D993692BC1F1F
9219D9D3060A846FCE49A38C299F941BD701DC400472BADC94C02581D72771CA
1372DFED0E3D4C9393C789C2E2E9DF47A30EE832E09E74669A0D24B4A9DDA62E
4826DAAFC74A51A0FA5135C30CE4F7693D9359F5E248444AC85F9359483588C7
4D6F9B8260189D9D38562509A2A48B16BF1606DDE4ED096DAFC4BB81A046D60B
A0B3E59DE6382E8F972390DEDB8B9A6AC9AB0CCD413E661289F0D127D6C5BF2D
8A533E50E6D992FE2F781A06857CAC4EB5FFC03B32A6CCD38021874D084D5CF6
869B82A21226A79E2F6278B31F70BB7DBC506204EAE50DD31F1928A6D91D3E49
4CCD55A2E1D58D3308AE7A5AF446AC5E05EAB526FBFC72448C5C50008748BA65
F2DE0B7A3BE1DF27149AB694E977277D5B87BF35DB316A6DB8E6943D02922F07
B463
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX9
%!PS-AdobeFont-1.0: CMBX9 003.002
%%Title: CMBX9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX9 known{/CMBX9 findfont dup/UniqueID known{dup
/UniqueID get 5000767 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX9 def
/FontBBox {-58 -250 1195 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX9.) readonly def
/FullName (CMBX9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 65 /A put
dup 73 /I put
dup 79 /O put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D4347EE3E5AFBE73BA
31023D79A7299D8F662042A8D8B6A7B4E86F48AE98EF848E83FFDE68E17A0832
A181C126D15EC79861796F03957F5A51462C817DF752097718413D012D19C9D4
423A5EAE1EFD4EA7A9651BAE6E45CC194BDCD03FF43F255E58EB5E50CA26BB98
B8B11E21DBFF2BBB04D039E63C453EEDFCD9378F5E7AAE3A93E8691DED5865B2
B78F540F8AA3224BE372B18904651D057608DE4DD729FAC398A80CB904410451
90D66C44E943517A8F4969673B985D9D244FFC743E0AEE309EFD224F7029D37A
F6EDD96E2F88C9D071FF16EDF055955D31DEF10808B343E948BB4F6393D275D0
44C4DABB75332DD716E8127283E8D70511F8EAF4D1A5F72E2F8503A2F964E5F9
39304CC17ACCF531A8C0B6A9D58DBA6F24A4ECA62EECC939E8111E4BF79BDF77
D656F9998F1EFD2ECE3E61CA526106662273D5AD3E74D08E9D4453569B359C2B
E2455F2136B4DB54ADDC3C0256EB7A11E1615AB9323ECCBB6EB48ACD469A2020
A873E88B28AEAACAA01826C1C18120774FD5324DF9AD36FC256706DB24FEDF34
0FCDF04B12ADB66876EC7AEC183A1EA8BABD38BADDCD0EBDE11A5A1BEADD0F7B
83585C3BA141A8B296872F712EC42C625DBEE9EBD2C414E57CC1378CAEFD00E8
DB4B84F51967F2968329B8503C4B37A56F6136DA89167FE3AAA93257140FE94D
D96C7F85C6F82AE1596511ADFEFDEBC1B41B0395E66D2074B39B5565AD4687FC
89BB4BAFF0F7568D9EAF069CCBA2DFF61C59E2CB2F4274459792C5D097FDE6DE
0E40AAD8DD8F64C28D04EE50AB79EA7D3420CE42D39FA9080E9E046A4F22B5AE
AAA17FE750BFAF7BFF097E4A6E9362412C55E25767C311832C1C0C76005C733F
E046FCFD4CF49C6181C24BD299E90F20A0A0ADC868C11A8AB7F610186D0483A1
B3BC4FAFFFE12FD746777209B4DCEF0E4ED15D90F19BF2FB2B56231FFDE5D40B
146E3FAEDDBAB365D88CED98629B9855AD6E57FB01BB82659BD320D248E5F7D7
B584DD43E1F5DD2C91945DDB772E5A62AEB7080AF36A83D2BA8533E7E6FD287A
924F616F8090E9FFAA607A21F38718D668FBD6BA3434500BD01EDCEC00354F68
E1D0E9A921DACFB83FB61C1A5C27D027CAB348C4B7E2781013B68CC5A2BC8703
2809A49A0C2E9E004D56844EFAB4A8763B103CF7CFF980C9CF7F6BE28814CBDC
348E2486D9379DFFCC0E9329854D518B49B98F582972B0D1D18A3319EC00DDF2
F64C2CD2DCDBA287B279F98D16ABD1D140246E8B66C759571981FE7402F14C94
18394A4C426AEE4B0688D86D08B408763DA3537E5BA0D6A6796C316FDB0193E6
77C6F257BEDDE17F2CA5E661F434964BAC9834BFF36F563637872FCDDE94CF22
F076D1C2DF6357D8A26D305D52C9086CE36F49CD92ADFB4306705A0887407C9D
59B6BFDB82379111C9E33692BA9E2ED9782CE4334C6125933A2F210684642DF5
3B129F955BADA1E86D6B80CE299FA0D1C0AED1AD61686AF1052A188881E2125C
98083BA8255B92B9CA0B48EB57F936790DEFA6E6947C0FF4083FEC296FF3034D
AD657C64F2675EED2B4EED1E88F0B1338762CB4C64C79F111CDE9777A000F65A
F9979943ED7C445815BB59052B91F0FEF7219E3DF27E1D5155B9C42B7BBB06EB
1815997FC3471CF963A15B1C5E4653C84236CC5BF55A31B94E394C635B95D847
69E8134F4FFEAE836CD6AE71F58F48AA2F95BDB1E2CB89DEE590EFF3AB7097DF
AC185303E647628F5D87E0D82E6685DB467A0F8B7D3AB2B7F3F11BCC99BD48A6
FA5D4D75698454CB74451B486CDA6B65547C0CBAA563EC3574364540AE7B11B8
F9E86BFA655CDE88DE2E7D41851FD208649E9C011E04C78ED9209FD56E2447BC
E1AAA0A3D36F6406C60F6B19347CCB7D56A84D961E17E361F92C5542109D9BFC
FEA2FF9775230EABE3333EB25A40E29016E9A8255713AC8336B8F7DEB89FEFEF
4006DAAEA26C6BA1EF494AB99C2BC960D9E07981BABE909B5C121F2CAD48C938
A36129D10D38AE8F5C64879F61138FA9F7479341F5C5DE86376B65A642B9622B
E58DBBFAFE07EEE1D11DE9DC34309572868586CD92D39FADB711883AA85210E5
C82842EF225E55370FE0AC600A170687C60C8091B0625A1C5589186F3C7C1218
B15B5CC3A5CDBA7085338D963D929A18A651EC7CC39B8500899DE9220A1BA363
78698E414607C34E06E29AC5BCBAB98A70DC2BDE0FDDCCE22D4717EDA7D95397
33420EDEC2F1D6E7072FEA85945378A6BE9C7F68DB4FDA6B5BBC0032B3C02519
F4168C804B6A101AA60EF4FC40C2428AFEEF5A80F9B76D561C8A21B3633E13C5
215A14D54B8A1E6143A9CA0B5794D20DF97C35B3C9E9A4673AC2123E7DD8E216
044269B1D6AEEA46757F8D9AC5C8A92BDC1EF22EE0575C80CA7895722CDD2BA6
F9A208E6BEE5319E63B3B3CA197D9739A4498AAAC9C7484D61418ED2BEBF63A7
F5283A075D1DFD4B2702E1551A0D1A90DBBBEFB6A55B5F29C869763A856C4E61
EEB3C8E14E3376B7D01A4E265C6C8056ED23931DCF669A0EC9427F74A147AD8E
82E172FA6C13DB1281651BF3D14163D963EFC7384BFC4B3B9274274DCEF647FD
D6DF0CC146BE8AA660D709526B394CE253369281FDB45AE071319E8FAE4EDF10
2867A431E22779EE40D885E95AFBF62916D9900016805D004C0375D29130CA14
F3E466AF350D1A5D181816EE1C4BC75DC09E4195DADA5AB09CE9EF2C4D5F7CEC
6C16BB6EC791E2870DB46B6B06DF421E7A2781D82A07D92316B553D068A1DF5A
8B19041F96ED637B932DE184F8B856FE1947F5FC8AE505F0E3953B325E0FD6FA
825EAD072AF06E258BD35607A1F082DFBC2BA5251DEDCAF68B4D03086CCF84BC
DF70BB8D2EEEE3E0EAEACC8440AA130273E5C7E78A15EEF66A9A1E0D5E022188
0AFA50FA55C6C461C743E1845FED77378D639839F548D6827CF371AD3DFCE592
B7F6E29FFEB6CB92B33E24E34875A5A92C08806F67E18AEAD86447A977890AE2
30A452F33B609DE5B792D9CABF39A086C0936AECC081CBBC810B3EE1D35F9717
260E76132661E3A8170759084AFAB04A6E773E9714A6D486E0BF46F336A7CDB5
C325E28E747295CB0E8FFB289F4907BAEC213D4D0B495A246A3DC359B995E9C0
C5322D750E13159B7242E4C4DD27932AAA130BC6B0400428B5E6F928CB8F7658
EF02F7522779CDBB67722E09774C419489192FDAD3DF272C95BD9BD64DDF0BDE
999FC72607F52805DCCA5EC17150EEE38B866E3D5199E5A6CC262785EEB11D51
80E79545DA191071487EF70C7FAC0CA345955F797912C1268924DD79D0FCA3BA
460F43E74975C04296E34423BD366A4EF7EE9463ECEF08F7E7BC8BEC570F812B
066383C2EF5375FB1504537D902818D63B30385421FF81AD92A1C153852B1427
A39685A76DD636DC4ADCC53F2A78F795F48EFB23807E5751023FE324CB401281
60F8A8DA779A245DBC26E73B61A1450F25AC276E1B5240578E85E1CDF5A784F7
D4F5BAFA76F70300972E4B130C685189C4010B9035A5CBF0562EB3B387FD89F5
C53A25D3E883B506E0B477389DA5CFA82CB157D8C30F287678B0F9A17F5A8704
ACB5DC57D7CAD21A4EBA49248F277F929D3E49B17463EA5F31A4FC11B0836E34
3A5FDDC6B9A45113590F114B99566D18C21464E7FC1D9AAA9B1133E5E8E2D14B
8E143E1E16595C42376694A83684E3B217A17F158DE89549ECCCB443701B520B
E20B972CA5EC6405C479C5054663D48A22D105AC98AF094340B5964D0C26D9CE
241D2706D3444C1405B2C9F7C912CDFC87EE8FBA01C0020D1AED1A6205A8A45F
8504B42431DB5409BA8AC472F2FCB4CE698F6DA92C4C8BF1293C2C998B771540
3D933EB5E976B7D2252DAE9584E5C6864B29C3048EE159BCB7638CA956E07F81
F76391380AAD2F1DC2DC201BAC657A1BC93F5569A5F612A4EB6B01F136F41B87
E20D4DD6ABD7ACF1275FD80D9BBB87A45572979BDFEF59212F1F6D9423FEC976
1228499D626A328569B4BA2755B1ACD20796398AEEC5F3C61122D52124996535
D0813227F549FCF59C6182D6514A70F9E38565C8C98D5F797318FB531B5DA58E
EC60235B6F1D97CA5D495CF689C3F9B3260998ADA1204AC00135C7C72700DB00
7C06798A46E897875BE619508DFA2201FDCF689E51C3D85342247B059C0DDA14
766A31E3E25E792F090DF3EA0C45C3F64AFB918BDFF92FF0ADA2F71866CA190B
87B2FF90C872284652619F084E2259F044E2980101A62004AE9F4BBF675C5279
BA3437ADDF2D552A033D2301A669EE8BBC840C0028275D077B8E9977D447B396
F1D82608E030FA43511BA01C345078986B8C35B6C6990D018C2DD2CBC7774450
D8482DBB262BB816E6A26A1FEB084FC2027C62D17790C80C65A9183F23BB2458
34FDC5D566C1B667EE801D0521BBA520A15C0C923EDAD84AD6A83DB23806711B
0AC2631C15EB1D33C26F8D65852EC37A3479152557366929A63B753226059870
45CE6403CA23FF95BCFB6F0C8DF8CAFCC0BF27C59414217CC6552F5945D9E6DA
AF83F4AB1917742F7502B069DE44A6ED3BEC966F59A84FAA2F8DE441C11FB122
DEF1768D250C0CA5F2DDE6FC4E24FD3AE4386B91ED2A492A959BF7E4C0AABEAA
5BC2D933147A4A21FC5E5CF3B2AF5C0A768A8B79337FA3934A43E24F9F7DF24D
22C5BFE4DF1FD57289A6E1C9AA48D32D20F613AE94B4308E0D3BE4D1BC95B33E
A9911B82EFF461D295C5462EE2B12A3E40B89E0BC778FB76F8B847B6AA99E061
3444A55D83FF839B926985B0F4E562D726FD99C5DC86DA24BA7AF38B93C90F51
A937E7C35793010F351594465B39BA5276F223DD3CAE1868B969D8EC93AA50C1
4C7E51D0D7F5E9F0EDBE1BE24BA5A977163BEC724D575749C56C4F39BD60F3AC
47B930C9E07A2D59642C9DE85EA6FAD1E7D8817812C049FDAEE148E8AB207B89
B2324191F1A82A7C499E7BF09CF1299F0ECF55EB0A2A32C5BB89411B4AF2A401
074718859CDC27C2FA78BC5269D5A38DBCAE55F6CB669DEED2C36E5B0D590504
B6162391FACA9F20224E6AD24B86CCAC0048EC7A618B3263F82A317B3969F0FA
9D5EA4676B27F371785FFF6599B61A6D32E82DD9D511B04E03F14C95A4CA6CD9
5B59A8A7BFB2AE32E9357C7766528E9F74BB8D0B9317F02EDACE2033B7918D6B
8616F1C1B3E113B0F77B0A1292E41F8353DB55EBD872290491AE1FBE95EC034F
DAC1394928930EE297693598D97EBD0720A0A7B4A5DF4EF4BE0E2E0968E64CB8
167CA1B8C40A779023AB6F74E0F1626D8BFFA96EA09CA88524837B18DA6152A4
3F0DC3C3958EFFF86B07581B416720FADFFC4AD35F1553A18944A6DB8FAB0AE0
A8118C09DC8E905CA32904B44E0541FCC7EE555335E61108D8346B4EF697DE67
7F67E1E4CF0EE2F6D89D10FF2D115C6F8163B8180378018F58C148EAD188E969
C60B83C7B295F30614B93FF925BBB2974B0B9C68C2BBA6E973DBFB5500A574A4
F7348BD31C735A1E57519990582D8F7D97F8B63D9DCD488DC569D5B392FF26FE
F06F9762956D64E9C258EB9B90733BAA8F1912F3B9AE88C6D14DB46B7131BCBB
D47CE60D9C63FE0B9620D03F615EEDAA3C76A7285F9897A0D476F35F5CC158D2
D148CA1E5A96D16253B360F34336D476FABE9A434AAD5FCF65A27F48C5BC3519
DCBC35DC1D324A270996B8DEC6D3833E76A434E05074C7E3FC8E5633D6B25B7D
69D9BF7039DE4E755A7E3BEC8A4E5929A98FE265E742B269666C75644E53E6A4
C5AC907F7DEB319BC88CD1A7F29A0A4D43D471892A674D50C70BB6EFE5740F97
50522F2EF056E208C0134EAF15DC9F85C7C06066782B715A5EBC22AD414A169D
86A2F606150B6F903D3AAAF44E75649DC410C3B8C845909BFC8235E573A2D291
19440D724C960014917EC802414651E298160EA70FD54BE4EAA1A1007ABDA8B6
085A89221C3DD5E9C759C19BAD6EFB91360CFDEE6C4876AC19B4BF67A38BBD5E
0BA20996BEFC1F8C427EBDD666B30DF5A2389F1F3BCA17132FEFFD3231570AD2
61CB33381A0D2E2FDFF470FAC3A60E61E99C76A3F4A6BF32FD4B2B6DB6B27F2A
76A5C35E24E78F7DF28AE1B7D04A71097881CB67E060DE537C1A318B95964FAA
1455264E48DAC7689EF10905E381C569DD65825089EF325595388FA5BA6A1EA2
E2536872DE92D46AF3BB3F1DD920FBAA4481034DF831FD15C01798AB04A73B50
1461BA7298B2EAD460D6E645A9ED41EE0E0282C335AA716D7563AD7CFE2841B7
0C782ED3F6D31871350A12A41AEFE21E9A03DF676671E4C953E51F801CBEE091
BE0B7B413B7EA2479E2529DE9E49C03CBE8159DB1B28D2E290826B6D01B35DDD
083F85E9CAE378C1A3B7065280D9FFEB04A02B76F1F0E547328F005CBD39936A
5063812D1C958FD4EA6BE9FF87E5FAAD483055819D1DC39D31B8417B44F30B50
EC95E26103A0DC2241B56DC62D424438A5FDBA8AD4D9B417F0DC31CD82DD772E
FEA23036A719927A4654876985FF4AC2D28A180969A76F3584D001A2EFAA2BB3
7F0CC228CAD9A485F3FEE3E0F0059D3BD8484FB97593A6EF08F9D352E3860613
2617ED6138ABE551DBC67F0151D0F9CD83A613C245E23FEE6FCC8858592AB43F
8E66FDC5A27F9312091478D102BF867B320431F7A6EA42EA763C51FF7E0E0FED
A6A830AC95600C837033968174A9406D0DFA72FD65ADF153E5CB3420CEC76A3B
43DA6743F24C6CFE0E9A7E78D540385B657CCB379BF5E238A07B836F907017D9
C0CBA503FCF625536E27B77A262A0EA1C3DFAB015EC859FFE5BB26197A05F4F9
87046F3AFD3387CF1B040DA7B7CFB1EE92816C7C172164CBAE3E9204559C2A74
87E4A41AFB16E7789686047067947F41C82A26E3F343E7359804BFB3B7904F4A
12FBB7EA0E8C26801ACE0E9093D7E2C3E288F781E3E6A53B8C121625CEE7354F
B1A059AFE21AB4DD2B43A9DA710F2D811F63DC41699FCC43330DC7AB9CD10F00
C959F73155E9D63EE7B20970C7AB1B9A8A51D0DA0ECDB917291FBD57CFAFD9F0
E1636B9DEC48FA7FE5B225283546B01ACF3036F1B5F399688F1657E41A5F4EEC
2CB1324C136CFE6C6B92958597B952552EB7A8D58BA7773CF685FED451D89392
C290D38D67FA7519ABD024B85D3002D8592C5D30B50726C7BD17577FDBA79E38
3D99B3A08797696E593C0BEDC50706C986E6BD05AEF30108F4BA192E956D2942
72F59E1A025FC31568C2EAA1D5942A479203EC01B37626F1EC334DC3C6527C06
41162B68D66E7923911921E861FECF78F36E4BA60B4FB8554E83AB554054B2C5
8C05D3FBA010846BC5B32E9ED62C6A0E8D92B8F3546CE0406A87634E2D96F5E1
F007DA0161E75DA55FEC10F7564CD7CB9AA0A016438D082D9A9FD107CEFA7B27
BA3C61B3A13D9A30E4BAD25B2FAE3ECE3FEBC9722B448E3AC5DD9FF784718F6D
DF58A8A7DA91086BD86AC776CAF3F4F2DBC2F0AA81600D53D2A0EB178568DD96
1ED459E1CD3D897776901284DE5673813ABA0CA7ED342130B261727DBAE566E5
F57FA86A7B4EE5F48F039FB95D318DC142E26022D7F85B34558E99078C5E6467
FB2ECE5A828776E62ABBE064F9EBB05DFC9EFE42C9877EDD26B9DC61505A237E
75DA13F87F4F422C5E45E5D0CD32F8321ED89F8C6558622D67008615902FE7AE
908D2D4339EF9F7509E5A491A4E8663AFDB454E931C70DC2F2E6DE8E4BE23204
4701CF8C14B23128617137DD98E2016A73BA0EF57125516DCB203D476462BFBA
16499036AB8F81F83AE2F256EB21595E795B727FD7B5FED0B59CCECE8AE0062A
6E77F33EB4896D04E61B913B6C4170D039344525248FE25E46E0DAE91621917D
15D5D17D2262EC7AF31ACAC176D11DEB3601A993B664144288257C95DBB994E1
887E1D875943A84DBBC2498BFF2DB3BB3A4EA8DE8EB3C6469D98A8D4937DF8B2
9488A21763A97B8040F541FF2DF0E7AD1E993050B063E952BF60DB989AF3F538
CF0D5D1234E2DB9A16BFFFE76C57B6AA7F5B3BF9B315C9C46AA3B83C633E455B
01DE02B1C3A9A93CF961399ECE1A897788B2B238D8FD962926EBA06EF157958C
A91F8F3FB7839C178E548EDA39F998CF21A93665B0E5F16B58AA51D3EDD77586
1E0C62F97E4DEE545BBA8EC9EAF7BE5C66E74140640DA860A3203AC189CA605F
9196808237CE3B1417115D5AB604DCC13E41A9A063320087A688B88440CEBB2D
7FAD3FCE28984B0DF7A80BC2BA01FAB65ED6D86AF86C6EB5E34B7B6CDEDAA6C3
A31165CF7204F79BFBD1E7AC22053B8BD242CAA7C7A513FFE20857F8321E5219
8D8459B1E7726C05B35409169BD95CA28CC7A776DAB2B96456B22A8B4669A99D
92FDCF273EDAF6120BD101F22423E9CD249C7F9D0A88E73781C697F620F12DDF
CBF45335018E3D0D1B358F91357656F0DBACE5ADBA25B10F56DA22E860223F23
FC700864B847D447486BB90EEE7C4A61F11CEC84EACD58D0E60BBE1D2DECBA20
146F3E435DC909340FB4378B14186244820E697857723161CA5B18E49A039F00
A274B6DCE9EFB3E4AB821DF0306A258E3A22EE4B35FDE30D9E8141B3998153CE
37202D9686FD4A08C746A311AAD10F8F3261BC7AEC5856BBB4E87F7CD552D788
CED284E6ADBE6277678FF83CA1177A3358DFC622A7759A6F65E8FA4283F0EA2A
2BF8D9287123B4F17008FEF4EEF09AA5CDA4AA55D43B1DA856D742E0AFC0CF12
7901463F803483ACFF5E03FBF9684E76C537737D2ED080E49268B71712A28A23
A9FD01450C987CD823C556F17D5B82EE54BA60C995658C0E199470B2597E0B54
F69AC845BCB952F5AA6B62F4062ABEA4350EC6891EECCDAFC64B9F13834451F3
FC090E81F94150D4D9DA344E5D9BB308D72035CEE37EEA4E550E89BA88072825
A2D508A3E08A308F7BC1289CA0C484953AD5594ABC52E2A8B57251A81FEEE7A0
72607DF491280D0CA4FA3FF2BE69446F07DE038DBCB533987EBA43C736B9C516
91488B6736ABDD898C6DAD15F95B724A60F17C57855157AAD46CF9BB08AB69B4
89B1D068F7755162B7F99B9A28E75C24AA6627F023DE845F5BFD76A850C05EA9
3A09ED6691611B7AEB763E07B01597A6AAF87BABBEC5E91E374AB424BBC47C54
CE78E1BE1A32A2056433BA7BACAB31429E113582D3283CA8AE558E194B5948D5
350C9D52370C8BE3CEEBFF672DE403FB013EFD5A661AE562F5CF13E816B4033F
56CC12D953881AC86F0EBEF2DC3AE6AB5436D0CCF55730B783C6CA7935D3275B
E9033ED01FFE07A9D4806E9460EEDCC0AE8175EC7227594389D8A65913548401
99D86433A00EE5E2175D54A7DCEEA9D090C64571D784E48DAAC1D34ADF6FA58D
C59A62C9461F073572353AB3CB9B6592EC216AD275E949C0F117C14285C0C506
40A2D748D392934B45467C31FE29A22B2F9C750BB7B6AD8195784D502EE430BD
25A0BCBC23AA692F8FCB47CC7DFA00B4B6D3A1A34D693D4FD96705876337D9AB
5A3151BDCE77B6CD3F1E627A1D417A7AC33571B77A72205089E3882DD25162CB
D2654AF8103FFAF89C25BD7BECC6A5C117D27E264E2D0A1B8423F7A468FBB3C8
911EEFB7A4F9D0DDB5EF576CB50C8CD91E2A6D6CE8000C4045B7562C72235A60
0BBC62B5AAE1C61E6A3211597D315DBDD9E7F96AF0F420B13D7C5B964047EF58
051E8747B47619360557DCD0C9D8E4CC5B6A0C4656D1FBC179DF379C6EF34AD5
77B9A5E39845D3CEDF3D126944A1442E9C2233904D9549C933ECBD416747211A
1F38C6BF74AA74A4C961EDF05765F9A078C59D8388CCB8793EFE4503D7EA1ED5
6382F581899DCD91C43F17AA53CCC741B5AC09C515B3167691DABCF2D101374B
F664F43231BB098D206496A74A2F0C2656ECDBEAF848270D817E140AC1B4B8DA
F489BD61049246D968FF8DC05D1C5C63CA2BBC265951CEAE02E8C8F9D2D7EB96
D09950C7C4657B798C97832AEE94B8B08446D57E9F3F1EF2658AACE725AA7BC6
7634AA366217E4E92A297CD16C0BCAC9497202F919277C584C743C7D8A12A49A
6BA1B48CA9A33E31C31755DF8F017B4272C9EDA7819518112F25FE8D18D55CE2
1A36D344E6C57112E7F4681176768085B5CE7F92C68D3CDE9594CED65DD18531
47DB3AE321091417029713FEA5904F88664AFB13D415F26BC0BAA47E5C490943
A02D4DE0D50971AA47697B1B44D4627A9CC7633179F56F7BB662E054AB90E5A1
7B77DC9C78523B42718F7563F3997F2A4FA9CD8A5BCC426326D94B426926314A
13822C4DA3FB1A29EC7FF8C599AC8BA96E35CD48FB86D7701BEDD686C789CAEC
4838E11F148BB6378E5FA556B10B6ED7DBE716F2380F7FABDEA38FC3E2902A84
910711292F0EF76F1098F7F6B66C99165CFA767574FEE5A9B5706C6DBE7DD96B
6F060B75E20FC391D2E6889712493C88EA8B5E80ACA561CD30C232670D6E4B51
4E98C777485E4C59E3439CD1F7CC13365F3F70DF54A8F4B555C0F80C358F65AB
DDA8E75C0AD2B3746D76B3E8673CD42682ECDEA2AC4166A46CD6FCFE41183835
F020644188D5F5E0C0B2486D61BED35C2A543FF65FD3C46BBC47C6917F81FA45
68FE2F87F45CC4E3FE1AAFA1FBEE73C77A16654B9E913EB8B67B5FB68C5D0C48
61E1884A764A5DCA6719E9C2D257DC559173B7484A75527DBCAF2AF3AF32D94C
920E35138578DA8D0CB1946E53E57B29396AE5C578AF2987385C233CAA0AB705
1682F7E2A150DA99567973759C572D722C33E6FDC967E755B7582CDC39C1AD03
2F0721DE64A96CE1A8572FC98D1C397A79622A5D4ADA5C6F54BC0A807559CA9B
5F949144D4F751C014FFECCAEB9A7248A7F97B579C95D7CAEA7FDEB0F7375F72
BD6946CBB8F4C27223C66E10CB017ACB951D0AB7F090E03F4C8DC4F1A4DC3169
C25C40F51086411EF097E38B3FDAC1B870078BEF98395521A5B46958B4473E06
0EDCF53778A7127DABA5E7047615B94B88087043B145F71662BCB49ECB6261CF
0BBC827D56B0D69E7B34FE360321801675666FEDA33753DB123720F7BE676472
1D0BB92B18E2B4AB2230FC1D4705686529D0301CBE8F528555BF3F6BB7A0A15E
4298667B340F1F14575719D2E23A6B66893794BC673515EF201D6CD6782D0CE3
38B17DB49404F1CC9D1B4A3D48391A0A58C3ECDE7A4166BA9537F6FDF9F87F0F
008D1751CE85D3C0B057F09BE63C6B4AF811189C88E8BED01AB00A318DED9F43
8EE44A814B8E2FE1B5F567F4B5767ED576ADE2D9396E570FA58DCBCBD4E4819B
5233A51CA75AD02EF2CA2841CCBB66800ECC6D9D3E8194AF1021FA0054F3B4DE
9E4338E1721A0AA12B2CA1C8F5A130BBAB368C5E3B5751674B772E875EFDBDF8
E7883C985B7A7805C3589F36161B8DCB8EC8817759719E292FC4D8923FCC4607
201D57DC8F3837A2EE42ABF84C84833058314364687F9E40DDC6EC5669126DEE
05800F5D370BB3FAA356D00D5AC8CC55D35D846EAA331A301E8536131BC1C291
C28FB927DB7535377BD5B2A18D0E77FAD9B140D03114672B2869D58706B2609D
B42A5C6662B61172E2EDC303CBB1C9FFB05921FA1810B23DE699C448B9251FDE
6F1703E56F779FBEC9725C20375FEDA7F3BF0E63C0577659576B9143B7D31A9B
DC680BA6D92B979A20624816D535B4E913FB615D1F1A1BE836E0E3BD2D6B2342
C92EDCCE387D32826A0785DD3813166B29B4CB272CD8D780F305DCA31F2B7A10
118FA318FD9AE7E64FE1036E4FB45915623502807DF86CD0AB60CF88D1BD24D0
07FF3362DF46057B0F956966995BCF163EE448EB4FAD6DF81AB5BBFA621B3480
5BA4D99ABCEC3D4A389B4463E7C31E74C6D62EA3B560CED0FBAB55BCB48B35EE
A63AEC7671263862B50AAB4E9CACC0C0B44A8C904CB332BE017625E36D2BF47A
1490BE3B1858BA11B8B35E4CAFD0F2CD454191AFDAFC6887B518003995EF0A83
BCB9FC958BE6A9C8AFC89F21CA58A0D4AFD439ECC14327D416D4C57F514FDF10
E3D9CEB70C5196650A95A57FA3AD026092FCC728C88223E397EDEDDFDDA45650
DFA242097704A817DE6B3B81A3F277B8E761A03F37F3C0F8C8B4CAEF4E45D86F
F88C26426FB7E059AE3763F7388106FAB4E51BE967948E01E4948A493D783163
519AF88876F5488B332EFAC1994B571E685403319C64C939982F11F40E568A23
146660563C22DA7166F80AE07D259AD0B0AD086A7B8C1A5D077DE5916A5E4571
9592AEFF3BE7B39A61BF1B331D005AA8F2756D0771EBDDD081313B54B633ED17
513034FA22D66DDD49D9A32DB801440EDCB4E11B65884E4974EF40FAEB476D59
B2665F693A5D0F77E4B4B836DC6613C1CC96147276E3DE6442ACCFC4AC7FDFA0
E0D08DD59BE14EDB6492DDFB5AF03FAA1C5C1783BC577A111AC87EB05F61389E
A6D77E52494002891B1FCAE592D35A04E71F32A499978E374DB17DC0C6FE1E5C
F5040C48D8EE7F2EAC8D7E150BA07FD32FE4E00816C8E56DCC27
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTT9
%!PS-AdobeFont-1.0: CMTT9 003.002
%%Title: CMTT9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT9 known{/CMTT9 findfont dup/UniqueID known{dup
/UniqueID get 5000831 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT9 def
/FontBBox {-6 -233 542 698 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT9.) readonly def
/FullName (CMTT9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 49 /one put
dup 64 /at put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E6BABDA4215500A0
42D1A3D0D02C0C98BB1D6ED0B7791274C38B038FC7921FF1FB8FAE7258C09259
4B8E1BD9EDCEDE9ADAD9BD9598EEA9691589649A9A21539161E374075BEE3457
689F308A4A7AC9F2FE4B301A6C36B0442FB92E3B002623493DC087800B5A0521
0DB96A23175AC584DE166F59142779F26FEE9783E28DE49FC3A8D6583EE63FBA
610DA773CA18ACE6F64A4867A1A7817120ABF9DE4D17782866E6CB6B65A9F6D8
3667C8D3E61E5356E35343FDD4C6436DF73934470916CB5F0ECEA6BFF092E735
C7C355B56189D1DD5715EC97E50145FFC17BB1497315A9585D713A7A6DFC7933
995468EFD0F59E3C15865B87925A3F2930E20D5A35970E2C44F1629FA16E00EE
EE21EFC50D49F5BC02300D0A7BB85E649CB4E2E828C8B1C5469463013E71D723
2CB11BCBAC191AC751A2AF7FC228395CE9472DC1809052012AEC2CD66695DAF0
4CA04234F0187F4116C93F59A7F1F8123DE87F111853B785A20CA8B49B3B0CEC
B11AD345E1A11578D2EFEB0536D125237086CC8CD9F34A5137AC5DDFD8746014
D74AAE8239B81ACF65F379CF2153B06A238A2D767F294CAE0D79228F0B7D45CE
510AC9657A1776202FEF42F96D476E7DF407786AEA12DEA0013D3B4C5D0640F5
BC5BB72C34066270399CE595827175B23B25072723BD24E07F6BCD9EF0175DEF
93714BAA53960F81103CFB731CED4A267B53727BCA3C97B0BA5004055D4EF0EC
F725658E53AC86E4061B489AD4154915C3981B3B703E1E2A8D390CCECCA99385
45EBE35441B062D7D12DAB2B31569387187D74A4043FD71F1C6D352EAE0F6757
4345FBFB6DB15CAE47CAC4BAE47AECAE5FF5EC19057DCEFA1B23F47364ABDF47
088A7C6A2AE26B10459B6D41CB69182FD1472F326CE3A15B59255D1DE3B616D8
9D1F12561038839781E657C896B8C58A32DF5AEA23732A0966D96C68C988ED7A
09B7E2C8F9F3D0D56879764781566299A4EDD3588BDF70E3D924D25074F30988
E35BDD827AE4D0B4A06F55A9976BF0DB3C0B1D09CD08E8CB168B50617691638C
0EC1A791C228177D4FFB021EC3DF5082CA3487AD2EFC8DE9466A690ADDB4C52A
FE2A6DB4CC275CD33D9136E735279FBB2008D59E667905EBB04326EC33C98B2C
94744B7F540D86E90DED64572ECF1EAD3A58EC101642B245A9C7232DC8FB8741
03F97883BB32FB955C22F878FA0FD114451A3B3859B0B5537AFAB73AEC7DB2BF
409E1FB41D473714F6BEA73CB085139879FA31710E01915C2938C37BAD6D7D71
45B897E00857D3931A489EAC7B42BCE4E65F73F67FE027CE482DC47598ABCB95
39E98DA8ECA3E23F0799D5963ABA6E2984DEACBE7B46B40ADC6213E0F4D08971
58F68C946C748E4B4217CBA2391BE2086C9758F4E32C9B6413E48D84D33A6E85
84747029C0A9C9B92841D217A902BA8EB333999D62FDA9F82BFC8ED11F67988A
0CAE42182E414A9766AFFF4B046A09D476F8E3F15A8C7829BEE982D8350BDF5F
F215F2BBBF68D4B567BAB798B9604C79306C475926E9FEC0F07A99F43473C6FD
B15AC29C3D07FEBAD1BAFF75AAF2FBE94F104F1DBF838044FAD94B661B06AECD
D9AEBD02B60CA4546DD6B5B5C1A3833ED07845671CEFCA8955CE0DE5DB8FC93B
3306683CBFB8E5B79A863DE78D455DE9D592043C2686F88A43140F8B9F3B553B
7047420E93E753829F8D47AC7621CFE3626F271E31F0019CC02D0B57F67BB47D
8CFB63E902EA3231C00EC66EEC0D30FE8394558BD3535C888C4CEFC6EB72E737
712ADC6300162D5D79BEE0CA1F6E4127A0BC90656C01692F6D82C85550AFC97E
C2693E379160FDB9636FA41AE9C75B7F6643B05971C6D67CE30971D590FC07B3
E0B36B4D1C7F25110B5DA2130D574FA292B47322975A2BADBDB39AAE69BDDBDA
A880F9AAB580117708C79204DFFDC08BF4A48919B5C22228845CE8C3109E93AC
2479E523B8A1C12A6E541118F121DC6B4EAED83491A03192D5C3A2A45D1A2467
757E7B377C635CF5CAE11A7CB49D49F3A1BB2286090B5F0E4F89869D1771D50C
54B5C5E091E3048A2C194F0ED00DD64FB95BAC6FA9D61ECD093ED416DA3A4981
DB07CFF17C4F55C62DF628EBFF06FAC3F3D3F91C30EBB34052BE1A08F5EDA4B9
08977197950A282B84E21D43C64BE3AE4BCE22C70E7D392DE09D89B7F23351AD
6AD37225C12BA79EC9951F5DA1E505DB26200190ADE0E549305B7530CB86EFD2
A896F13A97E51754F70B609CB4511CEFC38BA579C071E9510A49982389980DC5
336D6C4A2DB100DFEC4055C7AA9C55880F94FBEA9EB280BEF66CB8E1E38A359D
E5AFB12B540CD599085ADDA7FC2C72E7C873015773FFEECA2C596B75BC39A3EB
3C43FA2E53C0D7993042F3D652BCC483E48B7F6C94C3FF6D38E276086A6AE67A
E5A571B9C72E0D7824E0BC2ADF51A393B9E334649F786EC1923C854382B89627
1B9E701AE5A6C42E672B2C6A33C8BBCA8F69B9061E787D6B92183F20CF4C3903
FF5417427B84798C82BE28D2C81624E3920CA61EC9EADB364B5A6E50E49A1A72
A9A090A1FCD84814B8B2708AD787D2B5015DA1305874F58C5EB62F843685FCB6
465FCA80176CAB2B2FE65E0A270BCE1E3DB97564BEDFAE5CA44395A8DF4505C0
3E103CC3B914359B2870DA6CD30382EAE8949131CFE31E9E75C3E47A3834BB32
CF183D4A8B9001710D0A11390C9DAD116196568591D38C2AF4ADD852F31494EF
573462759A35415900360882739789D6B89ACEFA251C5ED90ED704DD7C3C80CA
9F6CDED69537D201D520C99E69EEAD5D3C0EB84C166660B3C190166D93EDFE6D
15BCB6DC5CDCA825E48D33845CC2FB15291AAB823F25CF8BB0A1EAED8BEC524D
D9CA016027141FAC9D35B64FB9C224552F29EF6B32497254E319090E698FD8A5
15491CDFE1B988C79A0E3B9D01E12FF084E9FA86CCAE02A3EE6F2917B61A2CC1
64B8CAF309D1AB48A34227A7729DFF99CB6EC282E3FAEDD2673779AA7E4C1789
D93FDC37FE95F087C5F88F53D30A2DA9C913BF205FC6BDD060A40184F4AAEB3C
D080D63B89CA3DEFF310D09EF0A83F3914BD5B7932980ECE139EF0313C20B4C8
576EE0FE3F28FAF4D3CE7CD0890BC824A85B8EF4636BDF1EF1BB519F93D36540
ED09FAF93FD71992CA2CE2E83F5355162ECEB32AD218092F45D5A61A44E67135
EF0453589CECDC6962D0E8DA7E7567603BAF50B2C8F1CA65EA5320984E7D69AC
9A7D3D7F92565D79E8C9DD2D92CCA7DE9CD058545E9F98AA47904D70E1897099
3C4C852B3BA131DDD348433C336BDF5FBDFB62120DDEAEB3255E3207B0C84A0A
1ECF9EC869DB9BFA3693B03FCB27C5A5D3CDD62630DEDE91B4DD5B9784BF0BDD
FC6EEC3FA7ACA9E15FAE47CDD9B7FCD2BF0EFA10716F08C0AF25FF67CB6F9598
C607D2FCA452417D2C69DC808A9441A66492394C3450BD30632AE739EAD654BA
4343459CA36B6D5B2C12C39495952F2EF93D82C73E33236785A79609E260C4E0
CF3A3C950DE71DDC3939D42DB1CB1CA917CEAD56979A70F8F3B207C805319FA7
3C000AE2B21D711A6D78C7BFB901334DC06F59EAB6D94B507734C27971F8458D
D00193645AB92FB8FE163D5C51AE4F40BDB4F2C51691E76EE0636F071F37AAA9
BA78BD12459CA499210EB0CE2F8BD317387797C33F5933AE7A6264DA06B4A6A6
1188326147A16B205D1F965872DED7D8EDB3294FAD2FCDF0D423329E9CCF879D
4E0B966D509F45527F7609DD09694D286F6FF7535EF8971B7DFBAF608A19D442
C133207EB1152ABBD11C455D0977F66A9B73E51381D1CA4B66E87C0C7175A63D
80C699A052F00C41DAEF42E7A40E07B1B14107AB0787E24E17C1462960E3C54C
AE73BE4924464FB177EC62F116B2822842541543EFF7ABDDEE197D6BD8F8D4E6
59175D8C5957550B70BE775AD52FFF6E7C00DA7CDC16E1DF7446BB5D8FD82647
3E9F87D5EA365C82A2D991321ECB14A9E3AEADC5A56665DF7072D6DAE402BCB6
14D92B17F9E063E4E9D8D239C91F5C7C0BCD2FBD936C9D4A0B57659420343B59
B395BBD1AB5B6003F653699D57E7581F9813CC98D4F072FB78899D6DECC42D34
F2787EDEA64058B46C4BFAA2BB96E9BE5CACE8D91E4C080ADFC0FA0D4A29C6B8
54FEA9E11DBCF53D9CA40A21AE5076451EDAB3593E56B6D453DC8EAB8C78B588
34D4C4F36861B5649BC1E9F3091E704BDA7613ED45C911DFECA74EEA05165191
825F95A947CAF382FBAF01F3B8B041ACCDF39718D7DC5BA6CA12BB20EEE96439
BF2E2628AA3BD2C91998E6247A690FCB0CC95F286F427345CC4F1115BA3A6E54
4743355F2CC991CBDFF5725902C1F5A6DEFDC8638A26EA456C33C27773D6214F
66536CD2E44FD253531732D5A8C44B336B1BB47B0477350EB8CF74889B93402E
2356A9CAAFCA562315D8E0B3F42F08932CB87BA2499A875AFA08D11DA73B38AF
F46D03B7F639A8D7BF88CF07FFF4E91716DCCE6E2CCAB60A64D5E40EFD8B336A
1BFCC4CB04F49DE1FBDE7AA5B2092A6EDBD913D161A3271AB6411622D0E14416
37F81E0102F5B0F2F9A2B27819E4BACD7C50E29D6291AE5B0973C657761545A6
741729620EF2BF1046B3913399C10982EE5F4142CF461EA31042E432CC79A1A1
39C607D22E45A6DEC008CB4BF6007CDE9DD5802B49A62C8E02A6D448B64177CC
887AD71D171B99E7ABE2085B37D90B3BD8513995D9A57F53184DA474F6DB5E49
B73E04CC214EA5398DF7D7541F94E623E8687B511640457A48A68E9D9D6584CD
15B57CC044D8091C771D175F2EEDD411099BC8F7B4317DC503BB5E405AEEB526
5E6E1B1F2705275D274E012A98F66075CEB90AFC648B964DDC0E9C4AE7B24CE1
80B051022E5781A533A21DCFB97893847D685137EAD85BA708A7E118C72FA839
A9E460B5D17365A0AF1F53A98319FB64A5819B087F554BC056C4BE44113A5404
BEF759F890C1CA5E7AE156F4F8106FDB4F8DFCCC640976983EADB30976344048
2A86D7B2AF4A01CA736B98D52ACE392AD4BECE7E61C710B08B66F01857CA460B
B8376E257113E10F6DEDF14CE2A4E6A99ECBCD302C36CADB713D849EAE9EB598
F29DC98531D793B79F83091F9B136809E006F34E423D528CC4309AFFB3EEB47B
9A9DE4D5B25CE953345C326BCBE2B4912641780637783084D3D12693F8135483
CBB0AC4EE0B5610D7CEB7DF205830BDB9BB404DC1B28FB0824CC187B26C19A91
DA0025EC739BF3993700101D042DED86D67F5FB87912CFC51AA7DF53F2162D62
6314A2CE13810D0B8D81F45771391A236422CFA0F35F7A0CDF14ACB2724AA57B
7C2C28D53029B1146558610E0CFBBF72A85AB9BA308F846228F299F13F68E8F7
D963B2EE9EF7D4C21690632B640BDDAD0556EFA4EFBF035F13377ABB5CBC280B
9E0C12AACB153C93351E5BA95A7D149010E204950A59C7FC6581D9703468C1E9
EFAE37E7E6ACB892B3F8D1248D9A4A72F642FECC5E0B25C15EEB921EDDE84D12
0E524FE6133C4921FF4921242392C12FBE69744D53739F7E849C1B96C4020AB2
1FF10DEA608F111749E2FBD8DBCB17F353DCB3075B4F4B8186963EFE95A76A10
85AA5BB6DB4095291974221829A8E436680F4860E01C3843BE5BB3101D0869C0
EFCE08D187BC04F58C7A450A59093680A0F09E8E3F12DF5223E7EAFEFA01978F
D8354753A68022CC92C71F2CA732DADAA8A466D4AAE5999B0DC077715671F518
E6277741F44AE798EE50DF44CCF71FCF8BC71F76374005FEBC4883C6EDA854B0
88C0C2B476709AA809ECE41AE786DB1A32B3FBBCC14921673578D3514C8CA842
E1FF90BE33F7B93ADF6BFB8B1AFBBD080783BEF056A6BFAEF676F7BF9F2DFCC8
01D255A9F0391951210D60D4D4DCA93AA858B38C0D7B8FD740D5FC6F277C2A68
54CC2DE1F40B6347201FCA2A0A91822708D820CE645C3E4E5A09FE25721AB33A
97871ED448F38FC5A349D81F402B34461D840D5768BFC6849439AB6115104F78
B87115B1DAE12542EA898F86ACE247709817850B067F537E6137196101D46DD2
D842EA03EF4501E34074E8458E638ACC4EB349A7430AB035BEF2DD4CE00554F9
18F9FE32A55AC1E7E50D64AAFDA278D77A7149C59DC5B1E3064A4B281A54C9CE
A5EA94ABEAE4C6D5674C208ABC72563976487136AF2E21F835BEFD232D7F0D13
1D19932367F51D5379934DA7F1635AC51EE5CEBFA63D4D32F018DEF13624EE62
31DAE68A08DBE3B4FDAAFC75291C8C6CC7A657E3C7453C7D1461A36E88E633D5
408253B673AD87A9FB2D0F56DF1305916D14D5DD62051E27BCE09CEE9A1F14AF
1D7164BA5FB6E6EC8D38750F7E28BE330909F303ECDEE692E347DE13C8C2F82E
29C8BE6EFD76546F362A12A1C2DC12389EA95ACB4DCBE95620F0C193EAD91B33
BAAC5801AE827B9AB3FCE5D11D1D7854F8FA8A31670119CC0CA98628F801838B
AAC7EF90AC5466BE69CE3E3CD9951A5EB9AC08014285422F6DA6F6E221BB30F8
0042A11F2E4B765BB0D142AD52F4D85785EA71B2E1CE20728B9E9306CE93268D
99B822A5AB5232EC7E26EE1160850AD3905864A01357F22722B6A54D4EBE58CE
480EAD9FBF068EE965AC4B5FD2FA8CCB91ECFC6E90B9C49268CA0B0FDAD23ADC
D5A74B41149BB08454054C451AD0DA4CCF8B60F2EBD061AA03A011D548B6B481
FAB00AF9225BB5463F27FD67333FB51F8664536267E95CFAA0BE3BC1B8F889CB
587A3A4FA2B45864F07E11372C9507A625C0030EF7030A0B4D931BCC48F6DD51
A4D1F63FDC4B59C1CB18E6242E9F4B4B8AD9755B870FE60D640181FB7EB8120C
C56F51DC8C47FCC6318C2145EDCBEFA7BC4253315BA67FD2B3D4AF6A9F3F229C
AB75B592EADE15B1FB5FDBA1C0F786BD21A51506B7A2E42C2D086BA6F84D1B3D
AC7531545F0B01346831FF36A52CAC1E390F99AEDC265B44B0FC9C581BBA6BE4
48B723811EBCAEA5FEFAEA7E5B987F2C7B3E9A65D2D14A7B74F099401C57E367
385352D0776D2A908F7A5A2E4D4160946C5591397877025C8C387CA413EFED56
8B142E8341E349DB4DBA422A4FEE56A573972A0C66590175158E48850A9F7F38
4B95726787B8F969FDBC97491CC81CABC976CD00A27D1DFCA7CF467A956C1C6C
839817AEF8794B6151FAE9261119DD5DB787DC9D3B420FD325ED6599FACADE0C
320D54C2E0D296537E22C1783670A9D9BECAEC63853EC2F05A990260DC189D63
7CCC0BDDF2CF7585071ABAC14630666737041194D0777EA4292AE60BD7F7100E
DB568C90F0D899EA006CA423CFFD6EC70A5D3D8AC43C747DBAD3B02219E47D8D
DE030631F4678C357A58ECC52782B31B50CFD44EC33F41585E51B27E3997D33F
461BEF897220AEC80007F13C5A1EE3A0430CA899047DF944831F8B010A7DE74A
BFD26001472DC00CDC9F17CC435F61ADAD4E9AE062ED477FC621FDDF9242C449
1BB3F77FDD1519A251B663A693D84B42BF0962F537757F38CE5C5D56B98AB10A
3B70C8AE8D52DCAFCEC22E7B09D3C4EFDA1841C74CA975E4F8294F7BDC796500
0ABE197ED3737A65F7BAE601C91DB3983EAE11DBCCBA7192898F91A912C5C0DA
C1257ACE67CBE6928F02D221DD8EA18E2928CBC0CDCC74250E026264EA6B19DB
5449D43DC9D1545A8DF4938B8F446F3F924AD3D83219C3A167F64173AA1D106C
D43DBB80B0100A9099638BA429F042255634DF0E134FBF59212F1F589806F5A9
586A76CEEDCDBFE9250FC166EF726FC65FDA29EDFB3AD6DC2B388DDAF66FD4ED
E710B8E01C10FDC551ACB1AEE8B1A68DE6E3D2647E8BCBD9FE74114B520BB3A7
E40316FF7A74B59798A8AB7E8D07D3EBAA9988D4A26FB7E1C09ED409A37537DE
FEC58AF2BD0F43B7F38BBF060C451CDB3175C40C0518D163A4D225C676577275
32E4799F0DCF5D831A19B9C0AB4A4744BB7BCFE28FDD35CB45BDA9C732D6C7E5
A56F93F114B6E50784A852A32989A63805EEEA8B14A64CFECA4BE51362285C52
7828E5E203F328AD955AB433987B2295377C3034E864FA0A570545ECE1644A4A
FA93A64C0DDF41BC088B849082AF7F37BB75678E5996320DB7D0460985AF0E86
15E402CAF2FA34C1860BCB2BF6FEDD2F7AB7085420FF9EFC52B1720C576ADD75
A218D7BAAC1F03EF55867B2FFB41C4992C8C233EC1E97D524EE7DCAA78EF348A
C2D8C1747A6719ACE7D439CC1D19015688A33EAB2124E28EE5F657B649A699A0
D4F084E86771F08A672FF68F8D051A6F0CD7D880FB218D637E1F13161B9FA93C
3D0FC8AF26FEE31BA650B7975BF27E4385C1D8A2157E1DB1439743F68D517D24
B660C83D41E7A844790104467B1A799AF676111AA1252C7B35C0707ABA98EBBA
070A5F453EF08695CC7E4D6245735FB3B83F66E8B54F0770DD237A7A94B310B5
06C3D0BF67AEE61D27BC93A0222560038019FA7535B8792D67736E70CDCCEEFD
B3721D8266C43309ED8117BE18025441296D0AE92A02FE04F1C80D0388A27D81
3A5289FCEEA15B8A657335146F7B96CFE84C60DAC8E79EEDB58EA45CEC2AFBB7
520BEE0BF93C83109A66080BAD44DCB1A38E076ECAF5CF42DA265C9A7791CDE6
2FD9D76EE93FD4CDBA6025A567E84EF484B8D5305FBF7E8B2AD25CA147ED9D52
28789A431F96806727CC60EB21A51C4C006F08ED48266D8F5C5A0E064C4B3E4E
92A2DEE706983B63C6CAEB844F4FC54259A98F8C17B812BC6083132ABB0E5CBB
4DFDF1862F00B33677D0B5F108C5554BE67CBBE468A03CB78F7FC42C8466BBD7
AB4226BC9EA91B74EC159D639FAA7448781E9CF63A753FD9FEF1AC8865FAFD89
C13C8DF3556CBF32D2E66487EE95BD13CC4F0B5D158F3A1F9BB0262B298D3105
5B56A857EC404E1B07C78A826855A4581404EFBCB3214E0543BB73AC83F55648
98E6B0EC540499C55D0794FE3F498CF481D5E273687010D13AA1258744D2CC25
425FFDF473567ED0C8731C8A3FF95AEAA3B9777F64850468381FAD3F4287EA7E
850602B6815EBC2A3A443097470B43AE5D6907B96482F060B543477DDAAD8477
772202BFF09B3D50015BE9311612EA5096F920A5AF2A90EF43AC6AD8317F081C
322ED5D3173134C178802DD509E2DC5BE2EAAB54D01E66BB75D97AD78ABB5883
BFE80A1AF24B1F2EE06E3172D18256B4216FFF2369A70C2F548CBE95B2E4A03E
43E92DD86352B0107EFFEFF80E47A9A92F7B70AB4F8380BB40536E8A15F9602B
6E2DF37793FAE89E5894CD60F30A12DD7CC1E39386967C8F8443803ED1E86B1F
9116FAD571947474B4B01C574C91AB97D1DEE7CA8A1FBC3F09C1B8149BF5C634
9B7AED2EC911B7E85C06E6B8F430F8A38CC54AF0831693D4D17526F7A7E7F5A0
B75C92D299CD9400BDC9C4A58C2B81EC52805BD9B9BBD0992E1ADD6C189D9958
71F317F83D9EFC4C01D82209B3EC7B8B96D4AB188D3805E621CA1AD7C8B82EC4
CE6D56FAEE1A6075ED580C2B224F1D8D70495E60C6B68C5AAA0F99CC8BC56070
4DED3F29BE13327200E790A461EEFE19EE9F34BA79D1BF3DB0EC7CD0AA8C3412
C1DB8C329B50602BAE656C1ED1A1A45574187CCC715A1FD30ECA7228B3103EAA
5401C6CBBD5BCC9C5FC574B6C6642E6E3FFFE671683467D4E402D170C33F7747
74BB7506463E9AE1460F91D03C948444F4945ED6B1DF98CA6E17B1167B6E6EA7
A66B6ADCABB7317F93E40AAAF286FA5D5A9EA935893514C417F4B35F309534D6
B9C2340EA4A63AC3F948B6ABD954BFF51D7526A524D88958236D538C425B74BC
291D48D4826F5B451215145C6FD95CF4F79C0714EDD9AB44C9F2FB7B57C1E8D7
92C7F9E6433FEAB8FF82B8103DC996F617F89653FF18C0BE56BE3E23D474AAB2
463C20F0D9DBC8D89C74F1318E970A937AE2663A74000F6A180CDB461F969149
DC21C289B2598B95E4209246EFD57C3AD31B0175AC7B69D07E5A8B7FAB3CB090
B5292CE85E4ED0F6BE3FA13D232859E5756A5DA61721C0D67AC6E23EA0A4937B
3165AA1B64307E37B1327C5A22A684BF25DE44CBE126B8EA5794956607EB5AB3
6C0F4E55D936A4160E6B1FAA6FA5B3904134665EB390A23307048EFC54B3682C
D1F390E9C22217606B03EF78FFCA866A7839D036AC2ACAA455D45B6C69C29787
B18B03CD3875B7C6831579E7B054CAF7AA509D8DC48C9EFB12BD36010EF56EBC
94EFA6D32B14C5C161429B7296135E3C5273EBD7B4FC6AE3F692D74EC90A6577
2BFED2C82133526CAAC23F52DAA4F99CF5FF0036C23C31CCB0D259D04AD8381B
68BDFC2265A7439758F2CD68BA5FBBD68C3DC904FC971F78A969A5999E0F8AFE
73FBEDD7646472A7C4D8DDD4E4357366F604B286244580BC9FF3F89312241E1B
4901AF9417D4896D21ED15D5B6686BAC3D01730A3085304E4CE93107552598B8
0154E79F97927FC8F68FF0EFB84131CB7FA2BBCD6082708B23E1BFA94D69E383
ECBBF27196886D39EA929AFCFBB939D2145A7A4C5A905F30488A63A511422CB7
B600CFF049600BF54633B3B25B84F2DBCC3CA2C55D4A6614BD72AF72C046B076
76F2D9C4B6F9044CA7AC162B8F330398D495F1A3FD63478EC80B9ECF07D8A388
D40320740C2201A8E14D1CF16331A7C5D2430213E11E1C1EB15FC5937E688064
9A83EC24060AE2D76CFE82E052B172AF09BA16484E5DFE1F7FDC9C73A29927FD
0A1F9EB5BFCF5709861FB3A4BF28C30AB19259E945B7DCC7FB518B1633FECE68
2DAE86E283FEA677E472FE9083AFA7B8316D229CC7A1106DBAD7A3A884F16597
5BB0A1333A6E2D4FBCBAE3657630D49BF83D9F06975D9CB6F089ED315CCFA43F
9CAA4D33DC2AEA377C462C975C505C7292415EFDC2C3C6AA7A8FAAD2D762B920
E3948A3DF93EE7A7169F949B08254A53D8D421A37BEB95821C8CF8D9E5BE1A39
95A12CFFB0C8DBABAB37211471A7869DCB426994E6EA91D206F284A5F52EFF6A
1085C144E64BDF2CB34641D566E581F70EE3CDBAC378368ABB03185426175365
E69A36E5C9604278555C81C2C7099AE33CB533C225BC86514004BECEE488C488
D878D7AA8A7F59F3E450A68E3F411D2B6F53827A2D45417EAD7653D8B378A16F
D95496CD3900F8AC3F12924A6FA8A78289D29842B87239E5B878CAE67A51B0B7
0897383CF32F54362CB05A114A966D726CD614DBF1F02793C822E13EB5C04CB2
40B2D20906E4F39EF47B7796DFEEDAD4730F28556CA6E4A8D5214D07B1492383
2AEBCEBFED28EFD3DF3033FA930DAB1E26B10C04C0D5BBC67A64883593E4A0D9
393E2CB579DA679C25A9BAB7D3D25BC1503A3207ABEB4AAE19A1EF70F06CE5D5
E0E2B5337866A5289F5B2FADACD0C6AF066AC9A1606953A332BBC01217DD5884
C2162EB59806A36818F47144FC1794B2F0B025693D224242940EC27D7C28FC6F
E860E6244419E3CC1D6B206658518F1C1CC461EE62C16EB1F8CF814EFAC29ADC
55D243C2B760E2D29F9168B2684F040F5B9BDA869DE462A4FA1D5200086716FB
A4638761E38E827E3A9010E507C898305511A6387DC4E897C32BF74CB50BD91F
80810ACBC31DFA9E12A55FD4601D1E997B203C63F718BF28CEB4E9D8F1BBD039
22B6B2E972E019E3BE4C531A389620973544019CC2AB7C9FBD27DC591094F2D9
C4BD0C429CA26887CAC44D0BF7869ADBF35438F827D91621E4BE14E417A26540
645926705008E0472A4311B503B8841099B15FE3B7FE610B0BD1523210D6DE45
BE98CAAE66C7F1C5454A4CABFB2CCCAE24ABAAFB450EFF3E028190B384A923C0
6AF23E354539223B66459F89050644D810C56F1D1EC252F26F1D1F2317550032
108F6C7F7CDF627E9AA73BD00B384EF29D480591BF3708A6AAEB409FFBAB3F53
E0DCC94617E54906930E888D67D47F624E3DD987B302CE8C7C8D23D1C721DEB4
6844FC870EC43D4477D255C6C0B9D406711F065287D94F4903E6368AF3955680
36BF0C35B6987AC5355F0CD89AC69925BC4C2952BEED6E61050B98FB0442FACD
FD6EF6B53E2A395F72962DF10464F09AF405E7D328FD8A88BA8872757DA2F1C3
833F0D0F7DCC805FE350844A9338B2A2CBE139297B48C1966C08B6885979F27C
F5094C441EA3352F545445CCE0E30FC50E2ECE817937721DDD136B4CFB1A883E
40824FB8F83A1BF687F9ABA5C3CD3D50B3F3A7CCF382ABDD53616D7DA206EC3E
067A002B22B051BA91776E11A246E8D94952668080D75EA5F8DD577809024805
1158886833A37A62639AA934E9C9238EB073102A56F1333AC5CA175D0DB36BED
A9EC2AE1F08A022715E609319F591FFCAEFDBECDF3799A32EF90D36702589BCE
4BCE70D68CB97860C620E58F5D02
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.0: CMSY9 003.002
%%Title: CMSY9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY9 known{/CMSY9 findfont dup/UniqueID known{dup
/UniqueID get 5096650 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY9 def
/FontBBox {-29 -958 1146 777 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY9.) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 2 /multiply put
dup 33 /arrowright put
dup 54 /negationslash put
dup 91 /union put
dup 102 /braceleft put
dup 103 /braceright put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A580F0834F28818EBF
F29D3B2C7C9AFD969BA6D3B7429E222AF78F6DE00CE2C8008A5966422936DC5A
DE549B458EB41026E123FE75E703E046F665B7DC78298A145548DEF8D579E008
39279A5208EAF898A357DF3FD9CE4450811F20B454D86B2947BEBB11EABFC62B
187B12458E022CDBAA6EDF4A89D79300F635D8CD973E35FA8D9B1240B3D30D72
4F30444BDF0B51ABA15A181A3196A6CDF9CD1D38D64C83E745A767446641991E
23EAE067609DC2E84B44D923CC98407812813D5AEF0EA21E560B31BD77D735BD
E35EAA564A570DD3294C703E16BB9F251D54407269C8B23DEAD063018D6EB748
4204A415AAC8384025FA922E7074FA7B8A6C31FD3761E7B2737D4D9C9992B7B6
DBD0CFDBD87D42E1A451FC5C7EFAAEC65D10D278470DDF42DFABC836CF15D042
6900E0DCDD36E7153BA186B8358E74F91A1D43D62EB0B821C0E97FE63F1586D0
98F01E8F6B6F2A435343A25CDD80D3AEB42DC8E5AE02F8837B84EE5EB508B02B
6980D2349984FE1A0D3ED12355D556BA483CA078B7921FB336EDAFC22AE05C1C
5614F5025B890009272DA8C838B81913C872A54F7E932237FB1BC2CE5D64CD04
2D320C8E2E610E9EE36EAC7C28C833F8A14048E751B61D0CEB342CBAAB34D104
311B421B8CE4D903D2E2518BA8B734E2637E2CA55426C4A87EEBCE637F8D71F1
54626C52083262A5A9A3B49142948BC1AC0B7698811AE81FC3D3B1C14E6C274E
CFD6C480514F3649D7725A0A14C82C9D537B1C5A9ADC816340B8B4E484AF55AA
905EA936A83FE2BE788D084469008F407447E0077417096333F163CE94CD3098
4B9712EE23120829AE2695EA63975492DB2615214B11C87ED0ADB776ED4BA0B1
40D09D1A617D4F57EE1A9B05C8D5F42AECB9C6AE67757DE6307B1A9C467123DA
773239976AB0EA052B23F263031ACABEC9EEC7A43ACD0DC2D7AD66664FB0D937
6A0F463A173E8B90B2596DD323D2350435D9D31B638112D70492F44769FC0C6B
40A291FE78AA598CAFC19E5AD195BE7264F0EC29305D36C7AB8F2A733797D75D
94C8F7AAFC49C13C108F514745A394F460294C6F3F44162BBFA878F773A5115F
062E934253B786DA2B9A6E8E843E06B97075BE99F21B330D6684998C5C340B72
09D69B655097354CB682D42120ABF5109E5522ABEC94D05E7211DACE8737A1A9
0BD3EC16F48798E67C7C85560D79366504BBFE5F7F5EC1B05B9F68F98149A02E
E53F321C213456D802C01871E9024F965258F71215F40EA71057C15E349F06A3
A016BF1B7E44DC4766FC92EE500EBF7C47D36B1EA34981EE6FE38FF4903466A8
C9020B91CFC731642003AAEB145EC0F13D6281B0838BB4236C220F6F467F7DCB
C79BB9CD5B6A180DD2ED7F94DA6B5CB833E62E898BE832DF601BFBC8148F9430
C8AC459F23EA2536E301C9DFD3FFBAF4D01E7853B60A69B5D012DCC0054C0BA2
1293D3B4EEDF7C5C78118138544A60FB1A500F72BA39E63EF5D97D68369850E6
9B6336DA577128DE68FEB71877360D97204B5F3C06E808BF95AA6D6013524BCC
85CBA9FD2CFEF383645E7E960E7AD471A6A3B8B8C3A0A0B8464836499309D82F
52004FCDB68997BAD9E4B5B881634FE1213283B6B19308BB67F2364F7ECD5534
467EF07CBE71989FFCBC6224417C0710EB3EF2676B9DE846E7FFB1AA6608EC9A
76C31724A19ABB2AD08CC102F5DE8E4E513F90A53F06D440A66B000CCAF6AD12
6F4B161B56FA5FAED65A24FA183B84F4B45407AA69624068EE0E3E47BBE973CA
C72137823F1D676131C8CD5070092CD73FC2A93E0480310E21CFB14C031206AB
411694AFE7B639ACF35C28705A115E98BC69C66F6C58E9E79902453798D76267
29B780AFB6B895B34CBEA51530E8300569EE4D500527BA294282FED81F730A46
6ED19AA5AD45852739882216EE937FC45D75116BBDBA6FF4B4423B398E383CCD
A7D705B8BA85076133E823300C3EFC9EB9399575F5F6BBF868265304B299AD77
B6B4EEA04C83E163E8CE2BFACA65F9DAAE3AD2B0F8DA1F986E6A12DDB2AFACD2
217E37B093F46FF3E20E587A9490401C2833F5844763FE2C528E151214E8CA95
018E1D8D47C9EB5FB4F0EA2A6D064680DEFD2C5489298F83B58EA7FA8CB019E0
671028C59C3E007DD86CD247889ECFA6AD6DA2433B02180DCE6ECF9E495D0976
D063A61B007233DED5E3F351D790F26D4011582735A69F37E7CCBB0AF254B925
B378522B748BD9BF152E2187DEA12BB168C42AD8D67D18567393B35DB2AD8403
5A7093EB59FC276525B8796FE81944F7F03349BB077110E182A61754ADECECD8
A5255DBADB523F3DC251A7D97F17DC76281CC632FAEB382A972D60A15FDDA57E
2F42AA338D889B47F6A3C1FADAFA8D11D63EF8D0C8C0FCE61FBD8AD34EB8DB3B
722BD86CE5B1268F704ACE82A39466DC2D96C9849B9422567FA5E728B17FAF61
59A77E9B3289DB807DF54D076139E3DFE176C3131FA4540C1542AE5AD6200FCD
B92D5DAA77DD4D3022049B6EA2A037FE96E0CEBB1608C663F1373246FA74D70A
BAE7BD37F3AC23E003204FA8270B4514DE1FDC5401B69CBC98A67A5CAB5505F2
87C242B6ECC86E88EEF44B9C79DA5F88CFADAE8B4CF437A7CBD5E0C01A9BC479
E92EA48C808820C567E74D62ED7597FCEC53DE9A0B3EBB9A3FB50AEACAB82BF9
2AA56D029357AAE016582592972ED01C0ADE565E87607F17BCF4983E3321F606
ED664B9516D404B277C2C1B0F873D469D64A9744D9C1897125FD471E71BE060B
A3A617DC8D812E184664BD83EC74EEB5197611380F2D859E1A61A14404493D04
B5537C04541E557CB5039905F37E72B762EBD2321633E12C38C409338AD5AAD3
1A507BB2B8F5235F0614D0CEC2BE44CAD504C9B2CD3E45437A493A33B9BF8A1C
3FE66B1E673449A54E8E3C3470688E94EE4404C888583F7C96B43A592D586D25
8AC1F206EE5FBF3AFF7EDF9BA91EEC6BABD573D455E0AD6802E7E23A662D4F12
FDDA00EA054CD331DF86C099C4BE8AB4EAF5D8EC1BFEFCF50302BE61E6FF26D8
1E88C544570E8D6F7D875466C70AA91D6CCD4DF4BBA34FC67191D1692D3FB76A
66F114152956A5E38345E7495BEB1A389B7D0A59624ABA784F77C1BF7728E556
F9D97D71858D61624C22C6914A3A995BD75922A2C37EF2CA91F923A4561CD3D5
2DCEACD9C3A65A9FAFFFA4822E79D6D89D6366DA6362DB16FF061840582DA35D
E4EE8308040C2DA5F298944EED470D6E4E1FF58DFDDA96C20C85E2DF2652E12B
2EFB8F890D301E8CE777678FA786E552A62A60DFC369AF4BDC069F5457FC86F5
1FB1A38A2222EEE86FE1AC9A8227663AE33217C1F381115CCD04D2F381A27E97
36D356DC64615AD63E1952B37AD4F967317D76A6DEF039CE8446AA634086BFB7
7B0B34F595B61ACEB346F51ED10ADDB7B852B5B2BCFE416D0435A7CAA4C9D9A6
152D9AD938F39E9756AC752F1604D884992BAD768C720C45479F5AD8E53A4832
1B44D6109DE4460A662DA6081465E2BE02ACBEB52259E046767DA24E1416FF44
D5AA1D303CC4249510D703CC6CD0FD7DDB078A91089FD86ACE1721F875F019B9
82D7C5B2530567F2306F47DE90EADDCD12AA1C693B1982827DC36A74C86474B7
0A8A2E084CA403AF654E2F8488806B943E38ABF544ECD45FECDC441DD970B180
FF3FFF1A50D5E22216B240A527F95DA1E43770A3867F225DD2A8AF01A965E06E
A063997C4CDC0B16B52F9B9C8B0DBA94F88F26A7A01E596DCF8F33DA3DA5B02D
2ACF771F25A1372F521A80B93DB0337886FCAC0A2E8FAE0D7E1E0C31EB43AE3D
B4C2020F322A9857A9EADFA7782CA70DE7421B9A83DE1873EED8D096701370B7
7EC33B9C104E9CC16DF8C80ED24D1F91677E355DF037621ABBB75E09ACDBEB82
30F1AFB82FAEC4D9E2DA93303F72C1078679EDDA35ABF2AB38DFF091AEB273CC
5A7B29C0164977160CA75F62BC20474C7C1F127AE7E4DE865FBCEF852698AB80
B61340CAB6F86017FEF570104E46B6FB3320E78D387CC58DF1C4FAD8570C0126
B6F54AB5BCD47904A9255366AC9C88576456D3CF605822269CC65979EC3CC740
AE3D09257BA3AC7A364A7F5EECA3E658AA20B53423553C416D98FD8100D80A30
A1B19F029B7473070D7C60CDE51BBEEFD2B45B1C82F4FE32A5BB6BB5BC32BBB8
F600ABE893B83B806A5435AE2B40E5CEA9068C6ABBCE73C9B3533520439F28F5
E171DB1DD90B2EC04A1F36767B2B97D4EC0FBF217D4E80ADA5383BADCD7E066F
5F4B23738A14F19AC7D765119AAC9AB6CD0A8AD4EAF8955CB9F5BDB0156CACFF
236D24E8A12AEBA549FAA9D7053D10AB7094B5D9B86FC7375E245EA8D7FC64B9
859A1A37C006E0449AA8DB8B89730348C71C7E014A2EF8D871AAA856407C33C9
392720173DA60850938D0537564455C3957631AC8F8C0B3B29BF6163828796E6
0944C3000B990715188203B32BC4E3FCDF173A4A9C78753AB7D76BB9A4C2DA4E
3EC638753D6FF6356EBB07D0A9E8D3F50EA5451FB6C836B9E5EBB8F1331C8CA0
B0CD271AF316502CBE87F652B5ACCD43176AAA32C6530C69E77E3C85DA496F3C
06980ACA739DECB5D986622AD81F204579218660EA791774C2D11878DE23F858
BBC4ABC7EBA01B7FEBB32BC914FEA8E5720731FD43F8A5CC53954D13455827EE
9C7BADAE8322E77EE7413D6C86E6D378FF8044F50F529E765A1CAC29E8B1D91E
CD40F70F2D4890E0FD04502933212D5AB176DB143831958605C1667B8841E770
CB4D513DF0C3182C23CA653A7A714B2A8DE29D6B203F5A9481E0CF3FF073FC6F
476B0B205136DA43650A940035A970584DD7D06B7CDA8E960186158B75FE3917
9B1D0FFE45EE1606C875DF635B80F5A9E5B67A6ED748F52A53A710A45AC20BCF
FC96755E685A3B0712D5E09D860986C61C631A8D2A505C57D57C1D4AE78C552C
DC5C9EE15B82A4C3020331B78FDEFDE53974C391F375E8118EB7B2D23DFA3F15
389043EB6F33842C82B896073760197B13D3DAC172D77779DF517AE31BAC43BF
5BD6F75B59AAA59C7EB81B776FADB720282DC06BBC9C33AF5AC0BC59F6A0044E
3898A4B5868EF32BC4F980DD863E8EDF6DE3E753A7B3E39F8E8BCB3D3BF14EDE
3395E73BD07440FCE88FB28A96878E823C1E5519650F2054EC2CF733EB8AEB0D
510E5659A3179C3FA8E31EED621BE0EA648D76C370C3CBD8043BE206F28699D7
5871DA483AA5D3580CD55902C85DB9EF5CF5D3191738FE64DB42410F5AB8ACFC
CE07E524BECA5633B082F4793002A4A7215AD1BA31159A30D72AC60EDD0B2BAF
73C9934C85C5372B47BCD3ECEE463CADC05CE8352EC1399ABE2465AA53E5965E
79400336B1F5D1401EE2DA5807F9701D1086DE505F6AD4E64DD4F3E5E90CD64D
FDD25E6FA03B679597CFB8C5C1F03641CEB7B9B40787E70BC6B063621382E3D5
1287365426E44A2EA208C26155CDF782F404CA7B3C6D379103EF4A51CA3F1343
22B04A0B55CE5A7633175838B9E50480E9B80446CD3B541362E7A10BB3C58A42
88C0FF580B4A0296073F5B6505E4FCCA5D4BA2F7E8D59BB04EC9ED4E664BC2BB
8754777594DB26DA0985663D321CCD13FB261BE8A771470DDDA783493E452A87
D0AD01AFF8EDCB7BB159F1408FBCC52F126C46234CE6BEF241B49472102598D6
91FF2DCBA2CD0E6658A61DB3591EA02E4DF202954B655C5A3C34B14CB60CF9C9
2A6683AB282DFD79B33FF3A6AA524582F174F11A5568159083496B242ACD2770
0ACE8473D363AC11250E5DCDCD3CB2281B71FCEB8AAC1367D0714796AF3BF01E
80BD4B05A0A45E6CFA6C672850B9DF113F5EB15923ED885A0E4488D4914B62A2
FAFB6A63F8AF0CF0DA498E1BA68C4150B6E59CBA80BD17026FA09920006D2075
BC6F1010D0A10648A20D8ABF8137BFCD6A5DB3606F6B3CA51E8A4645D32E5966
6DFF7537F65DA4268A86BCA5791C21F5FA9F4C2F1F6C1AFC4D4BADFA63609C4F
5F5158608E6FFD9C5BF00646C3AAB983DDA5E37A9C2EA81796B161A06201FB6F
8EACE87008EE7A008BFBA69AAC04D73A8C0447FADA0249D8861ED405537E23E7
BE68C4349FD64A14E3A53D6C6484E704BE4AD5FA0269F56D3B752A070D9872FD
A5CEE543B413F13CC4CFABCE885BA4533EA0969FDADC14DE6846B330552CFD60
A75BC8C9DDA76102E48DB6B81975A1F3FBE182CEF410841CC6164AFA0CE51FD6
8E8E6F0971277052E21126909B5EE51508306B886E945C11DFFE1C91BD0D79E4
554CC7D6A774C9B98610A1E49C3326D62F157CA9D89B56699F32DBB9D49C716D
CBDEC052133F8E18E8F3D7A59008398AF3E4E1192CFFE4D0B7D2ECC8DE2ABC1D
4DF7F2EA5EC0DD756CB2FF9F95FF10E506463D3037BABD221C08506FA603DE1C
DC45A5998921C4023E501DBA494C1F41C0955A761AC3D5B13A88EC4F0BF40756
BAE8645EA76027B8AF74726521DC129B9AED4BAE67A511EA56EE9D0D8D30C7F6
FA8BB890375A263A0BC4E9CBBBB8F8F8613A43B10E964F8CBD6BAA2B0BAA70C4
4CFAF6EBF4882B610AE13689823D37B046FD26DA85BD96B896CBDAB6662573D0
2CB87D45A86A016146513441BF7A748F1E9C2AC7172460EA628BFB22F9797905
F6DF6749F13C7F234A2CE4829D41E0F53EF3C5F52165297AAC4B5AF4747A9F53
60370B4C0110DBB42C25308F489A856B6664371FC2126BAF4710790021255653
CACDE1B9ED6AF5C696C3D8BEA4698DD9045B3004A5C4C03EA994A5445C9D4EB9
865266850047E28F2D82A08617E9283FE637CFAE4F7F261CC2D616A8C746EF23
7360553A6B434201944C04B1522533C61F615A20BA3678AF8D4BAD1FB548D82C
72D41699FB96EF40ABBABDEE633F05B4445BFC4E6E661DCBC8EC473BD2BBAF7F
75F7FC86CC7B1F3A2343EDEDF6B5F7E98A0BC4443E21611F4D807FE7F597A37A
A4DAF8A8E6D04FEFB320E0E25C61E156A72A3E4A69EDA04B0E3B72B69FC19E63
AA33A682663A8F37F4FFC1533CCA2A80DAA675DD723A7E13D9DAE3BB0F5F3E07
99BAB9B9BCFB29B73FC76EFA02F4F632690651DAAEC2B3688B636F0FCB156047
F8EF7239716BE5D3DB2FD1DAEEC11DC2D65CFBEDC1C950CA737A04FCCCA509C4
7E47664E160322366F70CCC641B9B49192AB839E0AC609AB2FDD3783095293C3
11C56740FB50D23AE9FEAF66DB13F35367B562F15161AA270EE44713881B2387
7889FD10198AD4D750390811714DAE7A8DC6F5770224E93408F8CCD4F8712A9B
3C583C983D98CCA7FF9DDDEF8AFA292781B1D7089336CA631413EA0728353E8B
3650EDED7ABB6E5DB5B85014A3A9C4C76EBB664A5B3E0F3CB2ECFBB6294F5C4F
69EA3AC8C071B122B129A28E04FE989DA9670EB6246806A516517DDBC52DC001
4C027D51EF1F98506F21E63D57FEF267B913F1ED4770D892239222F3A9035C35
FFA38D1AF3ED9A8C02235D7422695D30A2F801389DADF34CDC489EEB38089B6B
026D884EE1C24FE5785C383B988FFFEB5459A1644CA44D353503AE117E87F956
393DEF6C47D4E1C5B1A33835C9B8E1B98809DFEE43C4D6DBEF1C2B1ADE4B8F13
3B5D224C25927433D5738B0FE019CB88B1F373E4AC2BDB5BD86887FCFC55DA94
E610926C5F6FE954E0D7B1D35B1E1D04A56EF39F058F7945E5E28E5D55D65251
15766372E6F0277D8600B8F007005FB62AD3C3AE43403CEB8CEDE1268161B9A0
3DDFFA68654EC7DF5F7070232519BFC2C9C4031CF24EAF36298E46CFC0018ABB
573A78C271861565CA746D4F1667F2CC880FBCDAE2DFCF164BB944C5F227B5BB
96526768BA33610DA9AFCC96BB51D59C946E05361A8B2CBC0F420209A2ED5CD0
1ACC7E1D0401A7FCD4D30B20DAAA10AA02B9A6E6EEEC07FD93D19F9C0A62F656
94328781509A5C4F020EF1D81AA3D7E7FF5CF266C34948AFDF91CEA5FD433B46
0F57BF6F0A58B1500F615B1B8F9B04215F91ACEC454312EC1DCE0B1E40B05714
39E5AF3F9C520E811EDED8DA4E014B8A55424EF20F1E31501B20811C18584A97
96D33103F21E6C426CC298540C1441477B022F220DC7C268E27CEF100ABB401A
60B1A27DA0BDBE5ABED44A6F0B91F9110E17AA50A7E01776A21B4278637189D4
5A4CBFE1457827EB635BFB6D5C8C66C3D184704C86343AC38AE8AC2D37CE3EF0
1CD10EBE04BE03C483F5F7900AAFC2D7B2C5B3501EBE5CF18D4FCFA3EB853FE4
83CEBA812D6FD89110D4BCCC2DCF4786269F91DE2398A718BC27A0E73479B7FA
6F9210A0E46CBFEC5B350E7405B552FAF8D2BE2AEFAC2EBC976AF498647623C4
A160931AB3C903D18C347107EE3021D2EDD1F12AC828705FC8D29EF512047743
04B295961BACD48F1A733F9E594B2B3C2835CF061B079BA8C84593790963B332
EAABD9C056D480A608D9B9C78700269AD78F5EF96C85EE47CD29692D36CEEA3B
C2A794E9C99B833D09CCF810D28F6EDE42EFA953D19B83EC24060AE2D76C950D
20B0DF8B0EE21ADC636C614E285ECD863C3DEE04E287E873FAA7E4E790E36211
482E9053C8DD3A76066E4BEEA252CEF7948B946E0CB65D0AA93A7FB6D95C1325
D32A886036A6197C6756E6751117FC17C69F450FE3B8D19EAA1D35BAA1D39E52
278437BC9E1202ABCDA336723DB050C84B1D7CFE465E576A3C6802BB01A242E3
3439FCA9C9A086862903F78553E929ECECDB2018291CCBDF3AC0316FE6622ECE
B154CEF7A982B526A91505A0D99E2DD284A1D0B35934F0F6A881CC0A9F62C46E
FC53453EDF3A4128E92369D162054908403FE24CD01BC8C9EB41D72423174949
B0FF33D6DEEFC0D87B10588C8EEE7F663287618364E0DB16D149693BA907D72E
1E95644E619B1400F9F14604CFF7C5C33A6428BA4C72331BCFDA9608CA076189
38DBB346D728556B4481C7F787615F6E205887018204095AA92F9F0E3093E0FD
563E43F34B88DBC2FE388518ADCC09C72F42440E83EDCE5BF05E02B38A4ABB15
C60403DF77CE468F9CE2D4482712B32C5BE6CB7F2FCF7229655CEDC28005291E
4D768B63A6BE0019F2C347677A80B4D2CCFF02BB3564E5110F68B4934D5390A6
343A2968EE9A89EDCC3589DD735D19149114134BFB10D1121BBCE354C2EA07DD
E9C877EDD20124B70D7D4E43F53A2EA46EA708D9DFCE6F05EC70F10932544D4E
CFF019F54BE82679736A242D74DFE11F42BE91E4B45AD69E4A5E6AE25970420A
BADAD128CF77682ED224963DEF5CB62A0A756246139D78F0C516F0E6694D1693
C6CCACB54C64F581CD9E3590D2EC1D86A8644E6C8F7E81D8E1A4201A5E2B07BD
227CFE5E0209862A27B4BF5BFE8C5B70986CCC77E61584CBFF5B313664708CF6
09FFDD44F09B38EAE572E2718B122B40769C4B8DBE0EBE1BDD30F3EA787047CF
6E6253225878FAEA4AA46D25AFC94CC20C5C1BD48F0979C8C064B8086ACD9387
0C8CF9F792E5FADBC42102407E48B1775D732C7EC9BEB246DB3A4D52A7B7E502
205ECDA1DE2F3327738B09F45991D7947BBF5107686D628D9232CA6D3604EF44
D0B5FFB18B03C4CF89F3F4B4D4139FB8EF102129681EB8806D9308CDC67D2CC1
9B36434BB675AC8CCC44A7C6B30BDEA491B31907303ADAE35A8998BEBC6B55BB
17D7F50E743E1B57E0708F7F3343F73DA48AAB91FD469655BBB8A1CF3765F925
B778FCE8B42D0793C6B310E9C655B50DE20B42A1D898A132770FBE75F7B2E39C
F8A6AAF86E57A8080FE0E1DF52A9887BB86E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.0: CMR9 003.002
%%Title: CMR9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR9 known{/CMR9 findfont dup/UniqueID known{dup
/UniqueID get 5000792 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR9 def
/FontBBox {-39 -250 1036 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR9.) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 14 /ffi put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 90 /Z put
dup 92 /quotedblleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 126 /tilde put
dup 127 /dieresis put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9AF72336CC4AD340
15A449513D5F74BFB9A68ABC471020464E3E6E33008238B123DEDE18557D712E
ED5223722892A4DAC477120B8C9F3FE3FD334EACD3E8AABDC3C967C61FF003B4
B10C56D6A490CE9594D57A2D431B9E5E10FE3D8832E227A7087611431ABCD029
85F4865E17E17F8CFBD2CADC97E0A8820E3ACEC873F31464466A9545E967E53C
DBDDB8478E69063FBB891566BAF88B7660A4405B16834761F041CCF7650AF955
F9E853AA9F5F4382E1FE7D0C5BB4023818A2383F91249D48CE021250EC9EEB1D
2835E18FB73026250B32A8849067D5E2258797C917F998F2D4121D96560C5FB5
B5D3471216639A8671B6DFAC5E3554EC36D9A72518525A795590C74DD70DA3A7
78BFC43E51D6F2BA52F17D4DD00D389D3983EC54912AFF73684A8A7E345537B7
E62361C04A47859DA084BC72EA53512DC54132EB2EE671793603015652EAFDE3
41C4B6B679BD60AEC5153EA0D2200CB1D097DAD770F5F31E6FC475A225995277
B867B731D5401E2D02B85BA85158C80FF7E2BBCC42B98AC867E67D25DB656072
55A0D32AB7AA483A5A9686CEA4E2B3031D90D84DB3E2DEE7706C91BA81CB8DAA
700E5F61E07D6998C9552C81B66FD10A10033D49EF3BCB0FF22ED0A3737523C9
8F851C61C4BF8A213BF6EC70C956AE48B5BD276CC0437C72BF6515B10739919A
F00F6ADD2798CB211668842349171A5AEB0664D2C44397E55A4A9EBDF54A3EF4
FBBCDAD9DAEF4B0CAEF7112FA828F2F8D9F633D37E5516AB5ECEA87342EF8DC4
3A50548490F5BC9A8A1F98AC7AEAD9D913BFA10CA86D73AEB5BACC1FEEFDCC15
B3655522CCA2C772E902FAB2A6FC153597D52763EB44AB7489FF061F7F58E8F2
AEAAF4D17F36CBFC00D3C653F335D14240C87DB4339DA9D30A5BD1F502BC9013
461B9DB2FBEEC01BB18990439A0E9CA6576BC9CF6B1A3DB9386C4A5D4AA6A5DC
CFA45FB75F22E10ECB72565DB441A194902C91427B4F676E531C661F7A2C3C85
CD534D1C89B6779B2EDC8E44667B992C20C70B663BFBF680A6CF4383EB7CA26C
4D1F06B5EF4025BBE65795F1EDB5CCB97050872D6C07BC2974F905ACDB7A765F
291365D6C8152153E7F017A25FB4476C60FD9EAF9A121633DBEAC32F62850223
D6418566AB350F90F4B35F19598478F76B63E347D4C61E203D4DB8ECB9889181
C387F4B663A502C638761D2782BB96EAC81A0108D7BD6938F67FEBB69218D115
D8E89CFABCE15C6ACC7FEB983332A51A6A73CF4E341574F366713D7FB29956D9
9BF238A87483D37E526A2EA2F101EDD34E34CB92730DCA7235AA0027189BE405
2DAB4AA021A30C28B26C50808E1E965C02F6212EC7C72F5683339425A7739380
A422E6191ED8453AF0CAAA424AE44DFA7CC5C2F6EAA8D73A5101D8E9517DBCFB
2858D0E8ECB7DC430EF23A9E4428CB7DED8D035D6050251AC101A2D0E884721E
2F21E573F948048BB8FF888911C508CC198BD750083B339500C426AFCD5634A6
AAAC1C7E91249667B231BBFC64B4317192FE07FE9DA0DDB5E517D097AAE46577
9555F29D45C67CDE9812CAD03F220B20519F2FF32DCA56A554D4296FE2D1F3FB
B209B5270E0E695EA5A0EF1144957CE045881AEB8D05D72CE57F4D34617AED67
0D3AF0472CD8D60933651626550366E300E72A9C89ACD475C2E2ED9BD44B472D
9DAFE943F8E02A6DC38E447EED964624C37C3130E48211CA279BB6A0BD59466B
42F3D89B5746F29E084E22CF58395AF0F29E55113F3A3F2F52CB3A6DF3D026D0
C81754B8E2E4A15F6943BE9D0087D5166060734FD07C4C57D7C7D90E8C9C1F35
623CEEE3ABAE75E1A18A1E3B50B7266BD2D8E812CFEB4A46B856885B185640D6
B9C22179551002B94282F57FB433B7FF157D2F0D240836B72AF4A331668AE5D4
E6B85415F4E8B9D2F9AF90FAFAA0A3866DF417CA5A31348CF9B41B8F5F4D2F97
CCF7ADE851B5E2E2F6E319AAF5792EBB9DA2C6AA8B73D889F3CDAA42932CDA7D
07A7E59183CD89520DDFC36E5D513BFD8AD0886046585F29B4D7F42CC0C27AA7
53915AB1167D292FE91957E94A57FEE2D49C20C9070ECD736BDEE0F046E60350
EA539DC298156A4E0D019E7D481FDDA6861E20678516AB80ABEC1F09B126BCB9
52E8272A06BB6DD87ACFC423B4A4FC9A3DC8DCAEBB807C5F748F1FF8B17B8B88
F426206BF1B7B7D239D26BC3CF0776C467A98CFBBCA5FB6145D5900137ED19DC
D002F10704AA680EC753C22E29AAB15712EF22AF73D80820A1EEE953463D4EA3
81FAF99518D4FD0F862A324FC44C4B9542A92C5B60CC983CC8F647CE5BDB4D6D
B92B380E0E5F7208A9CD91FA9A469548162C761C1BA05AC9D60B766764D821B6
B4E17F56CE455F06EA1EE2D38FE47581746C4C5FBA63AEE2B58E877D1A8FA83A
31C972D53B64E92EEEA147426A92CFBF76FC614119C6E9C6476FD6A069C803BF
E949FBE50B5AB1F1463F9747E8D353F7BBD991C4F90F920BC9407D8E24720293
846D052214E60390C3CB926D38C83AF697425D80C2B4FC4706615B905516B733
46ACA325CEA68FB21B2D17CF0B68BA4DF249368625CF83441EDBF2B86C957C1E
44CD722BD2537CE84FBA07EC7AE15C840041B9F7F3040072E6084CD55B301C08
A64A53BD4D3DC30DCAC6C152F316ABC59B8EE978793EBD568849DCC2A75A495A
BC83470D503F8E389F54B4A4A31624E83C601B43AC1E52CB811FAA7CA6B644A5
1AE0BFD4FC774C9C9DFC2769ABFA9C83F900BE2DD4010416053A1D4874E6ECF4
D86E44B4CAB15D53E5630C144B0C15B58DAAD785BA298B1893D1B09BA5D40344
6678FD2D17FF6674433C976D6DAC659175CED26139967C9B2B9CFFD78FC2570A
E5142141C2888DBF2DC8503F9137CE7CB21A1EBC2D65BF33FCEFBC85C9CB736E
24E8595CE934AB032CC70BD6A3B0F3BDBFBBE185512FDB7BE3D4A6620478453E
75D044BF770B44C9741E31985E6DAF5A318D7BED12B02A4BCFE60D25EF12843D
EFC9BAE2A3F2EFAD66D7858E83EB46BB09D2FF8AE9C43844A7001C86ED97AF51
C511E3A89A1BE349FF5215D1A57843EF51456B9838133846F19BE79AAA5C1AB0
5F400E5E8E7B0BF96EFCA3B8F0894BE589F2C9FB6C97BD16D38F0A237CD4F034
099C41F85C7E2C7BEC8E02C4F327306A53B4B48B26A8926670CEEF96F6DF2281
7C2DAD99EF8B81BBB777227C2475AE7400DC393D9C0445E925DB1E955950F7AE
53E9AC4306794239346A419F7B5DF4168382EF5956B81F83BD4BB7635B3BCC84
7D84D05AEDC02D14675D777CD19B08124001A4F4EA96990D96000C082A12F00F
7FEF793A7FA69D56D3A38D012168C5458B667190AFE80E02C816CAFF0A71953C
D80B085CD286027E2FDBB05452AA762FD7C813B2E19A79C74190E04E746C4933
CE1E300CAF5DD53B08110509BDA404EF07FA1BC5224BF1205DE8E0C3276A13DD
866675103B960C5F36644F96B4FAC16F5D6E91F74629B318FCCC8E8CB13EB76B
B0B7B90718D913A52A04732EA3667674994A325A7973C601A7DDD50F658E0826
ACB8E53D4914B0274AED98D7BC3B2B7F9D48A7ECC2F8ABEE05CF2C4F2B90360B
B7DF779EAF3E103D1D83EDBE32DDA873768D8C37DC10A5354A94B4153049AD64
FF3E0BB51AB91D7C0B4134D8731CD0270DAAF19BED9EAD800A14B65B68EEE89B
40DD624111670DDC7C030DEFE0D1B96420E249332445C155BA96231C88E70643
D526BDF3CA1E05FEE72CE2B881CFC01ED780C10E89F0828AD55FE29043BC56E8
2750A6DD15AADD54492F6092618F4CC6A31766B17FC60766D18C307EFC9BB787
39047DAD6B38419EFBA46B4E2C932F97451FE78AD75FA90DE409FC6DD46585D2
1941F5ED47A8FBAEF5A917A240959E8D9F9917DEA3247D9CAE6BF7A88DB4C4A4
F9F5A6DCE542420A032FF3392FE0F3357B51F884D6181583A554F75B1DF192E9
253CC828FF06B0D992D5316435980B044BB191508C7C45CD90F797F88856424B
14A5707459C50EDCF3E3D8D1667AAA83015405354CE744C66D9A5728F29E0085
6DBF740717FA0799E3BCC4ED7841588B496A5E549B953A7FD288B4A045DB611E
E3B2F35963FF18ACCB1C968BEEA2CBF52B3999AAF89A05320BB2E97F52CFE06B
9F10E3A79865A3059A957F97972D80ADF678A36E2B586C101FC6AFA4D137C13E
EE7102C9B8EF78CB057F8B7476F146E8FF5C897FD5503DD198128CFF7B5FB339
FAD0AF0EA967F77B07B367A4AC9F668F8BED99B98E87FAC750EE045602D76C3F
289FC9D97694C96AAC0AD1BD3FA94DF2CBCEA24B40F47B9B59E54EECEE7AC4C3
A3F5D19160E4C1EA830D57FBE10D8D46AC5CA0260F22FAA45236F0F542BEA9C5
5A88F878F68B36114E0573900C65E305462B22A3429A17C7A567694414DDDA46
5F30542B8FD4F00F6C295B2E8D3A986B953D96822DB2ECD48E8BB1763434E652
152EF3717F5E7FA10FF0B01D9F64E22C5DBD7254629658887BACEC0ABDE972EE
67299FB84A05B3EFE22B6976DB4CCA384232DDAE38C31623A4E39EA2E82C1EA3
BBB68F1A7DBF405DEC37CB7203A895C36A44BD2D63F45B3888AF91D37B510A59
3C921BB44DA620892AD87B665F69F6FA510B071ECC403CB2BE2F54B3969C9E88
713244BC97C1466DA8216DA7600C221E7E7EF5C789D2E12B36422023A03E11BF
2790FD6062FE6BF62F5010A92F0A104B76E255A0975E04F6F20F760881BDA7F5
D834D1D328B6EC19AA7D5E5678A84C74C82553DBE8BB5765E84F5A8789032143
6020940B4B8D45FC3433D356E28C25F42D0C19F911213D85951B2B00D01B77BB
A4C72E964F9D95422BEDE582A05CD52E03D28A996E6CC8FCD910CBAB728073F9
F9FAEED5470FFA55930447C5BA816F826F983D53EC9941EC8364B3060FD74C95
26D4F5CA753B574FD2FA4D1D333785241D8741B79E628BC852FDC35478C5ED9A
C1BE88C5EE7302816E65C12B58EA16FEDD4672EB3E24B6EDAD5DCE263BA8A970
350B651E5A9F3C281D85BC3F44EADD0D93402E36489BA5185E7D388974B0B700
70575188BB610CCA20F081E2CBDA13DCC6F72567962ADB342E02C1E763B673C5
F7384E24C6E1730A3A790D690A2103AEF88E0C1D4480DC9B25E5C8C9E1919C95
F83320179B4C7C4A26D559BFB24D7D596FB73758C9990C451E77FCDDD17763B8
9C30A9534E3CB6680D3D419D4B70B0B0A0D160FCCDE169714E373F65B7144CC2
DB9A44E041211E1517D3148E65A2486CBE5E74E625261CCF65392FB4F3091473
F9E8DF327D59A58558E5C9F7190DB577D5DC658F5E36258291C708B3D224653D
064BB6079F91293FC733710893AD1C96169B30CBFE4E9D52E7EFAE4AFEE68FEF
1AFD5E7E9DFCE8DE332B0FDC0514F9B3090AC85BBFB527FD8034DD33E9576325
A8769AE09AF1BA792447DDD932B98FC9486B39E0B04DDB3EFB7A30DA0940B33E
E27490E0E841E87B1C90E5248A91742ABEDC10F43A8AF0F9C5B4A4930B1AADAF
01874B9AC3B8D0DBECCDA6CD7E96471FAA15CB7F8A599C5746327CE392224C3C
40BD60AF97BCA6FF6FCAB2FEA114D7300B89E91C3BC92D5B3E2C83BB37992D8C
72F661EFD0AA034C738C019DFB79BF40651A1A34BC1EB9F5AAF58F8B3DA32645
24AFF8636486F08BC21533B5FF7391B0679A78DFDCB03DAF6BB7475A1D51DAC1
EE4BE9B986655D1FDB6936445EF99B58B303FE79F11275EEA96A9F6808EA8775
D873D1052FAC93769789C700F20EB2ED6D15676F6E563A769CA9298E463FC311
83281483B1C953370D196727A6A0E66D32D9480AB1B6DCA77868C1A2D5DB6483
5F31EB6B18EEFEF1CDC31533E69B0AFC6B30FC9912DC89BAAEEADC30BE14F448
1A6B70D36A5D9B01799BEEA686066114910842D022EB464A9A1E8F0A5628BA69
AA9A1925CCADD44703BC67A89F3B48E4680726DC4360274185CF3C8AB747A8FC
4B928AD62B092EFE48B01E33ED756DB696171FDB775396BBA138E056F71EDAE3
7A1E4CC272B8418114B0E81DE0BC43DB3C133167344488820A92DF10FFA26FB9
65FCA2C87D302E956DE6B4FE145145440C83DB43A68F8B29A592B127BDF49063
B7F11E155CD4CAE305525BEA56B7C412A6260426407BD892A3F2B444AC3421E6
FB6E6425EB5C3053C5644666B80405530FA0012B54557327C98E0F4F064099A6
4ACAAFC1870359C1B6FBE7606BB8A26026AE20C212210449905E628AF1B20490
8CE908B7EF3E3DB551C85AEB0F7FEB6A8D215B97998E5DD9C7CCFB2A9402B8B6
1770D4023777D4B45A73F471355353412C51D4CE71FAD1E0AFBD87B5F86307F3
10D0B94F1194EFFB64AD5DA54A4200490F609CA8B912E149F8217ABB1E9EBB3B
C4470E7365CF5E1E761AA1945044B225BD53D142F6588C50E0644740F7DD55E4
8F73201E5354A8BC78339211AFC4935F44701FBA043AAC4BA4698E9D7700029A
C79F992F62627C91EB855F64C4B251718FDA71EDAF082A0C7B00550949D617A0
7071FB14F05620CCF2180941341D8E60FC88823438FD728A4042AFA8B853107F
852F631518B61B234565291B5D5B89DA818DEE3AE3B68A2869DFA63255CC882C
3B16BBA08FCE3632E57FF7A07F857A1F0FDCADAB39D77960BD827CCC8661A997
648BF5BEBC0FD2286C2A112A8DEB9CCB6330A049170D5D68EEEEA011D3EF3EBD
855236B9380087CBBB6BE24191F728B7EAC5B50F7A547AA0989B7C7D3437DBCE
1669341264E290646F2C8C5A3ACAAC7CB63DC692FAAE13E9B40E8BD39FE16A0C
1660CE66872D061056C04DDDC265C024BEF8B7E3C3AEE76FE5C9702002C28BE0
B180295EE00E567FA2E5CD1638226D24A7C732E1BD8103B476EF5702768689C7
D4FCD47F2AB94A2B1FBAE6ABF87B09E7713C773FB65CA83F7318035B332B9F99
24A2C8897527021321D003AAD7C273E4BFA2710B9BB26C2CFD3D9A5D7ED1096C
552D50028AE2476FCD6D12A5D0A897521313ED1A3A8456A70C16EAA50A3E6733
6DC89FEC56AB54A579EF264377A103939D5EE00A90B4F2206D0023AF9491FBE0
800C6540FC945199E20E945F46CEEA2E885F6800B9DF042BCEF4291A4B1A62C8
6A7ACFF872B25FA3AE69E0093F3D0FF13A3313430C06F1AF94D500431566F659
E8C859A5F80F5BD2E85C8E32603D3745628E8FE6FBC50FA68F9C3811A2BEFEA4
5852CAE2AE5AAD3230ED050593BAD0A9581EB7B327C6916B8FC348F4C23E6FA2
00FA28AAACCB3091C1D83F7BB88672A53A2EA3B8C7C24374E400C57F0F01019F
E52D5C47F389D4C9AF126F4080F9AB8D1C8F470932BBECCEC72A9796F6E965A4
82057DDB43D68298A00880D4C2E2496F26F015FD83C5549215753459310339B7
6B2961EEEE74DA31FEC8E2BDDA42D4080A32372AC372524BDDA580EF6634ACE3
128C69D04D890DCA337212B109585C665AA83EFE47D5BABC2627A86EAD11BF7D
744176652C7F9497785A7A06A994ED8414BBE8B26E74D48CB83FA24AAFBDD507
84A90195EA3D77BCE8C2BEDDD1DC52E8164DF15D65B916EBDF3A8A76849653DF
AE3CAF9561AF3B705F75B9E5DFD6758DB65A2FD54683759912E0D0035CFBCD86
5D207125947C3797DDDDF27B0F05D69411E79DF1586378263BE1BFB9863BF9B1
B2CE4EAEDABE212A040FCA30A5AC8F758F4B543CA539858D7D2DA5E8D4AE8343
DA1C74EFA3207BFD3AAF761712526884385719C5B2B1C3C2A125975270E98803
BE1717D7FD9500E68B2C77DBDA49C6C7CC468986AD847D5976FA7D445365047C
DEC7C2EA876A6D2048DB062B6682A49CB88706982B6687B8E51E12F0AD378B85
8DFDA6DD200D31F6BA872ACBEBA94F1FE5920A18A2F17DA30AFEB722FEC5701C
B3691A04D0896F1A60DA20C9BFB9FF931ECEEE556BCC9C4374EA6B2CC21E5301
C5B8623C5878851857B3E665490A7FFCE5A8DC0FFCF3D56BF55E4AB2ACC6743F
4DE7216BA87F183CC0CA3266EDD52D3A8681B75AD590B3989A01A62745ACD499
17C30C6D5AB9B7AE32D938D2A9257D3A4444614D8DAADBDEE4C99F4FF66DE769
52F52733B7F3B44F48E7FBBD1038AE21593A5B8B4C649ACB5F5C66A5E4C7CE09
E8530FF9E9E77B6982E21ABE6EAE47E2372B4552D66D2C141237569D7CE41808
CD3259B7325463CD9475124A0453475186BB44083AE9262BD5EBA8E709E36725
A1257264A4CE1F08102F2D4BD5640F758B4ADA3F4EC9DBEC4063547AC174E81C
F88EF1B4ABF1EDB4C6C94053DAEA20D3B36179F1490B23A95AD7CA9B8C5E797D
B75DB61D83AF76F0EB2A612502CE147B11579A6C8BC27630AE14535C0B77E4C1
06578A1C23B48A90E2E786462439CF2CC73F89825E5E7B4AE1245E300CED4B30
C9EDB92AC36F7DFD0FABD94996A0D326D478B7783C87AE473351ABD014CD380C
EF7BFBB68CDB7C90D1C85A5D96C622B04FCDDB40B675F081053377364DEC2F69
2FC74AE7FF1F486B78D68E137D1E6B740311B9F339B2B4830DA2FFDD7B721978
DD641CDF0C04591128628EE46E65F4C501E208857CFBB6E3DF0BCCEA8DBA8AFB
3129A508F54655B5B47DACE807262DE6F99F755AF5F1C05B1237C7D010056642
702A4D8C1A156A4B71FF31B02B6DB146F4B358C2890599A3C590E465DA451E88
904ABC2AB68BC32204D941A1DFA44E4AB14AC5D32856FBC6867922EC3ABD5036
F8BDFF4228E560F529B5A022D264BC1F2E02A896774D33CDA85819ABB3484856
096A34BCF507E7A769C327B2DCFF5B2424F98BF1573E810CFCE6726920EAC087
4F3F064D7FE2967E2C4C6D5D09B8A4D791F756E98BBAE07ADC10DC0AF2EE31FB
992FC1F2DE1427BF523CA396E5447E75CB8FB131CD5EF6337C8F03728FD29F50
BEC1BD112CA23D21E9450AC61D5C47667F4B6C6B85E0FCA48B718DD085E0656C
593E7DD7AE98A2FF5FACD6AD28E689279CA2CF60304005BF47327A70393F396B
49C40D3E45AA60D404B3187D840CE22E094B5D90A85F995ED8D1CC7DF6BBC18A
A3D72FE1EA4351C223E3FF07B8CD35DFE3AD5859B244566FC24FD3C1DF063FD6
F030D91F1C967EB2D02FA2AF8E895784B9D74424FF814F6A52BBE1111FA70ABC
D3A88D597D37FFE87238BC763066621E172D908BA2D4057EC3D9DAE3CB177E7C
E3DE75182F505410E146ADF5337F8F93BB3B8A3794DA6FFA490EDBEEC6621696
55F6D78125EE549DA67158471CDE2C3225FA6E393C673988CAF0598153664619
05C0902B167500C253028637D6C832B7B4E15FE5FFA9FA696FE0201885F4D4AC
55BFB5357D5AE95FB12472AF22F98DC9190D7659C59ED34CFB5D3B8C67EE898E
3776A9FA5413F98DBDD94791C19B79C2F4C648D2916424A9AEF3794E6E30A9C4
246F9DB70599392AA29F99E97B1A33E9840CF5D1AF88BF14CB44C2904C0DF708
B33816949AA7E7721B3500A82B7A78B66DD736D77E1E2DF9C86582DEA06C1FC4
762303C660C5369AABBEACE90B89CCE7CA5591627DBB367628931EC4831AF4CC
744D50A61FD958B2B744808F178A725641B03CFA01CD86DB9A10362064BA8277
32AFC60CD11C891F539495A9E0F4C336BDDE75F7C405EE8005C8BD017B134DD7
7134E658497A7C037391001CCC18F8D17D4FDE0740B2A511BBBB8319552DBF04
8D62CEF35D168396D5538BD0836F18ED8676928C9A2F7A41EB9D839F49A8BBD7
DAA3C8C73B78F1F10584518C1BF7518806C6D29515DFBBDE41E3253550E85606
2AAD5BDDB8E53A0F9813258D53589FC525B90255441E91553F1AABCE052E7B4D
9412E01B22433808C16692EEF675EF09964F3ADAAC8E5BB403328A86E408461B
D360D2D3A2CF42BA6972A427EF5C938B1C0A5838F8827648013493740E341FDA
50EA0C33D256176782B90D7BE484BFA3D4C2AF405F4777D344C4ADF44538F045
091160DFD4AC95186148CA8822D94610475812337584264AF3E392623C82D5B6
EFF52ABACBA383C192D51180737E23197D40AA8D9576F39ABEEC0B12641C20F0
FC0462B86F2AABB6556F6AC77A703CA280CD6F62F72BACCDF142DAA985E03B45
448F550B37FE6FEF1645AF3204DC5A87E6742A7D74895BC47D082422162A776C
15C318F480491EB93BA36227210704CFCBB8DF6A15526A6F55BD5B677A964B70
0FCF869D3B4E2DC19D8B0FB96169E269481F40D0047A7A61570C0A233F36DDC0
3EF6E6BA37E508954E16C57215337FDF5FE458DDC263A1704A1192EC48369810
A9B4BEE7ADE67D3AF7F5940E56B2A5880743211BF0E2B6F4FC358828699E75C3
3C5458E2E93947AC4DFF0AD0133E79E026794326A785D1C50EEEECFA32670341
2535855398A313575180DF7262119E30EB552DF12030586958C707F0205C3F98
72476833B252DE2467A50FB638522D048080030F7C7100135FBBE100D57B2E66
B4CA14C866CBBBCAB9B6B199228B372756FD70A91286679C5C6EB3933053566A
E0FACFA14ADDC8D4D7C2E1F4EB9DCA37846907001E5DD9D2474475335A4EFF24
B6D57A90DD4C972B69C0D5142685EDBD122E0A0F7AF19412442FA12064034A72
9075A22222674F1160DDBFB6037EF78B6F8C1224641C7C90EB567826B8B2AFFD
007AA14362C7A5DF0AD71572B6F659BA01457DD897EBCA1A4EA5A46F3AA34CE5
42E683F152AB7EAEA0EECE87CC8CD6DC2EFE4A8531C1DF9D90A701E732554666
01C366D33F6CDA30E5F1D74A4235EED1DD186CC14B22244A99CF9E2CEA3B6519
2714CE62BBB5EB375692F4E333EC0068F7A7ECB49837BE37E7C58BA5714D598C
C2881BD8B09702E2B1B6C8DAC8D7AA575B21725B4109FE8FD3639BFEAB533068
1DA8CADD2460DA20D6D4D2C3429EC5467E365FF572A1715FD01BDCE80B4749A3
4DE042E8C4275F50131D59ADB498E5597A9A0855F0EB508997E9EA9853BD8A5A
A2A6206F105129F47A972B8A381DE906FA49BAAC872E4D6B84C93D4BDA7177A8
271B81F7EF4079EA98C118B1A1944B0A2402E54CE8384E546BEB1BD3C1C54D5A
E4059EA4B648D831B13C26B2D86D6556C575220A68AC496B7429DA4A483D229D
78C72751AA5F70969DCF20A85A75C750856F8BB057250196F9FA86743144C667
D77283365064C9BEE0607CA41752BCAD5CC66C14AB3F6B7902DDC784C2CABB84
803E2882210CA702AF30D312A39E9C3CF7665E556BCC49348CD628BDD2160F10
7C47AA4413EFA33BD8381F27B7708B5D51C1760BCACEFDAEFCADA0BC30465DB7
D0B47C03611178CCEABC896433EE268DDD089AA33A393B55680BC0C93ECB0565
62810A2F8F0682911BF9C23BC628F6DE509A7F620BADFDA4F6A56AAF09978779
D5C087D255D1D38AE0476EAF8544481EF501220F684385790C71931FFEDDEE3F
898A520170D885344B74ADAFEE958437AA269345759ABDDAD70E7D94F0B39667
2AE3DBD114537AB8D4D0D7656789C5899052BAD134F3A7A48023253817326581
6BB3A857073B8847C49857ECE279BA79EB168EBCB0052A372F30F96B0EA2BA43
704D375CF703451FF9066F7C7FF9E9BAC6825A2413C98609EBC461C7D8EF063A
DA63F335D2A1A5D8BF822EF9FE6137349F0664C0A58619B830C6F69F63F98049
8C79D2E39E7CE5F96097A3D7CB5CAA8260D6AD1A61A23EC6FE6BCA6A646E26A1
519941C0B1E1FF6EBAF557539153B86B4E5FD40A7DF4F0272AC883EF8EED1A6B
889318C6C88BC77FDFF11236335DE58FDC7032B2A61A284109D6501FF77A06E9
A86D95B443B903679A287E6D4A678EC6DCB2F620B63ECA0D02C2541EDCC2495B
130EFEEE74E25446585B8369F6DC8C78BE221E72E0D105A314476274AEE05D3D
44A52C0C761F0D60E248F08BE2FF0FEDBBED295E1161F5C522CCA183FA866D56
E9F167A70F64B047A9C5C91A6490CC3EFCA12F9BFEB40CD2D002385A421A62C9
467B964B430D53443CA5184CB779F50874D34A7BAA6551087C3A75C963116DC5
B73C8ACCEEAC9D7D2634035A2D38625EE58E39BA273217B3835B2A01D1C1B9FB
134312F5D7C7084BDB85A462114903DAA9785892FEC08CB28FFB40BF2F8E62BD
200FD6AAC09017195A40F670C8BA6952D9075D42AC26379615CD49D7BA8D0EF0
FAC7E045455A7F53F076F02D2BE5EE952DE400F3E1D5ECF92550F2EC753568B7
AE18DA052D3C436C344586CCE23EE53F5EB857A8655CFC711E1D7E666673128F
F604E6F6B74625922B3880CC0F2BC9CF2D07568D827FA4827E3659A4754D3BD3
9C52A965CCD58FBCE45CAC6A163A3642A1EBA7BDAD2020B5F7602B27968E9802
714E3F04A3A1E9DD12BF4AC82453417DFC0D9C27BEE6B94FBC43A75AA0059F94
5E15FB3115A4B0297A8C4C8985FB5FEF80D6DD81534A301D28C8B139A65ED721
D07A6D9F297652E435E13C8378DD81061A9FBB1EB522B196BAFBE860603164A7
F1E8A96A3D482F22CFD050D799D90F2CC50D34E1794D189520F7EC213399AF0C
5B1C80F749FDFF068F69A00213EAD4E7362AACFD2C2F47B36DA3D124909DBE77
B6BF8AF3708C2D0983A021B9E3E55B3A57D3B84DB7AFB76E2D139D08E3821912
AB59EF741E81036F86EE13D7D2C6EE98AD78AD44C7C99DD9D2940D2DF7B4B47E
9CCF632B72A0AA816DDCDFB91B79FB9876C4789FFD04A189C03ED01B77FCE504
276BAE8775607C208737DCFCFDE472F9173EA023D805AB9708F7C6E489FFB8C4
A4FF3EBE8E05CCB85964255F7346DC3427790CF180B4C2A23D619A466FA3AC64
BE0515CEAAC9711A97CED0F976A4EDDE0D427EF3B3918C5345A1D446DEDCEDD1
0EBCEAAB77824EA1CFA6FE585AFFB8D9B87C795B1C091A8511C7B4756C45D19F
E985FD957DAB43DD3BF46A2D717FD29F93C447A524D9DC70E53D7C179AE7EF79
FEF655D7FEF2434D965807D7C5B037A1C51D576AC83467B3BA84D3FEBD3700A6
7C9F5A96FB812F883A3437550D7798851581D081C97BC5D5399F83FA2D3BEF69
804DB5DCD61FB5EC70097E69D108355991A03A8AB9CD515C475ED041E9B43BA8
4A5602F406335D9675B0E6FD6B121C7420E8B7B5765DF027F2C36CB7FC2C55AC
5299446A21A886124B9064B8387007688FD8BE55003B60F88B5ECFBC452C36CF
6308948B815534970FCC689725E8DC250FEA26AAA1395A0BD58BA8E8E316A237
BBB8955203A21553B6A7C4FEAF46A6B2F920FC36DCB71CA487F9DE0AE0C3A05D
D76E4019294BEDAAB7678334DCC46D6018145359C3EEAB92D0A7B80208C213A2
9232C03FF68FA7F318679CC174646B6460151FD1DBA290C3914739E8C4914FC7
4F490CBB4AE73B493AC452112B233597C093EFB3A8420E3A7D5DDA339A6EEE13
A5C19AAA56B4A806FB8CFDC7C00C62595461AC9DA92B20E3679B80F0FD352968
D4FE6B8B58211EBFF4035A8768630E09B6362B9DFC016863DD3E7C815CE74F22
04051FBD50E8B1A9F4781F859D677290630627A6C0C04740BDF421F9125575E7
695ADF09A8E0118137B2A2559843B997F0ACBC0381D1FFB7A36D262869EC21B0
B22F5C3BE41A1958F186733D05F46FC897FB4A073A745E8D966C893F44C0BB16
368F19CE26F76A0AA6A865010214615AF298266EE3AE8475A72A26F879A7DC82
7C6A991FD5E93E129C025D2624176912D340C37893781119DA928EF0B8674EA3
B609758331A8B736247311701D9C652D16DE819B1DB4D78BC154712A99DF2614
AB9F8D35E07AE29C83B27883A0074ABDF12F9C535FDDC622102644E5146266AC
D4F96AD9183DA689553867E1AA34A9CDC93A2F3CB4413251410B181D5D360D07
AA4FF83B0408AF7B3036CC0FD6ECE0EF0109BCEEA732F47EB91A3E34188DBA2B
C5E63E271563216822DDEF1EC7C91B588335EECA8D2BA278522BEA25400DAF49
FBDF3EF377FD162E38348EBE9DC67E1FA7D1571B478209C5E7E0A3DB02804169
BBDC76F7440DD496B115ABAB709836C40C4BFB2B5B5A022200D4675758914199
AD979F057D0EFC17009726E2FF771157D7CE1132FDE6695EB94EB788050907B3
C5B78C104C94C36920D66FE7EA4853044FF3449A3392C815F542FB8E50D270A0
3A6AFE453A8D2151C2318BE95E78B2D0CC6B1E8F879F6DB6228C0105AEE2C5A7
79A10BFF370B7F0D81E5BDDE6F295133A4871042C4D38545BE52C5EE49C6E821
CCCD8A8E3A580B91F8E71AF93C64A3516F7452C21384D0073EC83EB16E3C04F4
056DA85DED20582978AF59A6DED41B4CD05F4EA4F34BE692E30E500D6604F108
43861295593F75B5ABBC12A048626355B6F111C2F4D54FFA8D32966EB7978A54
6ABEF58384D21561D1A2FC7D5E3200287F7C2E53EBA645D1C78B9955A09B66F5
A94AD2036F186F32D75EDFB7C772F36D2DAD1F43F36A4AB92C237F42C18BC2E7
E0187BA479FF7C7E6F35D406A6AA2DD66976F0A6D8FB8185DAAE22E74767653A
DFE6E299922664C69C93BDFEEB6AEF64F3841751631BC0FCE0FD8DBCAE8E1466
F0B5778454EFF24FABAE78BB681A67B2D0DE7741323E63E5115D722BB91E6CC6
E52A9C25F8091CF478F1AA3C799F8C3EB28B014FD6E45AD47002B66D47B973EB
3EA1EBCB5841182BD7CD2B816C9CF5BEB0B08E087A1F52981F5880A129B43A63
2652966A78647B30390253ADBAB5D1881EEACC0D183A915139AD7E6B5ED007A3
203B8CFDEFE2119CA33496AF298CF3CAA7F3F07E38E3E6C3E4B3F13EF598D5E4
CA1D68803B2BFF142B28A3E2AA918FEEE731064A936912B60DE68D63C0992AF1
1436230CDE952ACF0B7719F293E2FCE06704427D7DDB31F40AA2DA0EFDA38C8D
A8B5CC955B09DED0503E887D3C0EC6FEDC835D71A406B20435EFC68E537ED4FD
89E955B87E641BAB2BFD2870393D007791B4404F940B3CA039A08204F070A43A
F2005C96517B7B2E57E57E7A08A4FB387DC7906939384C10E08EBA616C37A0C7
638453520D6975E1F9C8AF72815C990CB8302A9176AF7147AE4F0B21F427B5DF
3023A8A17F4F1D97132AAA537D6DC793EAD07F6B54FA7522AA58B6A5D39B21EB
9D669C7C7D718629C0124B5B35C399874C5098EF0C0D6E0694358F3CF9941919
BE4A8381C4E322949AE903DF78B25A2294CCE41CEDF95FF6F9EE641925011366
66F282EB70F5E4B9EA6E97FAB2FF5DE89B9F7E29F0D43D34CC5D8E4B91E95E1B
ED6F9B351316A48E42DC12F09B3EC8AC68F50CAF20893DD9C10C33DE7931007A
73EBDA97A9DF7FB93221DA2320F008BD503C27C3F4C99D527DA37EC82537DD4D
122046310617E03B59437F9FB3EED9B159F2ED590070666323B048BB9311A9A0
AC8405271896D4978E7C2C6CB1B119C781230E4C296DD29231D92069BA96458A
CF007DE87D545AB06AB808EA664C0F6459C0CA8AFB2D6AE1DC3483BE0A9E8BD2
A3E9DD2DEFA621CDBACAA14F83B009D6359B5BFAF8DE901E41766F9D5451C073
434F9177061A96A0FCC7C9C0A60C0BC787CE4663458DB348310267013CFB0E0B
BB1D5D89DAD5CB9E3678A190D0F834F8703E8CD0A79A41E8EDB5DD82DA2CF5B8
82B1689B0B21747A39ACC7F66CF77F183FBA4E712483C2DC1832D3E5F19FD6A7
BEFCFC02DBD35930D43A2EE80EED2D6215FA9D4CCE6ED956AEED293EF47E9B38
2FD2204EDE6EDC19E462D669B7B15BFB53BC456B5381CE823905129E6B17CC84
BFE45BCC0C0147223C4F40C139AB89A59FC750232B23782F1CC09B59892ABCC3
C0633A1422F7DA0A888D718BD4D8AA369C56F797C590C25DC14CC4F5F6302DCF
C6BD78C9B97FAF53D68E596D93917820A5A595CDD2A98527F6C7BC7D529616E8
1B2835DB182B7309D90696E7F19DDB8B1EF1BEC7089A273D5C9269571ACEC4C5
3E0370057AB9E92D1B0DD1645B7186885EC03F3C1E57C16C7ADA4B3A93265D54
6D49CC7F00A7CD53935413951621DA805F5B18FE8354CA8C63A762D107DE12B6
E4CD24A3AC81506D5220D5D99D3B1C202B786A0A322CDC42A4AF96FA500F6F06
26D8C3F026DAA3BE73943FC211517466E28297ACC3E5B4CAAADD7DC601CBCAC7
01D62D5F4259D2B114E264429885751E82E9B042DD802E80626BAE444C66154A
6BBC566676F74BAF787428233F8377E458850EAE7F738A9F82907E611FFBD084
EF5D457DFF93D88A05BE5C0DA7D3A9A33B31989BD2D182D4CEF2BCCB36BC0226
776A82E2B4D49E8FE56F88AB20B04EABF4E88F083368D3BCFB9F7C7533896F03
CD9447E01A222FEEE20A7CB25127B79AAF7824A5C25712D6E212A3DC85910E67
C42C39266229F8BCD2BE7B08761442EF56F134AB25DC174B4207223153E99104
07A969E08AFFE60DC335A20DF6F9BB0A6DE2AAD379D059B4F2D96C74DB505CAE
538BE9105ABCFBE6481634416C4D6D2D564F07CAE20F0D80B4903EB213694BBB
45CE05AFD4D345D9313F74ABE36316A73958B8C28B955159CE388C53BE7253E4
A5067A0C002E41B0CBFFCDB17D6C272F2FDA86F85D38938AE7E822BBE98D7F3D
54EBA10E0B54C4762BCC2B8DF4287AFF19CFE69CDBE648C4CF06075F390657ED
8EBD30E2021AA98444C6D6E071C1BB53CA9D3F0C2E7109DB0ADA0CE19CBF9D44
0CD8B2307B56C9420DF62C28854F76EC704A61E4D6DD209A60DF54AFF9440ED8
67DD688363647B1CEA0131F65970B4F0A128F6088FD9376F5D02FA5B57E7CA49
ED71307B4ADF1B1F04AD29638101D40E052E8F2B9F1141728190A65C312DF30B
57CBEBF53E6004AA7B49C13096B923BB4B01667258B288AC062641B2C2233272
B39986F280BA2F8643B8DB91EFC21B2FA321191795251935225C17A02DEABC05
F69375592CC03E1B9D9B50A93349A75134758F1DD7CF12338A3657B65995EBBD
D354E628D62D907C17599AA82D644EADDA514C4D9E178C32998A27A3EFA7DC64
6C927FA6A5716135E73E706B36F32D268A10B0377FD1DDFA325F19794E5B1201
09876B2E4B2CFC517E26B5DBFACDC3A3BC71F70FCE36BF93AEBD9D0D384B1173
768C537346BCA254BDD46688DA8A3CA7634BA2C8572FBB64C4645CEECDD15CA3
930A5FE3145A5C42FB64FA57300941F1A0E19FAB681708B860C2A3E57DE92495
0F1EBFF6AB4171C58C090F4A89D41656C0284B1FCA4A321068669CD095826A77
122F53BF8525847A25408CC695465E4979B56FAA211E7A1C193C42CAC2E0F79B
EC3CFB9C7A8973F7BB30445924B7B88343E3F144C4B2D22AA9E731931094B4A2
105589A5DC7E36D187B640CCCC0BB9B200E9389F61224F3793208ABFF2476736
1AC6B86D874D6383DFDE43F33746A185AC9F7C078781C8333862B8A1597E5DFF
4272C6D4D2FCDB3E9A346F5E945505F65B4D994EBF7FE97CD273EF4A21680CF8
49EC74F076D4F3AF1FF45A0C301AEC14487D6508506E714E22A78A0E4C0118F2
546DC6E2C5803B438DCD7D9BB9B1059AB4B088D2EBBFC26FED2C8A7E00D8035F
C52312FB4EFB4EE3639E715CF19DA0B1E56F51DB4ABB9D1638947E3442485CF2
E497190C5ED083DB3234BF69B5CA88E62E400FE910B7C64D202E5B3745F05DD7
0586BB5F44E93621437D6BBD6AA432BD694E4B0B1363F2ACC7A445A77E719C2A
282FA8719EC11EF4C43BDBEBA45BBA6A2B6AE2DB1B04C45B45C428CA01C1F852
E2F0F9318DF75C9649ADA5490DB4D6AEC6C50921E894648A40E5C76DA706664D
1756D035CBC92DE8E73D68BEDCA35B6F784D3CA59769DA38E458DA9FAAE568D1
E6B4661A99E3BB1BD135D5818EF89B65BA0F8E4E15AF9176CEDD407E1C592663
7CBBFF28ED9942EE44680FF8CA238EC2E6AEAC2C8B7A57407915E7E70809F1A5
19D17F1E4378F5B2666C28EC672892C0FC3162F4D156A430861F83FE693E2F89
1558AADA4C6C0F1715BE7A28B79291D88F776C3350C297D2AE1DADEC252ECF3D
523B105F5BC4CA64D3548409143F0D4DABDD951B106AE89F93262C2C965BD43B
1DAE8347DD133768112605EC823A7BF04BE28F7CEE83FA00CC53D2CE2E1A5EDC
82502B7FE12A539B09ADF81B0568891F0320914BF5F75565F878B347A847397B
87B37B6C4B141CC37B5B399CF3E2398B4E2A79181A8673E575A536C64BFFE579
757C4FD44C3F168F4C7EAD0B31F36911BFA98A2DD3416F28CD898874DFC64A8D
8893BE26EC8E431A968ECA3892EC9D6CAE3C13532D0AAA53904B72D3CBF39C21
1D4C26176CAAD7F7F40415F4DE067B7365F31655004D95D63036B4EFA8517D7B
1F4560F84FC54620841A86CF292ACB8B07CC3DCEBD14D109089749C766A053C2
28D86E0A03D95C4A2CBD7B95FC15851789CA456E83C388B65AE0B38B496E1FA6
73BD382F21560717083BDCB5466ACA349EFCCBAD21C7AE82FA0C0249E059AD33
6BCEF69E623A4E26E36B81A6F0E9CD220EA7FAEBA7920CB9F5FBC111A7B44D2F
697614A4FE332D06C504F2F1C2208673A3ED870070707654BCF8B497FE15A8C8
244CA19AC4078D3EDBC3D3B57AA664075398450E219AC975AF22ED5C2529C639
82B635A527673CAC1617547A95DEE042278F0BBA8EEBEB116A1941E38C0FFD43
1BB1CEDAF32267490D2003598E0412A62C05E6F6C96209ED8214A465B371E749
5C8C06492FC3D669F9DB9B8D22FB041B5CACAE8C5787B97991E7F42C3CF6E780
FB54E850B8949DE439FCD92D6016D925452A49DEBCB875248D969DD882BF41FC
EE7CA580E23F9D05D8CD46C2C4BECF299CF9120A309E8BEDB14D8295AE9F456C
640394CA284FE129DA9C2D18633F5FF48F8662FAAB3982C35E485382EA2FF947
C84AC72D9F537B3FE1A8B5F91CB4E3311EA8694C3729BBE93F2C3B20D3BD555F
DC9D8078C83DEE858A4544492560384C3695E3F1E7E0DF318B4CE5A45AB9ECEA
6E692C51A8C3CBD44F93084A6D354A94F18E64D4D118EE3CC21C5A3C2AB322C7
F16355201E7128A1F494F49908389547E684470FFF638F03C26E8E1D0A2D7347
5A047C63D34E9BBF64F7C1BD0D991803DCB79BF86028FA5034B15E3B6E3A8C84
ADF6B8EF2A7D5FA27140E2639911B56CED25B5A40CD01079D9CE91CF321A3933
B237D10652322BCD0D7D47ABF19A147A09E9C9625F57A1F9180D71A9DC49507A
42CB85DC2CEAC12BC524BE74DA2CD2FB1734ABE8126DBF9C70F3F2E4F820C701
53060F6225C806CB6FC0C5BD6E05BD9D6D823D278D28C521D0583BBB5FF17D17
8EDBD8F03E16984E052E9E3B33846751FF92A7C43FCD59719CD87B663F89DB01
A9A16FB30D9F6C056E6077B8F9A2DA6047C4F78697DE495649F101F253171B05
8D5822318FF299F696B48217A28658A58ED1F64918E116F91BE74C86DA8778FE
2F5595B464194651161FD553B09EBE5E7744D19F95D5BF7CD3218F82FCB0A041
C7D25CFE588B9E5C174C5DC5B53DCAC9C485FC65A15BFE1B47891960DFCDF81A
C6963B90BEADBBA4B806A3F1364B4D497B392456D2056C5EC39A489266849E34
D8484DDAC189D93D1C59F45ABD6733F461EE6442C2A01732392A645D06487891
7030A1D1BDC93DA7963AACDFAD7C6F4CA1DDD7974F1E2B73273EE26FE166BE51
88F616178199ABC4AFED8667F4E76D0B428A138AF5B48D3A7D58507AD4B2E756
2AD08DA9FC8D970D2C9F17DC851F7E576327D59FEF7516091FB92373C71F3F23
82C42298727BDB8DC6E9BC453D4BE51B0C4C375EA5A193E63DA7FF23F858B441
0B377C5F773EA96541B93AFED409056EDE64C63524EB18FD0C5E34143F0FE480
CA09B1A8896D27B2BC9EC11FAB0DEB61957659767A006BE0F0D00AE866BDABE7
C891874462AE51EBBE83DA59C17FF03316F61DF214AF1A01A97507F71F08D714
1B528F4B8BCAA3F9F6D0D3EFF16DD04A2553B18757BF9B9CD903A9E980B16174
70DEE47F1E28D543CD79794B0C7A85CE942BC83A7D2C2FA7A044616226C9F273
B9C02DC08C271E0788E42A0080F2CE91C37B3AB03B528C1B2278A311A2223DE2
614ECE50D37063735CE08C1F7C77D61A529623F4471A768024937C89D5D96A91
75004122F2D402EFF35A77E7AD5A65581DFBA9AA26D4C17B419D5BC3BA2D6D7D
B0A2A4804F436711A9568438BBBDCB6F7C6515CB126B91F0BD2A290932C0C039
2664901DBAB540C4E23820326D20EE182E940F5F7085A56208023D22E7308174
7BDABD07F0F14200C5899D74F33FD8002CE67F4137EC9DCCCDE2F19C929A277B
21B272D3C8627F7586E118DAA59BD970333342F797B54D8A916C6FEB73A18103
10C8A702B6E00BEA6784D716952B5342278B899A2FEB4228A1179D0CE292CADE
8F0C39DF8F35A53EC594FD41AF0A7C218A6C61DB309E7B7AA43FA87410B9B30A
9882E0FDA410861EF3A2A9D5CFF00E88A22558DE162CE33BCC5E69624E988149
8FD1B802CD7C926C8CC7EE74E6FE0EED66124EB5AC66928AA0C23131C1AC9349
65F15FB9C0E03EB9E9594FBA44CA64319B96E0E363622809125435385C945BA9
FD0FD74848E17A76CBE5BEDF240E6D46275151ADF106155FF449DC5602191AD5
57258F688F603EDCC0B93559AFC55BDA19064432BA46286C86437CC0B51F2BA7
A51361A6F1B8932287191AD955AA4B7427454F50C6DC89DD93DF0EA17076FE0C
A310C4DD2A1D2AE1424A661986B0B7A6E468B3335413B80C04C65F25A4D9D0F0
0C61D8BC6B80811E03C8D400E151DDDB9067941B6A33448DDC5804CCC68A2EC2
88F49339BF922D4B8D77B2983D64E1BBEB2CAEF5151B3F091524BB04CE572921
20727C66AC1C2BECCDD8814BFA3264C1F021B6CD28B6C3223B24FB771E9FBF45
5ECF65FD52B88869705B91DC3D5E891EB0509DB1D022B150D542CD0768922A2C
DC29A6B586D3C68F997E85CDA56968D760DD1C0A8C5CA7A54398F07E8F403477
21D72A72C40517B6DEC7CFDE81BC9F157464E816F4ECDFBA9292DF416B207360
DF01808C1C3BF75F18A2A265A74F4C3E1B3DBDA7D33405F7D34707A809BC948B
4D32F574CB55BC49FF3339765D03DB35E8D739CC3934822C479B292886F0E24F
44B1218969654AC792BC015DBCE5CC15B4C8E3B9AFCBF8F2919944A8001DE84C
495DA6EF660626EEE28726963000350119770CF9EA56C60395D94442FE15B91C
4C3590C1FB18CC4B968D704A858EAF84DDA5F94A2800E9005C2F4CDB86BBFE06
E4480645E7A478769B97B1FDFD7B333EC8FAE7D59DCE4F2F7E86BED53F41EA10
28AB06DF2C8B6D522B375D1A1959A75227D7F706693A91C5232DD9F21E1A0AD4
E419CFCCB1BB90C9AC313692BD0BF92D9ED65BBB509D8879609A7ED2EF147B15
8A181F21F4B279625E87B48468685EC8C9E169967E858F7782262BDA49FE21E4
3747EB677250EBD066039D187EDE056450D246CF567409A55A811ECEA57D73F5
9FB7D730B2D0A2FB8479B8C34081C25048187BCF1255E0417EAAD1D7B804F213
0FD79F709A2F900DAD22292E8ACFF7EFB68853386EF873FAA91208382F34A56E
24B65FF6266F30DAFA1F60CE08410E34811BDF283171E64E0985C59DBF1AE48B
B19BC0A94327FB9EC942AF5B5AEF50A751597100F95AC5179466C63ECDBD2696
5C04BFA2125F364237560ECACAC264B826C48A7266E9985103A8642961166B3B
4688A52D04D516535D9E4A8A6FAF7A02B0C4AED8D47CD9C8847A196544F87BBC
5B83F3C192A1F8BB9F8DF2D5077E9E94680EE1C994A6259A2A6ED741A3645D3A
1F79B9DA63AB3B9CFA362D8F7BD3DDF919531E8C006B7489520567083055C88C
14814970A964F7F7FA3C4D101613438C8C0E77575C50611FF64471905D2F8F7B
C528E9990CF15ED713490FC265095F3CC6CF6E68750F635B2DEAE4DC7232BFD2
1C81D0DB5ED093212A991183191C73CEAED8134105BFBAB82F5AFB18A571ABEA
E6E6CCEE20C0C84487C09C027783B9F660EA25A46B324CC63231FE8CD0F0650B
7FF0BE1139CF0E578CE26E351964BD29B9B4F47CB31B25408259C4DD0814764A
DDB212A17AD38F661BD03E46822243E23AB36A62E713198E834FD6EC3667258E
4FFED16ABE5D4DEF28F233CC28F673A3EAD1E4743D3E77A9491FB2D6BC7C7DBE
805D2EEC997004CE36B46AAA89CDFFB059EF5D914482EB995C57BB3F738F441D
D275E6082BB0F17C4579DDC96569E8E5EB66B6234C7A5513DA0561F5037F8945
ECE1FEDBABDA7088138FF5BC3D19731DFB4F8005E68983F24E434AC076E2A9E8
CF84F18F3BF342CCF9FC57E35AB78AB346DE7ABF8661E3A7BC243F2BBCB62FCD
1E42380E9F91982F32BADCF8D2611071CF8C529A8728815E4C798C37AFB63FB5
FF8E124D17D054BC0BB4AA183B5A9FB01D597206446D01CB686E9CF00C6B4C71
A3DF4CA760510F2F94E1762D0AC1981E2211755F934955341FB0299CFD3FE0D5
38D72F8F748867FBA423AC9A902C80ADBD04CDC7171DA31B338A9684DAB00C9C
40F7C63757E569A4985FBF130F4DA2594247C3178B614386CECABD0DFAE3B06F
E8F00D626320CA8AB32CE1DCD57E6B710098CE4B3E91398EB5A0221641502269
17FB0C85786EB65684B6F05405D5BCC4CF18A2BEF467F35D0B037A29257A768F
509A070C28B0BB0E87224DEF2A29E04A78FC985A15C262D14A100563160A6F58
8B7635A2AF977685ADA49FD8BC7A0FFCD7656B21D44ADA5500A9899B9C001E82
B822A99AFF59ACF89D2326D4AE10A406D2B43F3DF925A8B8D737E0903DCDCF41
B8EBAA6ABC052275D6AB830BA6D39C90B22D8705C74F059FC63A041CC748D6E9
F6464910BD0A2653AA021CD746EE659009C052CADDF3D8064C554C3FF2911CFB
80801022C53E41332ED309C263E3011779EA54080CC60E4F061E32FF9EDADF68
598DD11D92F6138333605911B72C0136F72E75943D9B2B95FF3AD37309D9CACD
A1EB310FC77CB631750B1E625FDCB329980432D2910D7FF8A35A7DE4FEDC55ED
BFD7EAB5AD74EA1136CEF228F847AF87707ABFFCC89DC41D366685B0A5DA6B5B
B3F8B59845C16388F1E36913F08D446E58F3080C60403A5851794CE6460DEEBE
4AF5366221DF88F3028EEA1E953EC4AE33C777B2B7F8B7624BE0942FADAA7D14
9633B7B0FBEA0C7680FDEEE6E16477BA5B75DE8E2476AF327076E59ED6EE1279
5B397298F057B08B08F9E050ABC71889A175283A2DD9D54D478EADD68678951D
05FE1045C06C3AA2A40411279F9299E9773AC3F5A8565E83E049DDCAC5175BDF
02A4C567B17E1E0B3EDC32F9345115F36474533F0006697B5BAF38F6B7DEAE2A
3674D0A0DB57BC99B9E188516CC5FDD8D6B94B2546104724A19DBA2047755568
50FE2768D326C67D17FBC4A1AE01A47F293AF8AA38F7AE318F207581A812342A
E725EE0E1C13C9BB2DF7A9312871B5206B43FD9CB575C43C139992B4D32E65C2
1F917C086C0EAAA1D6A07D2B531FC5C3AF87CE465158DF8ECA38D7B49A5FC972
0173FA88C50EB780208BF8B45F22604D380FD35787F549B05FA2B6142A175145
BB2E0A4FF40FF53A47F27C3281988C73E9BBD1F5706B251CF0B26329F4776C5A
50669DF64515811FAC2F424283975EF407AC1C7F13A4F5207CAB20006F295316
E1CC04C6C7CFAED86BC45274257C8CD057DBD27BCE1C0FB2035F2A614D07D16D
9FE6660A4AEA9FCB254800CCF1865D5D0299456EC6B2B7E4BFFF78CE3693635C
C6A7C08EC0EEC920AE12B52D47B207AA2C0FE32627D76C596D523B3A1683ECA0
9F52E4044CEA25B6084798FE56911893E1766EC7449A8CBA6D7E5ACDB419E8C1
E4A4B43DF8E62A357547FF7F4737103278975564EA3683A6C829D0688D841C79
7FF6AC237EE2C3E3DA711ED2DE3DB70458D957D7A3C4E915C3CFFA40054D5627
EAF61E59BA332B586278974B1BC4076CB023C811D445C8D004B5E1F83149075D
B435A50DE4B0C764CB3247330575D89F60936C0F4ED84659138FCF9B5840C28B
F2C69EA761F59A8EEC9D125E649E532E1AECFEE0A249B58FEAA7DDE151ECC7B5
0E8974C37099F6E26195BF3235C1F8256E2C2CC42007344B48E557D9A2E045A7
FC4ABFE5301058E8C03BE77D88DB099B4248FD89FC51B8B0F32CCB60071DFBF7
756FE68FF9DF8E5B121B3D9F09F00E55AF47DA1D98857133C5A735645D0E21BA
F2F34DB0F3DB349FD95DB9B45BFA74F9920210AB44EC85C703BA4E592300F595
E7F3C78A3BA00DF2970393AF9DF0B893E26AD7FFB341EF3AB9348A564291F4D2
FCD29D74EA16505B26B3FB856F6D05FE6E7175BEBE256617E1CB920D621D1B2F
8F96C5F4EF905448A352C5CDCA91CBA66B4A9DE45B51469367FAA08A9EC3E56C
F1ED87B4C3987A59C27844F9A7CFA315D2A1B0FAF3DFD53D55493908D20DD0B0
985A1F32B171D1BA8D83F845BCB3B693760FDA8CE906F230DCA53FBF6A5C1279
1ED6FA7C1C4C3BDC9AC55A3BF83BF1BD19025E6FA55462B79A6E19B347722D32
E1AD9209AD593BA52D44C97D6855994C51CAD46EB728DC6D2FAE634C3474BCC4
1103B53D1D166BCD8FF30715CF83E15864BE1D4817DFA7140EEC7465F71F69B7
ACEA022159D9B37BCAFAF2283FBD6BB84E7F6BAB2B3A266C7C7196348B1616FA
FEC342BE6664DDA98C4712408AD5C7AB7A19B6EBCF07C0152421CC86DBF5BE63
F8CA08DDB3F9C54969A5EA107FD8E941C79A1D68EED6C83286525556BC720610
30827C0E591D986259FC14BA667D55E0DCF26DF4A561A4ABC96302B04163FC47
35C31A6346E27C860290C2AC98E1CF110FEFF3D851C31D0C0B7ACDE1D406AE86
471D24CEB74A310FB17F16D57CC22DA02F72AF8A768F705DAE475DB1FCD7A00F
D17A4E42537FA85A1B7290AD2DA70E1BB5AB6AB53D0297C9399E8D1AD8A0E3CF
4B7B47B9E91D778CAB39F889A684518DC26DCFA5838677DC97C8385C41700354
4B156821BB690B8E4F9EC24B3B8E2792DDD922511E996DDE22E8CE6B830212A7
6178AC0F7094FBC299D785770F39BA23C4D348DB7C06B8A992FC816DF083AF6E
BB51854009445BF5434F5EAB04C5AE8BDE742E4B533DE12E5CAB986CB8469FCC
156BD0E4AA45944EF7B39264D126A2141EAEB68291693A2EB41F8B3B425AC3C2
F9AF38EFC40E707639352C8504F64CCD650B859A01F003ACEEAC833F858BBD44
6DD685868DA703438FA0B075187B12E3409A5763328D1BAE145FE71460F48BAC
A998462445745CCE1E764225B6BCA1CB0D6254E592F08927251C533539B02EC3
6283D39325881F6470563C8CC112F4D4D29E56C4C017BB71DCA194673A73D48F
EB949CAED35B08E7131E5DEC6B2EA09BD5538BD0836F18EDA8F52767768C3F94
A59CC5E14DA8D7E4BDACEF3B6A8DCB4ADD275E91D57B168685310FC97442CD29
D5A631DEEBCA23B6D92DCF58F6BCBD1A4EEBEFFA5C8E40A02935372282374DBA
3680C921EA80DEDB0640C95DF29672B17C23FC454DD43A9C15D18B12AC57E2C2
E0F8E3FB72DBF387C346D3EB8362CC1D0685FFF8B7B57A407B8FF19568F4C906
D376F3DAD070EA17E25259EEA9982229B7BF875E4E5D417DCFFA02B0630F2ABA
60B617040EC87370223CB2BBE8E39ED55CB682ADCE7D5BB234C5AFCA15384A1A
793412AEDD15191D7E69EA98F8FB5412ADC766699D00B82B31E45EC01CE04AAE
1BC1E7ACA88A149AD85AA1BC180A02B7C3BF803206949FFBE9D20D3B08154921
6FB185C296397DEED037CC92CA4C654BA162D931979474D97F73D20C5CC09854
64F49946C03B874A50D07E3A1646C14D0434BD894514C9F27B5D99C991818135
59F383B8335E2F37692FC67720E33B9CF688AF5E666D5E0EB45E34501AF97937
9EFC449CD390DB3EE60E4738A698F9F8952E05FF8172D4E28B47E39906AEEFA5
C14D43B5144C2F2492B773BC79D7A9D70BC0DBC93B79B12112E416EE55D599E3
D8313DD0C7F25527EA50D1FA002FF31CD0EA6184F2387BE8AA63502EF6BD4306
4101AD6F8BD8CD3B293AE5DAF32FABAD27459538F3E0CEA154AB5EF74B353897
D7832C257CF21335CAE31F317941F701DC9278B04AA53AEAF4DBDBF656B39C91
B74114FB8BD6A5CD8AFBC32A617436094585F0B1B39DBE0C675BF3747DE8C7A7
C0C38077A424C698682E64E880357144EC0FE89A434E52CD9649C5362FC2437F
6D9434FF940605FC32DD8DBC5A0C7B423B11B291111DEFC2B3507B7C0700B46E
47141CAAF4F6AE0472AE63DEF23A28C67748F3F4AAA45A5F790194EFA8BCD4A0
E4B7C84CD06A98DBA4BF2D07A43ADF87D740A9DF2263DF361647469DD7DD6526
728B1F16821D47C5F7D9DCA52F5EE21EFE0DD003B2E6BCD9123B5FBC18A62AB2
F34E2721F6EB24D3E3B9122BC39A203F34B723D37ABEFCA7A8B98F0AEFA15929
22ADC33AD8BE1F5D51AA6DC66C26AD910FE18538AC37DD96F60BF23D3792D823
23952C42038C341CAD4226332CD310A07B4794CD55ABBB30B22FCCDD6489E04E
83E058FED75365867C9547F7EBE828F94CD9DCFF11E06ADD098CCFE74294FEA4
99DC328054BFA1DBFAC50581A2DD185E5D1C0E37F2DC8E7532C92DFC91495F59
2E1D19C0022F1DD30B3FAE72A97C74568A87762A9A4D3B43CFCED4E51C16DE03
97BF3A30D2A86A6C3A43F6647F390BE93E4047A6C3687D20B674EAF922863B65
4C84DF942CC49A567963FE777DB73AAA2FE95ECD68B161BDCF389DF9CFEECF98
18F49B65BC715976876B648816E5EB5AE9DCC21CB708B11F0DCAE4085A02A6C8
CE06154821D5110492DCD7364FBE03AFD9B08CCC3463029BC7EE08B000A4CC7A
332EB7C607A16794E1AE242049B9A9DD0AF18A2C28A021C77CAE01D454B0C1F1
3B5B10F78373F004BA7FF1949B0AC71A47A8C9EE68B1351BC316F1F5B21E02F7
2FC7CB1EECCCC2BEE76812AC50E1F9DA2F578B274749D199832400F8C3A54400
FF261C22D001E31CD4B528A812849267DFFDA7B8516FF32957C14DD24CC495BF
3188DF02C1A3CC1DABAA5034F71A6461AF5457BB558BF1FF0227F76B49C258B4
DE3B6148DD01CD5E21C39CA3B42A6EA718968542ADDC9E245D8503ADCF8E2C35
91BB3284D70771E12BD7E234BD56E81D1C1C4843DB2073A7E354FB6944B79D95
73D12586AE8AB582BC18D75D67EE54F852621148B4F9D06DE9CA39B19CADCA81
C3C1069BDD63FDDFB9D8A063415E4B409C6415C124847342A772B8FC01196D44
B7B4388A2BEE4920430E5875C91784548F77B7BAE60899CFA2AA332224CE8868
AFAD040DDB170AFA3B2CDC38C066CDAFAF5B4549C3982A5DE97761483DD2954B
D46EE520926ECB94E6B9F4ABA78EB4F1627D1BA44D9BFD82B976F202416BFBBD
2A580C3C475B311BA455663F6ED0E1CEA77062724B42FFBE6EB72D9D8F1C6597
7DA23EAA0DB95C45F83EAFCC2D3A37FED454E63148BC600F8A314026853A0AFC
BD9D3AEC3A3D0A5C6C7E551D70505FA9B864E6B9E3E4A21FB6A72519CEAD6ECB
4FC16B3C5B2C7F76A5A6F7AC12AF13DC345785B1A51097F2F835CBD22B27A6FF
245F7164E2604961994F91AA5C81DEE7B612152B5F3B1F2F0F1B00A43BE09D07
3BA8FE1FD69080504D3AB520F7EFBC9E12652955366C6ACF36B11CA598480BB3
FDC3775CF664C43AF3362E7D074446A343D897FB12BC056BA9C8EB32B208513F
09B3EEDCEE0EFF91668CFA67FB1C8E1E8312E0269636337C21EC6D8BE119D52C
94EC835CB18CBEB66C9DD14E02C2B928F059F1F3136339EA584E4169A0DF791B
71E875398106A9489029CF4884BB87DE2280EAA277012F7CFC9270AD4AD79325
17B927BA4AE94E5F194A37D2C9A6F25741663FFFD997F972A69744A18187E180
1BB02DE56813010770E4CBB96F020F43F782CCA182CAC4A59C21D3CC81FDD1F4
B13D6602828479D83DC824135C08DB24E21130D42C03D9D9687C2F04AFA4ABBF
90DE33951D53FCA61A857C122F943C0AAB02C7AF9221B56EBE6A68170F27D3FD
08DF6EA2015FAD1F4F3209DE90D7878780E3257FCDFF82472289A49B444A5B11
E45F7C3AC781487468D635892C6948037DD27685A06963F27E4A71722D4CE461
E59470F2D0906BD402365764CD05D03D48EB273F60B4DE4A8E5FB46FC609E461
BD50BE08B34BF995285CEE649A7C5574AD31610CB99E6EB5D8AD0941E954428C
C8766744F319CC1EDB93A420EF18B1491225FAA2718CE25891C2C98414970A94
DD7C5846531B043D8752EE4015358440042B3ED1A5F3F09E3A3B8EA5B1611C5F
6CECE9B7BD65BB95D0E98ABFC07BA4F31477E34CBA9FD12310CFBA81A4C52CDB
9F33474C3128674E78CC6B6906D70B07543AEC95686B7D202D80A53DEBB2114D
67BCBA0CC7FD7B89144FFA4568E2E17613658D5BF0FBC0E1830A04470418011F
EF8E65558BC6269D02F323141FDD53B73D520911EC182058408BF26E715A5F15
5AD46A3E2E2DD5A464FA4AF9953801487E42D8AF84372DED4B517DAA5365B653
3E470FF9C15C6AB7187816967A68984206CBED5ED75E211163BD27CA3AB3BE71
5247B9167487C15F49153634F2E71DB6181D91592BD561BAC4760FB606DC2F77
F1D6E8C906DB5F930EB8064725C8031E1CEFB6FFAE18525B8C800CF300971B6E
7EE908B86C6F25053C9A12F54A114FF7979BD001A43B36AB3698B58449A112EA
A1B60684846F2D362FC517306C434E3366111E5591FA14967BFD2F8A8BACD015
4C47840F72A53ED37C6CC4993108761DB192B105FD51979AD1F900618EBAB3CE
0620A950E6B88F99D53D0BF979EA6278AAE17FA8721ADB5FDD611E6A9E455667
CF5018CC9EF6C0D007F33C8836CA7003843C6AC8DE674FA4F58DC8D778FC0C4C
C14AA5015358D63898A7F022873AA5FE181C13ACE08EB422A1102F2A693FDFDC
280CD9E6D7A0FB8DC7769E43F096AB4C309E2E72320DBCAAE331AACBFDEBC55E
802BB138DB3626472EEBFBE28CF19CD61856BA1E06549B4E809B65C024C56D12
B7BE3DC301AD14A64ADEDC93823B1EE896BBE7AB82091DE6353CC72562D43211
62E7E7249027E9B321CDA196E1AF30AB3A48624CE1E4233A7A0F6548237BCFD9
077A6C8722498F9713DC00BF7321614BDFBAB3A7A6C56A5D77300F97FF7280D8
162BC378F86C901487529B93560F6FC80003AF837939C30091E2C870B30F3A59
C3347AED53DE80923B25CF0AA9E475FB3CFBA327B09260E96116BDDB7EEDD140
D5A1859E764D7F5FFA66A39B96E9E4F79908BBC7D633FAB015C731E2AFE1717E
7E6528B1ED9D05976B27941AA78F32106A07949EBA9526B48C2AE97C4671D96E
719E9764FF14F2209080A318057B3A34591182BBD41AEDEC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.0: CMR6 003.002
%%Title: CMR6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR6 known{/CMR6 findfont dup/UniqueID known{dup
/UniqueID get 5000789 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR6 def
/FontBBox {-20 -250 1193 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR6.) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 49 /one put
dup 50 /two put
dup 52 /four put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE339BA29C1C6F656
1DEF13780383DAE38A868377CC7D396B2A05F341AEE0F8BD0A0191F51AD11A4D
2E927B848A1EF2BA15CFBE57A51E3AF07598275195C9613041F71C1AF39E61F9
EFD5F6512FBDA76E29DE6B508F62F5CF9F73F5288DF1C7B0B82C92D3B6358BAD
EC3CA20BDE55DAA7CC58004AA86B6CBF8C410D8287E88BF20588A39309C2B703
CED322F030AA6069869064486CA651DA054FF3F5E56534CA358B0829A6B954D8
9103436E6B06DAD1658BD4A95AB41343B01F5866FC87C4EDFC71F1477C98F8E1
1DCF27EF743FF90BF918AB8C4E5AC35841E2F745480E5EDE1C1DEAFAD8D0018D
2C1F1CFCAD9F6609859DEDFD1648A6CD23D8ABB80747F94899F17C8F3E6CA55A
E176F19CDFDAA0D7C920B3A72051A4745560AC81978C92459EEE5AFE85AB247A
32981139CBE352B248F4BE5F73503A084A3E91F05328EE521D9669E44E202584
5407E7846F9FEE3D54EA18FFB144BF2D6803BF65AE402034B3CDBB40DD24217A
3CE0E95E2717CACD603A958187C42B3558AA38D6B6390EEEDD396F96E6041FCF
6F8888221AFA87EAD79F46E0E32CAED91E6C8500879AB6E580C581E8C8CE9B68
2BB5EFE2604E8DCB2432D39D75EE556969F1B2FBDF6A4BC72D106AA7CF22C268
464027898B311613E06E1584707F262F71D9F49D2149306A88E02BC60BBD6BDB
EF41D90F19197BA9AEF32B5E63D5B9FF41B5602F9F786E76621DA54D574981AB
87A72081EA05D6C6BA940EFEBD0904EA4E77BBCE17E20B42E1722617E0F6EF32
F1ACDE9D758594E9C81049CCC10605A27C2A06872FBA9F159CB155609B496ADA
4886F478E44029B5E620DE8319E257697E93E1CDFD27D560E2E4D34507020E2C
D9FF06BFA14E056D81DF701FAC3ACE4BE6C098AE116E079F0044391EC1661F6E
7A93B9320BD7F91E8FD2E8EB3F5CAE997D5CDD35107A1D35302260D1499B8B65
39625B7925F97D917B66BAFEEA992873F07220714F192839948CEA080BDB9A03
77B9DD032273DDB5629CB28B5D8797EDEFDBC601823E038384C90C79012A7D96
8F27784DA15BACE21501C26E3AFA5DCCE81B52B0ABAF71A35D33103EA86F2415
A39A830D559C5C6CA7423945BD3DFA942B20A06D7A8D8671F9831DBB52907AB4
4E54776D29C6085CD9970B6DD21DD3EA8EB09C49CBEC6CDCEEB0BBB1B8827109
3BDE64DDA024D67F098D6C1998506DDFF7907ABAADA1C39C759C850E0C6F8E89
A392D1C9329ACFFA92D361218D75E115F70A47C53B73B356D703E9C499AAD098
AA9C8119EE9E9708A9EA3049E976FA19AD04210D5F6092C7903FD155113F3A3F
269B746560F70970AC9F8D09956E0E84DACE4112C4E7C7F6B3F0B63D26EFF95E
2B2E9699D16BC8AFC4AD9113AA3A974C9E82E877288CF71E9169D2DCC61AAAA6
C536E5604EF0716F6487292BBB677518504B52C63822BED3BD5FD14EB41EE6A8
AD4B6CF90D39F98E12A765B645CBA3E8552FB9A986390212CE119E7C3DD675AC
17BD006144BEC534DA2A860188619F17589008409C5A309CB83FBA70F6446B6E
2B56991B6A03B1DE10C621591CEE45BECA27C54BC8B4F1754A9E8F660812710E
117850E1BB6FD89BB13F8CE391C43DA89EA67E9C3E7A4697790EA26B0E4E2E80
DCA508873A7AFFC11B8C02EF86C2316E8D8B6BCEA37F81A3A87546705F070C3B
9D4D28C366CEBC1EE485B8E2357DBE46E86C87B9939DADA60888AA9F1B92FECC
CC1C198DDB594BB70A8FE690ECAC21A414BAC89BF019F34D2A130F485EAE35B7
2A10C67EA3A48A4D9734759CC93AD85C6A570500AE5AC9973FC76EFA06BF5DDC
26E20E28D16B50957EE01AF2653F8D860817967AA5A9BF9BF7ABCDA710E9F34F
4F0EBCC32B3C9C2971F6225D2DAA6A451366B83F32B2ACB83E746D365B2DE38D
C1AB7447FE7B37F9630E410E5D8F0ECE74DF46C538947B3A167AD9F3E4A7EB3D
60F5425AE75AC3A27D39311DA35696C3DC7282AF1532E7AECE63D13DDA0296A2
01487185FDF1875AEF55A36C17D6A8DD329279D229259463A2F05CB7A874374B
E2320E1F6CFECB9C1CE62FF468C29751ACD9754AF1EABE8E7696C2888914416E
235B6766F20FFBEFF285277B639A51EA2F2E30D207BC891B00F0436008F980E0
9EEE7FB375BB069B9E0BA11DA951A99D8E60B4F920A0495C247FA7DE904765AB
DB5C3B2D634757E43EDD6FAA4DB3C67F82D6853E1170F0B2D8CE496DD4E72B0D
28277BEF172F1402959F64527F9B640619F04416DDB9D05FB2ACD019CB9C119E
E544D24EA6DAC5C69785394EA50E6EC9AAA9E14B904EAF29A733C6D7942B63F4
85729686742F26DEF78DF0DA1CA7CEFBB684F4CAD99021A3B3D1FE03B9C5A4B1
BD04CAC89BB91B11952A2B17A61789BEE0C54B46C03FE9A1AE73D17CF94BA30A
237C29D414C3BCE8E3E2DDF83C0BD59DCB66C4D2C3DE73DA8378F3C6C8035D28
7464399857E57651A53E9C4AA68DFCA91B2376CF98AC5290FDB9BDAD9EF1604E
9B0A70EDDA1E564B6D2456E7BC722454ACA8C4950FDD44B6EB9AD01169A9F845
B06A0DDB7897C847A5B1F42258AECF3807AE936C8F52C3A7A0A85D68160AE442
FE81543DA6702D76AB6E8701F80DFC1D87C961E350D0E52AB2A298B9E5908600
7E14D2A87309043CBF13F69AEAAB1BC239DEA88EB5176624F6046664B1D2691F
FBB2071D3706F97DCCA355A6DCC4D09FD35DC078FBAAF672FFDECEC61050A120
10B5A96629041303FD01ACCC7686165DED6AA712FF8E5E85DE33C4E7D877C49C
6C469A90410BAF60BE65ECD91CDC2EE7AC0CA8BA7B53865F26092BFCAA0BCA77
B80DC51DAD09C93C8DD8E43502B4B68F3D5918C3492196292447732BA90F5AB4
9F5E1D634ADE1CCAAD028DE5EBA9535F6FC5908DBD2D643E0A7E059C8C386FDC
E72659C0033F535C0D7F6B98D0335552D0BF3C6E302B672A5EAADFCEF81912E3
8F54E6FB7EC2B325125159713D0AC50DEE3673B9B148643727E94C80971A2E73
5E1E13237BE69C84FC039DCE02ECE2668AFD047F21A61BB94A9F498C9FE5CDEA
B274B40728B6F6CA9B6C15BAAF92F465B0D7311B46545CBA90D874839443CCB9
3110F052EB247B24B45A3D2FA6FBC7EB2A4BEC2A5892914B3C5EA3F4F9B9DCBF
6F932D95700E045B49E4B1F2C9D2A42CF39CA2F5A2654E6E8E6E92473D28AACD
5E35C6705EA728F704F5996D286BED433F976AB7E018621A577AED7C0AC0A84E
A032FE1869F603E6F20386E3A190A30A21EA886249ECF8CDDE2C33D73BA8647A
3DCA7A8DD9E8EC8D9A415D126BA38B6771C489DFC419303EE9C1B83FBFB3A0B8
97D64F30E4BCBEC24DF603FF3BF541E00D5804B6B6543D3D2B661CC551D497A9
9DFFF535AF424B2F3150BB39AAE8CDB306AAD37767BA10BADB031DC2FAB16955
EE78342CCC0E8B5976BF98F215461A8C6F63EBE6E2F1A1104662DDE53388CB51
8B44F3534853B8095F3B746A2459C2EF800FB1EF7F235EBAA9731E3AB3BE4369
1D3636E3ADD5BDF0C34FA80E90D8A1DDE770943FD196E0A7C5F1FAF6970B34C6
4673AACA6B2B5C12B9608521AE736C1F4B97209B063D991300ED5AF3D7F27E76
68E0B858FD8BFF86581E2B9548C691E3E5D9EC4D39C9715CDE86C7D22223CCEB
8A38C776A30AF14912390A7546DBECECD7A687D4F08646E57A12C80DCA022B7A
33399761A50B8E0ABEFA1163EDEC3DFB5DA3248792EEEDD894872D4E6814B4C3
548BAFCDE0CABBCDB97EC6D1BA47F2E77CC1389BF19D73661749AC33F46A618E
A665A85776545BF9662F2179D7BFD604FA8EF4700591AF3AEC647E27B24B76F3
133F9198DC15C1AED830E737909E43EB91C334C44BA35810007A3888E33F5DA5
B3B2C35481C648AFE630CC3E08F77744E401B2934E407D1EC17ECE737606B076
F8DE8EF3344F57495EF49D11580D6FB28AE0B1422521B320843B13467501CAE2
3DB93D7BB779F73B6AA30050DA74BDBC3F8DBB30F32EAFD07734A151BB2BAED5
C9B1F790059339B64BB4146470F30928C9A49AE88906BD6FDB7431A4B50809CE
0F67ABA01CDCC2320B0B097187B9299E3D80CDD7BB5DD5BFA7B28D924C5633C5
45A23CCEE097C41C3759C1FA8DBA0DD95034BCA89BD23FAC18C70093F40FF2F8
0FAC5DD4835F2DFD40540E9A9E9FD951A8AF2CB766597DE00147B163BACFB7E6
EFDA4DED594F1C746D8B46A1145E0E4058F5917B3F21E9BEBDE745EE72CDCA64
FB31EF7A2E55265F32559480E2B6726D3DE26FFC97EB4E3160F117E890C4B2E5
8DF310E6A728ABA85540F571C024F8DD58E1D7827FE97CED5EB31547EBC36415
02B8C0E10B7E37D816F01D56A364B8552CBFAAA95BC4BDDCFDE91CE0EF005B4B
7AB56FFB47A093AEDF0DE1EA48FC8103CA3CA1470864D2693E360006D05668A8
AA422CCCED20DCEEBEA5CE0DA1EFB00FB93E922B18124FA11A88D0F6E0F719DA
57603DD5DA42E1C56C2FD9E5415AA199D4F334C151C1157E75C107FBBFCEB706
5F4EA47A29B54ED8CAEB8DDA2F53D2A703B95487619780A52DA1270011648A28
AA64338E04AA5B92C1EDF3D8DA34FA6D227A0325EA6F22E9B38B6338C657BB21
CD4C582DC04010330F62923F817E4EDC6E5C0E6500F2A975A8A95BAA30C4A134
BB31B5AC45A2E7F6E9CDFC810D41344C4F606049445F8E93D74271C1E29DF7CB
5459593BA28AECF64D903D3E4D77CF5C04B06DE44A41EE4D9FC769854503AC85
69E4A5106E84016DE3D59865D4AB30BD6C9E45C45DCB5408421CC50CD6179C85
34E55CC70FBD8FEFE9F1D5160664981716E3BC7F24B6F54E0323D9BC4B692971
24419EE62D8B0BA726E2B4294A9A76F328B8101DA29E78BD5C4AC383350FE196
4D42DB1653637D19530124858950C22F1E9CF5BC07D46B7A58CDE19CC88DCD2E
7FE4EEFD8AA6047E919823C8CAB2EF5274F45E861E6508CC11A8AA90AED2403A
B2BF1315C2157B3B50A3685205D93E40906EEE9DE5985405974BCE0B84BB37DB
080A45C5237B269B93C0A7CF294A18B45464A41F604C494CBEF829A381155CFD
71CEEA54CC39EEDB6DF58A9896246B09F95DC6BC40BA6916AAB5ED3D24F66154
3662F8978FC63DA9280FF7ADB09EA5BA79D3B66E0C88BEC1EDD78DA93839073A
A4D7B0E627000C4ABA76C47CCFEE92E319315333A5584A951E34C55412049C4A
A5569FE65A006F77B416E0530AB6A8E7AD6C72340AD4CE25937158FABB2153EA
281E1D840206F5DA38E00815E9081F81DAB9FAA8F4DAB305867AC84735DB4F52
A36129929BD2084A8EA37BB6889695204BF7290B68D5E722540BF8A276F8BB6D
451D582EE59D2FF03F6B97DDE05FA00C3D375D2D0AAC8FE298F85CC067B15481
48D70B6A0354C705715B891915FE8EA45244677B9FCE81E72D66177E309F3F83
F744B9EA9E55C3B30DEC6E5E03B3988FD526A82A5E8E1DC79127FC62B2FA7949
B3AD3148868DE22BD4B5708E32CEAAE6ADEED1F463EAB9692411E18F8D6BF391
126B2700B4CF3B59D02E3F8795130C96285A63FCD1E0F647ACB1D35E9C58BD01
1DD06BABA00CA4343BEBEDBE677E053E9732B33A7495DF51782A07DA07F5646C
770C957AD915CC70BA8E08BE7A1F4E6BA5BB9C603E38F6FB0A2578471C4D02F4
283069856D926B9076EC73AA39CEB0A061AFF1575C7093FDAC9F89C3DC06EA45
06F3C2A3BC9FF21128B10CB758DF0F099B459A5264A8C24C098110D2BA1A8532
8FAE146A91BA7D033F591AB1A94B8A6FE0FFB610F698D216D58B4EF6C87B1524
8037CBB7E23D8550A620341C6625A1A2ECE7CEE2598D66277F857231A36155E3
984F147783E9B93975AC38A29F2FBCF704C8A04AD84C3E04A12D2321FA56811A
5B6744813CCC187968C5C26BB8D3E6615A912FA5369C01CCF8C0DB790593B190
1A90CFB5339B8771F325C5FC448D36C7312B11A15A8635BAB59CF3CAD176131E
026F6E141B2619EF7F3048750CC9291397F141591EEC8B612D6656DD34DB54D6
DBDD303CED74BE76664E7DC86FCFEEF2001C9DBA56418FB61F589566A47AF36E
C94671C5E8939AF9F4D53C0DE7142B7B63C86AAFA65877EBBB48C64589AFB2CB
1280AC099FC48058855CBDEB6C2D2A0D092267996591DC3B5EC8252984E9B27D
2E9EDE8CD8303F0905DBFCAE497DE1B755B924452CDE11CF4F20893DD6FF7251
427F520FE00580DAF1703FD968E0F8ECCDE618E1EA5820EE6CFED97C78864EF6
26FAFEEE194A268F24249D44829AA360D731C34DC285501E966A959180718F72
6330E4CC060588A2F65AE64A720DCAA818D49D4440F5D0B6C1F6C3A107E12445
F1BED2D3FCBB87A9597F01C7332AA79143564056219BF87D4B907A04F77621AD
054935E883B2B137D3D1C4BC792E8335CA08B6D83227F35736C41312A0BB077A
60FC6488C5E02FD51A10AC113D4EF70038C649C1677B2204A77F2ECBE9B3C341
F4126BECBCA61E3F3801F9188A3775924A62D30FB096B440286FA655EBA00A74
9A4162904BEA07CE68EE76018346DEEE20839C9A2FF71179B58E1D4AB30856B5
F5D97295A097174467010B15D733AAC5813CAA633746B430B1AAF9F997FDAAFD
436844D1A56B8E25A89D2CC4BA6EE7ABD167818FD4F6C747E07B262C99EE2C35
323F0B471586CA50F54C6381B052B15B0C58C19DEA82C0CA29F00400B727419B
2379979CDCBFA966AD513FA903160C571C3BF1BA239540B11EF2371A3880837C
6D6CA2F374280CFA1586427AE975A2AEC34244874E4D441DBAC6CD1828841C91
069AA87FAE849C5DC7C9EC1B9876E59F3CCDF8BB23D939F5348D7486934BFB02
CC5A22541ED352616830A510DE7732E5D8F7E785BBD31C2BC9D348CE5632654D
2C1740F89D57FB2AA1FD8FA3304EA03F757BB8F498ED98E48485722E78D97B12
A05F3A28438084D1CF90AC4C3FFCD7B3365941C45E1E02CB13CA1E99F7FA1D00
1C9D489D5C95F019AB4CE89FA3B6604473DBD2CE8E278969E0A0FCBCE68C23F6
9381882443D3FC16966555FC222F3FC4B1207522201AB7A15A7A6F22CDC9D392
360BF4C95DAD35770E0AC7E5EFF015F2C74ED7391F40EC94B8D1C163B5DEE5B3
911A20C2625AD3B24BD94D2A42405E655DA47D3F94F882CA2F479437B4E0BE71
8AFA4482C6FB270F8D05B4599A01403DAAA90C01DF3AA7C2BC7E66AB6AA833AD
FB6E5EE13E45CC7CE7E200FBFE639F9CFFF5D08512C02764997FD28368969BFB
0876F236EF6189BE73AD827332DF1B2EADEAC0ED3B939CE5BC3CEC78975FC636
44FCBC2CCF4396AC7343EC62E0E4F3DFFA2B880BF31D93ADFE201BE9CCEC8BA5
0B9B919E05B851E0909968DA259EECC6AA0743F25247978CC09C28C4F878E29A
5070E4023BCE95FE0ACCCC01D0EE219FA8344E8F6D7D4347563BF8AC030B9097
41F24D4BC9494915A82EE9FD37FBB6A46BF077B728FB569B1258CEA5F51F36BE
4F4D0F890D782E44748CA3FE8C8A515998371D9C7D2311F192B4B7E7C68FC6EE
3F7136714C282A2570FE591F247A08319CE9EF1E43274E4E57166E31A2ECA506
85350DA31AA4C33C9687F5210BA225EA1007C444FBFA2126769767E47A967884
9F68589E4BAA9ED32A7A466DE35554C132810C68ABDAE536D9D884352F28EA02
8A555D2CE11F30598F44A65E2D86B43ECCBDEED9E4E5B5B7DCDA20EAA09D9FF7
422FC91F2201431A9E8FC624FF44D26C0100183D77BC7E6B1A6CFBD3FA8BABC1
AE4CB0FD382E26BE0A83169B46D91429DCB746A0326243E212F802AF6A56C709
6E70C6C7CDA243F0BDAA8832B2533A7133035259FD4BF7ABD4F214ED51BAC2E1
7957997FFB4B643294EA147956179DDF4B547965B7FAD4A2C945BB5AD34E9EA6
8E8D0F03FC275EF35E355903931EFFE22AD407ADE0D5E3A1BFB73F80E1FD4498
4EF2FFCFD32426347DF4575E995DF7A85F48CF5F459A5DB240D3E0D977F15E90
E8CF5587D57B1CD53C19D9F5F97DFE60DE288CC9F2884BE6631E2F7BF2F30B01
DAF0750B1CBAA805921D4EB14B5ED71344E54FDA43CFC4A5152E84C56BCCAFE9
F96EB1B83B81454F680D199B0C04DFA27A56DC1EBEFECE6BBA2E6D40A9E8C83E
6700DED3A8F62A7FB3887F8D26721C93A98830DB6D00738F68C771B6F0F27F15
CE2330A3DAE5FF6BA6BF90C7B9F2A4C486FA21D7D86A392919BD343BF26C8B07
0290559D32B14C9229B1FD8647270B7E6AB69EBFD3283A2E5B68AA476C98030E
179FB09D14D12D884534C22E43D5FB2C69BF2387F81E45EB45615A40B00B873D
24745A97E5F1908881633343D14FF4BD82F96C190E0670AB994356ECDB71E21E
8F2C2440EF97455684883D05FE465A99C13279507AF1E51850404FF0DBFA702A
FDDA99C24F3CCB78EB9B26DBD16930A335B93C745F48AAD37DD9AF41BB189F14
B4E3609B63A22ADF574D8362CE18CCCA0D7DC699433A97B837FFF9FA3340B474
083EB7FFC35F888C537201768A5512944ED9E740FEF1E0BAD26B17AB0FABE22A
673CA96E3CA7CF400AE0F3346186C129AA6D9C1DBA65020A988F5D5C6D175355
A65C60D9D5145AEFB60BD3EFB2B5F663DB475250B5CFD85FAF58C53E1110700F
FD0C0CA8599EBB0C996717A934E17DAFACEB6B4FCCF97495D0BBCD90E9350D37
4367D8B9A21878DC2EABDE9248D2379F1040098A6D6508DC8C70AF3338CC6521
DF59938232E4B89789E7BCA045CC360D26BB2D26FC3DBE0D2482A1B13E185458
7E2455C62328F4498835D4E4AC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 61 /equal put
dup 77 /M put
dup 84 /T put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A7E5C87D6695A2A72E27852DD3E4CD0639F113C904C85DF4A34BB37829
5CB49AC66E224BB256221696952A9503B2DBDFAD92C8338D6C98D3010785280F
62DD2CC43615A605AB4331EAEB44EB4AC1D2AD7A4BD3C16A6BB93D77833B4937
B47D16E47B22101293BAEC23431EADD37BA03BE10B17073B3C3B7A928E1C9663
FC7BDBC206C3FAF33B88F4785493EA7A993B5DB50660A5AD76513256F90C06EB
195D8770AC809C96474846113A059D1BAFD46F6695153F1AE9FBB1A83D4517BF
CECA65A59CF4F53AE3ECFB6F9795FC085DA2D1DFBA1A7641E13415F0163AE0BB
871661BB122E71FD32C44EA72000BFCD5C54EBBB4EC344BF1A1698657919E267
988AC8AF9AA532B6F1C6FA87AA5D0C2524FC20005470775E2E8A574DB87B36A7
44415B8C958B346537BF6B9A52A73C3C31AA419575E804AAE41FB3AB15C0CAC5
EF5193267CFFDFCA8E40AA6BF33DF879BC2EF73A51C07745021B0CF4A274BEDB
0CDFC9FC45A59AB30321C2F3BB86C75A453E02AA6E0425ED855F1A6D65DE7D66
240E693D728186DDD2F741412C5412197DD34000D9B3EF0C6D2EAAA3BEC49376
D1E8F6254D1C042EDA1A9214F83C9155E27E8B8E6077C46FEFEDCDD6F77345BA
C74C309322C237C15C78B433B097A68B687C86BF1873D5C44FEBEA1DB2414DF9
5AAC7DDA1C63F67C327BD207FC8F6D7888A4A980B25E79C84ABF2C5ACBE87490
BF1270B98315FE6C2A4EA9CC14B9A66AC5C0C4CA284D524E32AE4E5A787FED1B
B6B48B01EC3C3814E89E0DAFD51F98FA026C3E06DF8AB895A336AC0E0AC19DB9
F22566754C9631D3FF87D1E5F914FF3480589E612F00FC91275E1353A3B3C798
773E738A82B2C43C102BBF077FAC20097223B3445B686E5A14678397AFDB0EC6
5D6E3379D26B52EC07F661F5D6565BDC53F34A9BAEA4E6FADF16867BE3D67B59
2B2892C892270BE9F4B41D055527B127D11F3FDFED785687B1CD8FBDDD89E0ED
88CBCDED03516B1F838AECFCD63C85691748B912EE053099F180EC3C1F872D2D
1039D6F4BA0CCDC3934FD5F28E8D151856E6F4523A1DF9C05ACEC4F4B04925E9
75D24B1957AE92B9B1DFD2DD0CB36A2B538ECAD7F79FCACC085B0E792165E252
B6B472AE58573C03792E7D2D39288F490D548A6344962C84055F651E11ECF290
C12992E1893B8CEBB8819BD5A365A71D15670AFB697B355852F33397FA217EA5
53B0AF53D809D51DE65A8BEB696362B861BACB32A9F95C9D755D4D3388B0F032
42025F0B5C7BCC7D38A00ACA4442DB4A04EFF4E2EA51AA90FC5AEB4307F7E35F
0CE9A082109E9A5495174446E4079472F7826128C9CD6F0FA98A47C5CFD14761
6F3E78D5A6EACE728452BFE82A150A8A4A999F10AC4EE7169F2A7AEF3BC1AC10
FD717A93CECFDB1B577342044A2CD8E711F8FDAD13473D1EEF1BB71DE6C2214D
3090B4E8B9CB45108E95DAC8F14CD55CBF9099F419347B3D11B9BB955C89B4AE
6D3F19CF8764C216E4E99FF62D6C4235DB14D7C362001CF31C7D6030DDF82AF8
D5B732ECFF15C59A0781393DE312847740C3CC24FEF144AF317DB42DB423FCB8
8E9FBB09C1641C6AB84C2BCE2650A5FBCD2C0FACE86E16709D26E61A4BE1832F
49AA6F967A2F3AEDF2706983CCEFFEA2E917BD56B44630B1A67E24EB8583834D
5FBCC2A19BE4FA19B3C64E19C439C45F2CAF53D7DD801B4324044AA28E43B6D3
28B5411C7E123B5F64363A75A6E1C3DFA84A0229F85A3C21AA907B43F28508DF
8C981F0F09F3D9617539C7DA938FF0EF898607AA5149DA2AE682CC7E88CDC317
E9EC98ECF6A1B7778C84F414B0E452A62DCC415B57C1C28B7EEC1A9EA58C22CB
FCBFDC93BBE5752D4120C6E332D8AA89CCC07752E1739474D1DB797452FCB300
31F888E2FD1E03E15039F9A20CDD4CC6F47EA580DE39E5B01636BA34E8969738
C7354E9284757C689F71AF63EB8D0B34642AC941FF9CF17AA08C82640DA73578
42A6731D662D68A75CB1339BD0FA9FA884441B4EB4AF9723D56F6C3E24859972
F3659BAFBD517CE5030B567494E77BCD5D80CB271F7010349AE2EA91060CC86E
2490190F692CCD544A67A1054AB33864C4F4523C2A859B768A9850310E068056
3E998743F51282793F4B8C2B400BFCE19B04006D87D65DD10ED3BB8A94528B8D
75F056D81DC49052088B0F6C1F75F9B41086E76CB084FDC216FB2AFF3FF151ED
C1EF4F8E5DAC048C0554A5063274DD5FD2B67233BC28B3EC23A1360A0554C40F
14FCB26A2599C10E00BECE91510E7142EC04666D01110034BFA51579E7FE6D99
8ABDB12EB2AEBA7D0D6AB49761F631556C34AB712FC365534ABDF40D1E819300
6DB393D8E010F86BE0DE8AD29DCE742EA37237011E6DB560335AF1C31AB90D74
E4B12630C265143179F68D88F641D368DC439AE4D13C214A29666E9F7238E47F
418E8A8E5FBD78F32F36F3FCFB669AFB98001800F3B877E0D579D90CBA361D6C
D6FB18CA5977E2D284A6F8A20A046EF469566A6DC6BB37931A23B703F194EF5F
D8557CD02422688A053E0D314521CF8695D2FFE4672C866E0C2B2DF2018D86D5
D1B131559FA7E5BE2F01D89E7EB011F8B0D2D688A5EC1577057CA08C83910433
6A20F6EC02BB7EFC85A0A2668CA1516E6C3E4070B0A8C76AA6C998C967B05327
98E9634EF2EF716B85D15D82986DEA784573C32BF3735E5B4A7E0CA52568035A
FEEBE8F8D590024622506EF3C735FBFEFAFDDBF3EBC1B35C0C14FAF50E926584
6B4AD4BCB42111DA01A3B8211A439A9116C7EA4A10874503CD11B2EA0B522253
3DAE4960FC1FE6A3D09D0A2F46F1AE0FB1D34A635F398253B3866C2AF0078061
678FFE8D84A74DA60B41A85E1A7CBA05B05B23BA1F220DB1BF0AAD0276AC599D
C2F61A5EC28A9962E645F32C556FE95FDB1971BDE1A628D5F440CA44062E3CF3
4692BB641EC084D80FFD0703CE0AEC1B0E304D331EA89986F3E28493ADCB556F
AA76F990779C549C40D0AD73E0DF39033DC6EBBD6850FFE2D0D7EAA7CC0C312F
1C17575ACD9B5E611FBFEC527D6D941A52336F85839730E73F4142444FCD6615
9C92F71673B2EBC95D26809F66E64901896901EFE87CAD03100EE830D963C5BB
D46A31977CFA64477069700B4ED7856132C6D59C797174246AF1D1D0BB1CE92F
C1ABC5F9BCB27756FF5ABF487823BAF738E9414CE1E93159AAD19AF10017A056
D6E176944D2C112042F917A11BF713FC4286BE6384D4856D16368F71A165545D
89DEC95EA8983B0A2CAFEC95E49F69BFDAB836328F3ECBA6F3CE7057FEBF41EC
A6A89634643B7761ACA57D7F76010FBD5080B2E8EB0BAEE99012726A56545DCB
B6843ED558D22A9FB85662C0211B62DA255C2C553406A5926992AA232DF8B207
A8BFA4CDAC81A2FAB38A815BC12569E5DCD7B88BFAE52A363276C5AC41F82C21
0A09747408027A83FAEEDB14B49E8038DE3EF2973E29CB865BAF5802E0AC2877
5037354BD338016C3531EDFC35CA8DEC3E8922212B132B532D2B66ED1FF6B1EF
46844486A4A4C3FE70FC720B91CB0416C455DD84AC67B8FED165767FB552D077
7A7416C95EC6C09A0111C8FAF9BFE4396A4CBE89573D2B075F7B273C5F9B7AE2
B0670D6169407240709DFAB6915262F287FDB0CD62271D82255A808584EF2088
EA40D647CB1F7A4966506E25F3151F486FE6CBB01E64DEC6A7459D56F15A6004
397D4AEBEE20D110B2BDAAB328F75A8C8C611EFFC3EF193C4BC97B12BA641FDE
44637054C4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
dup 127 /dieresis put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F362471AA58488620156F3474FA59CA080EA96FE995D2B3DEEADF3
3141D157481C66507725ACA5953CBBE1ACEE7E3F02C72C6552D15EB3D612730E
61A06A43575568DC3CF3844BABF04CA767E2995196097015E0C4F622C4356B6B
F41DBAFD797A4B9D7AC22332C552043EF98913D0D9B50CA6B7CDAF903BC5C04F
D20A952BA5CC35B646ACD0A287C956B98C450051AF6AAF79DF37F8954473F8F6
652BF03AE2AE82B99D820CF93F5FC0BA17EBD7AF90313E70594EB5C354023BFA
07912408F1757319C7288E99872B907D5AB583B082EEED8AB079C63E38B07D11
6744856E689A479CB3A8BC081F33CB06755926204981DC0A45B3ACC18F6865BB
EE2C50DB43B62E3630FC1D9B1FFB3BFFAA6D0A20C0381ADF48E4D916BEE85BA2
BB40F538F55C11D50F882B73913840B45161262BC8B0012694C3EF26452F9B77
2CD7C7AD6BFEEAFE31C8A721C2D46AA00C10681BA9970D09F1E10DDB693AFE84
246AB18279A2B24E5B50A2FF6337B7B1039FFDD4B00ED3667B5F2F7BC2786D2F
525A0E82234B30711AA835EAEAC2E404915FC7EC0081B194765032708B5E11CE
EF6868298CD26E5B9EF345BFA3EC2911E2B96A0B40AEAB95BDCCEE38F5EC170D
3BFB792D2DDA7E57BD2FB7669484EF9322A1BEE009594901095DE2BA9A15A0EE
4DD77404CEF16EA6C31FC04A8FBDEF27B9FC1AD3264388B0B12D8E476305B912
30B51624D4605C45B514473F327DC3EE8BA69032A95301CF714F225A92C253D0
D943C80B9CD0524C5B87A8D052D2E47A9725EF869D3B89097CC13CA9BC695FF8
A9468004450A76A13B7EE78A03CC18917EC44036C2DD237344E594569B8F2DDB
21F7619180B8C760741961CCBE54FD6DD07C4CF73B346099234A1EFFEFC88574
6324E4232BA18A38EC9F0B780C298877EF0AF42C1EBC2EB52DB64A1E1E352503
36AA29953A073B864FCB31BA938A4163D000A159ED4D345331FA1EB4009CFF67
1D107BABA6AAA48075C6C50BC7683929EC146594E55B01D4F5B582328284068B
2AB05CE92EEE1DF4557DFC8FEF287CB7F961F4F1828EA48B0ACF5C63E1EEC8FB
6A0EFF132268B7DDF7B465D4A21B05993F4A4CFD168A700D04A7303BC2C00391
392C3FF97E770E6FAFFFE501242B20B4F7B6C17331C64BDBA3E59695E176CC79
E7632AC6D2E920AA048BD1EBCF9909D8C314D2EF3CFC5CF88D8570BAA814D467
96D86CF4415C5B739FA6FE7B4C228F06268D28EE33381982E7B005C26D2604B3
AA363CA4732B9BB0E4D4EE50556D777258A7BC232087C9F00B0D5EF70270B40D
3071E14E4E5AB5AF1C686C5A7C268D36A0787DC9300D4CFA004F89A73FFEF780
E6BBC957E31B764159C3ADF752E6E1A6C3B5B855F8A483497A347B601E3C8DE0
362D76B715916113CBD2D3765197074104C7E17B87670CDD5C227A1467BD678A
BE442F196034B02132850CCB77143C2873447FDB8767C462C63916D9D4A13198
B7910E1B274B27644DFB2E8372C8CD55E6E2AA5CA952A079E1E6389927495921
CA39D69ECB4DF382FD2DC213EE382BA1A48CA886CB6AEF2B0C50CAB47B1FC40B
2C95E13190C92480439E3C56188D162C294F24987AAF4E15E8FF7ABBFF2A12FD
AEB884FCFFD671EEB94CC075B815C6A45549EC23DB85923F4C37221641B75CE0
C5C8FA8403C2C9FFCB66CC74C5160D6C7042DDFF33A954DD01C8E21B21F8F364
F6FC7353BB524CA5AF7D1406F82133D7BFE7F66EB79CD5B1937FF8E51CABD9B5
5A7E5B64918CBF1BEC1D07A9F817ADBD1C194471919449BDD74166B19F83DB39
0180C3EA858141033C9B09E756C91C66E22C10792204FF22481A49FAEEB2946B
75B1620F50DD46B5F299871544B3BE230D6AE21C471D874691530E6C189F0E2E
2797BA6CD6DB3BEC3FDCC0CA285BB4D820B1DB4E2282245070CAA10FEDC814DF
DBD6922B2923003F60211DC3A26BD62E832C689F22AB22C5ADD53E19790FC618
D3E74509C072C2669EF7E6A4320011EA28A2E8285C53A1B81B17E42CCFB6922C
2D235BF9643FFA11277C0EE898F875D57D5C67D702AEBF0B892A83BFCD0AE12F
B168192AEECAA22E1FBB1D532AEBA65956FE55E13A661C00953FB1BE0128C6BD
43A4B0407954BB834F2AB8F69241EC5EEE712E1F2C8C7751B1C7FA2E6F15CFCC
15EBE92E51E7FF064CA03F847628F1D04A4333374B29675D814689CFB33D0F34
A179772C7A20D2E9C73DB348281BFCE530482191914D2766AD793BD03F317874
48AF1F586142B2524A7E16F36EC3DD096B67B4A9A8D45E76B489C435924CD85D
40E4F8FE792A97F616173C3E69F47405BE5D5ABDD0A7A0E86C8EB19DA97DE5B2
CF5326A13EC5AE7D972336AC31FF65F08EA65E858256AD27D93969E81CC7F165
2695EFAFBC424FC5B1126815AA6D5CCBC387024F83763DD6C382715E0C2F0E4D
CEA2EF9866B0758ACA2BDB1A8C8C9D8F782F84277397DAE65B90BDDACF250CFA
2767B6B86F994CFA75CD39AD747A1FED8352B1E910C1CD4BD3F70BD3F34381B4
F0BA6246487AD473FA612E06231904D16DBC6748B8AF94941F04D6B0D0E59944
AA3127057EB797719FD16ACC8E8667BFF35C8700222577C831B0F9C321B75F9F
8395469839226A8D2A90D62328EF718ECDBFD7503A0750027042AE2C72873B27
1827D743E89BB6098D8DC9398F7ECC3D0BB773631D6FA794941CA5D1220E55D5
91E3F3081B9870A584F81C6994874F668121B6317FB8E40E9A171328F7543E8E
7B9918B3F1FFB977066069B6A422AFBB69563F9BDBCF210DCC763B415DA8A4E2
C27549767F9B30D9D1E28D4FA5D9B1838BB41573596E6AEAC5D82649C128507F
648221B669ACCA658F8C21AD1D13D182824823D0A72F5B9CF45A41B272741BA0
A7F7158446A7F3AA81126A78F0D25E4C43BE485CE28770008C94F98803F1D155
BE533C37468794CCD344824C6AD0B3578A8C830082439E5FC5FAB5960A2E3E91
B7395F48AC5D6BFDDFD0913A7FF1E9C687FB060A16F6936C9A0AC65B36A0AE7C
7E03BD98EE97FA235C2739A9A25A887CB7A5DDE5CAA5AB9C74506CFF62DDBCF9
51C4868A47951775CE8782DBEEFA4AE2D1661CB8AD972A67D259C1703462F5FA
C95D2CF1A8E23E12340D6D91209EC522260E0A4B16553994C5DFAC125C9244E7
9150C5248690CE4974E81CE5CD0F2636239BFCE1A1358479FE601E8ED0AD98E9
6364F3412126DBE1EFC4FA4A7456E1E3E5AD371752316A17005BEB0F5EEBC511
2D94C87A42A9148E49275CBB403774BF32F1F927BC8967A7AC2598441A67BF10
EB839D5FA957C3CE225C0FDCD1DAA91217354F915A9099A303685D1E7AB6CA43
78E0ABB1A197DDA69B75ADED128FAACE1F9164BB0FE39FBF04BB57C313C49E7E
3427B1460DCAA31115A28DF97306AFE4404C5FE77425FE62C24ACF71C65E11D8
403C382D29751340767C7DFB528FA9B9E802F5AB77699F48F4B1118179748A77
C448DDC803A95B3A733E367EA0DDBD91905F978E7591D3F820AEAAF461EFA377
F754D599D281D3E8D09DC525FAB36A818D2430674841E82261D3C44404AEBBFF
1F0245FBB656052D47A9DB40CB91D1102A8A685ADFDBC3CEB55A632E12E3AC1F
8D8546FB3D92658B6651B63734BF6FD7DE304953D0EF9A97323289DEF0DF90FB
602D59FE9ADEB63633F14292E17F81E2971E809FBA8F47F5BA00DC698C54C076
1615331EFF49F0E6CFFC67719A505F093E8B6411D941DA9C71DF7FF7E8006ACB
F8A35FE58B2DB2251D39C721A9D63471EBF57396893995CF45425E53E3541297
6AEF914A08EB0C4B651E83B1C8267BDF7B80FCCAF634AE7A1DD137E356FD37C5
7F2CCEC0CD22495422556F7E30E09591D8822847CEA08C7BB2A9581F46C913E1
6EB4A3F03023946B29035E7ECC022378175440635E06993230B0D07979599E8C
CD1BECD4FC063733F25E6AD421DF22061414AB89CD62AB03A63430C2B1AD492E
C2E938F275EDE8B34DCFE203F3A7DBB81AFA3031E51B1D3239A8F66B52D07C5C
8E0DA26530477D455C7DF225867141C8C83CD58E4190656F7BB5DFD66193D8E5
977F6616E300C3DD703261B09BF2574952508B4FD675C9221E3F45BC7A0FE9AD
F86BCD621559B89E2EB8FEF85F92C0CAE0749E97BCAF147315B7ACA96BFE8621
26996AEE7548E303ED5FF9463C46ED985A86F9BDDB2548C6394AE3B8B7F11FC3
780E630A2464AABF6DCE3A8CFD2B4E5483387657E732FA02797B386F258D9B00
D6AC7B4C83F112CD36CFB2C99F25C2C33D8FDF5758E63961CFD7A726E5853FD3
62F04CA8D5790B301E9CE62B78B08A3092202BE33CAAB986FB09641AF8DA6C87
DC2630613D9598005391F9658C979B2B09CE5C3BBA4B56D34A976D53ED6C8057
8308ADA3B73C812CA1322BC61C13D8C7D3921D213BF9A000AD647FF0E0F621D4
B4815D375BC960C625A528E6F956F627EC8A046F0B7F400FB895D29361F8253C
2633CB9E31C8B615DE98957DB10643284621E02688693A7FF0476A8876ACB5D3
3A1D05F4167F45530C20E875D755D36AFCFB1BACE58B9B77D2A5D9A2B0EA2117
FA23CC64095CC1C21E996B86B98260E0085A73804CF692F6AD1CD961AC6A10B5
A7EC45BC85B426E11D2E2F444C108C4470FBBC78DE22CF8856E7A9237872EC63
60014591BFE11940EFF647EE2D6E212FCFF856FA5F423982BF9CE9ED167EF4F7
27A7BB318DDA32C82BBD8CEE9EAC09F950040895773BA22A3E913E3A062E3679
59A85AC4E217BE8D9D4444826B6D9CCAC4B35B07FCF177FE859F2B46DF97AE05
915E791F1CE849154C53C44BD88DBBD94CAFB3DAE3C39B1E3E9561040553B197
EC9CA5E1FA1713A2DDF5CA09DBC65332B6326944FB697E0739626A5B1D4AF520
95EBD8EEA0C82164F40A4FD34DDB5C699298926B753E8491AD9912861A0F873C
1C030134DB3CEAC79C0A8E55A366B0EBAE724518CAA74A4265AB116348BCDAEC
4E1B6102C1BD679471E6736A5C39A6E22F1B5117C49C6AC5B8EBC8C2711ACF61
AF7881959D74397B05AADD6168EF5A0FB78FDBEDC5005E81BF78DA744D62D443
DD3F3DC1599A2B895D5DF6DC9B0D4D55F284A1BC0078B89955CA5AAF7AC918EF
D378010B7069D4ABBD972A5054D2F25B87D8574DCFD89457B7A3853789B28212
AB6424A10FF98030242B34686881B449B7F65754A211D8F0B67EB89E7321BB90
1A6CA3D0B14D23BBB7406879938778E5836CACF2E01583E4C0F83EA6A3F889FF
EB1107A2F93C54C33D3F846422F977B9DE5C7DD6FCADCED532A7FAC9B997A491
F8A79121EC4D9EF6FFB029C1D1916DC3352615EB82EAE324178B3531C0C01C04
343CE2AB3B1A64604B82AFED275BA50DEFB7E1D12912EF7315D19441FC34143C
C121C6A5BE5A5FEB1A6A09E11FB4C2F011CA29983082F7BA8F7291B46FB52509
488087005348157E7C4054B9038CEBAA9FAB920E09F53F7880D1B93A6362DA8C
005D6175E083D63ED0BD8CAB875BDF045FFA434125ACD04F299EE5CAB3FB4C36
CF022C6589309E469C3640F37A4D99C94695192E3B305BD2A091D00A65D56306
8B52FEA98DB75876AC89B5525234C754986CD3C2DC20AAA5B1558BC88997B09C
5DD1363C1894CC417E7BDFB44DF182102623EE2647AAF18839D0E938DF6DDDB3
9FE4B1EE5F0959114BC52159FEEB43181E71225631C5793254376795862C5AD3
175DF2E578C78222619CBD9100E4996C88DA0882D4261B4ADAE1A7347DBD7B59
A8150235C2B62BCB89AB730581DAF05C35A0173EB89D16B9FE25253C68A6C7DF
07EE902344291A647F836FE733865A25CAE617D30378819EBF83F2C9D6394D45
FBA9789CDA364E96C240CB9861A6BC9807FA2E39DF4B5D5230F4F4183AB0FFB9
9CB00F66CD274832E35BEF5FC57E74202F54B0BDD18B9FE6F8BF8EFD974221A9
F9E1D9462B3BE2940206DB9D80C49A8D1F7ADAF28BD1799688EE33FA37E8BC5A
94AC339B12E58EECAAF70B476914E4795BF1BEB2AC6207C498B2A038887574BA
A76A4F7159117FEE774B9052AC33F814F5B41F6F4397AE098E46C69A7C964A99
84FB330473F9081E12BAF75A1CBA627161F0626AB9DCA8A1C54F2F501AA172A8
4AEE1BCA642D5ACCAD6E74B053E8EF22C8F22B380217284183E47F6F75E118B7
1CB01925464FE711A0FA729CF65D3A8BA96A24709450D6AC15EE88A27FA0A1E5
717B751F6D121616A70B3279EE35A4B3D381282550962D845B116C6CFF46D47A
B8F49161BF6B002868C15ADCADA7C0CFDBA85CC39E5E621680D13C4B865AD329
47581D853818FB63173AE00A997A6A45C86163C99C274F523716F83F8C6F5F75
3B771869F87323D7DAC800496230D0EB3C0B3FF11E43857B0C8C2DCAA2A21D00
9B1078AFDAADDBCB87A9F3F7EF14AE66EAA2EA39B5D5F4D69B5708DD360E03E0
0862AA939088B1211CAA21DA4F3E8D491BD3B12D648C867CB642F01FF67878C1
3886A2655ED7167A226EA59CCF6693B46F29B0ABF3EDF005F801F74D2F390529
648E6065F49B988CAF78C947E7447C91A295F47F1175514B668D3F69EF66D9CA
1755179492C673587096EB25F82C7900F64653EFE5AA4E521441C56DB79F5267
17730803F143D7E59CEC1B5D66A79642CA291C95880AF00910DAD74320068B4D
D436F6A5A21081BBEB38098069AE28448D07AFBFB635F6A327D4423D3C29503B
34E0DE5F4394AA1E0CEFF1F97C40DEAE5902A6CB6D625C691F1CDB1484E9BEEA
CF1A8BF97E31C5B5F5FB0ABBED16566B625BA636C3DD6AE2653A3929A8F7CDBD
9221DEFE62D69D0F28882FEA14FE3AB6245922AEB89F4FBC84DBB378F7608DF5
6B90B159FEE3382653E10429659E679CE563A1F69228EB27F8BA8F50BFCB7397
4691566DE7551C85247AA07277764F08D029AF92C834411DF3AD02A8D8BECE20
3F52839BEB60C62F574AF78D6A96DB9245FD6E8CF8335E4BF461E89358AE09EF
2431BC22989E29BEB0A15FEAD6C09B0762883928E952B380711400833C74D27B
513F5B7718F46AAB5E93E79D03D4B8232486E44A3AD80536BD485C83E082DE72
BA289A39200051595EC17DD48900CC14F88EAD34F85819569E7FAC542FC7C128
71DA2C3D6C6D7CF71D1C82C08ADCB8D3FE4A79DDBB62975F65C004058E341C78
2B1D7DB198203182AE8FD3C6286E6487F52566AA5BB9BD785A3867731405BABF
3CBDEC5959666832FF27BCDC0804449F60E7F94BC670584FB67AA64C63D9DE1A
C1A4963BC43BA1962C3225ABA4C9C7F4740DF7C004CF54023759B8635059BE10
F823AD8271213EC3B31DAC6D1FAAC00AA54F539510805F8E156A385FBB50AA49
61EF32D6423E07B092D808E30B8AAADB440157B1ACDA20A365B324EB6CDAD36B
C6599F47B1A058E1B8ECB7E3D4A824349A563D874B75A52B510AE1CBBE186F76
F1ED70FB873B3C2473508FC29CFB15DBE235668B5333B3C4D8F6353208801887
0EF10A7A60D942A0AA6A3B8643A9E3977AD6DC043FF3EF970F85C31B3E230BAD
9C0F1352CA5409A0C93376EF1F97B7AB26C5DA99C89966843F096B3A20B73CF0
32FCFDC812811445063963B3F25A32DA0A44303658D859E06D1439B793098E3E
3D4653F58D7AB80DF8C64C617528AC79F0C39A6A4492E90361C4D0AF58F0B6D9
0FB7833317F8F49175D4C1B2D28042FDD73B4697ECAD359A5D9B2D50399C7243
D45F893397D5387309B01D25C82C1B470073E8ED940E9C035386E1562D3EDCC8
2ADB3C57E60285979C4568B18079D91F51129633E9FE1E8512840CB85DBB8866
20208CE5F64E97D9F4E8985188FF66149110AEC07F1EA0A0208C41AD66F76826
08A9630C9270D37532546F985EC546CAAA4FCD8323E20E0E50D9A4676446B404
1EF3AD70F8E5C8AB3E47BCC4CBD25B23D2FF2C33B1C5EC90FE0959120838AC37
A274D8EC932CB299A0E90886ECF2D36C36DCB70A81094D1AAE22FAB8BD0F0068
516B1E456A9F33B521DBCE8EAEC3F863313B3FE6533DC625F0F88134CFC2318E
BE218D221B94F211C4D40DA44BD9587ABEA3DB04FA9E3160D5F68FD7768EC7D4
F439B66383F12D5C0889DF9638BDDFF40047D8E287B9EB2736D453D66ED4871E
282A1302CF2511260AE146A72A7B73856209F39D9980C1D2522CEFCBD7E8A707
C4DCACB806710B0573BF56C15C3ABF941E630F0FA6F738D824AA31A56241D1D7
8CD25FE672A7F071BE0117213EF47F1AC4A182B19C9DD3F551236D426DF10D02
5DD8073F78C8FAFB505FF02FD698A0ED2D8F20774549A2D4DA4B20A34BF95CD8
00C95E810A0390B8CD7DFAF65A6612D8665CAC2932145103AF75074184819E19
F7E06EEB403A87B288C98AB9662437E4A05A1F6FFD1752B3AA3990E8D9982A82
ECB138D4F740DF5C02D62F5E77AA91E5088C010782917A23501FB40E4C218E27
3324921AAF7096CB62F16301A8FFCAA38AD823F844382F73BAE9790D7873BF8F
6FB71EF3E2DFB2FEE178851ED7E2A765F42E9C66C88E192532476CD8EAF0A524
BC6E8C658767A57C1CBEEF6693C80C73CE2C22DA0A99CA6FE2A0A86452AEF767
46BE7EB96BEF118F66DCB80F69A71FC3A4CB586DBFE5ABCC6B14A5574EE09320
6D6B5D30A68BB1759542538C55EEEB1D57ECA4A9DC503C1A561B9EF3DC072EBE
5E6E40351C7793536D484FD9C5849DD0549F2D214ED5A3E4C72C71A143737D51
5EC75DD0EA86C3E865D8CE120C490C675AB3440BC0B3F052683755D4E2C693CF
6D9BD2A3FD5B9D3AC8DDDDA045531EFBBF2E531D0B2D2CC6E2D087F7BB84F501
22EB82D3656DB5585929AE615CB602439DD38402C077C37B02A00C96705A67C8
FF2F104634428E5B418576770D36CDE67EBF8AAF54F4A47562E9830B0E1761A8
48EB57046F94EE078C9CD251AEA225D430C81C4DCC0C6933C5CE1504F22B3A91
D65BC29BDABE1AC957BC07349E0DB96149F3A9150A705360A3B35CFA2DA4A21F
D97A0A48A02E127D3A927445531F9A0515B2C6ADAD36469375E5614F2610BFE3
2D0761B5F39FCFAF26CB1BBF6246502B0FFD3E4EC2D1A4BA9BFFAB98060AE971
802AA2EB733BEEF72E3F629C7914A23BA9264CF30827AD2C61953D48EE2A0843
4E52A0A263677E84E5F61A32686F76FBDB89D50F4B6EE65D2DB6078121FA8760
850356489EE020E331F87BD4EA528E0322D5A29E65CAAF6292466992FFCD0F3A
8CE001DF408574B108CA65743CD635A07483B9886E5C07DB9070DFB7EAE9995C
A414450FDFD8F7D579AB090934AD6636A1C679B5A841CBF5F20DCAE59D43A85D
311E5D224268E900FED98AEB5C191122BDAF12B9A29FC718E48588A402C747B7
1798BE476225A5E48D8AEA62FE8FD1640C266017DB27BBB3662A6FB1F30C7CCD
C919DA85F8CCF48D8D2A46C3FEBED1E68AA621607E38AB0C948CA4E4EB9EEA41
B02FFC5C67C3DA526C9C4A9CAB25753C34791AB35B8415F78099624FC50EBF02
5046AF74DE8DBB7AF508175C014AD00295B7BCDEFAAC7CEB3267F34F6C886516
B562DA9F7F49228338F4B86F7705CF453557D1D0E85FD4DCBE7681F34A837A68
B99A05CD2C3C86D7CB53F87B4DC7D662C3747BA97ABD6E93DC864EACBA58FF77
C941201693F1D01FF10F5ED86B4359ECA312739905395BC6E9DC477FD6FD6DAF
D773A7D3543E4F708F0EDB7769CE4F096871779F0B2F3709EDE547D8D80FEC5C
301351CEF8AB07D80E9B0F9FD8A2D41A012373E490FC6D4E520792B6176C5FD2
0ACB769035309031578622EB6CCABEF4685F43B5AC2FA847A5CD55DCC2830AA3
208F351513B2758623EFDDD3F17A6F7DE0AE0030081C3BABD01AA066426E6A8E
868F1A95EF55D48D78C2F5A68746E95080E8CF73C038DFD6FFB176DB74BE5191
EEEF65B747BF6223CF894440FAE53EB61645929E6DDD79776C96791A5E345EBA
788CBD08ADE0B0BD481AED6C6A57FC30960086A1A1CF388AE5AC37CF4F1EBCF8
9417DF07C6EF85F3931861F8E6E3715B8AC9B42712FABE32B2A47F15A4A5B770
33892968B9D698007172F8B4846F8CC26B994A44C0479E5496CC7E994D592B00
D87997A1B6DE54F4BB3600ABB2F23D92C2FC2A38FEB4890A46105D13CF2DE3B0
856A668272A0C04EE107933A04A19B9575DFCCFE857BBD77DEBD79BCBE67CF18
BD31F2D06D37BB229F2F74B395E9BE8EACA1C2F25BFCBFEEAD1EA7D9E79AC609
08D047DB29F2529DD71CDD6156F644745FE24CCAE1D1032B4F1D053B516DDC1D
812FF948FF2D29A280A0487052B0FFCE88D123BB253CCFE7E24D56E8E1328F1A
C8434654301BF258973D7F4299B814B516C1EC4958F4403FDB2267BC972900B8
BE38C6CA5E552CAB1D9C1468DEAB8A59E82A8D64DFB364B11BE9A1260FB217B4
0AC8A335E4585D819A334F2F9BEA3FF8ABE0CC33BAF7E70AF096FBC372510BD7
5E786B166100706AA2BB6A41DDF51FE06332DC125A714BCF37957B8B36EAD70D
3641CE3082D103D245C8AA3F92A3B48116D8ECCB6304EC04649E22FCCF01A489
9EBA0E5BB9D059B95D2CCC92697A104D3408735BB84112D236137CD198666D04
448D4D5D255693388DA8C1AD8AC4F34DFF5AEF931F970EC5BD58DA6559C5DEA5
566AF29195C653FAE241913D899FEBBAA8BCC125E3CD19F137B68EDDCF9F04B4
28E9BF04A071BB229B3598735462A36155D0FE036708E0D23AE3B3C4EE209F32
B51887A029453C03BD1909E2D9414B1CC999BD251876ED83E55F46D09384DB84
34CB2582F75CA7F1BAABCDFBB207FA5BE3DA3A9CAA0EBC89D8D49DCEF87C9B0F
A939FD495542C64709F0BB6F24E81C148A8FC3F71E4D67971CF746AFA574C43A
3327F99F89A7AE74BC188230D1AC2F5F4D7799C642024FF291B55FE5D717BE5A
64631E3D6E683997CE491CAA40B6FD8C008831E836787B54BF5E8258E8EBC17F
46FDD9CAFB584F95BD3F74B77184BE19D5868634A980D6CE7FC10ECE2DDC6824
29279A075FB44D14B29E9A16D214449523E8257F4A61A3D391E3A39B86D04C48
661438EFBA2933F4395510F07072A67F87A5D4FB554B4F873A3AE08295F947EA
BA66F52BFD1154A1ED8F00D2B7ADFD74F4C5D0383D40DFD1AD45A5CBA5957C38
CAA032BE64F0BDD7953F0E791EE1ED02043815EF89F60195ED60C00418090E47
7C36B646B59C7B90A86E8BB59DCD8838C7CD55D095BCE46C473460ADFB3A1995
FD35B463583135DE5BC3F0C630FEFDAF6E89F1D060B240DF04AAEAB9A74D85D7
42149FE2C26FA682391F310883AF5AFFE1931DBEA29F7F47FFD20E2D00B1AA88
DD0EF25111F82DE177BFF351E291EEEEA9432E4EDA3BA9EB7F0A010D78F02EB5
47F68F5460515B683AFB500F7696111596B2CE94F88B5F5B2F5FA26F7C6C5A0B
B9EFD60F9D0ACC7AD53DF68DFD5AF06027AECF49F9852B05A125675BD0B5E7FF
C76C0463761A77C3DEF415CDBD00A5E30298BF6F624501E40929520D826A6D64
94FC983F67C80F4142DCD8B2F2F4984F1C7BC9667A6590089FCD893173C95C33
82B5C4070E870A82C7C8607AC3AA3B68D5A95100D143372BB599872F5D061A74
A5423AF95C9B4CFED9C19DA774C646341419C793F0EEE52764DE1974D2F7A6BA
67B7D21CAFA57EE05CA012A033E2076EB1635064EEC5EE4979915C3FC4338866
678E73FFE73F8D5198A36CB36A3BCCB9B1A73CF707F33A5A528F503E7AC9C74E
7A6DA180A52AC5D6C3611970265C07025767A9DEF42DCE6B4C1311167ECF665D
DC4E41BB4B05394A6189106D2871AEDD025548945481185BDF951F56363E777B
BD74CFF9C797A1E1B3DB7084D5BB93B2DFF454E751910C69F6ED1673E118D4A6
58BF64BDF7C0767A4FD386EE6AFBF98FF5E0B494B7862FAC968ABA7E9FDD8EE7
9F61B6B3E6C1E24DB43ACA15FCBDB3AFA07A1A5DB94520938C7CE0B6E5EAF221
682CAE35A69AB806E9632F58396D18FD88D6411B323FCDF2CE146B98F91BEC2A
C8481D5BDC0E125346571C9D2F880A5232F52F80B2FC3410D10A6499CB7F6D03
4C938AE33B64C029AC3B83750A4BA9FCF21D4F50B2F7C599E91FE0C916B75E74
FAB462DC57DC3B66A5F583398CF5036F3369D2CE904B207E1E86F2A007059A84
F1980CC0BECE78B4D20698AE5AF421198869024153A8EAC6EAE8294FD33C6FA5
4391727553D0830DFC7F390F62AAE9B375C6901974D033643A980BD3D2488725
634EA9CA59BA7B49B5EDBF853CB137EBFD3A7BCAF4DE7F7AC31E199A4A714ABA
52B45DAEEE8AD280B893E4962A1F17ADD97E12933A0DEA669724E52A9D85E09E
E7E0177F5BC92DB0DD07174CE82EB6E2F64E42EAC9D51242317276741DFD3200
057043996DB5C4776CBFD64C44947F4554EA2213699CB9C59F53E0A2CD85D9A1
27C2AF87E0EFFEAAC0E7887836858B7D91672C1F7A58B93815E0D9DA6D1188BE
EEDD607D1E2AB9FCBA79EB8B879CD72F2AEE9D82FB958E8BF1A0A0EB596D6981
BF1DF433B9E6ECD32848C4E98EC89E80920E09EE521292CB62DFE516A699F2A2
D50FD4AA6C06F5460BAB5AB7E5FFEE61E88B84BB53CE06A90BF7A9366BC45594
A49FC2F02E66F114A1144AB8AB9A31FC3756D9EDF5ED2C1A46D2ABD1B6214EBE
53A8C1AD7DC76B878BEAC9F35A4BA4012DB3C66164D35BB279DE9B0999BF9466
D0C592D4AF8302374E3F225CF8E8D460DC787B68531C48DA02BB3EF8D5F7C1C1
43E5392F436C7A13DA1D40D609BA5DE61BB24ED31178DBD6EA7163DD13620F1C
402F2EE5F4C6319B8044DA47F627EB5F1B25583523BAAC58F954CC26903B0169
F85B05DDABA58ABDEB3648EF85EC75E1CE85CE0786B6B943ACDD2FCCBE1A4473
34ECFAE817BB7BE95E032EA5F5D91C560C429DB8181DDBC123F53248DF2F8266
D4DFE0673D01EE7F23755956392BBCFA6EEAF02F9417D7724430F45CEDFDBAD6
27E513A72BE8A8F8B429DC3333AEAF8EB5FF5DB82525006FEB895E6D49ACA9D0
5B3C730398E4B891B45D5398BB0CC4448374C1F476580FF2308F9DC231F95092
63339B01DCDE2884C83D360C6A5D108B9794D2279218B3AF6B9CB843262B2A9E
190A05D74B969EFBBA108009BD286EDFA3128BD4DB701B17BF33DD39D6972633
7B83428ACD5694E9D1DF704854B6B5FBAE6524FC3F19E6A0809845A91E331A85
EBFC9DBCFFFBAE9617DFD8B5E54365C6352122AA2D644D541B1DBC252F782D50
69242A54E01D06AD7B1F3DAF71E670406EB2F3D8B51540CA245F39638ED7FC24
E5E583E3564C23C3AE1704134CBF2C9A603DF3213DA6ECFAA66AE22428DEEC57
A39790039AC750D183ABAD3B48B495E492DE0987BC6AA12480633E202F99E91C
9B735255002F977336124DE6ED9D7958C7A1688A8F054F3F8E5AB1021B72AD4F
43FF710A51CEB16E5ADAD3423189716EC13B1870E8AC316B319D0FB4A2E5235B
EBF7D280D4CEBA3B493BC22039148B8F6F45D83912E44E026CD1A993860F7743
E1A406594A14D6F68C82C269EDE25E64FE5E24EEFB08D753105BF16863FBEBBE
3D5451B9A750E8C27CF218927CA207B2E523951B58318E4A37E6D096FFE5683C
45D42BFD76BEA355EAFC95D368CFB12CDE5463E2740332FAD0E2C18A06165067
0213BE86EEB8B41A7A2B6F149A56C75E0E03BE3030AD818054490950C98985B7
36D5543CB26B98BC5CDB042A1DE4FC1E69F07A061A84F9461B0DBC8F5BAF0764
BE42828442E366C013C0461363823250BE5303B3919360B8DA49B09C11C9D119
2B5ECDA587F513BEB28C89AE04422C02F94A88C4DCB1C0A6B98888C23D9B8535
29381E28857DEF0C7D1BBFCF835B5FA16F7B12252E5962B0608187F50260AA90
CFAF8CBEA453B0BD0AFBC51826A90CFB0D82D85D7B8859E50781A707A67BB63D
690ACA25DA4EE6C196305A3E6A05FB23C6ADF6ADE6DEA7497BE4A3C7FCBA6853
3EE25DD75F97ADC4A0CD518803877A499DD00DE8D608757DD9FC194816826451
E97645A5D5C2ED317E04F7D8EEF797AB54A09BA303377FD0253DCDBE5301F173
D38F4CB80A967255354FB5B3DD0A8D4309153DA32FE5087156FBC1F908A133CD
321A79658494642E6B7C46EDE008BAAB2A9A45392F56542A5F0D9E98536DF3F7
74D381448144A48E785B2492C79E740DB15C93805B2530CB05DE14F034B12A57
E129501A53759FA91C51FEB6FA9BAC833C1AFA3B03E11DCB14C39D661920305C
14B063C9AF0F8433FC979C024BE3F65F340749A4998030DBEEF91C4F1F066AEA
886EEDD8B5F504F18E8B8523CD6B9422BFD2055EE85FBC7E0D8B78F73F418B11
9ED93D3639BF25DB2ABC97A9F60FBDFDE6D2C05BB828DF016D26CEC296065FEE
D49C68A5274C379B29430861707DBA78A3B3701F184B084BA8D82A92F0D293B6
BBBC07ADBDC572C8CBF52575BA8516CA9ED81DABE1E965A912ACFDBC66DB9DBE
A397B13E4683421F464292CEE480BB9D14E70CAFB312986143729BDD38B69CDE
86C3252ACBB17F950453AAC684D60B74C7F6DFC1A0CA2F3061F738213D9EE73E
F4E73A2E6DD90D0325C18F9AA7131C46BFC2670B5F9E94E1E80021DBA44DF033
5D709728EF5CACEC0685F4D11F394EC0C22B985E22005BD4C5D2B7FACBC82FDE
83AA9FF268077FA19DE6C64F0C43DEAC60CECCBAF451FE5DB93A775F724E66CF
A929209D46F874BED37BACECD276482E248FD6D2D649D9B1568FB45775A755E1
9AEB955951A60CDDDBB32CB711176C5929FEA0B97F63AD32CC009566AAFC2B98
772698C0B7C8AA09F6EE029D2024D9451B5B27CEE1E7B75A2C33E565F5FD3FFD
4AC98C7EB6475DA657634650D83DFBF68CCED3E59DD8998F1DF5AF5370C980A0
FF27C05A741FBABC15B497A631CEF1B755C58D94FA022D85067C4B50B6B1B19B
BEB1B913570A51B25C8388EE13D73B621AF5173B6E50CA214C9DE53C2A6315A6
0B748DD212418A0A7A89AAFED037124A00A55DD7356AABD6131D33EC27EEA38D
6CA973C852AD304775CDF6A3FFCF9E13F13D6CB09F0B4A63B43BEBA6819DF042
C60A424FB1FACC1D2418DA791855E331D963EB67627A31D05733A3C05EC68FAB
0C406EC41F33AC589AAAEF087FAF40E8410EB05F3AC40B858D63AF586031C408
D7F1BD45E3FAA546605C595DD6FC8268C8128C5410F69F2F1AE603085D32015F
220E9478311A36FA109FF990740542641F5B2A32F1342EAF029F90346D3E1341
F0E9FC42B1E5AE4D0F5F7C10A5D54F87E26DF8CD279CD660D8B02E9864337283
E6B4FB71B16FDBD06EACE9E0B1066F13006CE1A8308ADC886280B9DF5B9D079B
E6B664D5F0E0FF05043C3C84D627E050C2EB6F07394710B452AA586CBFE332EE
B11BD7EA071701A8337736B40D759A18B34D31327B35A4DA47892BED8FC92EDA
33315946660AFF3489ECE5FF3EDDF39CE840ED1A5A247FA60A2CB2261E615B2A
75F4D678423D7EF025E0E6D4CEAF604309264E8460AC8636095C8EF0AF3EA339
D8412F3056505F2DDD049BB5428CB5FDDF2C139FC90389EAF57E9453FBC210EE
AD6C1ADB270C14FAF53412171417EFBDC2AD6FF617404D82C1CD2D221C84EA0A
077CAF598A7D823C8F902D15B2F6E8C242B00FE580BE54E256A5F08F357575D5
35540B3158F088C4EE0EF1F07FEE1E2BF21B43C21D117655369CC684C9339D40
7EE786094291B394C9E74C55FAB2EA9BD7CDB80B32EAEC0CE8C34F3C87FB7E76
5C83595FD1958A01E28F11B66AAF13FCED7BEAE2AF68684DF913B0DBBC11C7BD
0161731DADEC4A9EF0E43332DBB21194AA8547FFB4698E0E0119664BBF55170F
83D3032589671E67D237B7E336B0AE23CA9DACACAFD8BE447AAA0C32DFC03161
D21389CCCC6ADBCE1E4AD40D0D75ED579AEB91B08A88E4FECEC873AE1111D0E6
7923B441BA8615428DF7779E3B4AC714CED1F4F84B69C1562C3344C8A209A05F
9F836E421DBE9CC3D52095D287C13D25AB20DE9AFE4DA8D5F97D820D771A9B27
F41DBDD86513F699871FF7BEBC542D5DFC9D5E76B5865CFC98487137482C9909
CE0C5B7C18FD250353D903556BA9F4490F24184C494B349C13F20B72A48882DD
FA0163C82040E6C523EE0D37ECE0BE187CDBEDBB446F4ED0F37C00B03ABB7A68
F5AE635B5C4D82A02C051634632283F5A5FB297367BF4AC9C880B02841092C47
9289E505F0A7490388B7467603584FD1380422ACB550BF9CE2C5B957FB76E1D1
9F5A3E0B006452A32BF44B700A07D3F0500CB67FAF32A113F18F478B2B6111AA
41BA02F67CDCDB995A33CFDE050C74B496503B332EBF4142FB908DB1D5B8F904
1C564626D9EC453C9A13A7C863876F6E0C354710DDE1EF8021888353BE5A6183
A578E6897EA4BB9FE14FEA965C0814F9BDE6E21C1924AC2955D31F5E5E09BC14
C7CA5CE660DF435F5C411B1A0CB7EF695143C28F6FDC9BE55445981B2074E8B2
3AD6C0F4E5628DECC5721B45F716C93745B37D9065A871A116746A108CE0823B
3BB5EDB2AC9D2E6B84D1B52158CF2B76C72D7FB8C49C74BD679A5E66758614FE
A4AEE789AAABE83A9AF54C4485AEA1587E5CC9D35985243E3E29BA44EB967100
48895A8612BD07B9BAD3D831DA81025418105B41F92F125E3B7E050E2FB79994
851454D17557DD32A40D475593876232B694282176F185DD4387F4AE21ADC818
29F8975BE80AFC037FE8E8EEE384F492475028045D367C9086ED68FDC2A83BA8
9352CB0E89D2B35F449F246521813D032BADE37C11B93FF341E79CFE60F34B3D
153D1832B366BE8D7AF9D070B6198014E9EBAE89F8639EBFE58F28616823B500
F7C405448C88859E63DC63EDF6957936799E6312184A0C6F14384AAF73196FD2
201CBBE1A902909FF731E1545E56AF351391F4C5A5E35507E941E385A764CA2A
599F1F4BA0392DC8F3B759EC361F319FEC725221D005EFE629EA5A833C732749
42A8C1E4A51A9CC6251DDBFBA805429156F218AA6F2E30CF01A4242F6ABDAC25
F1F9E81A2A41E0A3E45F84CC35569C75E051EE90F62F073D2E66EF26D8210072
6FBEDAB073FCC41B6D1E1CFDDBDC64934C1A2C74C5A80E5C947CA186366DBC50
D590F0F17629B32A6F78B582849FB02FE0F09174AE14DE36AC182806CC0DD518
E44490F5F2121C47F169E611EE5CF83B54947914DEE9681799BA825E48815B7A
B7CEDF58CE2FD951F1F844C78B4487CC55AE61731F6FC29F132A5EAF39695916
AE640BFD03181ACF70A907F57F262D7CAED4B1571F032FC0A7B626414AB3DDB4
ABF1B0FDE4D9B6B32BC0FE31AB2162E907D0CBD13EDBD76DB0AFF2272F53B914
7F84457D3C8956C758CD4EEB33FFFCBD25ECEB9F368CC0191FD3EC66F2A98963
7B8343B940C72D606E1E895017D8ABDEC8D14F21D4398ACF82169475C24EB1E7
D0D027123EA4C4CC3ACA57A08709500EB742DAF8AB010C9A02FE0F384C41F453
86ACDA7BA22B66EA97F6D070D5747512FD7C48F5C90E3C8BB37E712EB8F51A9C
CA963CC9D830AB4A7955249C7F803F79576CC0E6268C313E5ABBA7F06402A929
62514E8861145F812630CEF2CEFE4C6C9F8D38CFACB086EA2C0A93A5BB4F228C
FD59724EC867648698D37A54A05CC442EE1E5823B22E4715BE18D7CCD8268E87
C967C1BB573C14AA83EF2D49EE4BBD69FC6FA82A61A9D6B65616BDDB8885D1E2
BF5C8FE672AF959454FA1FA346EC528D6C9BABF7F518C38206BA09B07CC1082E
53B551926A83B2769A2CC834EFF12735E138C7394124007F49A6571F1CE11986
576082C25A3CD3AD3D9C2FC9C21DF42E7DD074AA6098B579942B3DA9698CFB0B
932951F5009B8147E48860C5D89D0560103B421B922C8599C2D2FE82656FA681
72CC018F7B2B756528F96CDDCB5D82F02FD10D453DC4AB4FCA7C33162717A57F
265B3C46C72C9F00F614C6A505528A5778A8DF83186533C96E17DBD5367A2058
CE47DC6A599E40A487ED95860B9805F67335BACBF8F85E04E63212820E942EA1
309004DBD494842130E2FCA65643B50B68F7CF4263CA8E49D2016CC43256A16E
020B8A2873B8F590D33025D77F3C930F46B409DCB4BEC14903F66A2D4835B18E
EF15259F5FB2AA32EEE419C7647C3315C72037F7B8FD8B789A51782E2335DFE5
C5153F3CC4BCDF9EE417EFB3B68A721A24D5B8091CB5DE6B89B47E5843233D8D
7B5128240C7F374FB7FF88403D4E8B00E371304EC87CC05E1BBD61AC3691B7AD
C9EC7AA875173A58737985E2562C90E7328F7A01834E3A3CE61CD474C4079272
C135D50A0851062B885144DD472576C5E831DC404591D54BCA0EB35B8B8B3AEC
242C906A4D8E5BDA76DEEC27AC10002084AF63800E42D2EE17F34181C189EDDC
426FE1DD1B534900828BFE797922E27E3059AC0DC8370158087B7C92FD796CFF
BB6D6B6606905EEA1CAD886F76B034302BC859662D4A185E41D59F4EF7DDEBED
CE02604C71215A2110D1246E5CE14C79EC41E06D22DE344431DBA6C3855E3909
E8DFAAE99392352F11432EE10AC401427DD85EC57697EEFFA61354B2A2D2D665
AAD777005E52F96906222D5E534B424FD65597AE7485E1467125B7EB3C9E495A
7B84698F15012DC546DF5FB8D0E0AB9DE94088365CC605699EC17BD6087D9CC7
94C2544B4E73AC6714B94B6AB29510E54E36722D2E4D168F5C1D45B28422F596
12514AEDCA8BEEF71EE6D9602A5ED9D66A12570DFF16EF504C4128A7FF60620B
3D57CA9753E785FBF61861F2412DD96FD53B69AE8B4805EDEE904C5DE93BA4B8
908F28DB898CA5D742E9CE1472F6E0767374CAF5BD1A14B7C22E59F72AC31ECE
BA680F4E0BF5D05DAA0448746D71EC265022E85C32D11C8EE6201FF3EB2540AD
3A4A0E384EAE25888D0E785CDAB0E3BFB39F1EEB4BDE8B8B2A1F7D4ED6E54F28
E1A25CCD83317EA4FFB88DC5CAEC800B7FC707A37E731E014E785E19430E3CCA
B90C04442568099ACE968CE0F13E9CF1D7051695B47326A2CD5958B316938384
23BF9D85AE7795D0BA543809080F22B7FACE22A31B0A57329B0D8DBA7DE79583
7D62AD82D061BAD4F81AA265180AFF31E816F7B118D47F9081E4D033AD32D09A
81B375D5FECF1F17E46DEEFEB0F1BCD3651860FD0AEE5CA88376828E38D9AEB2
78053E0354DCD8AA3CCE6DC7E65BF44ABC0BE081A8DBCC7CEB5BFF83919237A7
98C2533DD566F479E619DD542C9F3BA5EFC7F6A2E55FA81CAD15109A63F8EF2C
406148E85DFFEBB6513DE6375CC568F1DA11C733DD920B24A084254FE99665F1
29CCE4800C4460117947DD1D3759156F87BC8E40150368D48B5017556E2029E1
DE6117440E0D0B70F1618010C61045FC5F888BC228D61B0561B594621C1A089D
EC31AFD436684A2805F2B780842E41B923021793F292636B3F2094D24598E7F2
62C7934543901C376A145B9D3E19B8EE701FB9BBBE2A4058DE909EBFBE333063
4A5E3693A6C90DCE3E7C035E344605E6DFEEA76E4617880F19D24D4BC8D9A550
709C338731E4515F5EB2B07F86242217DAE5F53C141743A2B51D87CC7E479A54
5E05FC50432EE1B82DD059C519A5EBF378B16C607AF3C045623B14BAC02888AB
465F2C7F036E65392AE152C96AD436672DAF56B650673384C4969CCB623189E4
C8403F7C2E96658E77D36FB4C3279AAC6481521B7807E49B795C9A8B5D0ACCCB
8020706A060281FC088D75DB05A9DA164FFE3DDFBE10FE772052C6A6DB0461C5
B4B4B7E00E6FEE7A9D6E9039AC8EDE4115FCB80292D4FBEB5040505DB0C3A0CA
E8E6AC31479697A5D3806F0B84E64CC067D7AC90DE5584CDAD319D9F3470677E
0B0C5AA1CA1C1FC6E0D3DC0FC89316DC54C2C8C404015DE08192CAD1D96ADC44
3F5FAC9F5E7F1400D6C0969E505B4DD424FABDEE48A1E689F45A90E7C7603DE2
B12FB2091B081DBB48EDA9948F8A856A56C4DED6D0D72BA893806745672DF028
221EB0030100B0493406AEFBFDC1C11C8F2A6970D426948FBE12910747E51707
FC9823CE067AAE92BBC9D2DA8B3387174510B4ED6356A0A73B4D27139F96105B
7F270FE514217BFC3D04C95E9F15DBC0F5D377B95F81130643F78F2B7560F386
BD7D71221E45D916E904FD7D037BF3BFB1EC19F73FDE82A3DDDDE42EB965AFE7
3164E75C6B3AE2C28522DAAFFFC84B524C845C37C431DB9133052C177E4E875F
7909A505E606F479E1AD0F318756C680E31A42902243B83D053FA2C2B2F0F606
45EDD04884B46622A84AEB64C49AE314F9DFE818EB4E6556DBCE0E5D9AF6393A
715C29356624B393B14A1604A211573BA0E9CFF990F512749721FC4345480693
9798CC71E5978597230E4B82B690CA62559449C06EED158FC7302A0088D1128C
1561E5585866980ECAB87199D9B83EE1EDC7ACED09BD2D2C9BD2E67CB52B0429
F6DCCA1726805024C6C608804F54FA11EA54FDFD4A10C4B1575CB365CCE797EA
0A2FFEC01E14620907B6CA7229C67819E2BFBDDC7523ECF57A03638A477EF730
A09FD8066A3C11287E34A714C01217690D7B1DD3EA492EB4725970BCBBB104BD
F0E26F332014DBC5A1F90E8D1DE33EF263782009C1B447F9A31A3E84922A64CD
F58889576CBD1D860A54D8E6564B6A686FB4D7A430DE70938BC01D70BF864EBC
FD0A67D211AD8765CCA95FFD6B2D4B80CB5E8E63FB99E7DB12FAA431D612F687
28F57C9A9ADA570585545D06B66465CA51B9C676D0AB25248C5D0D19EDD29EA2
B4150B76523419DC35121FABD963A130FAFD40EA1977C2F8EB81057457A318BC
E8485E68C27EA89A6616ED3E34A67A0719C483489CE69387443F4EE4E0250150
1C4340FF1AAF9040B7F43FA4B4A0E2C829590D3D681A778C1741FB9FEEEF010B
9219E3577F57E9F0038C85D7247AADCA7EF7DDF4E5C172F55E1889F9D677E7EF
19E233F24B302BDFD1D768EB1C1B5C9633E23FD701584BD7B060E0A27C3BFA7C
F5310EA71B9182240CA69440419C5376566013B1C1D76154F7A32302E1041B25
975464A1B59A704B18C7E7C45AC5049D5D13385F2BA65F8E1AAFC9A89EB2C5B0
99B0BC82C928AC60CFCDF5DDBD24A393993723D91C03C4A11857488A6DFE6862
5884042ED4A9CD87EC0366531EA1F9C4CAB9D7ED25957607B41B0D66049A6971
BA90E8CA69B93FB7F9F730F15DD3AA02FEAF7AC8C46CAFCEAD8E8C2289567906
FEC1E68DB29643DBC0EB56C7AAB77407DD8222268A1B8C9B681855CD5B351169
782CA6E13C7D54BBB79DABA4623E016DD13F6BDF4CA9490DB5EC6E3C1BDCB675
960002B198AABBD35FAED9A386FF54FB7EFBEB89106FA30772CBDEB8E0F72B08
002D026D8DCE7D33C8ED80E749DCB2DE7944A10F7AE072DA7981CC8433844BC3
39015DA146F0F8B3BA8F6B597DB94F4EC5B0161D6A824FF4625269ADC3C3CC88
A817D0A312AF94C232E5C59B0BF8BC30677881FACD384A144D2A5A98907FE80D
4F56F9312054020E43047E47CCE011E3A6173D74FC87EA4590D05ECEBAD10353
E26161106BC8BFD3EBB6B53990A11F27C3A1D954D65FC631C65D9591F3D6BE56
87BD6E488D8503E02E07FF33F682A8B2D7F5FE5214691614CA7AFB519941DDD7
85122D204C021B82EFFB37866606D63D24BEF57555F7A696B8C9AF37FD59091B
51C5BDC4F1B03B035EF16EB75C375DCF494DF3C89441C8D50F940B7CD5E4B83A
F433AFCC0585674B6A65AA90A055AEA45DC2ECEFE44344262AAAC7B4FA7426D2
06EFDAA0511FCE08E10A30B7CC5437A2B781A1F6E4F61E58F211574C741C0311
55EB0514F9A8F75F44C8848E0FE3F452735DC353A3A0085CD7729A4DEAC1D41D
E60351535FD69D6F65573C18436A511351632C4C67263439B29FAEA29E87CBA4
88E164D0A3D1D32946901A70C30B62D2AF91B86C39D8BD88186C91ECE729D697
44074F42480E71A41ED28DC1039CCDF0E27598D5E0D5FB970F60AAAC39CF7E14
2934EF303BB1F5C13A645F81617DCA3D8B1B74EAC9DC13FFF280F253D087BE4B
BD6B76694513AF5EC9247E79F8637150A2A97D62DF2C891DE619254CA81CF473
DA05EF4B9FDF22C57BD7AE90DC58DB1A0D6FDE44ECC46B21E95E35668AADA6A5
AF81B285C4054B9CDFA37C526754FF81726332C136A38ECE90BFF7D322377C2F
523EE12EDB4F0CAEF5D30F614C95CC06129778A9194A2EB640F2E213E5FFD298
14BC04279704B1052D5C157AAED38E52ED026772EB1B0FA1D734275F299114AD
1CF402F9756DABF41FAC3322A7DD2D2343A7CF0F1060A7D0A674F6E39628DE1A
4F1B9760FE7C8F37A272E3F34A8BF758B6F03D043F991A2CFDBCAA10EB2B5DE0
980772B348727EF14F025C443BBE3ECF92B4A5DA9341323EE70E40A4E132E894
4DA061554CC4E2CAA3ADA920DB54547315D54D805E66A8DBC8B1F0A47C52A111
43452D80153F3492A20337FB391383B397FD3E631D384EEA4F4C5F2F727C3E36
BFCF4879F2F223D73449E51863CBFD91AB5DAB7A4E42900FEC106A97BC3454E3
7912728E60F638AB73AD0CA7B7E9C4F0D0C1707A4808BA30AD2511E4F2C86776
DB3ED3AB6E02D95CC8A35D1ECC99F59EDD25D3289A3EEB5BE184B36AB1FCDF4D
8677EC693DA050A2EC8ABCBEB33568D0B9CE2A32636D9CF2E3B70D23A3B857FD
F2D027186D081CF9BD7AC9FBB105CC8DBF87DE11F4E864B420C5A23E03EBEAA6
D558939C5864084D3AD8742FF7FAFE1EA90F5E8A60C5D223F66405BD0370157F
B0A0C3A231DAB04449A63E66B0C0E2BFAA272A4E587885ADD0C39C288354B8E3
04D6B9263534C78A6C3338FC9E1F30AB9C851C2775F5189E935D9CBE20BFE144
99DD65D7A610D793BF02130CAD87431E5DAFC73AE0441406978CC6C13D5A62C5
69C482F9F73D59E30D67B6DB787A76FEFBE2FBFA561529E08936E7CA60783AD6
FA8457395C5A3859A8579D25B0FCBAD1A4827EE3FF121A55EEE7558B53DD7363
52BC756B7C24172F86BCD8C9DFA3FAB2A632F15697919B4F3C17B79B4C84032F
4843E06B55002CE80693B682C4714C8ADA66804D135ED7978E41FE86CB5A3D5E
6EBD8792D9D4D4FE842A1913A6B44028C4D123A0C841E1BD6830E4C20898B557
DFFB2EFE41751ECBE66A2C946B9E0228FDF9A35EB51B910BE899BC3EAA9F1EA1
53DA9F851056AF8B68E67E8C4D51FB4690CF06B074F93A8427D8642A5DD22602
9D8978F7BCCE81D3B2C7C7D52DC0165D40CB064575E471C06F613ACEB0D676A8
B4B7E2FAD4C3EB99FD0CBE120910B8819FC5AD1C41D441AA98663DA46206E731
8C95E4B52D4562503E98126FC42F5B8C0304993A850648138F93919DF113A867
1A26387D49A0212D8C0D0D0A4E964826CD1CB81E651A4E9BD0DA6DC9A0429D83
B39DF0441BCFB65CE27600FCFAA252794F0B764F99BBBE6B7EFEEA63B5D6342A
9AF23B04A441BEECB28B9FCB4990B80DA5EDAC25D9233A00CD8917946409E8A0
B64BAC3396BF4A1975EB08989D71D95CD6AE8954B21C3B946F76DE2E487FA232
4BD302A49C6B50CDA3DC03740BCD092AD43C977E96824F3D7902AD727BC80DCA
5A4A1BD6EF60AE48F08A04EA4B6164D50CA33D49339F0CEA4C52F1782A3C4535
6915C71D164CFF722F24D71F1C6E4CCCB871FE1CC8AFE13F694BDEBEF249E9A2
09EEB1EAE6DA696A53D6F4432D83A78EA7EC9810CA7CE0E3CD332FECB84562FB
F4225D1388BE6A135DCCA8483943FEFD6714958890E29D1356513CF72EC08C4B
73D07E4873A6F20C07693F58C0F7F35C1971F45DEB50BBA05F57F4C54B98472D
D7864762B240563464CE8CA5D9CE971FE379C8D88D42626722319CB102AF6730
6E1B5BA025DCE9ACCFFE0265F609D97DD93A3EE3D37CEDEECE428C8F1F274D3D
89B922EED0B6CB93BD2FE883A6BA0C4ED2C17ED0EDC73A3C3528A8ABA9AC50FB
92ECFAF3BF4DC42E007BB257A7902EF67EB93A4F680A6A4C1992875433D643F1
D3ED5A70210CDCCF1566B1087CCD33CD9ABA38F12FC7F50BDD886FAB7432AE14
E88DDD389EEAFF0084811AC5737388F471E9DADE235BEDD0AA6244CB1BF7CBE3
A501D8130EFE24420D82ED84D6F56CD5009030BABE2280C7EADB2920DF97DB0B
4DB46C6390CF7DDCA6E752008E0B4A4B104FE98B7BD5ABDF6F9401D35234712A
2774B1CEA36BDACA4ABFBFF76A27E58FD1F7892314C8D02C473D8880584C2495
35659573BCC58B58A7DFCE8512BCEA582762BB8637B2CFCD2B2905C36B7A745A
8B18B065001F8AA4DFE9D8671BFD63EE00788C701DFEEBD8DDADF1D26AA17BBE
55F0FCF2CF5E670120A0B36BF900D54EA8BF5DD2B54B15C32F9AD54EB52B31AD
0AAE0E82725715D5FA48E3786AA3CFBA39D0BE044CF0DA9B6FF3AE0F9B7EF21B
E078452C63DDA6FD9A8A51905D56EB2683FB4DAC0FC5D3B0F3D124267D958A64
22779BB8CFE66418E6E569D73FB0698CE79E9E6EC2CB51C51A6B390CD32A7DE5
2AAB5DF86ADAE914845C8715CFF7454349F3581DC02F4C6135C2F132B24FFEE9
CE52E1C4FCEA7E4F0C9EED6098514144931955CB6414033D8E7D9E16EE9A68CC
9661E1DCF6D6A7B13B968873E270F741C09BD8B0AA654F97936D92E9E3366B17
72C2F8BF5DC37E3F1902FF7B047DF86EA5ECB508B658E8639300CBDABCD7CBD0
38F0D7071B75ACCEC0DD58DC93CB2FB125185552A1CC057BDA5783C951E75B01
60D52548B96268B672E98D6D3AE4D3C5B6B6BE00CFF68FF1ED421BC9AA59BC11
3AAD45B17975724383400B32450DD85A53093D12EA59139A10E055CF9CFB445F
D18CB8621818245C5601BA11DB760F38D044D8ADB12A23DF9FBD9BDF5A7F5961
B2B3092D89AE088E0FE25682354479517C702557514723B5CD4C1D9FC933751C
664EFC62D68C9AD91CAFD6342804A069C7F25DCE145EF0EC518551985010089D
46C3D0CE157026064B57E1E7BCEB91D7B6DDABB909E6F16DD59EEFE8C2ABC887
125FA325EDF23DA72BED8C38CC446F6FDDF84CA6C0E342C6C0A75ED417A2924C
4A673FBB0142B6658D23A957B2F08032E8D40704DD07CD7C2F7865E7BE4180FB
F6B569D24DF03FCF984FB9B20F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (sat2016.dvi)
@start /Fa 138[46 2[45 3[46 1[38 2[23 1[48 5[46 13[46
83[{}8 74.7198 /CMCSC10 rf /Fb 138[51 2[50 3[51 1[43
2[25 1[53 5[51 13[51 83[{}8 83.022 /CMCSC10 rf /Fc 204[38
51[{}1 58.1154 /CMBX7 rf /Fd 156[36 99[{}1 66.4176 /CMMIB8
rf /Fe 185[69 70[{}1 99.6264 /CMMIB10 rf /Ff 156[34 99[{}1
58.1154 /CMMIB7 rf /Fg 185[57 70[{}1 83.022 /CMMIB10
rf /Fh 128[39 5[37 2[35 41 25 31 32 1[39 39 43 63 20
35 1[24 39 35 24 35 39 35 35 39 7[57 1[77 57 1[55 43
56 1[52 59 1[69 48 1[40 30 1[59 1[52 58 55 54 57 6[24
39 7[39 2[24 27 24 4[24 26[43 12[{}48 74.7198 /CMTI9
rf /Fi 207[18 48[{}1 49.8132 /CMSY6 rf /Fj 139[24 29
43[47 71[{}3 49.8132 /CMMI6 rf /Fk 134[38 6[35 1[39 37
2[23 4[37 37 18[47 11[60 49 10[21 21 58[{}12 74.7198
/CMMI9 rf /Fl 207[18 48[{}1 41.511 /CMSY5 rf /Fm 185[36
70[{}1 58.1154 /MSBM7 rf /Fn 167[120 32[55 55 55 55 55
55 50[{}7 83.022 /CMEX10 rf /Fo 207[19 26[52 19[20 52{}4
58.1154 /CMSY7 rf /Fp 139[23 15[31 100[{}2 41.511 /CMMI5
rf /Fq 204[28 28 28 28 48[{}4 41.511 /CMR5 rf /Fr 165[55
19[51 70[{}2 83.022 /MSBM10 rf /Fs 128[48 3[48 42 50
2[50 53 37 38 39 50 53 48 53 80 27 50 1[27 53 48 29 44
53 42 53 46 9[99 72 1[66 1[72 1[65 72 75 4[36 1[75 2[73
69 68 72 1[45 4[27 5[48 48 48 48 2[27 32 27 4[27 26[53
12[{}49 83.022 /CMBX10 rf /Ft 149[23 32 32 42 42 42[42
1[46 46 1[0 3[55 5[83 2[83 83 6[83 6[65 7[65 15[65 23
65{}19 83.022 /CMSY10 rf /Fu 128[42 42 3[34 40 39 55
38 45 28 34 35 38 42 42 47 68 21 38 1[25 42 38 25 38
42 38 38 42 3[25 43 25 3[83 2[59 47 2[56 64 62 1[52 2[32
1[64 54 56 2[58 62 5[25 25 5[42 42 42 42 42 1[25 30 25
2[34 34 25 4[43 19[73 2[51 11[{}59 83.022 /CMTI10 rf
/Fv 136[48 2[25 31 31 30 34 1[41 59 21 35 27 23 1[32
32 31 35 30 1[36 8[54 11[46 4[52 42 49 54 8[20 20 58[{}26
58.1154 /CMMI7 rf /Fw 134[41 47 3[30 1[37 1[42 40 1[73
25 43 34 29 48 40 41 39 43 36 36 44 8[69 1[48 2[51 63
2[63 1[81 57 1[46 2[65 53 2[59 63 3[65 2[23 23 58[{}34
83.022 /CMMI10 rf /Fx 133[50 1[59 1[59 62 44 44 46 1[62
56 62 93 31 2[31 62 56 34 51 62 50 62 54 11[86 1[62 84
1[77 6[42 2[70 74 1[81 11[56 56 56 56 56 56 56 36[62
12[{}37 99.6264 /CMBX12 rf /Fy 138[49 34 35 36 1[49 44
49 1[25 2[25 49 1[27 41 49 39 49 43 17[66 5[33 7[67 18[25
46[{}20 74.7198 /CMBX9 rf /Fz 135[39 2[39 39 39 3[39
39 1[39 39 39 39 39 39 39 39 39 39 1[39 32[39 14[39 2[39
1[39 44[{}21 74.7198 /CMTT9 rf /FA 152[38 38 10[51 36[0
20[77 30[60 1[60{}7 74.7198 /CMSY9 rf /FB 128[38 38 1[77
38 34 41 41 55 41 43 30 30 30 41 43 38 43 64 21 41 1[21
43 38 23 34 43 34 43 38 4[38 1[47 58 1[79 58 58 55 43
57 1[52 60 58 70 48 60 39 28 58 60 50 52 59 55 54 58
3[60 1[21 21 38 38 38 38 38 38 38 38 38 38 38 21 26 21
2[30 30 21 3[64 38 19[64 1[43 12[{}78 74.7198 /CMR9 rf
/FC 203[30 1[30 30 5[47 43[{}4 49.8132 /CMR6 rf /FD 171[47
6[60 15[51 3[33 33 33 33 33 33 33 33 33 33 4[51 1[26
26 40[{}16 58.1154 /CMR7 rf /FE 128[42 2[83 42 37 44
44 60 44 46 32 33 33 44 46 42 46 69 23 44 25 23 46 42
25 37 46 37 46 42 3[23 42 23 2[62 85 62 62 60 46 61 65
57 65 62 76 52 65 1[30 62 65 54 57 63 60 59 62 1[39 1[65
1[23 23 42 42 42 42 42 42 42 42 42 42 42 23 28 23 65
1[32 32 23 3[69 42 19[69 46 46 48 11[{}83 83.022 /CMR10
rf /FF 128[67 5[71 3[75 52 53 55 2[67 75 112 37 2[37
75 67 41 61 75 1[75 65 13[75 2[92 6[50 1[106 85 2[97
96 102 65[{}26 119.552 /CMBX12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 546 448 a FF(Finding)44 b(Infeasible)j(Cores)e
(of)h(a)f(Set)g(of)g(P)l(olynomials)925 598 y(using)g(the)g(Gr\177)-67
b(obner)45 b(Basis)g(Algorithm)759 886 y FE(Xiao)5 b(jun)28
b(Sun)1216 856 y FD(1)1253 886 y FE(,)g(Irina)f(Ilioaea)1744
856 y FD(2)1780 886 y FE(,)g(Priy)n(ank)f(Kalla)2338
856 y FD(1)2374 886 y FE(,)i(and)f(Florian)g(Enescu)3132
856 y FD(2)526 1029 y FC(1)599 1060 y FB(Electrical)g(and)f(Computer)g
(Engineering,)h(Univ)n(ersit)n(y)d(of)j(Utah,)e(Salt)h(Lak)n(e)g(Cit)n
(y)f(UT,)h(USA)1376 1152 y FA(f)p Fz(xiaojuns,)42 b(kalla)p
FA(g)p Fz(@ece.utah.edu)709 1211 y FC(2)782 1243 y FB(Mathematics)27
b(and)e(Statistics,)i(Georgia)h(State)d(Univ)n(ersit)n(y)-6
b(,)25 b(A)n(tlan)n(ta)g(GA,)h(USA)1140 1334 y Fz
(iilioaea1@student.gsu.edu,)45 b(fenescu@gsu.edu)759
1672 y Fy(Abstract.)e FB(Finding)27 b(small)i(unsatis\014able)f
(subform)n(ulas)g(\(unsat)g(cores\))g(of)g(in-)759 1763
y(feasible)j(constrain)n(t)f(problems)g(is)g(an)g(activ)n(e)g(area)g
(of)g(researc)n(h.)h(The)e(problem)759 1855 y(has)i(b)r(een)g(widely)g
(in)n(v)n(estigated)g(in)g(the)f(prop)r(ositional)j(SA)-6
b(T)30 b(domain.)i(Analo-)759 1946 y(gous)19 b(in)n(v)n(estigations)h
(in)e(the)g(p)r(olynomial)i(algebra)g(domain)e(are,)i(ho)n(w)n(ev)n
(er,)e(some-)759 2037 y(what)i(lac)n(king.)g(This)g(pap)r(er)f(in)n(v)n
(estigates)h(an)f(algorithmic)i(approac)n(h)e(to)h(iden)n(tify)759
2129 y(a)i(small)g(unsatis\014able)g(core)g(of)g(an)g(ideal)g(in)f(p)r
(olynomial)h(rings)g(with)g(co)r(e\016cien)n(ts)759 2220
y(from)33 b(an)n(y)e(\014eld,)g(where)h(the)f(ideal)i(is)f(found)f(to)h
(ha)n(v)n(e)f(an)h(empt)n(y)e(v)l(ariet)n(y)-6 b(.)31
b(W)-6 b(e)759 2311 y(sho)n(w)25 b(that)e(suc)n(h)h(a)g(core)g(can)g(b)
r(e)g(iden)n(ti\014ed)f(b)n(y)g(means)i(the)e(Buc)n(h)n(b)r(erger's)i
(algo-)759 2403 y(rithm)i(and)f(its)g(v)l(ariations.)i(W)-6
b(e)26 b(iden)n(tify)g(certain)h(conditions)g(that)f(are)h(helpful)759
2494 y(in)j(ascertaining)i(whether)d(or)i(not)e(a)i(p)r(olynomial)g
(from)f(the)g(giv)n(en)g(generating)759 2585 y(set)20
b(is)g(a)g(part)f(of)i(the)e(unsat)g(core.)i(Our)d(algorithm)j(cannot)f
(guaran)n(tee)g(a)g(minimal)759 2677 y(unsat)j(core;)h(hence)e(the)h
(pap)r(er)g(discusses)g(opp)r(ortunities)h(for)f(re\014nemen)n(t)f(of)i
(the)759 2768 y(iden)n(ti\014ed)31 b(core.)h(The)g(approac)n(h)f(is)h
(demonstrated)g(on)f(a)h(few)g(examples,)g(and)759 2859
y(exp)r(erimen)n(ts)k(are)g(conducted)f(using)h(an)g(implemen)n(tation)
g(of)h(our)e(algorithm)759 2951 y(within)26 b(the)f(SINGULAR)f
(computer-algebra)i(to)r(ol.)523 3232 y Fx(1)112 b(In)m(tro)s(duction)
523 3430 y FE(The)24 b(Bo)r(olean)e(Satis\014abilit)n(y)i(Problem)e
(\(SA)-7 b(T\))25 b(is)f(form)n(ulated)f(as)g(\014nding)h(solutions)f
(sat-)523 3530 y(isfying)29 b(a)g(set)g(of)h(Bo)r(olean)e(equations,)g
(or)h(to)g(sho)n(w)f(that)i(no)f(suc)n(h)g(solutions)g(exist)g(\(un-)
523 3629 y(sat\).)f(Suc)n(h)g(problems)g(are)f(often)h(represen)n(ted)f
(in)i(Conjunctiv)n(e)f(Normal)f(F)-7 b(orm)28 b(\(CNF\),)523
3729 y(whereb)n(y)37 b(sets)g(of)h(literal-disjunctions)f(\(clauses\))h
(m)n(ust)f(b)r(e)i(sim)n(ultaneously)d(satis\014ed)523
3828 y(through)i(some)g(v)-5 b(ariable)38 b(assignmen)n(t.)f(When)i(no)
g(solutions)f(exist,)g(it)h(is)g(p)r(ossible)f(to)523
3928 y(iden)n(tify)32 b(a)f(subset)h Fw(C)1220 3940 y
Fv(c)1286 3928 y FE(of)f(the)h(original)e(set)i(of)g(clauses)e
Fw(C)38 b FE(suc)n(h)32 b(that)f Fw(C)2880 3940 y Fv(c)2946
3928 y FE(is)h(unsat)f(to)r(o.)523 4028 y(This)22 b(set)g
Fw(C)890 4040 y Fv(c)947 4028 y FE(is)g(called)g(the)g(unsat)h(core)e
(of)h(the)h(problem.)e(Unsat)i(cores)d(ha)n(v)n(e)h(v)-5
b(arious)21 b(uses)523 4127 y(in)26 b(system)f(design)g(and)g(v)n
(eri\014cation,)g(where)g(they)g(can)g(iden)n(tify)h(the)g(causes)f(of)
g(unsat)h(in)523 4227 y(the)d(problem)g(and)f(restore)g
(satis\014abilit)n(y)-7 b(.)22 b(V)-7 b(arious)22 b(unsat)h(core)e
(extractors)g(are)h(a)n(v)-5 b(ailable)523 4327 y([1])21
b([2])g(that)h(can)f(iden)n(tify)h(smaller)f(cores)f({)h(and)h
Fu(minimal)g FE(unsat)g(cores)e({)h(from)g(v)n(ery)f(large)523
4426 y(unsat)28 b(problems.)648 4526 y(The)19 b(problem)h(has)f
(analogous)f(manifestations)h(in)h(the)g(p)r(olynomial)f(algebra)f
(domain.)523 4625 y(Supp)r(ose)k(that)g(w)n(e)g(are)f(giv)n(en)g(a)g
(set)h(of)g(p)r(olynomials)f Fw(F)35 b FE(=)23 b Ft(f)p
Fw(f)2469 4637 y FD(1)2505 4625 y Fw(;)14 b(:)g(:)g(:)f(;)h(f)2730
4637 y Fv(s)2766 4625 y Ft(g)21 b FE(with)h(co)r(e\016cien)n(ts)523
4725 y(from)30 b(an)n(y)f(\014eld.)i(Supp)r(ose,)f(further,)h(that)f
(the)h(system)f(of)g(equations)f Fw(f)2862 4737 y FD(1)2927
4725 y FE(=)e Fw(f)3060 4737 y FD(2)3124 4725 y FE(=)g
Ft(\001)14 b(\001)g(\001)27 b FE(=)523 4825 y Fw(f)564
4837 y Fv(s)633 4825 y FE(=)34 b(0)f(has)h(no)g(common)f(zero)g({)h
(i.e.)g(the)h(system)f(of)g(p)r(olynomial)f(constrain)n(ts)g(is)h(in-)
523 4924 y(feasible)g(\(or)f(unsat\).)i(Can)f(w)n(e)f(iden)n(tify)i(a)f
(subset)g Fw(F)2261 4936 y Fv(c)2329 4924 y Ft(\022)f
Fw(F)46 b FE(suc)n(h)34 b(that)h(the)f(system)g(of)1943
5173 y(1)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 523 448 a FE(p)r(olynomials)26
b(of)g Fw(F)1130 460 y Fv(c)1191 448 y FE(also)g(has)g(no)g(common)g
(zeros?)g(In)h(other)f(w)n(ords,)f(w)n(e)h(wish)h(to)f(devise)523
548 y(algorithmic)g(tec)n(hniques)i(to)f(iden)n(tify)h(infeasible)g(or)
f(unsat)g(cores)f Fw(F)2723 560 y Fv(c)2785 548 y FE(of)i
Fw(F)12 b FE(.)648 654 y(Clearly)-7 b(,)18 b(computational)h(algebraic)
f(geometry)g({)i(particularly)e(the)i(theory)f(and)g(tec)n(h-)523
754 y(nology)i(of)h(Gr\177)-42 b(obner)21 b(bases)g({)h(pro)n(vides)f
(a)h(mec)n(hanism)f(to)h(answ)n(er)f(the)i(p)r(olynomial)e(unsat)523
854 y(core)31 b(question.)h(The)g(giv)n(en)f(set)h(of)g(p)r(olynomials)
f Fw(F)43 b FE(generates)31 b(an)h(ideal,)f(and)h(the)g(cel-)523
953 y(ebrated)37 b(Hilb)r(ert's)i(Nullstellensatz)f([3])g(pro)n(vides)e
(all)i(the)g(to)r(ols)g(to)g(c)n(haracterize)e(the)523
1053 y(zero-set)j(\(v)-5 b(arieties\))41 b(of)g(p)r(olynomial)f
(ideals.)g(Most)h(Nullstellensatz-related)f(p)r(olyno-)523
1152 y(mial)e(decision)g(questions)g(can)f(b)r(e)i(answ)n(ered)e(b)n(y)
h(the)g(Gr\177)-42 b(obner)38 b(basis)f(algorithm)g([4].)523
1252 y(This)29 b(motiv)-5 b(ates)29 b(our)f(in)n(v)n(estigation)g(in)n
(to)h(extraction)f(of)h(infeasible)g(cores)f(of)h(the)h(set)f(of)523
1352 y(p)r(olynomials)e Fw(F)39 b FE(using)28 b(Gr\177)-42
b(obner)26 b(basis)h(tec)n(hniques.)523 1634 y Fs(Previous)f(W)-8
b(ork:)36 b FE(Moreo)n(v)n(er,)20 b(as)i(Gr\177)-42 b(obner)21
b(basis)h(tec)n(hniques)g(\014nd)h(more)f(applications)523
1734 y(in)28 b(SA)-7 b(T)28 b(solving)f([5)o(])h([6)o(])g([7],)f(unsat)
h(cores)e(of)i(p)r(olynomial)f(systems)g(will)h(also)e(\014nd)648
1840 y(in)h(hardw)n(are)f(and)h(soft)n(w)n(are)f(v)n(eri\014cation)g
([8],)i(as)f(w)n(ell)g(as)523 2140 y Fx(2)112 b(Preliminaries)523
2373 y FE(W)-7 b(e)38 b(denote)g(b)n(y)g Fw(C)44 b FE(the)38
b(set)g(of)g(clauses)f(represen)n(ting)g(the)h(CNF-SA)-7
b(T)38 b(problem.)g(The)523 2472 y(problem)21 b(is)g(assumed)g(to)g(b)r
(e)g(unsat,)g(and)g Fw(C)1902 2484 y Fv(c)1958 2472 y
FE(denotes)g(the)g(set)h(of)f(clauses)f(that)i(constitute)523
2572 y(the)28 b(unsat)f(core.)648 2678 y(Let)32 b Fr(F)g
FE(b)r(e)g(an)n(y)g(\014eld,)p 1370 2611 51 4 v 32 w
Fr(F)g FE(its)g(algebraic)e(closure,)h(and)h Fw(R)f FE(=)g
Fr(F)p FE([)p Fw(x)2710 2690 y FD(1)2747 2678 y Fw(;)14
b(:)g(:)g(:)g(;)g(x)2979 2690 y Fv(d)3018 2678 y FE(])32
b(the)g(p)r(oly-)523 2778 y(nomial)25 b(ring)g(in)g(v)-5
b(ariables)25 b Fw(x)1446 2790 y FD(1)1483 2778 y Fw(;)14
b(:)g(:)g(:)g(;)g(x)1715 2790 y Fv(d)1779 2778 y FE(with)26
b(co)r(e\016cien)n(ts)f(from)h Fr(F)p FE(.)f(A)h(monomial)e(in)i(v)-5
b(ari-)523 2877 y(ables)39 b Fw(x)790 2889 y FD(1)827
2877 y Fw(;)14 b(:)g(:)g(:)g(;)g(x)1059 2889 y Fv(d)1137
2877 y FE(is)39 b(a)g(p)r(o)n(w)n(er)e(pro)r(duct)i(of)g(the)h(form)e
Fw(X)49 b FE(=)42 b Fw(x)2629 2840 y Fv(e)2660 2848 y
Fq(1)2629 2900 y FD(1)2723 2877 y Ft(\001)26 b Fw(x)2819
2840 y Fv(e)2850 2848 y Fq(2)2819 2900 y FD(2)2902 2877
y Ft(\001)14 b(\001)g(\001)f Fw(x)3059 2840 y Fv(e)3090
2849 y Fp(d)3059 2902 y Fv(d)3130 2877 y FE(,)40 b(where)523
2977 y Fw(e)562 2989 y Fv(i)614 2977 y Ft(2)25 b Fr(Z)749
2989 y Fo(\025)p FD(0)838 2977 y Fw(;)14 b(i)25 b Ft(2)g(f)p
FE(1)p Fw(;)14 b(:)g(:)g(:)e(;)i(d)p Ft(g)p FE(.)29 b(A)f
Fu(p)l(olynomial)j Fw(f)j Ft(2)24 b Fw(R)30 b FE(is)e(written)h(as)f(a)
g(\014nite)h(sum)g(of)f(terms)523 3077 y Fw(f)k FE(=)22
b Fw(c)719 3089 y FD(1)756 3077 y Fw(X)825 3089 y FD(1)876
3077 y FE(+)14 b Fw(c)991 3089 y FD(2)1027 3077 y Fw(X)1096
3089 y FD(2)1147 3077 y FE(+)g Ft(\001)g(\001)g(\001)f
FE(+)h Fw(c)1451 3089 y Fv(t)1479 3077 y Fw(X)1548 3089
y Fv(t)1577 3077 y FE(.)25 b(Here)g Fw(c)1855 3089 y
FD(1)1892 3077 y Fw(;)14 b(:)g(:)g(:)g(;)g(c)2113 3089
y Fv(t)2167 3077 y FE(are)24 b(co)r(e\016cien)n(ts)h(and)g
Fw(X)2949 3089 y FD(1)2986 3077 y Fw(;)14 b(:)g(:)g(:)g(;)g(X)3240
3089 y Fv(t)3294 3077 y FE(are)523 3176 y(monomials.)25
b(T)-7 b(o)26 b(systematically)f(manipulate)h(the)g(p)r(olynomials,)f
(a)h(monomial)f(order)f Fw(>)523 3276 y FE(\(or)k(a)g(term)h(order\))f
(is)g(imp)r(osed)h(on)f(the)h(ring)f(|)h(i.e.)g(a)f(total)g(order)g(on)
g(the)h(monomials)523 3375 y(s.t.)e(m)n(ultiplication)g(with)h(another)
e(monomial)g(preserv)n(es)f(the)i(ordering.)f(The)h(monomi-)523
3475 y(als)22 b(of)h Fw(f)32 b FE(=)22 b Fw(c)929 3487
y FD(1)967 3475 y Fw(X)1036 3487 y FD(1)1082 3475 y FE(+)9
b Fw(c)1192 3487 y FD(2)1229 3475 y Fw(X)1298 3487 y
FD(2)1344 3475 y FE(+)g Ft(\001)14 b(\001)g(\001)8 b
FE(+)h Fw(c)1633 3487 y Fv(t)1662 3475 y Fw(X)1731 3487
y Fv(t)1783 3475 y FE(are)22 b(ordered)f(w.r.t.)i(to)g
Fw(>)p FE(,)g(suc)n(h)f(that)i Fw(X)3064 3487 y FD(1)3124
3475 y Fw(>)e(X)3280 3487 y FD(2)3340 3475 y Fw(>)523
3575 y Ft(\001)14 b(\001)g(\001)25 b Fw(>)f(X)803 3587
y Fv(t)832 3575 y FE(.)29 b(Sub)5 b(ject)29 b(to)g(suc)n(h)f(a)g(term)h
(order,)e Fw(l)r(t)p FE(\()p Fw(f)9 b FE(\))24 b(=)h
Fw(c)2310 3587 y FD(1)2347 3575 y Fw(X)2416 3587 y FD(1)2453
3575 y Fw(;)43 b(l)r(m)p FE(\()p Fw(f)9 b FE(\))24 b(=)g
Fw(X)2915 3587 y FD(1)2952 3575 y Fw(;)43 b(l)r(c)p FE(\()p
Fw(f)9 b FE(\))24 b(=)h Fw(c)3345 3587 y FD(1)3382 3575
y FE(,)523 3674 y(are)f(the)h Fu(le)l(ading)k(term)p
FE(,)c Fu(le)l(ading)j(monomial)f FE(and)e Fu(le)l(ading)j(c)l(o)l
(e\016cient)e FE(of)f Fw(f)9 b FE(,)25 b(resp)r(ectiv)n(ely)-7
b(.)523 3774 y(While)26 b(our)f(approac)n(h)e(w)n(orks)h(for)h(an)n(y)g
(p)r(ermissible)g(term)h(order,)e(in)i(the)f(pap)r(er,)h(w)n(e)f(con-)
523 3874 y(sider)35 b(terms)g(ordered)f Fu(de)l(gr)l(e)l(e-lexic)l(o)l
(gr)l(aphic)l(al)t(ly)p FE(,)40 b(where)35 b(the)g(monomials)g(are)f
(ordered)523 3973 y(according)22 b(to)i(their)g(descending)f(total)h
(degree,)e(and)i(ties)g(are)f(brok)n(en)f(lexicographically)-7
b(.)648 4080 y Fs(P)m(olynomial)39 b(Reduction:)c FE(Let)g
Fw(f)t(;)14 b(g)38 b FE(b)r(e)e(p)r(olynomials.)e(If)i(a)f(non-zero)e
(term)j Fw(cX)523 4179 y FE(of)d Fw(f)41 b FE(is)32 b(divisible)h(b)n
(y)f(the)h(leading)f(term)h(of)f Fw(g)s FE(,)h(then)g(w)n(e)f(sa)n(y)f
(that)i Fw(f)42 b Fu(is)34 b(r)l(e)l(ducible)h(to)e Fw(r)523
4288 y FE(mo)r(dulo)c Fw(g)s FE(,)h(denoted)f Fw(f)1359
4237 y Fv(g)1309 4288 y Ft(\000)-14 b(!)26 b Fw(r)r FE(,)k(where)f
Fw(r)g FE(=)d Fw(f)i Ft(\000)2145 4255 y Fv(cX)p 2123
4269 133 4 v 2123 4317 a(lt)p FD(\()p Fv(g)r FD(\))2286
4288 y Ft(\001)20 b Fw(g)s FE(.)29 b(Similarly)-7 b(,)29
b Fw(f)38 b FE(can)29 b(b)r(e)h Fu(r)l(e)l(duc)l(e)l(d)523
4402 y(\(divide)l(d\))42 b(w.r.t.)f(a)f(set)g(of)h(p)l(olynomials)g
Fw(F)53 b FE(=)41 b Ft(f)p Fw(f)2201 4414 y FD(1)2237
4402 y Fw(;)14 b(:)g(:)g(:)g(;)g(f)2463 4414 y Fv(s)2498
4402 y Ft(g)38 b FE(to)h(obtain)f(a)g(remainder)523 4526
y Fw(r)r FE(.)d(This)e(reduction)h(is)f(denoted)h Fw(f)1724
4479 y Fv(F)1683 4526 y Ft(\000)-15 b(!)1816 4538 y FD(+)1905
4526 y Fw(r)r FE(,)34 b(and)g(the)g(remainder)e Fw(r)37
b FE(has)c(the)h(prop)r(ert)n(y)523 4625 y(that)h(no)f(term)h(in)f
Fw(r)k FE(is)c(divisible)h(b)n(y)f(the)h(leading)f(term)g(of)h(an)n(y)e
(p)r(olynomial)h Fw(f)3151 4637 y Fv(i)3213 4625 y FE(in)h
Fw(F)12 b FE(.)523 4725 y(The)33 b(division)f(algorithm)f(\()p
Fu(e.g.)j FE(Alg.)e(???)i Fs(??)p FE(\))f(records)d(the)j
Fu(data)h FE(related)d(to)i(b)r(oth)g(the)523 4825 y(remainders)23
b(and)h(the)h(quotien)n(ts)f(in)h(the)g(division)f(pro)r(cess.)f(W)-7
b(e)25 b(will)g(utilize)f(this)h(data)f(to)523 4924 y(iden)n(tify)k
(the)g(core.)1943 5173 y(2)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop 523 448 a Fs(Ideals,)23 b(V)-8
b(arieties)24 b(and)g(Nullstellensatz:)33 b FE(Let)21
b Fw(F)35 b FE(=)23 b Ft(f)p Fw(f)2459 460 y FD(1)2495
448 y Fw(;)14 b(:)g(:)g(:)g(;)g(f)2721 460 y Fv(s)2756
448 y Ft(g)21 b FE(denote)f(the)i(giv)n(en)523 548 y(set)27
b(of)g(p)r(olynomials.)f(An)i Fu(ide)l(al)h Fw(J)i Ft(\022)22
b Fw(R)28 b FE(generated)e(b)n(y)h(p)r(olynomials)f Fw(f)2809
560 y FD(1)2846 548 y Fw(;)14 b(:)g(:)g(:)g(;)g(f)3072
560 y Fv(s)3130 548 y Ft(2)23 b Fw(R)28 b FE(is:)1040
736 y Fw(J)j FE(=)23 b Ft(h)p Fw(f)1278 748 y FD(1)1315
736 y Fw(;)14 b(:)g(:)g(:)f(;)h(f)1540 748 y Fv(s)1575
736 y Ft(i)24 b FE(=)e Ft(f)1804 632 y Fv(s)1760 657
y Fn(X)1766 834 y Fv(i)p FD(=1)1894 736 y Fw(h)1942 748
y Fv(i)1988 736 y Ft(\001)c Fw(f)2070 748 y Fv(i)2120
736 y FE(:)51 b Fw(h)2242 748 y Fv(i)2293 736 y Ft(2)23
b Fr(F)p FE([)p Fw(x)2492 748 y FD(1)2530 736 y Fw(;)14
b(:)g(:)g(:)f(;)h(x)2761 748 y Fv(d)2800 736 y FE(])p
Ft(g)p Fw(:)523 995 y FE(The)28 b(p)r(olynomials)e Fw(f)1196
1007 y FD(1)1233 995 y Fw(;)14 b(:)g(:)g(:)g(;)g(f)1459
1007 y Fv(s)1522 995 y FE(form)27 b(the)h Fu(b)l(asis)g
FE(or)f(the)h Fu(gener)l(ators)g FE(of)g Fw(J)8 b FE(.)648
1096 y(W)-7 b(e)28 b(ha)n(v)n(e)g(to)g(consider)g(the)h(set)f(of)h
(solutions)e(to)i(the)g(system)f(of)g(p)r(olynomials)g(equa-)523
1196 y(tions)e Fw(f)766 1208 y FD(1)826 1196 y FE(=)d
Ft(\001)14 b(\001)g(\001)23 b FE(=)g Fw(f)1163 1208 y
Fv(s)1221 1196 y FE(=)f(0.)27 b(The)f(set)h(of)f(all)h(solutions)e(to)i
(a)f(giv)n(en)g(system)g(of)h(p)r(olynomial)523 1295
y(equations)j Fw(f)939 1307 y FD(1)1005 1295 y FE(=)e
Ft(\001)14 b(\001)g(\001)28 b FE(=)h Fw(f)1358 1307 y
Fv(s)1421 1295 y FE(=)g(0)h(is)h(called)g(the)g Fu(variety)p
FE(,)h(whic)n(h)f(is)g(uniquely)g(de\014ned)g(b)n(y)523
1395 y(the)e(ideal)f Fw(J)k FE(=)24 b Ft(h)p Fw(f)1106
1407 y FD(1)1143 1395 y Fw(;)14 b(:)g(:)g(:)f(;)h(f)1368
1407 y Fv(s)1403 1395 y Ft(i)29 b FE(generated)e(b)n(y)h(the)h(p)r
(olynomials.)e(The)h(v)-5 b(ariet)n(y)28 b(is)g(denoted)523
1495 y(b)n(y)f Fw(V)19 b FE(\()p Fw(J)8 b FE(\))24 b(=)f
Fw(V)18 b FE(\()p Fw(f)1074 1507 y FD(1)1112 1495 y Fw(;)c(:)g(:)g(:)f
(;)h(f)1337 1507 y Fv(s)1372 1495 y FE(\))28 b(and)g(de\014ned)g(as:)
1023 1681 y Fw(V)19 b FE(\()p Fw(J)8 b FE(\))24 b(=)f
Fw(V)18 b FE(\()p Fw(f)1459 1693 y FD(1)1497 1681 y Fw(;)c(:)g(:)g(:)f
(;)h(f)1722 1693 y Fv(s)1757 1681 y FE(\))24 b(=)e Ft(f)p
Fs(a)h Ft(2)h Fr(F)2141 1646 y Fv(d)2202 1681 y FE(:)f
Ft(8)p Fw(f)32 b Ft(2)23 b Fw(J)o(;)14 b(f)9 b FE(\()p
Fs(a)p FE(\))24 b(=)e(0)p Ft(g)p Fw(;)523 1867 y FE(where)27
b Fs(a)d FE(=)e(\()p Fw(a)996 1879 y FD(1)1034 1867 y
Fw(;)14 b(:)g(:)g(:)f(;)h(a)1262 1879 y Fv(d)1301 1867
y FE(\))23 b Ft(2)g Fr(F)1485 1837 y Fv(d)1552 1867 y
FE(denotes)k(a)g(p)r(oin)n(t)h(in)g(the)g(a\016ne)f(space.)523
2050 y Fs(Theorem)k(1.)41 b Fu(The)29 b(We)l(ak)f(Nul)t(lstel)t
(lensatz)g([3)q(]:)g(L)l(et)f Fw(J)k FE(=)23 b Ft(h)p
Fw(f)2512 2062 y FD(1)2549 2050 y Fw(;)14 b(:)g(:)g(:)g(;)g(f)2775
2062 y Fv(s)2810 2050 y Ft(i)23 b(\022)g Fr(F)p FE([)p
Fw(x)3074 2062 y FD(1)3111 2050 y Fw(;)14 b(:)g(:)g(:)g(;)g(x)3343
2062 y Fv(d)3382 2050 y FE(])523 2150 y Fu(b)l(e)43 b(an)h(ide)l(al)h
(and)f Fw(V)p 1203 2127 40 3 v 25 x Fm(F)1243 2150 y
FE(\()p Fw(J)8 b FE(\))44 b Fu(b)l(e)f(its)g(variety)i(over)p
2138 2082 51 4 v 44 w Fr(F)p Fu(.)e(Then)h Fw(V)p 2535
2127 40 3 v 25 x Fm(F)2576 2150 y FE(\()p Fw(J)8 b FE(\))48
b(=)f Ft(;)95 b(\()-14 b(\))96 b Fw(J)55 b FE(=)523 2249
y Fr(F)p FE([)p Fw(x)644 2261 y FD(1)682 2249 y Fw(;)14
b(:)g(:)g(:)f(;)h(x)913 2261 y Fv(d)952 2249 y FE(])46
b Ft(\()-14 b(\))47 b FE(1)22 b Ft(2)i Fw(J)8 b Fu(.)648
2430 y FE(The)26 b(W)-7 b(eak)25 b(Nullstellensatz)i(pro)n(vides)d(a)i
(mec)n(hanism)f(to)h(ascertain)f(whether)h(or)f(not)523
2530 y(a)f(giv)n(en)g(system)g(of)h(p)r(olynomials)e(has)h(a)h
(feasible)f(solution.)g(This)g(is)h(deduced)g(b)n(y)f(testing)523
2630 y(whether)h(the)g(unit)g(elemen)n(t)g(is)f(a)h(mem)n(b)r(er)f(of)h
(the)g(ideal)f Fw(J)8 b FE(.)25 b(This)g Fu(ide)l(al)j(memb)l(ership)h
(test)523 2729 y FE(requires)d(the)i(computation)g(of)f(a)g(Gr\177)-42
b(obner)27 b(basis.)523 2987 y Fs(Gr\177)-48 b(obner)42
b(bases:)53 b FE(An)37 b(ideal)f Fw(J)44 b FE(ma)n(y)36
b(ha)n(v)n(e)f(man)n(y)h(bases)g(\(generators\).)e(A)j
Fu(Gr\177)-42 b(obner)523 3087 y(b)l(asis)29 b FE(\(abbreviated)f(as)g
(GB\))h(is)f(a)h(generating)e(set)h(for)g Fw(J)37 b FE(with)29
b(sp)r(ecial)f(prop)r(erties)g(that)523 3186 y(allo)n(w)g(to)i(solv)n
(e)e(man)n(y)h(p)r(olynomial)g(decision)g(problems,)g(including)h
(ideal)f(mem)n(b)r(ership)523 3286 y(testing.)d(F)-7
b(rom)25 b(among)f(the)i(man)n(y)f Fu(e)l(quivalent)h
FE(de\014nitions)g(of)f(a)g(Gr\177)-42 b(obner)25 b(basis,)g(w)n(e)g
(will)523 3386 y(consider)i(the)h(follo)n(wing)e(t)n(w)n(o:)523
3569 y Fs(De\014nition)31 b(1.)41 b FE([)p Fs(Gr\177)-48
b(obner)30 b(Basis)p FE(])f Fu([4)q(]:)523 3668 y(\(i\))22
b(F)-6 b(or)21 b(a)h(monomial)g(or)l(dering)h Fw(>)p
Fu(,)e(a)h(set)f(of)h(non-zer)l(o)f(p)l(olynomials)i
Fw(G)h FE(=)e Ft(f)p Fw(g)2964 3680 y FD(1)3001 3668
y Fw(;)14 b(g)3078 3680 y FD(2)3114 3668 y Fw(;)g Ft(\001)g(\001)g
(\001)28 b Fw(;)14 b(g)3353 3680 y Fv(t)3381 3668 y Ft(g)523
3768 y Fu(c)l(ontaine)l(d)32 b(in)f(an)g(ide)l(al)h Fw(J)8
b Fu(,)32 b(is)f(c)l(al)t(le)l(d)i(a)e(Gr\177)-42 b(obner)32
b(b)l(asis)g(for)g Fw(J)39 b Fu(i\013)31 b Ft(8)p Fw(f)j
Ft(2)26 b Fw(J)8 b Fu(,)31 b Fw(f)j Ft(6)p FE(=)25 b(0)31
b Fu(ther)l(e)523 3868 y(exists)h Fw(i)26 b Ft(2)i(f)p
FE(1)p Fw(;)14 b Ft(\001)g(\001)g(\001)26 b Fw(;)14 b(t)p
Ft(g)32 b Fu(such)g(that)g Fw(l)r(m)p FE(\()p Fw(g)1811
3880 y Fv(i)1837 3868 y FE(\))h Fu(divides)h Fw(l)r(m)p
FE(\()p Fw(f)9 b FE(\))p Fu(;)32 b(i.e.,)i Fw(G)27 b
FE(=)g Fw(GB)t FE(\()p Fw(J)8 b FE(\))28 b Ft(,)59 b(8)p
Fw(f)36 b Ft(2)523 3967 y Fw(J)31 b FE(:)23 b Fw(f)32
b Ft(6)p FE(=)23 b(0)p Fw(;)14 b Ft(9)p Fw(g)972 3979
y Fv(i)1021 3967 y Ft(2)24 b Fw(G)f FE(:)g Fw(l)r(m)p
FE(\()p Fw(g)1406 3979 y Fv(i)1433 3967 y FE(\))g Ft(j)h
Fw(l)r(m)p FE(\()p Fw(f)9 b FE(\))p Fu(.)29 b(Or)h(e)l(quivalently,)523
4067 y(\(ii\))i Fw(G)27 b FE(=)f Ft(f)p Fw(g)938 4079
y FD(1)975 4067 y Fw(;)14 b(g)1052 4079 y FD(2)1088 4067
y Fw(;)g Ft(\001)g(\001)g(\001)28 b Fw(;)14 b(g)1327
4079 y Fv(t)1355 4067 y Ft(g)31 b Fu(is)h(a)g(Gr\177)-42
b(obner)33 b(b)l(asis)f(for)h Fw(J)39 b Fu(i\013)32 b(division)i(by)e
Fw(G)g Fu(of)g(any)g(p)l(oly-)523 4180 y(nomial)e(in)g
Fw(J)37 b Fu(gives)30 b(the)f(r)l(emainder)i(0;)f(i.e.)h
Fw(G)23 b FE(=)g Fw(GB)t FE(\()p Fw(J)8 b FE(\))47 b
Ft(\()-14 b(\))46 b(8)p Fw(f)32 b Ft(2)23 b Fw(J)o(;)14
b(f)3004 4129 y Fv(g)3036 4137 y Fq(1)3069 4129 y Fv(;:::)o(;g)3200
4137 y Fp(t)2984 4180 y Ft(\000)-38 b(\000)-19 b(\000)g(\000)h(\000)-38
b(!)3260 4192 y FD(+)3338 4180 y FE(0)p Fu(.)648 4361
y FE(Buc)n(h)n(b)r(erger's)21 b(algorithm)i([9)o(],)h(sho)n(wn)f(in)h
(Algorithm)g(1,)f(computes)h(a)f(Gr\177)-42 b(obner)23
b(basis)523 4461 y(o)n(v)n(er)32 b(a)h(\014eld.)h(Giv)n(en)g(p)r
(olynomials)f Fw(F)45 b FE(=)33 b Ft(f)p Fw(f)1985 4473
y FD(1)2021 4461 y Fw(;)14 b(:)g(:)g(:)g(;)g(f)2247 4473
y Fv(s)2282 4461 y Ft(g)p FE(,)33 b(the)h(algorithm)f(computes)h(the)
523 4561 y(Gr\177)-42 b(obner)24 b(basis)g Fw(G)f FE(=)g
Ft(f)p Fw(g)1308 4573 y FD(1)1344 4561 y Fw(;)14 b(:)g(:)g(:)g(;)g(g)
1569 4573 y Fv(t)1598 4561 y Ft(g)p FE(.)24 b(The)h(algorithm)f(tak)n
(es)g(pairs)g(of)h(p)r(olynomials)f(\()p Fw(f)t(;)14
b(g)s FE(\),)523 4660 y(and)27 b(computes)h(their)f Fu(S-p)l(olynomial)
j FE(\()p Fw(S)5 b(pol)r(y)s FE(\()p Fw(f)t(;)14 b(g)s
FE(\)\):)1366 4888 y Fw(S)5 b(pol)r(y)s FE(\()p Fw(f)t(;)14
b(g)s FE(\))22 b(=)1941 4832 y Fw(L)p 1884 4869 171 4
v 1884 4945 a(l)r(t)p FE(\()p Fw(f)9 b FE(\))2083 4888
y Ft(\001)18 b Fw(f)27 b Ft(\000)2339 4832 y Fw(L)p 2285
4869 164 4 v 2285 4945 a(l)r(t)p FE(\()p Fw(g)s FE(\))2477
4888 y Ft(\001)19 b Fw(g)1943 5173 y FE(3)p eop end
%%Page: 4 4
TeXDict begin 4 3 bop 523 448 a FE(where)22 b Fw(L)h
FE(=)f(LCM\()p Fw(l)r(m)p FE(\()p Fw(f)9 b FE(\))p Fw(;)14
b(l)r(m)p FE(\()p Fw(g)s FE(\)\).)22 b Fw(S)5 b(pol)r(y)s
FE(\()p Fw(f)t(;)14 b(g)s FE(\))22 b(cancels)f(the)i(leading)f(terms)g
(of)h Fw(f)31 b FE(and)22 b Fw(g)s FE(.)523 581 y(Therefore,)h(the)h
(computation)g Fw(S)5 b(pol)r(y)s FE(\()p Fw(f)t(;)14
b(g)s FE(\))1979 534 y Fv(G)2031 509 y Fl(0)1959 581
y Ft(\000)-21 b(!)2086 593 y FD(+)2164 581 y Fw(r)27
b FE(results)c(in)h(a)g(remainder)f Fw(r)r FE(,)i(whic)n(h)e(if)523
680 y(non-zero,)i(pro)n(vides)g(an)h(elemen)n(t)g(with)h(new)g(leading)
f(term)g(in)h(the)g(generating)d(set.)j(The)523 808 y(Gr\177)-42
b(obner)23 b(basis)g(algorithm)g(terminates)h(when)g(for)f(all)h(pairs)
f(\()p Fw(f)t(;)14 b(g)s FE(\),)24 b Fw(S)5 b(pol)r(y)s
FE(\()p Fw(f)t(;)14 b(g)s FE(\))3156 761 y Fv(G)3208
736 y Fl(0)3135 808 y Ft(\000)-21 b(!)3262 820 y FD(+)3340
808 y FE(0.)p 523 1044 2882 7 v 585 1118 a Fs(Algorithm)31
b(1:)c FE(Buc)n(h)n(b)r(erger's)e(Algorithm)p 523 1158
V 648 1230 a Fy(Input)p FB(:)i Fk(F)32 b FB(=)21 b FA(f)p
Fk(f)1147 1238 y FC(1)1182 1230 y Fk(;)13 b(:)g(:)g(:)g(;)h(f)1390
1238 y Fj(s)1423 1230 y FA(g)648 1322 y Fy(Output)p FB(:)27
b Fk(G)22 b FB(=)f FA(f)p Fk(g)1215 1330 y FC(1)1249
1322 y Fk(;)13 b(:)g(:)h(:)f(;)g(g)1457 1330 y Fj(t)1484
1322 y FA(g)648 1413 y Fk(G)21 b FB(:=)g Fk(F)11 b FB(;)648
1504 y Fy(rep)r(eat)772 1596 y Fk(G)832 1564 y Fi(0)876
1596 y FB(:=)21 b Fk(G)p FB(;)772 1687 y Fy(for)54 b
Fh(e)l(ach)28 b(p)l(air)g FA(f)p Fk(f)t(;)14 b(g)s FA(g)p
Fk(;)f(f)29 b FA(6)p FB(=)21 b Fk(g)30 b Fh(in)d Fk(G)1857
1655 y Fi(0)1905 1687 y Fy(do)897 1809 y Fk(S)t(pol)q(y)s
FB(\()p Fk(f)t(;)12 b(g)s FB(\))1311 1767 y Fj(G)1358
1746 y Fl(0)1284 1809 y FA(\000)-13 b(!)1408 1817 y FC(+)1480
1809 y Fk(r)27 b FB(;)897 1901 y Fy(if)33 b Fk(r)23 b
FA(6)p FB(=)e(0)26 b Fy(then)1021 1992 y Fk(G)c FB(:=)f
Fk(G)c FA([)g(f)p Fk(r)r FA(g)27 b FB(;)897 2083 y Fy(end)772
2183 y(end)648 2283 y(un)n(til)d Fk(G)e FB(=)f Fk(G)1075
2251 y Fi(0)1097 2283 y FB(;)p 523 2333 V 648 2620 a
FE(A)i(Gr\177)-42 b(obner)23 b(basis)f Fw(G)i FE(ma)n(y)f(con)n(tain)f
(redundan)n(t)h(elemen)n(ts.)g(T)-7 b(o)23 b(remo)n(v)n(e)f(these)h
(redun-)523 2720 y(dan)n(t)31 b(elemen)n(ts,)g Fw(G)h
FE(is)f(\014rst)g(made)g Fu(minimal)h FE(and)f(subsequen)n(tly)g
Fu(r)l(e)l(duc)l(e)l(d.)h FE(T)-7 b(o)31 b(obtain)f(a)523
2819 y(minimal)23 b(GB,)g(all)f(p)r(olynomials)g Fw(g)1618
2831 y Fv(j)1675 2819 y FE(are)g(remo)n(v)n(ed)f(from)h
Fw(G)h FE(if)g(there)g(exists)f(a)g Fw(g)3020 2831 y
Fv(i)3070 2819 y FE(suc)n(h)h(that)523 2919 y Fw(l)r(m)p
FE(\()p Fw(g)695 2931 y Fv(i)722 2919 y FE(\))i Ft(j)g
Fw(l)r(m)p FE(\()p Fw(g)999 2931 y Fv(j)1033 2919 y FE(\).)h(Then)f
(the)g(remaining)f(elemen)n(ts)h(\()p Fw(g)2262 2931
y Fv(i)2290 2919 y FE('s\))g(are)f(made)h(monic)f(b)n(y)h(dividing)523
3019 y(eac)n(h)d Fw(g)745 3031 y Fv(i)796 3019 y FE(b)n(y)h
Fw(l)r(c)p FE(\()p Fw(g)1042 3031 y Fv(i)1068 3019 y
FE(\).)h(This)f(minimal)g(basis)g(is)g(further)g(reduced)g(b)n(y)g
(ensuring)f(that)h(no)g(term)523 3118 y(in)f Fw(g)654
3130 y Fv(j)710 3118 y FE(is)f(divisible)g(b)n(y)g(the)h(leading)f
(term)g Fw(l)r(t)p FE(\()p Fw(g)1953 3130 y Fv(i)1980
3118 y FE(\))h(for)f(all)g Fw(i)h Ft(6)p FE(=)h Fw(j)5
b FE(.)21 b(Sub)5 b(ject)22 b(to)g Fw(>)p FE(,)f(the)g(reduced)523
3218 y(Gr\177)-42 b(obner)24 b(basis)g Fw(G)1115 3230
y Fv(r)1175 3218 y FE(=)f Ft(f)p Fw(g)1345 3230 y FD(1)1381
3218 y Fw(;)14 b(:)g(:)g(:)g(;)g(g)1606 3230 y Fv(t)1634
3218 y Ft(g)25 b FE(is)g(a)f(unique,)h(canonical)f(represen)n(tation)f
(of)i(ideal)g Fw(J)8 b FE(.)648 3318 y(In)33 b(the)g(con)n(text)f(of)h
(Nullstellensatz,)g Fw(V)p 1938 3295 40 3 v 25 x Fm(F)1978
3318 y FE(\()p Fw(J)8 b FE(\))32 b(=)g Ft(;)63 b(\()-14
b(\))63 b Fw(G)2610 3330 y Fv(r)2679 3318 y FE(=)32 b
Ft(f)p FE(1)p Ft(g)p FE(.)f(This)i(implies)523 3417 y(that)c(for)f
(ideals)g(with)h(empt)n(y)f(v)-5 b(ariet)n(y)e(,)28 b(there)g(exists)g
(a)g(sequence)g(of)g Fw(S)5 b(pol)r(y)s FE(\()p Fw(f)t(;)14
b(g)s FE(\))28 b(reduc-)523 3517 y(tions)33 b(in)g(the)g(reduced)f(GB)h
(computation)g(that)g(leads)f(to)h(the)g(unit)g(elemen)n(t.)g(W)-7
b(e)34 b(no)n(w)523 3617 y(sho)n(w)28 b(that)h(b)n(y)f(analyzing)f
(this)i(data,)f(the)h(unsat)f(core)g Fw(F)2376 3629 y
Fv(c)2439 3617 y FE(of)g(the)h(giv)n(en)f(generating)f(set)523
3716 y Fw(F)35 b FE(=)23 b Ft(f)p Fw(f)782 3728 y FD(1)818
3716 y Fw(;)14 b(:)g(:)g(:)g(;)g(f)1044 3728 y Fv(s)1079
3716 y Ft(g)27 b FE(can)g(b)r(e)h(iden)n(ti\014ed.)523
3970 y Fx(3)112 b(Finding)39 b(the)e(Unsat)h(Core)523
4158 y FE(With)20 b(the)g(aforemen)n(tioned)e(concepts)h(and)g
(notations,)g(w)n(e)g(can)g(formally)f(state)h(the)h(unsat)523
4258 y(core)27 b(problem)g(o)n(v)n(er)e(p)r(olynomial)i(rings)g(as)g
(follo)n(ws:)523 4426 y Fs(Problem)k(1)41 b Fu(L)l(et)26
b Fw(F)35 b FE(=)23 b Ft(f)p Fw(f)1398 4438 y FD(1)1435
4426 y Fw(;)14 b(:)g(:)g(:)f(f)1623 4438 y Fv(s)1658
4426 y Ft(g)26 b Fu(b)l(e)h(a)g(set)f(of)i(multivariate)f(p)l
(olynomials)i(in)e(the)g(ring)523 4526 y Fw(R)33 b FE(=)f
Fr(F)p FE([)p Fw(x)837 4538 y FD(1)875 4526 y Fw(;)14
b(:)g(:)g(:)f(;)h(x)1106 4538 y Fv(n)1152 4526 y FE(])35
b Fu(that)g(gener)l(ate)g(ide)l(al)i Fw(J)j FE(=)32 b
Ft(h)p Fw(f)2177 4538 y FD(1)2215 4526 y Fw(;)14 b(:)g(:)g(:)f(;)h(f)
2440 4538 y Fv(s)2475 4526 y Ft(i)33 b(\032)f Fw(R)q
Fu(.)j(Supp)l(ose)h(that)f(it)g(is)523 4625 y(known)40
b(that)g Fw(V)19 b FE(\()p Fw(J)8 b FE(\))42 b(=)g Ft(;)p
Fu(,)e(or)g(it)g(is)h(determine)l(d)g(to)f(b)l(e)g(so)g(by)h(applying)h
(the)e(Gr\177)-42 b(obner)523 4725 y(b)l(asis)36 b(algorithm.)i
(Identify)e(a)g(subset)f(of)h(p)l(olynomials)i Fw(F)2389
4737 y Fv(c)2456 4725 y Ft(\022)33 b Fw(F)r(;)14 b(J)2692
4737 y Fv(c)2760 4725 y FE(=)33 b Ft(h)p Fw(F)2943 4737
y Fv(c)2977 4725 y Ft(i)p Fu(,)j(such)g(that)523 4825
y Fw(V)19 b FE(\()p Fw(J)668 4837 y Fv(c)702 4825 y FE(\))34
b(=)f Ft(;)i Fu(to)l(o.)h(Borr)l(owing)h(the)f(terminolo)l(gy)g(fr)l
(om)g(the)g(Bo)l(ole)l(an)g(SA)-6 b(T)35 b(domain,)j(we)523
4924 y(c)l(al)t(l)31 b Fw(F)729 4936 y Fv(c)793 4924
y Fu(the)f(infe)l(asible)h(c)l(or)l(e)f(or)g(the)g(unsat)f(c)l(or)l(e)h
(of)h Fw(F)12 b Fu(.)1943 5173 y FE(4)p eop end
%%Page: 5 5
TeXDict begin 5 4 bop 648 448 a FE(An)n(y)24 b(set)g(of)g(p)r
(olynomials)f Fw(F)36 b FE(with)24 b(empt)n(y)g(v)-5
b(ariet)n(y)23 b(is)h(an)g(unsat)g(core)f(in)h(itself.)h(There)523
548 y(ma)n(y)j(b)r(e)i(more)e(than)h(one)g(unsat)f(cores)g(in)h
Fw(F)12 b FE(,)29 b(some)g(p)r(olynomials)f(ma)n(y)g(b)r(e)i(common)e
(to)523 648 y(m)n(ultiple)c(cores)f(\(i.e.)h(the)g(cores)f(ma)n(y)g(b)r
(e)h(non-disjoin)n(t\),)f(and)h(these)g(cores)e(ma)n(y)h(ha)n(v)n(e)g
(dif-)523 747 y(feren)n(t)j(cardinalities)e Ft(j)p Fw(F)1297
759 y Fv(c)1332 747 y Ft(j)p FE(.)i(The)f(unsat)h(core)f(problems)g
(are)f(therefore)h(further)h(classi\014ed)523 847 y(as:)575
1006 y Fs({)41 b FE(Iden)n(tify)28 b(a)f Fu(minimum)h
FE(core,)e(i.e.)i(a)f(core)g(of)g(minim)n(um)i(cardinalit)n(y)-7
b(.)575 1104 y Fs({)41 b FE(Iden)n(tify)35 b(a)f Fu(minimal)i
FE(core.)d(An)i(unsat)g(core)e Fw(F)2205 1116 y Fv(c)2274
1104 y FE(is)h(minimal)h(with)g(resp)r(ect)f(to)h(the)664
1204 y(prop)r(ert)n(y)29 b(that)h(while)g(the)h(v)-5
b(ariet)n(y)29 b(of)h Fw(F)1980 1216 y Fv(c)2044 1204
y FE(is)g(empt)n(y)-7 b(,)30 b(the)h(v)-5 b(ariet)n(y)29
b(of)h Fu(any)g FE(subset)g(of)664 1304 y Fw(F)717 1316
y Fv(c)779 1304 y FE(is)e Fu(non-empty)p FE(,)f(i.e.)h
Fw(V)19 b FE(\()p Fw(F)1581 1316 y Fv(c)1634 1304 y Ft(\000)f(f)p
Fw(f)1800 1316 y Fv(i)1827 1304 y Ft(g)p FE(\))k Ft(6)p
FE(=)h Ft(;)k FE(for)g(an)n(y)g Fw(f)2405 1316 y Fv(i)2455
1304 y Ft(2)d Fw(F)2587 1316 y Fv(c)2621 1304 y FE(.)575
1402 y Fs({)41 b FE(Iden)n(tify)24 b(an)n(y)f(unsat)g(core)f
(disregarding)g(minimalit)n(y;)h(i.e.)h(\014nd)g(an)n(y)e(subset)i
Fw(F)3169 1414 y Fv(c)3227 1402 y FE(of)f Fw(F)12 b FE(.)648
1562 y(Let)30 b(us)g(\014rst)g(consider)g(the)g(problem)g(of)g
(\014nding)h(an)n(y)e Fw(F)2469 1574 y Fv(c)2531 1562
y Ft(\032)e Fw(F)12 b FE(,)31 b(disregarding)d(mini-)523
1662 y(malit)n(y)-7 b(.)24 b(It)h(is)g(not)f(hard)g(to)h(motiv)-5
b(ate)24 b(that)h(an)g(unsat)f(core)f(should)i(b)r(e)g(iden)n
(ti\014able)f(using)523 1762 y(the)d(Gr\177)-42 b(obner)20
b(basis)f(algorithm:)h(Assume)h(that)g Fw(F)2099 1774
y Fv(c)2156 1762 y FE(=)i Fw(F)16 b Ft(\000)5 b(f)p Fw(f)2466
1774 y Fv(j)2499 1762 y Ft(g)p FE(.)20 b(If)h Fw(GB)t
FE(\()p Fw(F)12 b FE(\))24 b(=)f Fw(GB)t FE(\()p Fw(F)3250
1774 y Fv(c)3285 1762 y FE(\))g(=)523 1861 y Ft(f)p FE(1)p
Ft(g)p FE(,)h(then)h(it)h(implies)f(that)g Fw(f)1460
1873 y Fv(j)1518 1861 y Ft(2)f(h)p Fw(F)h Ft(\000)13
b(f)p Fw(f)1868 1873 y Fv(j)1902 1861 y Ft(gi)p FE(.)25
b(In)g(other)g(w)n(ords,)f Fw(f)2640 1873 y Fv(j)2699
1861 y FE(can)h(b)r(e)h(comp)r(osed)e(of)523 1961 y(the)k(other)f(p)r
(olynomials)f(of)i Fw(F)1492 1973 y Fv(c)1526 1961 y
FE(,)g(so)e Fw(f)1719 1973 y Fv(j)1782 1961 y FE(is)h(not)g(a)g(part)g
(of)h(the)g(unsat)f(core,)f(and)i(it)g(can)f(b)r(e)523
2060 y(safely)i(discarded)f(from)h Fw(F)1378 2072 y Fv(c)1412
2060 y FE(.)g(This)h(can)e(b)r(e)i(iden)n(ti\014ed)g(b)n(y)e(means)h
(of)g(the)h(GB)f(algorithm)523 2160 y(for)e(this)h(ideal)f(mem)n(b)r
(ership)h(test)g(\(due)g(to)f(Def.)i(1\(ii\)\).)648 2260
y(A)j(n\177)-42 b(aiv)n(e)30 b(w)n(a)n(y)h(\(and)h(ine\016cien)n(t)g(w)
n(a)n(y\))e(to)i(iden)n(tify)g Fu(a)i(minimal)g(c)l(or)l(e)f
FE(using)e(the)h(GB)523 2359 y(computation)21 b(is)h(as)e(follo)n(ws:)h
(selectr)g(a)g(p)r(olynomial)g Fw(f)2244 2371 y Fv(i)2292
2359 y FE(and)h(see)f(if)h Fw(V)d FE(\()p Fw(F)2798 2371
y Fv(c)2838 2359 y Ft(\000)6 b(f)p Fw(f)2992 2371 y Fv(i)3019
2359 y Ft(g)p FE(\))23 b(=)f Ft(;)g FE(\(i.e.)523 2459
y(if)i(reduced)e Fw(GB)t FE(\()p Fw(F)1116 2471 y Fv(c)1160
2459 y Ft(\000)9 b(f)p Fw(f)1317 2471 y Fv(i)1344 2459
y Ft(g)p FE(\))23 b(=)f Ft(f)p FE(1)p Ft(g)p FE(\).)g(If)i(so,)e
(discard)g Fw(f)2253 2471 y Fv(i)2304 2459 y FE(from)g(the)i(core;)d
(otherwise)i(retain)523 2559 y Fw(f)564 2571 y Fv(i)616
2559 y FE(in)h Fw(F)762 2571 y Fv(c)797 2559 y FE(.)g(Select)h(a)f
(di\013eren)n(t)g Fw(f)1512 2571 y Fv(i)1564 2559 y FE(and)g(con)n(tin)
n(ue)g(un)n(til)h(all)f(p)r(olynomials)g Fw(f)2856 2571
y Fv(i)2908 2559 y FE(are)f(visited)i(for)523 2658 y(inclusion)32
b(in)g Fw(F)1028 2670 y Fv(c)1063 2658 y FE(.)g(This)g(approac)n(h)e
(will)j(pro)r(duce)f(a)f(minimal)i(core,)e(as)h(w)n(e)f(w)n(ould)h(ha)n
(v)n(e)523 2758 y(tested)27 b(eac)n(h)e(p)r(olynomial)h
Fw(f)1421 2770 y Fv(i)1475 2758 y FE(for)g(inclusion)g(in)g(the)h
(core.)e(This)i(requires)e Fw(O)r FE(\()p Ft(j)p Fw(F)12
b Ft(j)p FE(\))27 b(calls)f(to)523 2857 y(the)i(GB)g(engine,)f(whic)n
(h)h(is)f(really)g(impractical.)523 3101 y Fs(3.1)95
b(In)m(v)m(estigating)31 b(algorithmic)g(tec)m(hniques)h(to)g(\014nd)g
Fg(F)2650 3113 y Ff(c)2720 3101 y Fs(from)f Fg(F)523
3282 y FE(W)-7 b(e)19 b(in)n(v)n(estigate)e(if)i(it)g(is)f(p)r(ossible)
g(to)g(iden)n(tify)h(a)f(core)f(b)n(y)h(analyzing)f(the)i
Fw(S)5 b(pol)r(y)s FE(\()p Fw(f)3074 3294 y Fv(i)3100
3282 y Fw(;)14 b(f)3178 3294 y Fv(j)3213 3282 y FE(\))3289
3234 y Fv(F)3268 3282 y Ft(\000)-44 b(!)3372 3294 y FD(+)523
3381 y Fw(r)44 b FE(reductions)d(in)g(Buc)n(h)n(b)r(erger's)f
(algorithm.)g(Since)i Fw(F)53 b FE(is)41 b(an)g(unsat)g(core,)g
(de\014nitely)523 3481 y Fu(ther)l(e)46 b(exists)f(a)i(se)l(quenc)l(e)e
(of)i(Sp)l(oly)f(r)l(e)l(ductions)g(in)g(Buchb)l(er)l(ger's)h
(algorithm)g(wher)l(e)523 3600 y Fw(S)5 b(pol)r(y)s FE(\()p
Fw(f)805 3612 y Fv(i)831 3600 y Fw(;)14 b(f)909 3612
y Fv(j)944 3600 y FE(\))1020 3553 y Fv(F)999 3600 y Ft(\000)-44
b(!)1103 3612 y FD(+)1181 3600 y FE(1)28 b Fu(is)g(achieve)l(d.)h
FE(Moreo)n(v)n(er,)23 b(p)r(olynomial)i(reduction)g(algorithms)f(can)
523 3700 y(b)r(e)31 b(suitably)f(mo)r(di\014ed)h(to)g(record)e(whic)n
(h)h(p)r(olynomials)g(from)g Fw(F)42 b FE(are)30 b(used)g(in)h(the)g
(divi-)523 3819 y(sion)d(leading)g(to)h Fw(S)5 b(pol)r(y)s
FE(\()p Fw(f)1367 3831 y Fv(i)1393 3819 y Fw(;)14 b(f)1471
3831 y Fv(j)1506 3819 y FE(\))1584 3772 y Fv(F)1563 3819
y Ft(\000)-44 b(!)1667 3831 y FD(+)1747 3819 y FE(1.)29
b(This)g(suggests)e(that)i(b)n(y)f(recording)f(the)j
Fu(\\data")523 3919 y FE(generated)24 b(b)n(y)g(Buc)n(h)n(b)r(erger's)f
(algorithm)h(|)g(i.e.)h(the)g(critical)g(pair)f(p)r(olynomials)g(\()p
Fw(f)3233 3931 y Fv(i)3260 3919 y Fw(;)14 b(f)3338 3931
y Fv(j)3373 3919 y FE(\))523 4019 y(used)37 b(in)h(the)f(Sp)r(oly)g
(computations,)g(and)g(the)g(p)r(olynomials)g(from)f
Fw(F)49 b FE(used)38 b(to)f(cancel)523 4138 y(terms)c(in)g(the)h
(reduction)e Fw(S)5 b(pol)r(y)s FE(\()p Fw(f)1667 4150
y Fv(i)1694 4138 y Fw(;)14 b(f)1772 4150 y Fv(j)1806
4138 y FE(\))1892 4091 y Fv(F)1871 4138 y Ft(\000)-44
b(!)1975 4150 y FD(+)2062 4138 y FE(1)33 b(|)g(w)n(e)g(should)g(b)r(e)g
(able)g(to)g(iden)n(tify)g(a)523 4238 y(core.)648 4337
y(W)-7 b(e)29 b(will)g(use)g(an)g(example)g(to)f(demonstrate)h(our)f
(approac)n(h)f(of)i(iden)n(tifying)g Fw(F)3190 4349 y
Fv(c)3250 4337 y Ft(\022)c Fw(F)523 4437 y FE(using)i(this)h(\\data":)
523 4605 y Fu(Example)j(1.)42 b FE(Consider)27 b(the)h(follo)n(wing)e
(set)i(of)f(p)r(olynomials:)1284 4757 y Fw(f)1325 4769
y FD(1)1385 4757 y FE(:)c Fw(abc)18 b FE(+)g Fw(ab)g
FE(+)g Fw(ac)g FE(+)g Fw(bc)g FE(+)g Fw(a)g FE(+)g Fw(b)g
FE(+)g Fw(c)h FE(+)f(1)1873 4924 y Fw(f)1914 4936 y FD(2)1974
4924 y FE(:)23 b Fw(b)1943 5173 y FE(5)p eop end
%%Page: 6 6
TeXDict begin 6 5 bop 1851 448 a Fw(f)1892 460 y FD(3)1951
448 y FE(:)24 b Fw(ac)1778 607 y(f)1819 619 y FD(4)1879
607 y FE(:)f Fw(ac)18 b FE(+)g Fw(a)1786 766 y(f)1827
778 y FD(5)1887 766 y FE(:)23 b Fw(bc)18 b FE(+)g Fw(c)1572
924 y(f)1613 936 y FD(6)1673 924 y FE(:)23 b Fw(abd)c
FE(+)f Fw(ad)g FE(+)g Fw(bd)g FE(+)g Fw(d)1851 1083 y(f)1892
1095 y FD(7)1952 1083 y FE(:)23 b Fw(cd)1269 1241 y(f)1310
1253 y FD(8)1370 1241 y FE(:)g Fw(abd)18 b FE(+)g Fw(ab)g
FE(+)g Fw(ad)h FE(+)f Fw(bd)g FE(+)g Fw(a)h FE(+)f Fw(b)g
FE(+)g Fw(d)g FE(+)g(1)1580 1400 y Fw(f)1621 1412 y FD(9)1681
1400 y FE(:)23 b Fw(abd)18 b FE(+)g Fw(ab)g FE(+)g Fw(bd)g
FE(+)g Fw(b)648 1559 y FE(Assume)43 b Fw(>)1036 1571
y Fv(D)r(E)s(GLE)s(X)1399 1559 y FE(monomial)g(ordering)f(with)i
Fw(a)49 b(>)g(b)g(>)g(c)g(>)g(d)p FE(.)44 b(Let)f Fw(F)61
b FE(=)523 1658 y Ft(f)p Fw(f)606 1670 y FD(1)642 1658
y Fw(;)14 b(:)g(:)g(:)g(;)g(f)868 1670 y FD(9)905 1658
y Ft(g)27 b FE(and)h Fw(J)k FE(=)24 b Ft(h)p Fw(F)12
b Ft(i)24 b(\032)f Fr(F)1595 1670 y FD(2)1632 1658 y
FE([)p Fw(a;)14 b(b;)g(c;)g(d)p FE(])28 b(where)g Fr(F)2268
1670 y FD(2)2328 1658 y FE(=)c Ft(f)p FE(0)p Fw(;)14
b FE(1)p Ft(g)26 b FE(is)i(the)g(\014nite)h(\014eld)f(of)g(2)523
1758 y(elemen)n(ts.)f(Then)g Fw(V)19 b FE(\()p Fw(J)8
b FE(\))23 b(=)g Ft(;)j FE(as)h Fw(GB)t FE(\()p Fw(J)8
b FE(\))24 b(=)e(1.)27 b(The)g(set)f Fw(F)39 b FE(consists)26
b(of)h(4)f Fu(minimal)i FE(cores:)523 1857 y Fw(F)576
1869 y Fv(c)p FD(1)686 1857 y FE(=)42 b Ft(f)p Fw(f)876
1869 y FD(1)912 1857 y Fw(;)14 b(f)990 1869 y FD(2)1027
1857 y Fw(;)g(f)1105 1869 y FD(3)1142 1857 y Fw(;)g(f)1220
1869 y FD(4)1257 1857 y Fw(;)g(f)1335 1869 y FD(7)1372
1857 y Fw(;)g(f)1450 1869 y FD(8)1486 1857 y Ft(g)p Fw(;)g(F)1618
1869 y Fv(c)p FD(2)1728 1857 y FE(=)42 b Ft(f)p Fw(f)1918
1869 y FD(2)1954 1857 y Fw(;)14 b(f)2032 1869 y FD(4)2069
1857 y Fw(;)g(f)2147 1869 y FD(5)2184 1857 y Fw(;)g(f)2262
1869 y FD(6)2299 1857 y Fw(;)g(f)2377 1869 y FD(8)2413
1857 y Ft(g)p Fw(;)g(F)2545 1869 y Fv(c)p FD(3)2655 1857
y FE(=)42 b Ft(f)p Fw(f)2845 1869 y FD(2)2881 1857 y
Fw(;)14 b(f)2959 1869 y FD(3)2996 1857 y Fw(;)g(f)3074
1869 y FD(4)3111 1857 y Fw(;)g(f)3189 1869 y FD(6)3226
1857 y Fw(;)g(f)3304 1869 y FD(8)3340 1857 y Ft(g)p Fw(;)523
1957 y FE(and)27 b Fw(F)737 1969 y Fv(c)p FD(4)828 1957
y FE(=)22 b Ft(f)p Fw(f)998 1969 y FD(1)1035 1957 y Fw(;)14
b(f)1113 1969 y FD(2)1150 1957 y Fw(;)g(f)1228 1969 y
FD(4)1264 1957 y Fw(;)g(f)1342 1969 y FD(5)1379 1957
y Ft(g)p FE(.)648 2116 y(Buc)n(h)n(b)r(erger's)30 b(algorithm)g
(terminates)i(to)g(a)f(unique)i(reduced)e(GB,)h(irresp)r(ectiv)n(e)f
(of)523 2235 y(the)20 b(order)f(in)h(whic)n(h)g(the)g(critical)f(pairs)
g(are)g(selected)h(and)g(reduced)f(as)h Fw(S)5 b(pol)r(y)s
FE(\()p Fw(f)3052 2247 y Fv(i)3078 2235 y Fw(;)14 b(f)3156
2247 y Fv(j)3191 2235 y FE(\))3267 2188 y Fv(F)3246 2235
y Ft(\000)-44 b(!)3350 2247 y FD(+)523 2335 y Fw(r)r
FE(.)39 b(Let)f(us)g(supp)r(ose)f(that)i(in)f(the)g(GB)g(computation)g
(corresp)r(onding)d(to)j(Example)f(1,)523 2434 y(the)c(\014rst)f(3)g
(critical)g(pairs)g(analyzed)g(are)f(\()p Fw(f)1977 2446
y FD(1)2014 2434 y Fw(;)14 b(f)2092 2446 y FD(2)2129
2434 y FE(\))p Fw(;)g FE(\()p Fw(f)2271 2446 y FD(3)2309
2434 y Fw(;)g(f)2387 2446 y FD(4)2423 2434 y FE(\))33
b(and)g(\()p Fw(f)2728 2446 y FD(2)2765 2434 y Fw(;)14
b(f)2843 2446 y FD(5)2880 2434 y FE(\).)33 b(It)g(turns)f(out)523
2534 y(that)d(the)h(Sp)r(oly-reductions)e(corresp)r(onding)f(to)i
(these)g(3)f(pairs)g(lead)h(to)g(the)h(unit)f(ideal.)523
2634 y(Recording)i(the)i(\\data")e(corresp)r(onding)f(to)j(this)f
(sequence)g(of)g(reductions)g(is)h(depicted)523 2733
y(in)28 b(Fig.)f(1.)h(W)-7 b(e)28 b(call)f(this)h(graph)e(a)h
(refutation)h(tree.)1214 4057 y @beginspecial 0 @llx
0 @lly 720 @urx 540 @ury 1800 @rwi @setspecial
%%BeginDocument: ./SAT2016_xiaojun/refutation_tree.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: refutation_tree.pdf
%%Creator: Adobe Acrobat 10.1.15
%%For: Jason
%%CreationDate: 2016/2/26, 10:37:44
%%BoundingBox: 0 0 720 540
%%HiResBoundingBox: 0 0 720 540
%%CropBox: 0 0 720 540
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 856 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:CreateDate="2016-02-26T10:27:59-07:00"
   xmp:CreatorTool="Microsoft® PowerPoint® 2013"
   xmp:ModifyDate="2016-02-26T10:27:59-07:00"
   pdf:Producer="Microsoft® PowerPoint® 2013">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>骁骏</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">PowerPoint 演示文稿</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -540 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 540 li
720 540 li
720 0 li
cp
clp
gsave
0 540 mo
720 540 li
720 0 li
0 0 li
cp
clp
0 540 mo
720 540 li
720 -6.10352e-5 li
0 -6.10352e-5 li
cp
false sop
/0 
[/DeviceGray] /CSA add_res
1 gry
ef
.0614376 gry
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPS-ItalicMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 99 /c put
dup 102 /f put
def
/FontBBox {-498 -307 1333 1023} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD1638113E4B58C0B5F39100186722805B704
AA3988900AFCFF05DD> |-
/one <1C60D8A8C9B7A73DB6A4A1045477B897A236531EE6744E986B049CB2B4
C1FE00325C8BF061D241BD30B895F448A012FA11CB58DD958F1372DACE120865
7E476E9190270F7FC72B0B9DCE2DDE5E748B644DD70718A6734618F8229BDD2E
5AE0C198797BC9647A1D37D27AAA1BAE3BFBF0B70DB4F621F7> |-
/two <1C60D8A8C9B7A73DB69C12026B750802855EAC5092BB0A5898B5D5C055
BF85280FEB4B1F3E4AFB01B0A8A29DB15451C23681417470B94B4D8D92484A39
334C366B9828F8F838BF53371C17891341B316F197C3AA30247051762DF7F17C
B7ACE84978B012AD0CA07C229C814073CD1F19CA205691988B437B6925EC8729
C2823046BA> |-
/three <1C60D8A8C9B7A73DB9AD9E1198F486357EF0B21BA3B223A4454F8713
4A33E7B05FBEBD54E2E15EE07CA0E86475CEDA75FE6EC7CC26A7C1193ABEBB34
8EE8C242C93B4A3DFB138E90E470C0795857EBAC82F9500B9007C3C3C1D35242
A2D7BB7BCB129B370D84AE06270498BAA570E6A849DF2A3057781782DB63178F
B7BF717AB4A95100FB82CC3D5D208D5079E8F6ADB85140C7EE0091E36F5A2AE3
715EE555C7F426C8085BCD4F5A9912A4CA4D78AA92806C8E53C32C02A5E8E15F
BE1796AC7FAB231D974845F7A3FB01849ADAEB1660889453E08F67B2D84BCE43
9196EB> |-
/four <1C60D8A8C9B7A73DB6EF2B78720F76FE1E85F89D2A1DC69C2202E4273
F3E084393B3AC4189963E5A9690F2DC722B9BB74A43721A9C301224C0A6BCC5C
B45> |-
/five <1C60D8A8C9B7A73DB908A529EA1B163495C9FBB8496693F386DC631C9
3FD9220058D664A9080E06A7F63C9E18E916A4265AF18C2006B16A2D3AEA0C2F
C36F3FF4AE67A5B81A0E6EA757A0FDFB61DB3F4BB7C3EAE9D58824A3C8FAB386
93EEC731E580A5F87A6798AD5FA39DC059E95FC414150CB8B8BC8DEE1D36AAD9
B55CA49AACD14C53714D321E9D9FC1594BFD69902F71B64402D33285D> |-
/c <1C60D8A8C9B77FE2C1AAE0EC93E571B636F5347D3714722A84750C1B29A3
9B8539044786FB4D21214EC790263603D768977575E3DFEDEB06ED210B719A19
51D9CD3A1CEDC2DBBBA9F50EB52B23C7BC0E7C5116FC1274BBC998D424E35185
95216116D6B76CDF4E0BCDAF27025304BCCA1980CECDB742C27E839F34D438C5
CC751D1A202A9B0CBB89CFB07DF67AB5E8EE4143A6BB864E7AFD01C988BDA57B
AAFB46475895EDA7DC9A3D645E52BE6B50DA1C1724C629C5533C12A95B43E497
C080A6D8450597> |-
/f <1C60D8A8C9B854D0F4B281B42A092C6FF82395F80A15D2C3C12DDA8BD3AD
36E58B3AF910D2B8ADA6BC1C30137D0B4DF4FA4D59FA1ACB53459B7EC4AE089C
AED0AC91FA3467AFFE9A61F305EA6974A5E976D616D1A9D4FE32401AFC4C8256
E9DB7E7DA19A9590B8444669A02D969F9D7400113A1B0796FD928E598C3B7A80
D1D6A9C40F81F2F1E3C4D5AC7B233A0790585320A08546F89329AA00FD4D5E1E
75EC59101B6580A1509A78E0540D10213C525ADA794DAE15593AD445E59C9538
B4450ED729467A46BE6AB3BFA02A1FB3F6390813CCC3D99CF1B2B175F6DCAADE
66318988F9151791D53E6E4751A470A643E004161F0D3039A05AB8CF9D511D61
3F018EA1A7F7CD3D271165C92B396D85FCFE742D3DF0EDB5E2862C16D937DC> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/SDFXVC+TimesNewRomanPS-ItalicMT /TimesNewRomanPS-ItalicMT findfont ct_VMDictPut
/SDFXVC+TimesNewRomanPS-ItalicMT*1 
[49{/.notdef}rp /one /two /three /four /five 45{/.notdef}rp /c 
2{/.notdef}rp /f 153{/.notdef}rp]
SDFXVC+TimesNewRomanPS-ItalicMT nf
SDFXVC+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
234.92 55.4 mo
(c)sh
%ADOBeginSubsetFont: PBAAAA+Times#20New#20Roman,Italic Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /PBAAAA+Times#20New#20Roman,Italic def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 149 /bullet put
def
/FontBBox {-498 -307 1333 1023} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD1638113E4B58C0B5F39100186722805B704
AA3988900AFCFF05DD> |-
/bullet <1C60D8A8C9B80CC2BC8BC9C179851105C6BFA4D2D2AA49D9C20A1D0
5A931BB36D79B54A0EEB9199CD4AD8E239C7F486BC6CFBFEC5AA78A0A68C0197
6A0F128D28C0F86DF02BEBE> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/SDFXVD+Times#20New#20Roman,Italic /PBAAAA+Times#20New#20Roman,Italic findfont ct_VMDictPut
/SDFXVD+Times#20New#20Roman,Italic*1 
[149{/.notdef}rp /bullet 106{/.notdef}rp]
SDFXVD+Times#20New#20Roman,Italic nf
SDFXVD+Times#20New#20Roman,Italic*1 [28.02 0 0 -28.02 0 0 ]msf
250.88 55.4 mo
(\225)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
269.66 55.4 mo
(f)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
279.68 64.34 mo
(2)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
234.92 121.8 mo
(f)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
244.94 130.74 mo
(5)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
330.42 212.36 mo
(f)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
340.44 221.3 mo
(3)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
330.42 278.74 mo
(f)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
340.44 287.68 mo
(4)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
656.6 361.78 mo
(f)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
666.62 370.72 mo
(1)sh
gsave
1.0729e-5 540 mo
720 540 li
720 0 li
1.0729e-5 0 li
cp
eclp
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
systemdict begin
SDFXVC+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B7A73DB68C06FC199F1F2F20B1C2E3715651C87BCD4ADD6877
5B4647B129144EBE49EAC15F019B26773F428CC0D1BB4A6183FD1BAD53C3DC7D
C1778E21FEA13949F179F397E1068E68EF5BDF24BE0DC7557B673C23D4A50497
DF80D9C838AB9EEA3C59483A8E7BD334D2361BCA7F19AE87B1D972F7B79ABAD0
7378C084886016D514CC545EA1F4A9EE8851A3C3F902C0F0DCD2FEE069D9BC21
3BFD5E5AFCA4D73D61283DE2191744FD94BBAE1E2CE71F1DD86C9281938B9644
2B456E7FA2EA8852C51CB5A9C2A0AFF4A5706E78B9A6A93AA2E14914A3A3355D
7AE853081C2D03136A31> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SDFXVC+TimesNewRomanPS-ItalicMT /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
/SDFXVC+TimesNewRomanPS-ItalicMT*1 
[49{/.notdef}rp /one /two /three /four /five 43{/.notdef}rp /a 
/.notdef /c 2{/.notdef}rp /f 153{/.notdef}rp]
SDFXVC+TimesNewRomanPS-ItalicMT nf
SDFXVC+TimesNewRomanPS-ItalicMT*1 [36.02 0 0 -36.02 0 0 ]msf
645.04 435.68 mo
(ac)
[18 0 ]xsh
grestore
SDFXVD+Times#20New#20Roman,Italic*1 [24 0 0 -24 0 0 ]msf
679 435.68 mo
(\225)sh
gsave
1.0729e-5 540 mo
720 540 li
720 0 li
1.0729e-5 0 li
cp
eclp
SDFXVC+TimesNewRomanPS-ItalicMT*1 [36.02 0 0 -36.02 0 0 ]msf
695.46 435.68 mo
(f)sh
grestore
gsave
1.0729e-5 540 mo
720 540 li
720 0 li
1.0729e-5 0 li
cp
eclp
SDFXVC+TimesNewRomanPS-ItalicMT*1 [24.02 0 0 -24.02 0 0 ]msf
705.48 444.62 mo
(2)sh
grestore
gsave
1.0729e-5 540 mo
720 540 li
720 0 li
1.0729e-5 0 li
cp
eclp
%ADOBeginSubsetFont: PBAAAA+Times#20New#20Roman,Italic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
systemdict begin
SDFXVD+Times#20New#20Roman,Italic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7A73DB6A4A1045477B897A236531EE6744E986B049CB2B4
C1FE00325C8BF061D241BD30B895F448A012FA11CB58DD958F1372DACE120865
7E476E9190270F7FC72B0B9DCE2DDE5E748B644DD70718A6734618F8229BDD2E
5AE0C198797BC9647A1D37D27AAA1BAE3BFBF0B70DB4F621F7> |-
/quotedblleft <1C60D8A8C9B7EF322BCD48236565101ED7BC0D737E2F4D9EE
19897F6F43D2FDBA4BC47B61EA6E6BCAF0A2BB749F6CFBAFC481592F8C035863
A9123946EB73C54184A7A8AD9FE363DF4CE339E3290FCF1294D4FFFE7C771382
CE22B664C09DDBF04894E2EE2F2AF3621E585A1B505F2F1BCD5D7088562BE78F
EB0F4F73F49BE65BD959F2680F3C4053EC4E4D4FD5D1CB7A3BDF3857E62C36DE
1723678442B0D711A42F1371114585651D51CAFECA17462FFC798218FB5587DA
A959E4F2CADD52C504914> |-
/quotedblright <1C60D8A8C9B7EF32244665061BEA177CFCE949362A1DA86A
B922BF207781DA32EF749477FDEF12C6E9A49ADA71726F87546BA5EC8E7F153E
564A91F0894C6F1B0ED829CE7A7E034D6F0E997B6E236950FE61E0464511F645
2BBC330F5A2692AA57BFC6EBA2BB0439D13EE1921AAA114F8FEBAC1CBB7C0AB5
80B320BAC21B05300B98726319928814F9013E7F465F79AE4E2BE1804AB40552
E8777A6CF38D0B2AFE83BDE792F457987AA1F3954C7EB297B42900393D034479
FBADD875> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SDFXVD+Times#20New#20Roman,Italic /Encoding get
dup 49 /one put
dup 147 /quotedblleft put
dup 148 /quotedblright put
pop
%ADOEndSubsetFont
/SDFXVD+Times#20New#20Roman,Italic*1 
[49{/.notdef}rp /one 97{/.notdef}rp /quotedblleft /quotedblright /bullet 106{/.notdef}rp]
SDFXVD+Times#20New#20Roman,Italic nf
SDFXVD+Times#20New#20Roman,Italic*1 [36 0 0 -36 0 0 ]msf
-5.86 253.3 mo
(\2231\224)
[20.016 18 0 ]xsh
grestore
126.73 80.43 mo
227.89 42.99 li
227.53 42.03 li
126.38 79.48 li
cp
130.57 74.27 mo
125.61 80.31 li
133.31 81.66 li
133.59 81.7 133.85 81.52 133.9 81.24 cv
133.95 80.96 133.76 80.7 133.49 80.65 cv
126.65 79.45 li
126.95 80.28 li
131.36 74.91 li
131.54 74.7 131.51 74.37 131.29 74.2 cv
131.08 74.02 130.75 74.05 130.57 74.27 cv
cp
f
126.71 86.33 mo
227.82 108.42 li
227.6 109.41 li
126.49 87.32 li
cp
131.37 91.9 mo
125.61 86.61 li
133.05 84.2 li
133.32 84.11 133.6 84.26 133.69 84.53 cv
133.78 84.8 133.63 85.09 133.36 85.17 cv
126.75 87.31 li
126.94 86.45 li
132.06 91.15 li
132.26 91.34 132.28 91.66 132.09 91.87 cv
131.9 92.08 131.57 92.09 131.37 91.9 cv
cp
f
54.326 224.22 mo
119.83 86.83 li
118.91 86.39 li
53.405 223.78 li
cp
52.779 217.12 mo
53.429 224.92 li
59.893 220.51 li
60.126 220.35 60.186 220.04 60.028 219.8 cv
59.869 219.57 59.552 219.51 59.319 219.67 cv
53.578 223.58 li
54.373 223.96 li
53.796 217.04 li
53.772 216.76 53.526 216.55 53.245 216.57 cv
52.964 216.59 52.756 216.84 52.779 217.12 cv
cp
f
242.96 231.46 mo
323.41 199.94 li
323.04 199 li
242.58 230.51 li
cp
246.68 225.22 mo
241.83 231.35 li
249.55 232.56 li
249.83 232.6 250.09 232.41 250.14 232.13 cv
250.18 231.85 249.99 231.59 249.71 231.55 cv
242.85 230.48 li
243.17 231.3 li
247.48 225.85 li
247.66 225.63 247.62 225.31 247.4 225.14 cv
247.18 224.96 246.86 225 246.68 225.22 cv
cp
f
247.22 235.66 mo
323.39 265.35 li
323.02 266.3 li
246.85 236.61 li
cp
250.95 241.89 mo
246.09 235.77 li
253.81 234.55 li
254.09 234.51 254.35 234.7 254.4 234.98 cv
254.44 235.25 254.25 235.51 253.97 235.56 cv
247.11 236.64 li
247.43 235.82 li
251.75 241.26 li
251.92 241.48 251.89 241.8 251.67 241.98 cv
251.45 242.15 251.13 242.11 250.95 241.89 cv
cp
f
579.98 380.97 mo
649.58 349.33 li
649.16 348.41 li
579.56 380.04 li
cp
583.37 374.54 mo
578.85 380.92 li
586.63 381.71 li
586.91 381.74 587.16 381.54 587.19 381.26 cv
587.22 380.98 587.01 380.73 586.73 380.7 cv
579.82 380 li
580.19 380.8 li
584.2 375.13 li
584.36 374.9 584.31 374.58 584.08 374.42 cv
583.85 374.25 583.53 374.31 583.37 374.54 cv
cp
f
578.48 382.42 mo
649.61 414.81 li
649.19 415.73 li
578.06 383.35 li
cp
581.86 388.85 mo
577.35 382.47 li
585.13 381.68 li
585.41 381.65 585.66 381.86 585.69 382.14 cv
585.72 382.42 585.51 382.67 585.23 382.7 cv
578.32 383.4 li
578.69 382.59 li
582.7 388.27 li
582.86 388.5 582.8 388.81 582.57 388.98 cv
582.34 389.14 582.03 389.08 581.86 388.85 cv
cp
f
571.53 382.47 mo
571.53 380.02 573.52 378.03 575.97 378.03 cv
578.42 378.03 580.41 380.02 580.41 382.47 cv
580.41 384.92 578.42 386.91 575.97 386.91 cv
573.52 386.91 571.53 384.92 571.53 382.47 cv
cp
.48765 gry
ef
1.02 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
571.53 382.47 mo
571.53 380.02 573.52 378.03 575.97 378.03 cv
578.42 378.03 580.41 380.02 580.41 382.47 cv
580.41 384.92 578.42 386.91 575.97 386.91 cv
573.52 386.91 571.53 384.92 571.53 382.47 cv
cp
.308342 gry
@
232.95 231.33 mo
232.95 228.88 234.94 226.89 237.39 226.89 cv
239.84 226.89 241.83 228.88 241.83 231.33 cv
241.83 233.78 239.84 235.77 237.39 235.77 cv
234.94 235.77 232.95 233.78 232.95 231.33 cv
cp
.48765 gry
ef
232.95 231.33 mo
232.95 228.88 234.94 226.89 237.39 226.89 cv
239.84 226.89 241.83 228.88 241.83 231.33 cv
241.83 233.78 239.84 235.77 237.39 235.77 cv
234.94 235.77 232.95 233.78 232.95 231.33 cv
cp
.308342 gry
@
118.05 83.49 mo
118.05 81.04 120.04 79.05 122.49 79.05 cv
124.94 79.05 126.93 81.04 126.93 83.49 cv
126.93 85.94 124.94 87.93 122.49 87.93 cv
120.04 87.93 118.05 85.94 118.05 83.49 cv
cp
.48765 gry
ef
118.05 83.49 mo
118.05 81.04 120.04 79.05 122.49 79.05 cv
124.94 79.05 126.93 81.04 126.93 83.49 cv
126.93 85.94 124.94 87.93 122.49 87.93 cv
120.04 87.93 118.05 85.94 118.05 83.49 cv
cp
.308342 gry
@
54.534 248.43 mo
124.14 305.25 li
123.49 306.04 li
53.889 249.22 li
cp
56.169 255.51 mo
53.428 248.19 li
61.153 249.41 li
61.431 249.45 61.621 249.71 61.577 249.99 cv
61.533 250.27 61.272 250.46 60.994 250.42 cv
54.133 249.33 li
54.69 248.65 li
57.125 255.16 li
57.223 255.42 57.09 255.71 56.826 255.81 cv
56.562 255.91 56.268 255.78 56.169 255.51 cv
cp
.0614376 gry
f
152.63 305.42 mo
234.56 234.9 li
233.89 234.12 li
151.96 304.65 li
cp
154.08 298.3 mo
151.53 305.69 li
159.22 304.27 li
159.5 304.22 159.68 303.95 159.63 303.68 cv
159.58 303.4 159.31 303.22 159.03 303.27 cv
152.2 304.53 li
152.78 305.2 li
155.04 298.63 li
155.13 298.37 154.99 298.07 154.73 297.98 cv
154.46 297.89 154.17 298.03 154.08 298.3 cv
cp
f
490.11 419.7 mo
490.11 417.23 492.1 415.23 494.55 415.23 cv
497 415.23 498.99 417.23 498.99 419.7 cv
498.99 422.17 497 424.17 494.55 424.17 cv
492.1 424.17 490.11 422.17 490.11 419.7 cv
cp
.48765 gry
ef
490.11 419.7 mo
490.11 417.23 492.1 415.23 494.55 415.23 cv
497 415.23 498.99 417.23 498.99 419.7 cv
498.99 422.17 497 424.17 494.55 424.17 cv
492.1 424.17 490.11 422.17 490.11 419.7 cv
cp
.308342 gry
@
405.09 457.29 mo
405.09 454.838 407.08 452.85 409.53 452.85 cv
411.98 452.85 413.97 454.838 413.97 457.29 cv
413.97 459.742 411.98 461.73 409.53 461.73 cv
407.08 461.73 405.09 459.742 405.09 457.29 cv
cp
.48765 gry
ef
405.09 457.29 mo
405.09 454.838 407.08 452.85 409.53 452.85 cv
411.98 452.85 413.97 454.838 413.97 457.29 cv
413.97 459.742 411.98 461.73 409.53 461.73 cv
407.08 461.73 405.09 459.742 405.09 457.29 cv
cp
.308342 gry
@
331.95 390.27 mo
331.95 387.82 333.94 385.83 336.39 385.83 cv
338.84 385.83 340.83 387.82 340.83 390.27 cv
340.83 392.72 338.84 394.71 336.39 394.71 cv
333.94 394.71 331.95 392.72 331.95 390.27 cv
cp
.48765 gry
ef
331.95 390.27 mo
331.95 387.82 333.94 385.83 336.39 385.83 cv
338.84 385.83 340.83 387.82 340.83 390.27 cv
340.83 392.72 338.84 394.71 336.39 394.71 cv
333.94 394.71 331.95 392.72 331.95 390.27 cv
cp
.308342 gry
@
.0614376 gry
SDFXVC+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
566.16 465.74 mo
(a)sh
%ADOBeginSubsetFont: PBAAAA+Times#20New#20Roman,Italic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
systemdict begin
SDFXVD+Times#20New#20Roman,Italic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B8707C25> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SDFXVD+Times#20New#20Roman,Italic /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
/SDFXVD+Times#20New#20Roman,Italic*1 
[32{/.notdef}rp /space 16{/.notdef}rp /one 97{/.notdef}rp /quotedblleft /quotedblright /bullet 
106{/.notdef}rp]
SDFXVD+Times#20New#20Roman,Italic nf
SDFXVD+Times#20New#20Roman,Italic*1 [24 0 0 -24 0 0 ]msf
584.16 465.74 mo
(\225 )
[8.40015 0 ]xsh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
598.56 465.74 mo
(f)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
608.58 474.68 mo
(2)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
483.38 515.48 mo
(f)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
493.4 524.42 mo
(3)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
409.64 346.48 mo
(c)sh
SDFXVD+Times#20New#20Roman,Italic*1 [24 0 0 -24 0 0 ]msf
425.6 346.48 mo
(\225)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
442.04 346.48 mo
(f)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
452.06 355.42 mo
(2)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
325.82 505.3 mo
(f)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
335.84 514.24 mo
(2)sh
157.03 349.26 mo
216.6 413.62 li
215.85 414.31 li
156.28 349.96 li
cp
157.67 356.5 mo
155.97 348.87 li
163.45 351.15 li
163.72 351.23 163.87 351.52 163.79 351.79 cv
163.71 352.05 163.42 352.21 163.15 352.12 cv
156.51 350.1 li
157.15 349.5 li
158.66 356.28 li
158.72 356.56 158.55 356.83 158.27 356.89 cv
158 356.95 157.73 356.78 157.67 356.5 cv
cp
f
253.04 434.91 mo
332.21 390.72 li
331.71 389.82 li
252.54 434.02 li
cp
255.89 428.22 mo
251.91 434.96 li
259.73 435.1 li
260.01 435.11 260.24 434.88 260.25 434.6 cv
260.25 434.32 260.03 434.09 259.75 434.08 cv
252.8 433.95 li
253.23 434.72 li
256.76 428.74 li
256.91 428.5 256.83 428.19 256.58 428.04 cv
256.34 427.9 256.03 427.98 255.89 428.22 cv
cp
f
250.64 448.344 mo
318.88 491.958 li
318.33 492.817 li
250.09 449.203 li
cp
253.08 455.187 mo
249.51 448.229 li
257.32 448.546 li
257.6 448.557 257.82 448.795 257.81 449.076 cv
257.8 449.358 257.56 449.577 257.28 449.565 cv
250.34 449.283 li
250.81 448.541 li
253.99 454.721 li
254.11 454.972 254.02 455.279 253.76 455.408 cv
253.51 455.536 253.21 455.437 253.08 455.187 cv
cp
f
340.61 386.87 mo
402.74 333.96 li
402.08 333.18 li
339.95 386.1 li
cp
342.1 379.76 mo
339.51 387.14 li
347.21 385.76 li
347.48 385.71 347.67 385.45 347.62 385.17 cv
347.57 384.89 347.3 384.71 347.03 384.76 cv
340.19 385.98 li
340.76 386.65 li
343.06 380.1 li
343.15 379.83 343.01 379.54 342.75 379.45 cv
342.48 379.36 342.19 379.5 342.1 379.76 cv
cp
f
341.91 390.61 mo
406.73 453.739 li
406.01 454.47 li
341.2 391.34 li
cp
342.92 397.8 mo
340.83 390.27 li
348.42 392.16 li
348.69 392.23 348.86 392.5 348.79 392.78 cv
348.72 393.05 348.44 393.22 348.17 393.15 cv
341.43 391.47 li
342.04 390.84 li
343.9 397.53 li
343.98 397.8 343.82 398.08 343.55 398.16 cv
343.27 398.23 342.99 398.08 342.92 397.8 cv
cp
f
413.78 454.209 mo
490.29 420.2 li
489.88 419.26 li
413.37 453.277 li
cp
417.22 447.809 mo
412.65 454.154 li
420.42 455.011 li
420.7 455.042 420.95 454.84 420.98 454.56 cv
421.01 454.28 420.81 454.028 420.53 453.997 cv
413.63 453.236 li
413.99 454.041 li
418.05 448.406 li
418.21 448.177 418.16 447.858 417.93 447.694 cv
417.7 447.529 417.38 447.581 417.22 447.809 cv
cp
f
415.09 457.472 mo
476.47 502.172 li
475.87 502.996 li
414.49 458.297 li
cp
417.11 464.45 mo
413.97 457.289 li
421.75 458.08 li
422.03 458.108 422.23 458.358 422.2 458.639 cv
422.18 458.919 421.93 459.123 421.65 459.094 cv
414.73 458.392 li
415.25 457.68 li
418.04 464.041 li
418.16 464.299 418.04 464.6 417.78 464.713 cv
417.52 464.826 417.22 464.708 417.11 464.45 cv
cp
f
498.8 416.61 mo
571.71 382.93 li
571.28 382.01 li
498.37 415.69 li
cp
502.15 410.16 mo
497.67 416.57 li
505.45 417.32 li
505.73 417.34 505.98 417.14 506.01 416.86 cv
506.04 416.58 505.83 416.33 505.55 416.3 cv
498.64 415.64 li
499 416.44 li
502.98 410.75 li
503.15 410.52 503.09 410.2 502.86 410.04 cv
502.63 409.88 502.31 409.93 502.15 410.16 cv
cp
f
500.12 419.77 mo
559.2 452.405 li
558.71 453.298 li
499.63 420.66 li
cp
503 426.44 mo
498.99 419.73 li
506.81 419.55 li
507.09 419.54 507.32 419.76 507.33 420.04 cv
507.33 420.33 507.11 420.56 506.83 420.57 cv
499.89 420.73 li
500.31 419.96 li
503.87 425.92 li
504.02 426.16 503.94 426.48 503.69 426.62 cv
503.45 426.77 503.14 426.69 503 426.44 cv
cp
f
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
systemdict begin
SDFXVC+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B7A73DB95E4C3B2CBDAA180DE16ED2E0B54D373FA0624F4
D4D6AEC3868DC3B6FCE2354D83BCFB00DD4446A756F968EEE24EB76F936C153C
554CF6C4FC531FF7FF83B6E48CEE21091E0E09B4C454DFC4E65880C366E13FC5
BC8A513523C320C7B30F5347C743B956722220B3BEF7EACE8E5F9F591092F7BD
516A6AD1802BEF3B681970F31BDF1B1A76203F2B6ADF0680B5FEC4F306B1764A
BEA599CAC4C746792036F08DB0B307F28AC5ED1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SDFXVC+TimesNewRomanPS-ItalicMT /Encoding get
dup 48 /zero put
pop
%ADOEndSubsetFont
/SDFXVC+TimesNewRomanPS-ItalicMT*1 
[48{/.notdef}rp /zero /one /two /three /four /five 43{/.notdef}rp 
/a /.notdef /c 2{/.notdef}rp /f 153{/.notdef}rp]
SDFXVC+TimesNewRomanPS-ItalicMT nf
SDFXVC+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
210.22 447.88 mo
(f)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
220.24 456.82 mo
(10)
[12 0 ]xsh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
124.68 334.16 mo
(f)sh
SDFXVC+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
134.7 343.1 mo
(11)
[10.2 0 ]xsh
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/SDFXVD+Times#20New#20Roman,Italic*1 uf
/SDFXVD+Times#20New#20Roman,Italic uf
/PBAAAA+Times#20New#20Roman,Italic uf
/SDFXVC+TimesNewRomanPS-ItalicMT*1 uf
/SDFXVC+TimesNewRomanPS-ItalicMT uf
/TimesNewRomanPS-ItalicMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF

%%EndDocument
 @endspecial 940 4210 a(Fig.)14 b(1:)27 b(Generating)g(refutation)g
(trees)g(to)h(record)e(unsat)h(cores.)648 4506 y(In)40
b(the)g(\014gure,)g(the)g(no)r(des)g(of)g(the)g(graph)f(corresp)r(ond)f
(to)i(the)h(p)r(olynomials)e(uti-)523 4606 y(lized)c(in)g(Buc)n(h)n(b)r
(erger's)e(algorithm.)h(The)h(leaf)g(no)r(des)g(alw)n(a)n(ys)e(corresp)
r(ond)g(to)i(p)r(olyno-)523 4705 y(mials)k Fw(f)793 4717
y Fv(i)863 4705 y Ft(2)k Fw(F)12 b FE(.)39 b(An)h(edge)f
Fw(e)1476 4717 y Fv(ij)1573 4705 y FE(from)g(no)r(de)g
Fw(i)g FE(to)g(no)r(de)h Fw(j)k FE(signi\014es)39 b(that)g(the)h(p)r
(olyno-)523 4805 y(mial)34 b(at)g(no)r(de)g Fw(j)39 b
FE(resulted)34 b(from)g(p)r(olynomial)g Fw(i)p FE(.)f(F)-7
b(or)34 b(example,)g(consider)f(the)h(compu-)523 4924
y(tation)40 b Fw(S)5 b(pol)r(y)s FE(\()p Fw(f)1062 4936
y FD(1)1098 4924 y Fw(;)14 b(f)1176 4936 y FD(2)1213
4924 y FE(\))1310 4877 y Fv(F)1289 4924 y Ft(\000)-44
b(!)1393 4936 y FD(+)1492 4924 y Fw(f)1533 4936 y FD(10)1603
4924 y FE(,)40 b(where)f Fw(f)1959 4936 y FD(10)2073
4924 y FE(=)44 b Fw(a)26 b FE(+)h Fw(c)f FE(+)h(1.)39
b(Since)h Fw(S)5 b(pol)r(y)s FE(\()p Fw(f)3113 4936 y
FD(1)3149 4924 y Fw(;)14 b(f)3227 4936 y FD(2)3264 4924
y FE(\))44 b(=)1943 5173 y(6)p eop end
%%Page: 7 7
TeXDict begin 7 6 bop 523 448 a Fw(f)564 460 y FD(1)614
448 y Ft(\000)13 b Fw(ac)g Ft(\001)g Fw(f)862 460 y FD(2)900
448 y FE(,)25 b(the)g(lea)n(v)n(es)f(corresp)r(onding)f(to)i
Fw(f)1995 460 y FD(1)2057 448 y FE(and)f Fw(ac)13 b Ft(\001)g
Fw(f)2385 460 y FD(2)2448 448 y FE(are)24 b(created.)g(The)h(reduction)
523 568 y Fw(S)5 b(pol)r(y)s FE(\()p Fw(f)805 580 y FD(1)841
568 y Fw(;)14 b(f)919 580 y FD(2)956 568 y FE(\))1032
521 y Fv(F)1011 568 y Ft(\000)-44 b(!)1115 580 y FD(+)1193
568 y Fw(f)1234 580 y FD(10)1327 568 y FE(is)23 b(carried)e(out)h(as)g
(the)h(follo)n(wing)f(sequence)g(of)h(1-step)f(divisions:)523
697 y Fw(S)5 b(pol)r(y)s FE(\()p Fw(f)805 709 y FD(1)841
697 y Fw(;)14 b(f)919 709 y FD(2)956 697 y FE(\))1032
646 y Fv(a)p Fo(\001)p Fv(f)1120 654 y Fq(2)1011 697
y Ft(\000)-19 b(\000)f(!)1205 646 y Fv(f)1237 654 y Fq(3)1185
697 y Ft(\000)-31 b(!)1323 646 y Fv(c)p Fo(\001)p Fv(f)1405
654 y Fq(2)1302 697 y Ft(\000)-22 b(\000)e(!)1490 646
y Fv(f)1522 654 y Fq(2)1469 697 y Ft(\000)-30 b(!)23
b Fw(f)1651 709 y FD(10)1721 697 y FE(.)j(This)g(is)g(depicted)h(as)f
(the)g(b)r(ottom)g(subtree)g(in)h(the)523 796 y(\014gure,)d
(terminating)f(at)i(p)r(olynomial)e Fw(f)1787 808 y FD(10)1857
796 y FE(.)i(Moreo)n(v)n(er,)c(the)k(m)n(ultiplication)f
Fw(a)12 b Ft(\001)g Fw(f)3090 808 y FD(2)3151 796 y FE(implies)523
896 y(that)23 b(division)g(b)n(y)g Fw(f)1153 908 y FD(2)1213
896 y FE(resulted)f(in)i(the)f(quotien)n(t)g Fw(a)p FE(.)g(The)g
(refutation)g(tree)g(of)g(Fig.)g(1)f(sho)n(ws)523 1020
y(further)28 b(that)f Fw(S)5 b(pol)r(y)s FE(\()p Fw(f)1264
1032 y FD(3)1300 1020 y Fw(;)14 b(f)1378 1032 y FD(4)1415
1020 y FE(\))1491 969 y Fv(f)1523 977 y Fq(10)1471 1020
y Ft(\000)-34 b(\000)g(!)24 b Fw(f)1681 1032 y FD(11)1774
1020 y FE(=)e Fw(c)d FE(+)f(1)27 b(and,)g(\014nally)-7
b(,)28 b Fw(S)5 b(pol)r(y)s FE(\()p Fw(f)2802 1032 y
FD(5)2838 1020 y Fw(;)14 b(f)2916 1032 y FD(2)2953 1020
y FE(\))3029 969 y Fv(f)3061 977 y Fq(11)3008 1020 y
Ft(\000)-33 b(\000)f(!)23 b FE(1.)648 1120 y(T)-7 b(o)29
b(iden)n(tify)h(an)g Fw(F)1247 1132 y Fv(c)1308 1120
y Ft(\032)c Fw(F)12 b FE(,)30 b(w)n(e)g(start)f(from)h(the)g
(refutation)f(no)r(de)2777 1089 y Fo(00)2820 1120 y FE(1)2862
1089 y Fo(00)2904 1120 y FE(,)h(and)f(tra)n(v)n(erse)523
1219 y(the)37 b(graph)e(in)i(rev)n(erse,)e(all)h(the)h(w)n(a)n(y)e
(upto)h(the)h(lea)n(v)n(es.)e(Then,)i(all)f(the)h(lea)n(v)n(es)e(in)i
(the)523 1319 y(transitiv)n(e)31 b(fanin)h(of)f(\\1")g(constitute)h(an)
f(unsat)h(core.)e(The)i(p)r(olynomials)f(\(no)r(des\))h(that)523
1418 y(do)f(not)g(lie)g(in)g(the)h(transitiv)n(e)e(fanin)h(of)g(\\1")f
(can)g(b)r(e)i(safely)e(discarded)g(from)h Fw(F)3126
1430 y Fv(c)3160 1418 y FE(.)g(F)-7 b(rom)523 1518 y(Fig.)28
b(1,)f Fw(F)838 1530 y Fv(c)895 1518 y FE(=)c Ft(f)p
Fw(f)1066 1530 y FD(1)1102 1518 y Fw(;)14 b(f)1180 1530
y FD(2)1217 1518 y Fw(;)g(f)1295 1530 y FD(3)1332 1518
y Fw(;)g(f)1410 1530 y FD(4)1446 1518 y Fw(;)g(f)1524
1530 y FD(5)1561 1518 y Ft(g)27 b FE(is)h(iden)n(ti\014ed)g(as)f(an)g
(unsat)h(core)e(of)i Fw(F)12 b FE(.)523 1762 y Fs(Ordering)41
b(critical)h(pairs)g(in)f(Buc)m(h)m(b)s(erger's)g(algorithm:)52
b FE(It)36 b(is)g(clear)f(that)i(the)523 1862 y(inclusion)g(of)h(p)r
(olynomials)f(in)g(the)h(obtained)f(core)g(dep)r(ends)h(on)f(the)h
(order)e(in)i(whic)n(h)523 1961 y(the)h(critical)e(pairs)g(are)h
(reduced.)f(This)i(is)f(a)f(w)n(ell-kno)n(wn)g(in)n(tractable)g
(problem,)h(and)523 2061 y(v)-5 b(arious)26 b(heurstics)g(ha)n(v)n(e)f
(b)r(een)j(prop)r(osed)d(to)i(fa)n(v)n(ourably)d(in\015uence)k(the)f
(termination)f(of)523 2161 y(the)37 b(Gr\177)-42 b(obner)36
b(basis)f(algorithm)h({)g(these)h(include)g(the)g(sugar)e(strategy)g
([10)o(],)i(the)g(pre-)523 2260 y(conditioning)26 b(used)g(b)n(y)g
Fu(F)-6 b(aug)n(~)-40 b(er)l(e)27 b FE(in)f(the)h Fw(F)12
b FE(4)26 b(algorithm)f([11)o(],)h(among)g(others.)f(An)n(y)h(suc)n(h)
523 2360 y(selection)d(strategy)f(can)h(b)r(e)h(also)e(b)r(e)i(applied)
f(in)h(our)e(setting)i(to)f(iden)n(tify)h(a)f(smaller)f(core.)523
2620 y Fx(4)112 b(Reducing)38 b(the)f(Size)h(of)g(the)f(Infeasible)i
(Core)e Fe(F)2776 2635 y Fd(c)523 2815 y FE(The)31 b(core)g
Fw(F)930 2827 y Fv(c)995 2815 y FE(obtained)h(from)f(the)g(aforemen)n
(tioned)f(pro)r(cedure)h(is)g(not)g(guaran)n(teed)f(to)523
2914 y(b)r(e)d(minimal.)f(F)-7 b(or)26 b(example,)g(let)h(us)f(revisit)
g(the)h(the)f(core)g Fw(F)2460 2926 y Fv(c)2517 2914
y FE(=)c Ft(f)p Fw(f)2687 2926 y FD(1)2724 2914 y Fw(;)14
b(:)g(:)g(:)f(;)h(f)2949 2926 y FD(5)2986 2914 y Ft(g)26
b FE(generated)523 3014 y(in)38 b(the)g(previous)e(section.)h(Note)h
(that)g(while)g Fw(F)2114 3026 y Fv(c)2185 3014 y FE(is)g(a)f(smaller)g
(infeasible)g(core)f(of)i Fw(F)12 b FE(,)523 3114 y(it)37
b(is)f(not)h(minimal.)g(In)f(fact,)h(Example)f(1)g(sho)n(ws)f(that)i
Fw(F)2448 3126 y Fv(c)p FD(4)2553 3114 y FE(=)g Ft(f)p
Fw(f)2738 3126 y FD(1)2775 3114 y Fw(;)14 b(f)2853 3126
y FD(2)2890 3114 y Fw(;)g(f)2968 3126 y FD(4)3004 3114
y Fw(;)g(f)3082 3126 y FD(5)3119 3114 y Ft(g)36 b FE(is)h(the)523
3213 y(minimal)c(core)e(where)h Fw(F)1329 3225 y Fv(c)p
FD(4)1427 3213 y Ft(\032)f Fw(F)1576 3225 y Fv(c)1610
3213 y FE(.)h(Clearly)-7 b(,)32 b(the)h(p)r(olynomial)e
Fw(f)2597 3225 y FD(3)2665 3213 y Ft(2)h Fw(F)2805 3225
y Fv(c)2871 3213 y FE(is)g(a)g(redundan)n(t)523 3313
y(elemen)n(t)i(of)f(the)h(core.)e(It)i(could)g(b)r(e)f(discarded.)g(W)
-7 b(e)34 b(will)g(no)n(w)e(describ)r(e)i(ho)n(w)e(the)i(size)523
3412 y(of)28 b(this)f(core)g(could)g(b)r(e)h(reduced)f(further.)h(F)-7
b(or)27 b(this)h(purp)r(ose,)f(w)n(e)g(will)h(ha)n(v)n(e)e(to)i(p)r
(erform)523 3512 y(a)j(more)g(systematic)f(b)r(o)r(ok-k)n(eeping)g(of)i
(the)f(data)g(generated)f(during)h(the)h(execution)f(of)523
3612 y(Buc)n(h)n(b)r(erger's)26 b(algorithm)g(and)i(the)f(refutation)h
(tree.)523 3856 y Fs(4.1)95 b(Iden)m(tifying)31 b(redundan)m(t)i(p)s
(olynomials)d(from)h(the)h(refutation)g(tree)523 4017
y FE(W)-7 b(e)34 b(will)f(k)n(eep)g(trac)n(k)f(of)i(the)g(S-p)r
(olynomials)e(that)h(giv)n(e)g(a)g(non-zero)f(remainder)g(when)523
4116 y(divided)c(b)n(y)f(the)h(system)g(of)f(generators)e(of)j
Fw(J)36 b FE(at)27 b(that)h(momen)n(t:)1489 4370 y Fw(g)1529
4382 y Fv(ij)1610 4370 y FE(:=)23 b Fw(S)5 b FE(\()p
Fw(f)1850 4382 y Fv(i)1877 4370 y Fw(;)14 b(f)1955 4382
y Fv(j)1989 4370 y FE(\))19 b Ft(\000)2173 4266 y Fv(l)2124
4291 y Fn(X)2123 4470 y Fv(k)q FD(=1)2258 4370 y Fw(c)2294
4382 y Fv(k)2335 4370 y Fw(f)2376 4382 y Fv(k)2416 4370
y Fw(;)860 b FE(\(1\))523 4625 y(where)26 b(0)d Ft(6)p
FE(=)g Fw(c)951 4637 y Fv(k)1014 4625 y Ft(2)h Fr(F)p
FE([)p Fw(x)1214 4637 y FD(1)1251 4625 y Fw(;)14 b(:)g(:)g(:)g(;)g(x)
1483 4637 y Fv(n)1528 4625 y FE(])27 b(and)g Ft(f)p Fw(f)1822
4637 y FD(1)1858 4625 y Fw(;)14 b(:)g(:)g(:)g(;)g(f)2084
4637 y Fv(l)2109 4625 y Ft(g)26 b FE(is)h(the)g(\\curren)n(t")e(system)
i(of)g(genera-)523 4725 y(tors)g(of)g Fw(J)8 b FE(.)28
b(F)-7 b(or)27 b(eac)n(h)g(non-zero)f Fw(g)1602 4737
y Fv(ij)1660 4725 y FE(,)i(w)n(e)f(will)h(record)e(the)i(follo)n(wing)e
(data:)1152 4924 y(\(\()p Fw(g)1256 4936 y Fv(ij)1315
4924 y FE(\)\()p Fw(f)1420 4936 y Fv(i)1448 4924 y Fw(;)14
b(f)1526 4936 y Fv(j)1560 4924 y FE(\)\()p Fw(h)1672
4936 y Fv(ij)1731 4924 y Fw(;)g(h)1816 4936 y Fv(j)s(i)1874
4924 y FE(\))p Ft(j)p FE(\()p Fw(f)2002 4936 y FD(1)2040
4924 y Fw(;)g(:)g(:)g(:)g(;)g(f)2266 4936 y Fv(l)2291
4924 y FE(\))p Fw(;)g FE(\()p Fw(c)2428 4936 y FD(1)2465
4924 y Fw(;)g(:)g(:)g(:)g(;)g(c)2686 4936 y Fv(l)2711
4924 y FE(\)\))524 b(\(2\))1943 5173 y(7)p eop end
%%Page: 8 8
TeXDict begin 8 7 bop 648 448 a FE(Note)39 b(that)h(in)g(\(1\))g(and)f
(\(2\),)h Fw(g)1689 460 y Fv(ij)1787 448 y FE(denotes)f(the)h
(remainder)f(of)g(the)h Fw(S)5 b FE(-p)r(olynomial)523
548 y Fw(S)g FE(\()p Fw(f)652 560 y Fv(i)679 548 y Fw(;)14
b(f)757 560 y Fv(j)792 548 y FE(\))30 b(mo)r(dulo)f(the)h(curren)n(t)e
(system)h(of)h(generators)d Fw(f)2407 560 y FD(1)2443
548 y Fw(;)14 b(:)g(:)g(:)g(;)g(f)2669 560 y Fv(l)2723
548 y FE(of)30 b(the)g(ideal)f Fw(J)8 b FE(,)29 b(and)523
648 y(w)n(e)e(denote)h(b)n(y)924 874 y Fw(h)972 886 y
Fv(ij)1054 874 y FE(:=)1174 818 y(LCM\()p Fw(l)r(m)p
FE(\()p Fw(f)1567 830 y Fv(i)1595 818 y FE(\))p Fw(;)14
b(l)r(m)p FE(\()p Fw(f)1837 830 y Fv(j)1871 818 y FE(\)\))p
1174 855 762 4 v 1460 931 a Fw(l)r(t)p FE(\()p Fw(f)1590
943 y Fv(i)1617 931 y FE(\))1946 874 y Fw(;)g(h)2031
886 y Fv(j)s(i)2112 874 y FE(:=)2232 818 y(LCM\()p Fw(l)r(m)p
FE(\()p Fw(f)2625 830 y Fv(i)2653 818 y FE(\))p Fw(;)g(l)r(m)p
FE(\()p Fw(f)2895 830 y Fv(j)2929 818 y FE(\)\))p 2232
855 V 2515 931 a Fw(l)r(t)p FE(\()p Fw(f)2645 943 y Fv(j)2679
931 y FE(\))523 1073 y(the)23 b(co)r(e\016cien)n(ts)e(of)h
Fw(f)1205 1085 y Fv(i)1233 1073 y FE(,)g(resp)r(ectiv)n(ely)f
Fw(f)1766 1085 y Fv(j)1801 1073 y FE(,)h(in)g(the)h Fw(S)5
b FE(-p)r(olynomial)21 b Fw(S)5 b FE(\()p Fw(f)2711 1085
y Fv(i)2738 1073 y Fw(;)14 b(f)2816 1085 y Fv(j)2850
1073 y FE(\).)23 b(F)-7 b(urthermore,)523 1173 y(in)23
b(\(2\),)g(\()p Fw(c)835 1185 y FD(1)872 1173 y Fw(;)14
b(:)g(:)g(:)g(c)1056 1185 y Fv(l)1081 1173 y FE(\))23
b(are)f(the)h(p)r(olynomial)f(co)r(e\016cien)n(ts)g(of)h(\()p
Fw(f)2410 1185 y FD(1)2447 1173 y Fw(;)14 b(:)g(:)g(:)g(;)g(f)2673
1185 y Fv(l)2698 1173 y FE(\))23 b(that)g(app)r(ear)f(in)h(the)523
1273 y(division)k(pro)r(cess.)523 1464 y Fu(Example)k(2.)42
b FE(Revisiting)27 b(Example)e(1,)i(the)g(data)f(corresp)r(onding)e(to)
j Fw(S)5 b(pol)r(y)s FE(\()p Fw(f)3040 1476 y FD(1)3076
1464 y Fw(;)14 b(f)3154 1476 y FD(2)3191 1464 y FE(\))3267
1417 y Fv(F)3246 1464 y Ft(\000)-44 b(!)3350 1476 y FD(+)523
1564 y Fw(g)563 1576 y FD(12)656 1564 y FE(=)23 b Fw(f)785
1576 y FD(10)882 1564 y FE(reduction)28 b(is)f(obtained)g(as)g(the)h
(follo)n(wing)f(sequence)g(of)g(computations:)1164 1744
y Fw(f)1205 1756 y FD(10)1298 1744 y FE(=)c Fw(g)1426
1756 y FD(12)1519 1744 y FE(=)f Fw(f)1647 1756 y FD(1)1703
1744 y Ft(\000)c Fw(acf)1907 1756 y FD(2)1962 1744 y
Ft(\000)g Fw(af)2130 1756 y FD(2)2185 1744 y Ft(\000)g
Fw(f)2309 1756 y FD(3)2365 1744 y Ft(\000)g Fw(cf)2525
1756 y FD(2)2580 1744 y Ft(\000)g Fw(f)2704 1756 y FD(2)2741
1744 y Fw(:)523 1924 y FE(As)28 b(the)g(co)r(e\016cien)n(t)f(\014eld)h
(is)g Fr(F)1491 1936 y FD(2)1555 1924 y FE(in)g(this)g(example,)f
Ft(\000)p FE(1)22 b(=)h(+1,)k(so:)1176 2104 y Fw(f)1217
2116 y FD(10)1310 2104 y FE(=)22 b Fw(g)1437 2116 y FD(12)1530
2104 y FE(=)h Fw(f)1659 2116 y FD(1)1714 2104 y FE(+)18
b Fw(acf)1918 2116 y FD(2)1973 2104 y FE(+)h Fw(af)2142
2116 y FD(2)2197 2104 y FE(+)f Fw(f)2321 2116 y FD(3)2376
2104 y FE(+)g Fw(cf)2536 2116 y FD(2)2591 2104 y FE(+)g
Fw(f)2715 2116 y FD(2)523 2284 y FE(is)28 b(obtained.)f(The)h(data)f
(is)g(recorded)f(according)g(to)i(\(2\):)1051 2456 y(\(\()p
Fw(f)1156 2468 y FD(10)1250 2456 y FE(=)22 b Fw(g)1377
2468 y FD(12)1447 2456 y FE(\))p Fw(;)14 b FE(\()p Fw(f)1589
2468 y FD(1)1627 2456 y Fw(;)g(f)1705 2468 y FD(2)1741
2456 y FE(\)\(1)p Fw(;)g(ac)p FE(\))p Ft(j)p FE(\()p
Fw(f)2092 2468 y FD(2)2130 2456 y Fw(;)g(f)2208 2468
y FD(3)2245 2456 y Fw(;)g(f)2323 2468 y FD(2)2359 2456
y Fw(;)g(f)2437 2468 y FD(2)2474 2456 y FE(\)\()p Fw(a;)g
FE(1)p Fw(;)g(c;)g FE(1\)\))648 2628 y(Of)35 b(course,)f(our)h(approac)
n(h)e(and)j(the)f(b)r(o)r(ok-k)n(eeping)f(stops)h(when)h(w)n(e)f
(obtain)g(1)g(as)523 2727 y(the)27 b(remainder)e(of)h(the)h(S-p)r
(olynomial)f(mo)r(dulo)g(the)h(curren)n(t)e(system)i(of)f(generators.)e
(As)523 2827 y(an)32 b(output)g(of)g(the)h(Buc)n(h)n(b)r(erger's)d
(algorithm,)h(w)n(e)h(can)f(obtain)h(not)g(only)g(the)g(Gr\177)-42
b(obner)523 2926 y(bases,)27 b Fw(G)c FE(=)g Ft(f)p Fw(g)1022
2938 y FD(1)1058 2926 y Fw(;)14 b(:)g(:)g(:)g(;)g(g)1283
2938 y Fv(t)1311 2926 y Ft(g)p FE(,)28 b(but)g(also)e(a)i(matrix)f
Fw(M)36 b FE(suc)n(h)27 b(that:)1669 3185 y Fn(2)1669
3331 y(6)1669 3381 y(6)1669 3431 y(6)1669 3484 y(4)1724
3249 y Fw(g)1764 3261 y FD(1)1724 3348 y Fw(g)1764 3360
y FD(2)1751 3437 y FE(.)1751 3470 y(.)1751 3503 y(.)1728
3603 y Fw(g)1768 3615 y Fv(t)1801 3185 y Fn(3)1801 3331
y(7)1801 3381 y(7)1801 3431 y(7)1801 3484 y(5)1879 3427
y FE(=)c Fw(M)2071 3185 y Fn(2)2071 3331 y(6)2071 3381
y(6)2071 3431 y(6)2071 3484 y(4)2126 3249 y Fw(f)2167
3261 y FD(1)2126 3348 y Fw(f)2167 3360 y FD(2)2153 3437
y FE(.)2153 3470 y(.)2153 3503 y(.)2127 3603 y Fw(f)2168
3615 y Fv(s)2204 3185 y Fn(3)2204 3331 y(7)2204 3381
y(7)2204 3431 y(7)2204 3484 y(5)3299 3427 y FE(\(3\))648
3784 y(Eac)n(h)28 b(elemen)n(t)i Fw(g)1205 3796 y Fv(i)1262
3784 y FE(of)f Fw(G)h FE(is)g(a)f(p)r(olynomial)g(com)n(bination)f(of)i
Fw(f)2653 3796 y FD(1)2690 3784 y Fw(;)14 b(:)g(:)g(:)f(;)h(f)2915
3796 y Fv(s)2950 3784 y Ft(g)p FE(.)30 b(Moreo)n(v)n(er,)523
3883 y(this)21 b(matrix)f Fw(M)29 b FE(is)21 b(constructed)f(precisely)
g(using)g(the)h(data)g(that)g(is)f(recorded)f(in)i(the)g(form)523
3983 y(of)33 b(\(2\).)h(W)-7 b(e)33 b(no)n(w)g(a)f(condition)h(when)h
(the)f(matrix)g Fw(M)42 b FE(ma)n(y)32 b(iden)n(tify)i(some)e(redundan)
n(t)523 4083 y(elemen)n(ts.)523 4254 y Fs(Theorem)f(2.)41
b Fu(With)35 b(the)g(notations)g(ab)l(ove,)h(we)f(have)h(that)e(a)h(c)l
(or)l(e)g(for)h(the)f(system)f(of)523 4354 y(gener)l(ators)j
Fw(F)47 b FE(=)35 b Ft(f)p Fw(f)1216 4366 y FD(1)1252
4354 y Fw(;)14 b(:)g(:)g(:)g(;)g(f)1478 4366 y Fv(s)1513
4354 y Ft(g)35 b Fu(of)j(the)e(ide)l(al)i Fw(J)45 b Fu(is)36
b(given)h(by)g(the)g(union)f(of)h(those)g Fw(f)3318 4366
y Fv(i)3346 4354 y Fu('s)523 4454 y(fr)l(om)h Fw(F)48
b Fu(that)37 b(app)l(e)l(ar)i(in)e(the)g(data)h(r)l(e)l(c)l(or)l(de)l
(d)f(ab)l(ove)h(and)g(c)l(orr)l(esp)l(ond)g(to)f(the)g(nonzer)l(o)523
4553 y(entries)30 b(in)g(the)g(matrix)f Fw(M)9 b Fu(.)523
4725 y(Pr)l(o)l(of.)43 b FE(In)34 b(our)g(case,)f(since)h(the)g(v)-5
b(ariet)n(y)33 b(is)h(empt)n(y)-7 b(,)34 b(and)g(hence)g(the)g(ideal)g
(is)g(the)g(unit)523 4825 y(ideal,)f(w)n(e)g(ha)n(v)n(e)g(that)g
Fw(G)g FE(=)g Ft(f)p Fw(g)1539 4837 y FD(1)1608 4825
y FE(=)f(1)p Ft(g)h FE(and)g Fw(t)g FE(=)f(1.)h(Therefore)g
Fw(M)41 b FE(=)32 b([)p Fw(a)2916 4837 y FD(1)2954 4825
y Fw(;)14 b(:)g(:)g(:)f(;)h(a)3182 4837 y Fv(s)3218 4825
y FE(])33 b(is)g(a)523 4924 y(v)n(ector.)26 b(Then)i(the)g(output)g(of)
g(the)g(algorithm)e(giv)n(es:)1943 5173 y(8)p eop end
%%Page: 9 9
TeXDict begin 9 8 bop 1569 563 a FE(1)23 b(=)f Fw(a)1765
575 y FD(1)1803 563 y Fw(f)1844 575 y FD(1)1899 563 y
FE(+)c Ft(\001)c(\001)g(\001)k FE(+)g Fw(a)2224 575 y
Fv(s)2260 563 y Fw(f)2301 575 y Fv(s)2336 563 y Fw(:)523
727 y FE(Clearly)-7 b(,)25 b(if)h Fw(a)944 739 y Fv(i)994
727 y FE(=)d(0)i(for)g(some)g Fw(i)g FE(then)h Fw(f)1762
739 y Fv(i)1815 727 y FE(do)r(es)f(not)h(app)r(ear)e(in)i(this)g
(equation)f(and)g(should)523 827 y(not)j(b)r(e)g(included)g(in)g(the)g
(infeasible)f(core)g(of)g Fw(F)12 b FE(.)523 1021 y Fu(Example)31
b(3.)42 b FE(Corresp)r(onding)28 b(to)h(Example)f(1)h(and)g(the)h
(refutation)f(tree)g(sho)n(wn)g(in)g(Fig.)523 1121 y(1,)e(w)n(e)f
(disco)n(v)n(er)f(that)j(the)f(p)r(olynomial)f Fw(f)1843
1133 y FD(3)1907 1121 y FE(is)h(used)g(only)g(t)n(wice)g(in)g(the)h
(division)e(pro)r(cess.)523 1221 y(In)34 b(b)r(oth)h(o)r(ccasions,)e
(the)h(quotien)n(t)g(of)g(the)h(division)f(is)g(1.)g(Therefore,)f(from)
h(Fig.)g(1,)g(it)523 1320 y(follo)n(ws)27 b(that:)982
1513 y(1)22 b(=)h(\()p Fw(f)1207 1525 y FD(2)1262 1513
y FE(+)18 b Fw(f)1386 1525 y FD(5)1423 1513 y FE(\))h(+)f
Ft(\001)c(\001)g(\001)k FE(+)g Fs(1)h Ft(\001)f Fs(f)1892
1525 y Fc(3)1952 1513 y FE(+)g Ft(\001)c(\001)g(\001)19
b FE(+)f Fs(1)g Ft(\001)h Fs(f)2371 1525 y Fc(3)2431
1513 y FE(+)f Fw(:)c(:)g(:)g FE(\()p Fw(f)2698 1525 y
FD(1)2753 1513 y FE(+)k Fw(f)2877 1525 y FD(2)2914 1513
y FE(\))353 b(\(4\))648 1711 y(Since)27 b(1)18 b(+)f(1)23
b(=)f(0)27 b(o)n(v)n(er)f Fr(F)1456 1723 y FD(2)1493
1711 y FE(,)h(w)n(e)g(ha)n(v)n(e)f(that)i(the)g(en)n(try)f(in)g
Fw(M)36 b FE(corresp)r(onding)26 b(to)h Fw(f)3285 1723
y FD(3)3349 1711 y FE(is)523 1810 y(0,)g(and)h(so)f Fw(f)920
1822 y FD(3)984 1810 y FE(can)g(b)r(e)h(discarded)f(from)g(the)h(core.)
523 2085 y Fs(4.2)95 b(The)32 b(GB-Core)f(Algorithm)g(Outline)523
2276 y FE(Our)26 b(next)h(goal)f(is)g(to)h(describ)r(e)g(an)f
(algorithm)g(\(GB-Core\))g(that)h(allo)n(ws)e(us)i(to)g(compute)523
2375 y(a)g(core)g(of)g(the)h(ideal)g(and)f(the)h(matrix)f
Fw(M)9 b FE(.)648 2480 y(INITIAL)41 b(D)n(A)-7 b(T)g(A:)41
b Fw(S)1361 2492 y FD(0)1443 2480 y FE(=)j Ft(f)p Fw(f)1635
2492 y FD(1)1672 2480 y Fw(;)14 b(:)g(:)g(:)f(;)h(f)1897
2492 y Fv(m)1960 2480 y Ft(g)40 b FE(system)g(of)h(generators)d(of)j
(the)g(ideal)f Fw(J)8 b FE(,)523 2580 y(monomial)27 b(order)f
Fw(>)h FE(on)h Fr(F)p FE([)p Fw(x)1452 2592 y FD(1)1489
2580 y Fw(;)14 b(:)g(:)g(:)g(;)g(x)1721 2592 y Fv(n)1766
2580 y FE(].)648 2684 y(STEP)27 b(1:)h(W)-7 b(e)28 b(start)g(computing)
g(the)g(S-p)r(olynomials)f(of)h(the)h(system)e(of)h(generators)523
2784 y Ft(f)p Fw(f)606 2796 y FD(1)642 2784 y Fw(;)14
b(:)g(:)g(:)g(;)g(f)868 2796 y Fv(m)931 2784 y Ft(g)23
b FE(as)f(in)i(the)g(Buc)n(h)n(b)r(erger's)e(algorithm.)g(After)i
(computing)f(the)h(\014rst)f(one,)g(w)n(e)523 2883 y(divide)g(it)g(b)n
(y)g(the)g(system)g(of)g(generators)d Fw(S)1901 2895
y FD(0)1938 2883 y FE(.)j(In)h(this)f(w)n(a)n(y)-7 b(,)22
b(w)n(e)g(will)h(obtain)g(the)g(follo)n(wing)523 2983
y(expression:)1307 3160 y Fw(g)1347 3172 y Fv(i)1370
3180 y Fq(1)1402 3172 y Fv(i)1425 3180 y Fq(2)1486 3160
y FE(:=)f Fw(h)1644 3172 y Fv(i)1667 3180 y Fq(1)1700
3172 y Fv(i)1723 3180 y Fq(2)1760 3160 y Fw(f)1801 3172
y Fv(i)1824 3180 y Fq(1)1879 3160 y Ft(\000)c Fw(h)2010
3172 y Fv(i)2033 3180 y Fq(2)2066 3172 y Fv(i)2089 3180
y Fq(1)2126 3160 y Fw(f)2167 3172 y Fv(i)2190 3180 y
Fq(2)2245 3160 y Ft(\000)2359 3056 y Fv(m)2329 3081 y
Fn(X)2328 3259 y Fv(k)q FD(=1)2463 3160 y Fw(c)2499 3172
y Fv(k)2539 3160 y Fw(f)2580 3172 y Fv(k)648 3404 y FE(If)26
b(the)h(remainder)e Fw(g)1302 3416 y Fv(i)1325 3424 y
Fq(1)1357 3416 y Fv(i)1380 3424 y Fq(2)1443 3404 y FE(is)h(non-zero,)f
(w)n(e)h(will)g(denote)g(it)g(b)n(y)g Fw(f)2662 3416
y Fv(m)p FD(+1)2835 3404 y FE(and)g(w)n(e)g(will)g(add)523
3503 y(it)i(to)g(our)e(initial)i(system)g(of)f(generators.)e(W)-7
b(e)28 b(will)g(also)f(record)f(the)i(data)f(as)g(follo)n(ws:)839
3696 y(\(\()p Fw(f)944 3708 y Fv(m)p FD(+1)1114 3696
y FE(:=)c Fw(g)1265 3708 y Fv(i)1288 3716 y Fq(1)1321
3708 y Fv(i)1344 3716 y Fq(2)1381 3696 y FE(\)\()p Fw(f)1486
3708 y Fv(i)1509 3716 y Fq(1)1546 3696 y Fw(;)14 b(f)1624
3708 y Fv(i)1647 3716 y Fq(2)1684 3696 y FE(\)\()p Fw(h)1796
3708 y Fv(i)1819 3716 y Fq(1)1852 3708 y Fv(i)1875 3716
y Fq(2)1912 3696 y Fw(;)g(h)1997 3708 y Fv(i)2020 3716
y Fq(2)2052 3708 y Fv(i)2075 3716 y Fq(1)2113 3696 y
FE(\))p Ft(j)p FE(\()p Fw(f)2241 3708 y FD(1)2278 3696
y Fw(;)g(:)g(:)g(:)g(;)g(f)2504 3708 y Fv(m)2566 3696
y FE(\))p Fw(;)g FE(\()p Fw(c)2703 3708 y FD(1)2741 3696
y Fw(;)g(:)g(:)g(:)f(;)h(c)2961 3708 y Fv(m)3024 3696
y FE(\)\))523 3889 y(Then)29 b(w)n(e)g(will)g(consider)f
Fw(S)1399 3901 y FD(1)1461 3889 y FE(:=)d Ft(f)p Fw(f)1657
3901 y FD(1)1694 3889 y Fw(;)14 b(:)g(:)g(:)f(;)h(f)1919
3901 y Fv(m)1982 3889 y Fw(;)g(f)2060 3901 y Fv(m)p FD(+1)2207
3889 y Ft(g)28 b FE(to)h(b)r(e)g(the)h(new)f(system)f(of)h(gener-)523
3988 y(ators)d(of)i Fw(J)8 b FE(.)648 4093 y(STEP)23
b(s:)h(If)g Fw(S)1101 4105 y Fv(s)1160 4093 y FE(:=)f
Ft(f)p Fw(f)1354 4105 y FD(1)1390 4093 y Fw(;)14 b(:)g(:)g(:)g(;)g(f)
1616 4105 y Fv(s)1651 4093 y Ft(g)23 b FE(is)h(the)h(curren)n(t)e
(system)h(of)g(generators)e(of)i Fw(J)32 b FE(and)24
b(w)n(e)523 4192 y(ha)n(v)n(e)i(the)i(follo)n(wing)f(relation)g(for)g
Fw(f)1681 4204 y Fv(s)1336 4459 y Fw(f)1377 4471 y Fv(s)1435
4459 y FE(=)c Fw(g)1563 4471 y Fv(ij)1644 4459 y FE(=)g
Fw(h)1780 4471 y Fv(ij)1838 4459 y Fw(f)1879 4471 y Fv(i)1925
4459 y Ft(\000)18 b Fw(h)2056 4471 y Fv(j)s(i)2114 4459
y Fw(f)2155 4471 y Fv(j)2208 4459 y Ft(\000)2293 4356
y Fv(s)p Fo(\000)p FD(1)2292 4381 y Fn(X)2291 4559 y
Fv(k)q FD(=1)2426 4459 y Fw(a)2470 4471 y Fv(k)2510 4459
y Fw(f)2551 4471 y Fv(k)648 4732 y FE(and)27 b(the)h(recorded)e(data)
944 4924 y(\(\()p Fw(f)1049 4936 y Fv(s)1108 4924 y FE(:=)d
Fw(g)1259 4936 y Fv(ij)1317 4924 y FE(\)\()p Fw(f)1422
4936 y Fv(i)1450 4924 y Fw(;)14 b(f)1528 4936 y Fv(j)1562
4924 y FE(\)\()p Fw(h)1674 4936 y Fv(ij)1733 4924 y Fw(;)g(h)1818
4936 y Fv(j)s(i)1876 4924 y FE(\))p Ft(j)p FE(\()p Fw(f)2004
4936 y FD(1)2042 4924 y Fw(;)g(:)g(:)g(:)g(;)g(f)2268
4936 y Fv(s)p Fo(\000)p FD(1)2388 4924 y FE(\))p Fw(;)g
FE(\()p Fw(a)2533 4936 y FD(1)2570 4924 y Fw(;)g(:)g(:)g(:)g(;)g(a)2799
4936 y Fv(s)p Fo(\000)p FD(1)2919 4924 y FE(\)\))1943
5173 y(9)p eop end
%%Page: 10 10
TeXDict begin 10 9 bop 648 448 a FE(W)-7 b(e)35 b(will)h(compute)f(the)
h(next)f(S-p)r(olynomial)f(whic)n(h)i(giv)n(es)e(a)h(non-zero)e
(remainder)523 548 y(when)28 b(divided)g(b)n(y)f(our)g(curren)n(t)g
(system)g(of)g(generators)f Fw(S)2408 560 y Fv(s)2443
548 y FE(:)1273 798 y Fw(f)1314 810 y Fv(s)p FD(+1)1457
798 y FE(=)c Fw(g)1584 810 y Fv(pq)1678 798 y FE(=)g
Fw(h)1813 810 y Fv(pq)1884 798 y Fw(f)1925 810 y Fv(p)1982
798 y Ft(\000)c Fw(h)2113 810 y Fv(q)r(p)2183 798 y Fw(f)2224
810 y Fv(q)2279 798 y Ft(\000)2407 694 y Fv(s)2363 719
y Fn(X)2362 898 y Fv(k)q FD(=1)2497 798 y Fw(b)2533 810
y Fv(k)2573 798 y Fw(f)2614 810 y Fv(k)648 1063 y FE(By)27
b(substituting)h Fw(f)1281 1075 y Fv(s)1344 1063 y FE(in)g(the)g
(expression)e(of)h Fw(f)2119 1075 y Fv(s)p FD(+1)2266
1063 y FE(w)n(e)g(get)835 1328 y Fw(f)876 1340 y Fv(s)p
FD(+1)1018 1328 y FE(=)c Fw(h)1154 1340 y Fv(pq)1225
1328 y Fw(f)1266 1340 y Fv(p)1322 1328 y Ft(\000)18 b
Fw(h)1453 1340 y Fv(q)r(p)1524 1328 y Fw(f)1565 1340
y Fv(q)1620 1328 y Ft(\000)1705 1224 y Fv(s)p Fo(\000)p
FD(1)1703 1249 y Fn(X)1703 1428 y Fv(k)q FD(=1)1837 1328
y Fw(b)1873 1340 y Fv(k)1914 1328 y Fw(f)1955 1340 y
Fv(k)2014 1328 y Ft(\000)g Fw(b)2133 1340 y Fv(s)2168
1328 y FE(\()p Fw(h)2248 1340 y Fv(ij)2307 1328 y Fw(f)2348
1340 y Fv(i)2393 1328 y Ft(\000)g Fw(h)2524 1340 y Fv(j)s(i)2583
1328 y Fw(f)2624 1340 y Fv(j)2677 1328 y Ft(\000)2762
1224 y Fv(s)p Fo(\000)p FD(1)2760 1249 y Fn(X)2760 1428
y Fv(k)q FD(=1)2894 1328 y Fw(a)2938 1340 y Fv(k)2979
1328 y Fw(f)3020 1340 y Fv(k)3061 1328 y FE(\))888 1690
y(=)23 b Fw(h)1024 1702 y Fv(pq)1094 1690 y Fw(f)1135
1702 y Fv(p)1192 1690 y Ft(\000)18 b Fw(h)1323 1702 y
Fv(q)r(p)1394 1690 y Fw(f)1435 1702 y Fv(q)1489 1690
y Ft(\000)1575 1586 y Fv(s)p Fo(\000)p FD(1)1573 1611
y Fn(X)1572 1790 y Fv(k)q FD(=1)1707 1690 y Fw(b)1743
1702 y Fv(k)1783 1690 y Fw(f)1824 1702 y Fv(k)1883 1690
y Ft(\000)g Fw(b)2002 1702 y Fv(s)2037 1690 y Fw(h)2085
1702 y Fv(ij)2144 1690 y Fw(f)2185 1702 y Fv(i)2231 1690
y FE(+)g Fw(b)2350 1702 y Fv(s)2385 1690 y Fw(h)2433
1702 y Fv(j)s(i)2491 1690 y Fw(f)2532 1702 y Fv(j)2585
1690 y FE(+)2670 1586 y Fv(s)p Fo(\000)p FD(1)2668 1611
y Fn(X)2668 1790 y Fv(k)q FD(=1)2803 1690 y Fw(b)2839
1702 y Fv(s)2874 1690 y Fw(a)2918 1702 y Fv(k)2959 1690
y Fw(f)3000 1702 y Fv(k)971 2021 y FE(=)k Fw(h)1106 2033
y Fv(pq)1177 2021 y Fw(f)1218 2033 y Fv(p)1274 2021 y
Ft(\000)c Fw(h)1405 2033 y Fv(q)r(p)1476 2021 y Fw(f)1517
2033 y Fv(q)1572 2021 y Ft(\000)g Fw(b)1691 2033 y Fv(s)1726
2021 y Fw(h)1774 2033 y Fv(ij)1832 2021 y Fw(f)1873 2033
y Fv(i)1919 2021 y FE(+)g Fw(b)2038 2033 y Fv(s)2073
2021 y Fw(h)2121 2033 y Fv(j)s(i)2180 2021 y Fw(f)2221
2033 y Fv(j)2274 2021 y FE(+)2359 1918 y Fv(s)p Fo(\000)p
FD(1)2357 1943 y Fn(X)2357 2121 y Fv(k)q FD(=1)2477 2021
y FE(\()p Fw(b)2545 2033 y Fv(s)2581 2021 y Fw(a)2625
2033 y Fv(k)2684 2021 y Ft(\000)g Fw(b)2803 2033 y Fv(k)2844
2021 y FE(\))p Fw(f)2917 2033 y Fv(k)648 2256 y FE(Next,)28
b(w)n(e)f(will)h(record)e(the)i(data)f(for)g Fw(f)1907
2268 y Fv(s)p FD(+1)523 2444 y FE(\(\()p Fw(f)628 2456
y Fv(s)p FD(+1)771 2444 y FE(:=)c Fw(g)922 2456 y Fv(pq)992
2444 y FE(\)\()p Fw(f)1097 2456 y Fv(p)1136 2444 y Fw(;)14
b(f)1214 2456 y Fv(q)1250 2444 y FE(\)\()p Fw(h)1362
2456 y Fv(pq)1433 2444 y Fw(;)g(h)1518 2456 y Fv(q)r(p)1589
2444 y FE(\))p Ft(j)p FE(\()p Fw(f)1717 2456 y FD(1)1754
2444 y Fw(;)g(:)g(:)g(:)g(;)g(f)1980 2456 y Fv(s)p Fo(\000)p
FD(1)2100 2444 y Fw(;)g(f)2178 2456 y Fv(i)2205 2444
y Fw(;)g(f)2283 2456 y Fv(j)2318 2444 y FE(\))p Fw(;)g
FE(\()p Fw(b)2455 2456 y Fv(s)2490 2444 y Fw(a)2534 2456
y FD(1)2571 2444 y Ft(\000)p Fw(b)2672 2456 y FD(1)2709
2444 y Fw(;)g(:)g(:)g(:)f(;)h(b)2929 2456 y Fv(s)2964
2444 y Fw(a)3008 2456 y Fv(s)p Fo(\000)p FD(1)3129 2444
y Ft(\000)p Fw(b)3230 2456 y Fv(s)p Fo(\000)p FD(1)3349
2444 y Fw(;)g(b)3422 2456 y Fv(s)3457 2444 y Fw(h)3505
2456 y Fv(ij)3564 2444 y Fw(;)g(b)3637 2456 y Fv(s)3672
2444 y Fw(h)3720 2456 y Fv(j)s(i)3778 2444 y FE(\)\))648
2634 y(The)27 b(algorithm)g(will)h(stop)g(when)g(w)n(e)f(obtain)g(the)i
(last)e(non-zero)f(remainder)h Fw(f)3204 2646 y Fv(l)3252
2634 y FE(=)c(1.)523 2734 y(After)28 b(using)f(the)h(previous)f
(relations,)f(w)n(e)h(ha)n(v)n(e)g(the)h(follo)n(wing)1649
2983 y(1)23 b(=)g Fw(f)1843 2995 y Fv(l)1891 2983 y FE(=)2009
2880 y Fv(m)1979 2905 y Fn(X)1978 3083 y Fv(k)q FD(=1)2113
2983 y Fw(d)2156 2995 y Fv(k)2197 2983 y Fw(f)2238 2995
y Fv(k)523 3258 y FE(OUTPUT:)30 b(the)g(core)f(of)h(the)h(system)e(of)i
(generators)c Fw(S)2338 3270 y FD(0)2405 3258 y FE(is)j
Ft(f)p Fw(f)2574 3270 y Fv(k)2642 3258 y FE(:)57 b Fw(k)30
b Ft(2)p 2878 3195 152 4 v 28 w FE(1)p Fw(;)14 b(m)o(;)44
b(d)3139 3270 y Fv(k)3207 3258 y Ft(6)p FE(=)27 b(0)p
Ft(g)p FE(,)523 3358 y(with)h(the)g(matrix)f(of)h(co)r(e\016cien)n(ts)
1657 3546 y Fw(M)k FE(=)22 b(\()p Fw(d)1932 3558 y FD(1)1970
3546 y Fw(;)14 b(:)g(:)g(:)g(;)g(d)2198 3558 y Fv(k)2239
3546 y FE(\))523 3733 y(.)523 4012 y Fx(5)112 b(Iterativ)m(e)37
b(Re\014nemen)m(t)h(of)g(the)f(Unsat)h(Core)523 4224
y FE(Similar)c(to)h(all)f(other)g(core)g(extractors,)f(our)g(algorithm)
h(cannot)g(generate)f(a)i(minimal)523 4324 y(core)29
b(in)g(one)h(execution.)f(T)-7 b(o)29 b(obtain)g(a)g(smaller)g(core,)g
(w)n(e)g(need)g(to)h(re-execute)e(our)h(to)r(ol)523 4424
y(with)f(the)g(core)f(obtained)g(in)h(the)g(curren)n(t)f(iteration.)g
(W)-7 b(e)28 b(describ)r(e)g(t)n(w)n(o)e(heuristics)i(that)523
4523 y(are)33 b(applied)h(to)h(our)e(algorithm)g(to)h(increase)f(the)i
(probabilit)n(y)e(to)h(generate)f(a)h(smaller)523 4623
y(core)27 b(in)g(the)h(next)g(iteration.)648 4725 y(After)c
(eliminating)g(all)g(redundan)n(t)g(p)r(olynomials,)f(w)n(e)h(can)f
(call)h(our)g(GB)g(engine)f(with)523 4825 y(the)j(new)h(core.)e(A)h
(e\013ectiv)n(e)g(heuristic)g(should)g(enhance)f(the)i(probabilit)n(y)e
(that)h(the)g(refu-)523 4924 y(tation)j("1")f(is)h(comp)r(osed)f(b)n(y)
h(few)n(er)f(p)r(olynomials.)h(In)g(our)f(GB)h(computing)g(algorithm,)
1922 5173 y(10)p eop end
%%Page: 11 11
TeXDict begin 11 10 bop 523 448 a FE(w)n(e)23 b(use)h(a)f(strategy)f
(to)i(pic)n(k)f(critical)g(pairs)g(suc)n(h)h(that)g(p)r(olynomials)e
(with)i(larger)e(indexes)523 548 y(get)27 b(in)n(v)n(olv)n(ed)g(as)g
(late)g(as)g(p)r(ossible:)943 735 y(\()p Fw(f)1016 747
y FD(1)1053 735 y Fw(;)14 b(f)1131 747 y FD(2)1168 735
y FE(\))23 b Ft(!)g FE(\()p Fw(f)1402 747 y FD(1)1439
735 y Fw(;)14 b(f)1517 747 y FD(3)1554 735 y FE(\))23
b Ft(!)g FE(\()p Fw(f)1788 747 y FD(2)1826 735 y Fw(;)14
b(f)1904 747 y FD(3)1940 735 y FE(\))24 b Ft(!)f FE(\()p
Fw(f)2175 747 y FD(1)2212 735 y Fw(;)14 b(f)2290 747
y FD(4)2327 735 y FE(\))23 b Ft(!)g FE(\()p Fw(f)2561
747 y FD(2)2598 735 y Fw(;)14 b(f)2676 747 y FD(4)2713
735 y FE(\))24 b Ft(!)f(\001)14 b(\001)g(\001)648 950
y FE(Mean)n(while,)31 b(for)h(the)h(reduction)f(pro)r(cess)f
Fw(S)5 b(pol)r(y)s FE(\()p Fw(f)2320 962 y Fv(i)2346
950 y Fw(;)14 b(f)2424 962 y Fv(j)2459 950 y FE(\))2543
903 y Fv(F)2522 950 y Ft(\000)-44 b(!)2626 962 y FD(+)2712
950 y Fw(f)2753 962 y Fv(new)2879 950 y FE(,)32 b(w)n(e)g(pic)n(k)g
(divi-)523 1050 y(sor)i(p)r(olynomials)g(from)h Fw(F)47
b FE(follo)n(wing)34 b(the)h(order)f(of)h(p)r(olynomial)f(indexes.)h
(Therefore,)523 1149 y(b)n(y)i(renaming)f(the)i(p)r(olynomial)e
(indexes,)h(w)n(e)g(can)g(increase)f(the)i(lik)n(eliho)r(o)r(d)f(they)g
(are)523 1249 y(selected)32 b(in)n(to)g(the)g(unsat)g(core.)f(W)-7
b(e)33 b(use)f(2)f(criteria)g(to)h(increase)f(the)i(probabilit)n(y)e
(that)523 1348 y(a)36 b(p)r(olynomial)g(is)g(included)h(in)g(the)g
(refutation)f(tree.)h(One)f(corresp)r(onds)f(to)h(the)h("dis-)523
1448 y(tance")24 b(to)h(refutation)g("1",)f(whereas)f(the)j(other)e
(corresp)r(onds)f(to)i(the)g("frequency")f(that)523 1548
y(a)j(p)r(olynomial)g(app)r(ears)g(in)g(refutation)h(tree.)648
1650 y("Distance")36 b(in)i(a)f(refutation)g(tree)g(corresp)r(onds)e
(to)i(the)h(n)n(um)n(b)r(er)f(of)g(arcs)g(on)g(the)523
1749 y(shortest)22 b(path)i(from)e(refutation)h("1")f(to)h(a)g(leaf)g
(p)r(olynomial.)g(P)n(olynomials)e(with)i(shorter)523
1849 y(distance)37 b(to)g("1")f(are)g(used)h(as)f(divisors)g(in)i
(later)e(stages)g(of)h(p)r(olynomial)g(reductions,)523
1949 y(whic)n(h)k(indicates)g(they)g(will)h(generally)d(ha)n(v)n(e)h
(lo)n(w)n(er)g(degree)g(leading)g(terms.)h(This)g(is)523
2048 y(b)r(ecause)26 b(w)n(e)g(are)f(assuming)h(a)g
(degree-lexicographic)d(order,)i(and)h(successiv)n(e)f(term)i(can-)523
2148 y(cellations)c(reduce)f(the)i(degree)e(of)i(the)f(remainders.)f
(So)h(p)r(olynomials)g(with)g(lo)n(w)n(er)f(degree)523
2248 y(leading)j(terms)g(are)f(more)g(lik)n(ely)h(to)g(b)r(e)g(used)h
(for)e(reduction,)h(suc)n(h)g(that)g(the)h(probabilit)n(y)523
2347 y(that)i(they)g(app)r(ear)e(in)i(the)g(refutation)g(tree)f(is)g
(larger.)648 2449 y(Similarly)-7 b(,)30 b(the)i(motiv)-5
b(ation)31 b(for)f("frequency)g(of)h(app)r(earance")e(of)i
Fw(f)2857 2461 y Fv(i)2916 2449 y FE(in)g(the)h(refuta-)523
2549 y(tion)h(tree)g(is)g(as)f(follo)n(ws:)h(p)r(olynomials)f(app)r
(earing)g(frequen)n(tly)h(in)g(the)g(refutation)g(tree)523
2649 y(also)e(indicates)h(that)g(they)h(ha)n(v)n(e)d(some)i(prop)r
(erties)f(\(leading)h(terms\))g(that)g(mak)n(e)f(them)523
2748 y("fa)n(v)n(ourable")c(in)k(the)g(unsat)f(core)f(selection.)h(F)-7
b(or)30 b(example,)g(their)g(leading)g(terms)g(ma)n(y)523
2848 y(con)n(tain)d(v)-5 b(ariables)26 b(that)i(are)f(require)f(them)i
(to)g(b)r(e)g(included)g(in)g(the)g(minimal)g(core.)648
2950 y(W)-7 b(e)32 b(apply)g(b)r(oth)g(heuristics:)g(w)n(e)g(sort)f
(the)i(p)r(olynomials)e(in)h(the)h(core)e(b)n(y)g(the)i("dis-)523
3049 y(tance")23 b(criterion,)g(and)g(use)h(the)g(\\frequency")e
(criterion)h(as)g(the)h(tiebreak)n(er.)e(The)i(follo)n(w-)523
3149 y(ing)j(example)h(illustrates)f(our)f(heuristic.)523
3336 y Fu(Example)31 b(4.)42 b FE(Consider)27 b(a)g(set)h(of)f(6)g(p)r
(olynomials)g(o)n(v)n(er)f Fr(F)2369 3348 y FD(2)2433
3336 y FE(of)i(an)f(infeasible)h(instance.)1548 3523
y Fw(f)1589 3535 y FD(1)1649 3523 y FE(:)23 b Fw(x)1742
3535 y FD(1)1780 3523 y Fw(x)1827 3535 y FD(3)1883 3523
y FE(+)18 b Fw(x)2013 3535 y FD(3)1548 3648 y Fw(f)1589
3660 y FD(2)1649 3648 y FE(:)23 b Fw(x)1742 3660 y FD(2)1798
3648 y FE(+)18 b(1)1548 3772 y Fw(f)1589 3784 y FD(3)1649
3772 y FE(:)23 b Fw(x)1742 3784 y FD(2)1780 3772 y Fw(x)1827
3784 y FD(3)1883 3772 y FE(+)18 b Fw(x)2013 3784 y FD(2)1548
3897 y Fw(f)1589 3909 y FD(4)1649 3897 y FE(:)23 b Fw(x)1742
3909 y FD(2)1780 3897 y Fw(x)1827 3909 y FD(3)1548 4021
y Fw(f)1589 4033 y FD(5)1649 4021 y FE(:)g Fw(x)1742
4033 y FD(2)1780 4021 y Fw(x)1827 4033 y FD(3)1883 4021
y FE(+)18 b Fw(x)2013 4033 y FD(2)2069 4021 y FE(+)g
Fw(x)2199 4033 y FD(3)2255 4021 y FE(+)g(1)1548 4146
y Fw(f)1589 4158 y FD(6)1649 4146 y FE(:)23 b Fw(x)1742
4158 y FD(1)1780 4146 y Fw(x)1827 4158 y FD(2)1865 4146
y Fw(x)1912 4158 y FD(3)1968 4146 y FE(+)18 b Fw(x)2098
4158 y FD(1)2135 4146 y Fw(x)2182 4158 y FD(3)648 4336
y FE(After)28 b(the)g(\014rst)f(iteration,)g(w)n(e)g(get)h(a)f(tree)g
(of)h(refutation)f(as)g(sho)n(wn)g(in)h(Fig.2\(a\).)648
4438 y(The)h(shortest)g("Distance")g(corresp)r(onds)f(to)h(that)h(of)g
Fw(f)2444 4450 y FD(2)2510 4438 y FE(to)g("1",)e(whic)n(h)i(is)f(2)h
(lev)n(els.)523 4538 y(So,)d(w)n(e)h(reorder)d Fw(f)1111
4550 y FD(2)1176 4538 y FE(to)i(b)r(e)h(the)g(p)r(olynomial)f(with)h
(the)g(shortest)f(index.)h(The)f("distance")523 4637
y(and)32 b("frequency")e(for)i(other)f(p)r(olynomials)g(are)g(iden)n
(tical,)h(so)f(w)n(e)g(k)n(eep)h(their)g(ordering)523
4737 y(un)n(touc)n(hed.)27 b(W)-7 b(e)28 b(re-index)f(the)h(p)r
(olynomial)f(set)1376 4924 y Fw(f)1426 4890 y Fo(0)1417
4945 y FD(1)1477 4924 y FE(=)22 b Fw(f)1605 4936 y FD(2)1642
4924 y Fw(;)14 b(f)1729 4890 y Fo(0)1720 4945 y FD(2)1780
4924 y FE(=)23 b Fw(f)1909 4936 y FD(1)1946 4924 y Fw(;)14
b(f)2033 4890 y Fo(0)2024 4945 y FD(3)2083 4924 y FE(=)23
b Fw(f)2212 4936 y FD(3)2249 4924 y Fw(;)14 b(f)2336
4890 y Fo(0)2327 4945 y FD(4)2387 4924 y FE(=)22 b Fw(f)2515
4936 y FD(4)1922 5173 y FE(11)p eop end
%%Page: 12 12
TeXDict begin 12 11 bop 523 1669 a @beginspecial 0 @llx
0 @lly 1499 @urx 626 @ury 3747 @rwi @setspecial
%%BeginDocument: SAT2016_xiaojun/core_refine.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: core_refine.pdf
%%Creator: Adobe Acrobat 10.1.15
%%For: Jason
%%CreationDate: 2016/2/26, 10:37:23
%%BoundingBox: 0 0 1499 626
%%HiResBoundingBox: 0 0 1498.6200 625.0201
%%CropBox: 0 0 1498.6200 625.0201
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 856 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:CreateDate="2016-02-26T10:30:19-07:00"
   xmp:CreatorTool="Microsoft® PowerPoint® 2013"
   xmp:ModifyDate="2016-02-26T10:30:19-07:00"
   pdf:Producer="Microsoft® PowerPoint® 2013">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>骁骏</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">PowerPoint 演示文稿</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -625.02 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 625.02 li
1498.62 625.02 li
1498.62 0 li
cp
clp
gsave
0 625.02 mo
1499 625.02 li
1499 -.97998 li
0 -.97998 li
cp
clp
0 625.02 mo
1498.62 625.02 li
1498.62 -.00012207 li
0 -.00012207 li
cp
false sop
/0 
[/DeviceGray] /CSA add_res
1 gry
ef
.0614376 gry
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPS-ItalicMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
dup 51 /three put
dup 102 /f put
dup 120 /x put
def
/FontBBox {-498 -307 1333 1023} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
5 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD1638113E4B58C0B5F39100186722805B704
AA3988900AFCFF05DD> |-
/two <1C60D8A8C9B7A73DB69C12026B750802855EAC5092BB0A5898B5D5C055
BF85280FEB4B1F3E4AFB01B0A8A29DB15451C23681417470B94B4D8D92484A39
334C366B9828F8F838BF53371C17891341B316F197C3AA30247051762DF7F17C
B7ACE84978B012AD0CA07C229C814073CD1F19CA205691988B437B6925EC8729
C2823046BA> |-
/three <1C60D8A8C9B7A73DB9AD9E1198F486357EF0B21BA3B223A4454F8713
4A33E7B05FBEBD54E2E15EE07CA0E86475CEDA75FE6EC7CC26A7C1193ABEBB34
8EE8C242C93B4A3DFB138E90E470C0795857EBAC82F9500B9007C3C3C1D35242
A2D7BB7BCB129B370D84AE06270498BAA570E6A849DF2A3057781782DB63178F
B7BF717AB4A95100FB82CC3D5D208D5079E8F6ADB85140C7EE0091E36F5A2AE3
715EE555C7F426C8085BCD4F5A9912A4CA4D78AA92806C8E53C32C02A5E8E15F
BE1796AC7FAB231D974845F7A3FB01849ADAEB1660889453E08F67B2D84BCE43
9196EB> |-
/f <1C60D8A8C9B854D0F4B281B42A092C6FF82395F80A15D2C3C12DDA8BD3AD
36E58B3AF910D2B8ADA6BC1C30137D0B4DF4FA4D59FA1ACB53459B7EC4AE089C
AED0AC91FA3467AFFE9A61F305EA6974A5E976D616D1A9D4FE32401AFC4C8256
E9DB7E7DA19A9590B8444669A02D969F9D7400113A1B0796FD928E598C3B7A80
D1D6A9C40F81F2F1E3C4D5AC7B233A0790585320A08546F89329AA00FD4D5E1E
75EC59101B6580A1509A78E0540D10213C525ADA794DAE15593AD445E59C9538
B4450ED729467A46BE6AB3BFA02A1FB3F6390813CCC3D99CF1B2B175F6DCAADE
66318988F9151791D53E6E4751A470A643E004161F0D3039A05AB8CF9D511D61
3F018EA1A7F7CD3D271165C92B396D85FCFE742D3DF0EDB5E2862C16D937DC> |-
/x <1C60D8A8C9B77FE28E7B59861DA633FA42A38BF207DC4A11329E63F66801
0B05585B22E39E733F2B39E647F14D7DCD27965006EEC01D3FBB556E503629E4
5F186BD20587B6FF8BB4E525ABE63E26F210C9F85E012A8DB6F803B316624083
082E536A1274247334ADD37479C48FDB7D8ADD850A8832DF9217A2BFFEECF6DD
96F21564B9189ECF65AD0E783A58F9E296A99147AE132DD5B0142AB4EA574166
8F4195BDF7097E5D12CB419F2F282E538E1EB21217502E3C6B11740802EC650F
4D2ADCD4B1772219DAF6BE6429CF2030BDF9C05BA7A5D790670BD325C71A55CF
EDEE3AFA9492A129CF25024BDA2414AE27F397E2DB63BB72C98E3704AEDCD4D4
A43DA02887C90FEE11520BD99634849C2457543FCB5BD3F0> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/GOTJNM+TimesNewRomanPS-ItalicMT /TimesNewRomanPS-ItalicMT findfont ct_VMDictPut
/GOTJNM+TimesNewRomanPS-ItalicMT*1 
[50{/.notdef}rp /two /three 50{/.notdef}rp /f 17{/.notdef}rp /x 135{/.notdef}rp]
GOTJNM+TimesNewRomanPS-ItalicMT nf
GOTJNM+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
423.7 70.04 mo
(x)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
439.66 78.98 mo
(3)sh
%ADOBeginSubsetFont: PBAAAA+Times#20New#20Roman,Italic Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /PBAAAA+Times#20New#20Roman,Italic def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 149 /bullet put
def
/FontBBox {-498 -307 1333 1023} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD1638113E4B58C0B5F39100186722805B704
AA3988900AFCFF05DD> |-
/bullet <1C60D8A8C9B80CC2BC8BC9C179851105C6BFA4D2D2AA49D9C20A1D0
5A931BB36D79B54A0EEB9199CD4AD8E239C7F486BC6CFBFEC5AA78A0A68C0197
6A0F128D28C0F86DF02BEBE> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/GOTJNN+Times#20New#20Roman,Italic /PBAAAA+Times#20New#20Roman,Italic findfont ct_VMDictPut
/GOTJNN+Times#20New#20Roman,Italic*1 
[149{/.notdef}rp /bullet 106{/.notdef}rp]
GOTJNN+Times#20New#20Roman,Italic nf
GOTJNN+Times#20New#20Roman,Italic*1 [28.02 0 0 -28.02 0 0 ]msf
451.68 70.04 mo
(\225)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
470.46 70.04 mo
(f)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
480.48 78.98 mo
(2)sh
317.96 103.33 mo
416.77 57.61 li
416.34 56.69 li
317.53 102.41 li
cp
321.3 96.88 mo
316.83 103.3 li
324.61 104.03 li
324.89 104.06 325.14 103.86 325.17 103.58 cv
325.2 103.29 324.99 103.05 324.71 103.02 cv
317.79 102.36 li
318.16 103.16 li
322.14 97.47 li
322.3 97.24 322.24 96.92 322.01 96.76 cv
321.78 96.59 321.46 96.65 321.3 96.88 cv
cp
f
317.96 109.59 mo
420.46 161.2 li
420 162.11 li
317.5 110.5 li
cp
321.09 116.15 mo
316.83 109.59 li
324.63 109.11 li
324.91 109.09 325.16 109.3 325.17 109.58 cv
325.19 109.87 324.98 110.11 324.7 110.13 cv
317.76 110.55 li
318.16 109.77 li
321.94 115.59 li
322.1 115.83 322.03 116.14 321.79 116.3 cv
321.56 116.45 321.24 116.38 321.09 116.15 cv
cp
f
156.27 261.5 mo
310.89 109.95 li
310.18 109.23 li
155.55 260.78 li
cp
157.25 254.31 mo
155.19 261.85 li
162.77 259.93 li
163.04 259.87 163.21 259.59 163.14 259.32 cv
163.07 259.04 162.79 258.88 162.52 258.95 cv
155.79 260.65 li
156.4 261.28 li
158.24 254.58 li
158.31 254.3 158.15 254.02 157.88 253.95 cv
157.61 253.87 157.33 254.03 157.25 254.31 cv
cp
f
309.21 106.47 mo
309.21 104.02 311.2 102.03 313.65 102.03 cv
316.1 102.03 318.09 104.02 318.09 106.47 cv
318.09 108.92 316.1 110.91 313.65 110.91 cv
311.2 110.91 309.21 108.92 309.21 106.47 cv
cp
.48765 gry
ef
1.02 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
309.21 106.47 mo
309.21 104.02 311.2 102.03 313.65 102.03 cv
316.1 102.03 318.09 104.02 318.09 106.47 cv
318.09 108.92 316.1 110.91 313.65 110.91 cv
311.2 110.91 309.21 108.92 309.21 106.47 cv
cp
.308342 gry
@
320.49 399.99 mo
320.49 397.54 322.48 395.55 324.93 395.55 cv
327.38 395.55 329.37 397.54 329.37 399.99 cv
329.37 402.44 327.38 404.43 324.93 404.43 cv
322.48 404.43 320.49 402.44 320.49 399.99 cv
cp
.48765 gry
ef
320.49 399.99 mo
320.49 397.54 322.48 395.55 324.93 395.55 cv
327.38 395.55 329.37 397.54 329.37 399.99 cv
329.37 402.44 327.38 404.43 324.93 404.43 cv
322.48 404.43 320.49 402.44 320.49 399.99 cv
cp
.308342 gry
@
158.47 282.49 mo
322.06 396.43 li
321.48 397.27 li
157.89 283.33 li
cp
160.64 289.42 mo
157.35 282.33 li
165.14 282.96 li
165.42 282.98 165.63 283.22 165.61 283.51 cv
165.59 283.79 165.34 284 165.06 283.97 cv
158.14 283.42 li
158.64 282.69 li
161.56 288.99 li
161.68 289.25 161.57 289.55 161.32 289.67 cv
161.06 289.79 160.76 289.68 160.64 289.42 cv
cp
.0614376 gry
f
329.18 396.73 mo
420.45 342.05 li
419.93 341.17 li
328.65 395.86 li
cp
331.82 389.96 mo
328.05 396.81 li
335.87 396.72 li
336.15 396.72 336.38 396.49 336.37 396.21 cv
336.37 395.92 336.14 395.7 335.86 395.7 cv
328.91 395.78 li
329.36 396.54 li
332.71 390.45 li
332.85 390.21 332.76 389.9 332.51 389.76 cv
332.26 389.63 331.95 389.72 331.82 389.96 cv
cp
f
330.5 400.03 mo
428.04 453.76 li
427.55 454.65 li
330.01 400.92 li
cp
333.38 406.7 mo
329.37 399.99 li
337.19 399.8 li
337.47 399.79 337.7 400.01 337.71 400.29 cv
337.72 400.58 337.49 400.81 337.21 400.82 cv
330.27 400.99 li
330.69 400.22 li
334.26 406.18 li
334.4 406.42 334.32 406.73 334.08 406.88 cv
333.84 407.02 333.53 406.94 333.38 406.7 cv
cp
f
%ADOBeginSubsetFont: PBAAAA+Times#20New#20Roman,Italic AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
systemdict begin
GOTJNN+Times#20New#20Roman,Italic dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7A73DB6A4A1045477B897A236531EE6744E986B049CB2B4
C1FE00325C8BF061D241BD30B895F448A012FA11CB58DD958F1372DACE120865
7E476E9190270F7FC72B0B9DCE2DDE5E748B644DD70718A6734618F8229BDD2E
5AE0C198797BC9647A1D37D27AAA1BAE3BFBF0B70DB4F621F7> |-
/quotedblleft <1C60D8A8C9B7EF322BCD48236565101ED7BC0D737E2F4D9EE
19897F6F43D2FDBA4BC47B61EA6E6BCAF0A2BB749F6CFBAFC481592F8C035863
A9123946EB73C54184A7A8AD9FE363DF4CE339E3290FCF1294D4FFFE7C771382
CE22B664C09DDBF04894E2EE2F2AF3621E585A1B505F2F1BCD5D7088562BE78F
EB0F4F73F49BE65BD959F2680F3C4053EC4E4D4FD5D1CB7A3BDF3857E62C36DE
1723678442B0D711A42F1371114585651D51CAFECA17462FFC798218FB5587DA
A959E4F2CADD52C504914> |-
/quotedblright <1C60D8A8C9B7EF32244665061BEA177CFCE949362A1DA86A
B922BF207781DA32EF749477FDEF12C6E9A49ADA71726F87546BA5EC8E7F153E
564A91F0894C6F1B0ED829CE7A7E034D6F0E997B6E236950FE61E0464511F645
2BBC330F5A2692AA57BFC6EBA2BB0439D13EE1921AAA114F8FEBAC1CBB7C0AB5
80B320BAC21B05300B98726319928814F9013E7F465F79AE4E2BE1804AB40552
E8777A6CF38D0B2AFE83BDE792F457987AA1F3954C7EB297B42900393D034479
FBADD875> |-
systemdict /gcheck known {setglobal} if end {end} if
end
GOTJNN+Times#20New#20Roman,Italic /Encoding get
dup 49 /one put
dup 147 /quotedblleft put
dup 148 /quotedblright put
pop
%ADOEndSubsetFont
/GOTJNN+Times#20New#20Roman,Italic*1 
[49{/.notdef}rp /one 97{/.notdef}rp /quotedblleft /quotedblright /bullet 106{/.notdef}rp]
GOTJNN+Times#20New#20Roman,Italic nf
GOTJNN+Times#20New#20Roman,Italic*1 [36 0 0 -36 0 0 ]msf
91.42 293.22 mo
(\2231\224)
[20.016 18 0 ]xsh
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 97 /a put
dup 98 /b put
def
/FontBBox {-568 -307 2000 1007} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
5 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72E
FEDBB222483BD74F8B> |-
/parenleft <1C60D8A8C9B81F2C3AC09B674C4ECE2BEF4D70AD3508D915EA9A
E12419376F6EEF231ECE8179CA4531F29291ACACE060AEF98AD6F2FFF2BEA533
946FFA1C8BC3953D72A31BB8ABD9782D71B2146F964D99646263E2D414F84FA0
49D36B9B13B7F6C8AA7A4A5EB0> |-
/parenright <1C60D8A8C9B81F2C3CA029BC286E27661FD7F18B990CFF4A0AF
58404A2F35E11D14FBA406192D392AD203A879E34B8FA3132863211808E5BD63
BDAA607B8E04E23E92C61AAA8B57E5E7609689020D20EB927A1EC6CC0BC06B54
0A016D558248DC4A3E8183F5F> |-
/a <1C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC550D
EC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C6B
177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB33
3E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385FDB
0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E70
BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A29895
DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B737
B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE3272E
F1EF1464C3F0D45D7CBB8749AF571E09> |-
/b <1C60D8A8C9B7A73DB90B311171EB67EB8746E2EC8FC994CCA7A632F7C7E8
F4A5D28D725796F2BC8526696060F460C892CC5686CD97F757C6EFB11E42DD9A
F110BE11F49DAEFA324F62E3046D4E2410C0923EDB87332B0381414594D39992
4398EF0A71772EF0EFEA72F5940C288418E4FCC7A2DE1E6A1AEA513FBDA0D660
3C38C9676D3489A418D7163D5E50FB679144E02901D98844D885CA3AAF379A83
F23AED1F56FC130F21> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/GOTJNO+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/GOTJNO+TimesNewRomanPSMT*1 
[40{/.notdef}rp /parenleft /parenright 55{/.notdef}rp /a /b 157{/.notdef}rp]
GOTJNO+TimesNewRomanPSMT nf
GOTJNO+TimesNewRomanPSMT*1 [44 0 0 -44 0 0 ]msf
402.32 582.88 mo
(\(a\))
[14.6517 19.536 0 ]xsh
GOTJNO+TimesNewRomanPSMT*1 [43.98 0 0 -43.98 0 0 ]msf
1112.88 584.42 mo
(\(b\))
[14.645 21.99 0 ]xsh
418.89 164.79 mo
418.89 162.34 420.88 160.35 423.33 160.35 cv
425.78 160.35 427.77 162.34 427.77 164.79 cv
427.77 167.24 425.78 169.23 423.33 169.23 cv
420.88 169.23 418.89 167.24 418.89 164.79 cv
cp
.48765 gry
ef
418.89 164.79 mo
418.89 162.34 420.88 160.35 423.33 160.35 cv
425.78 160.35 427.77 162.34 427.77 164.79 cv
427.77 167.24 425.78 169.23 423.33 169.23 cv
420.88 169.23 418.89 167.24 418.89 164.79 cv
cp
.308342 gry
@
.0614376 gry
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
systemdict begin
GOTJNM+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7A73DB6A4A1045477B897A236531EE6744E986B049CB2B4
C1FE00325C8BF061D241BD30B895F448A012FA11CB58DD958F1372DACE120865
7E476E9190270F7FC72B0B9DCE2DDE5E748B644DD70718A6734618F8229BDD2E
5AE0C198797BC9647A1D37D27AAA1BAE3BFBF0B70DB4F621F7> |-
/four <1C60D8A8C9B7A73DB6EF2B78720F76FE1E85F89D2A1DC69C2202E4273
F3E084393B3AC4189963E5A9690F2DC722B9BB74A43721A9C301224C0A6BCC5C
B45> |-
systemdict /gcheck known {setglobal} if end {end} if
end
GOTJNM+TimesNewRomanPS-ItalicMT /Encoding get
dup 49 /one put
dup 52 /four put
pop
%ADOEndSubsetFont
/GOTJNM+TimesNewRomanPS-ItalicMT*1 
[49{/.notdef}rp /one /two /three /four 49{/.notdef}rp /f 17{/.notdef}rp 
/x 135{/.notdef}rp]
GOTJNM+TimesNewRomanPS-ItalicMT nf
GOTJNM+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
560.24 117.7 mo
(x)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
576.2 126.64 mo
(2)sh
GOTJNN+Times#20New#20Roman,Italic*1 [28.02 0 0 -28.02 0 0 ]msf
588.2 117.7 mo
(\225)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
606.98 117.7 mo
(f)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
617 126.64 mo
(1)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
560.24 235.34 mo
(x)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
576.2 244.28 mo
(1)sh
GOTJNN+Times#20New#20Roman,Italic*1 [28.02 0 0 -28.02 0 0 ]msf
588.2 235.34 mo
(\225)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
606.98 235.34 mo
(f)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
617 244.28 mo
(4)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
430.3 344.12 mo
(f)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
440.32 353.06 mo
(2)sh
427.64 161.68 mo
553.29 105.26 li
552.87 104.32 li
427.22 160.75 li
cp
431.06 155.27 mo
426.51 161.63 li
434.28 162.46 li
434.56 162.49 434.82 162.29 434.85 162.01 cv
434.88 161.73 434.67 161.48 434.39 161.45 cv
427.48 160.71 li
427.85 161.52 li
431.89 155.87 li
432.05 155.64 432 155.32 431.77 155.15 cv
431.54 154.99 431.22 155.04 431.06 155.27 cv
cp
f
429.2 166.95 mo
553.23 222 li
552.82 222.94 li
428.79 167.89 li
cp
432.64 173.35 mo
428.07 167.01 li
435.84 166.15 li
436.12 166.12 436.37 166.32 436.4 166.6 cv
436.43 166.88 436.23 167.13 435.95 167.16 cv
429.05 167.93 li
429.41 167.12 li
433.47 172.75 li
433.64 172.98 433.58 173.3 433.36 173.47 cv
433.13 173.63 432.81 173.58 432.64 173.35 cv
cp
f
423.09 453.69 mo
423.09 451.24 425.09 449.25 427.56 449.25 cv
430.03 449.25 432.03 451.24 432.03 453.69 cv
432.03 456.14 430.03 458.13 427.56 458.13 cv
425.09 458.13 423.09 456.14 423.09 453.69 cv
cp
.48765 gry
ef
423.09 453.69 mo
423.09 451.24 425.09 449.25 427.56 449.25 cv
430.03 449.25 432.03 451.24 432.03 453.69 cv
432.03 456.14 430.03 458.13 427.56 458.13 cv
425.09 458.13 423.09 456.14 423.09 453.69 cv
cp
.308342 gry
@
.0614376 gry
GOTJNM+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
564.46 406.6 mo
(x)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
580.42 415.54 mo
(3)sh
GOTJNN+Times#20New#20Roman,Italic*1 [28.02 0 0 -28.02 0 0 ]msf
592.42 406.6 mo
(\225)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
611.2 406.6 mo
(f)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
621.22 415.54 mo
(2)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
564.46 524.26 mo
(f)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
574.48 533.2 mo
(3)sh
431.84 450.59 mo
557.49 394.16 li
557.07 393.22 li
431.42 449.66 li
cp
435.26 444.17 mo
430.71 450.53 li
438.48 451.36 li
438.76 451.39 439.02 451.19 439.05 450.91 cv
439.08 450.63 438.87 450.38 438.59 450.35 cv
431.68 449.61 li
432.05 450.42 li
436.09 444.77 li
436.25 444.54 436.2 444.22 435.97 444.05 cv
435.74 443.89 435.42 443.94 435.26 444.17 cv
cp
f
433.46 455.79 mo
557.49 510.84 li
557.08 511.78 li
433.05 456.73 li
cp
436.9 462.19 mo
432.33 455.85 li
440.1 454.99 li
440.38 454.96 440.63 455.16 440.66 455.44 cv
440.69 455.72 440.49 455.97 440.21 456 cv
433.31 456.77 li
433.67 455.96 li
437.73 461.59 li
437.9 461.82 437.84 462.14 437.62 462.31 cv
437.39 462.47 437.07 462.42 436.9 462.19 cv
cp
f
GOTJNM+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
1137.74 77.02 mo
(f)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
1147.76 85.96 mo
(2)sh
1031.96 110.35 mo
1130.77 64.63 li
1130.34 63.71 li
1031.53 109.43 li
cp
1035.3 103.9 mo
1030.83 110.32 li
1038.61 111.05 li
1038.89 111.08 1039.14 110.88 1039.17 110.6 cv
1039.2 110.31 1038.99 110.07 1038.71 110.04 cv
1031.79 109.38 li
1032.16 110.18 li
1036.14 104.49 li
1036.3 104.26 1036.24 103.94 1036.01 103.78 cv
1035.78 103.61 1035.46 103.67 1035.3 103.9 cv
cp
f
1031.96 116.55 mo
1134.46 168.16 li
1134 169.07 li
1031.5 117.46 li
cp
1035.09 123.11 mo
1030.83 116.55 li
1038.63 116.07 li
1038.91 116.05 1039.16 116.26 1039.17 116.54 cv
1039.19 116.83 1038.98 117.07 1038.7 117.09 cv
1031.76 117.51 li
1032.16 116.73 li
1035.94 122.55 li
1036.1 122.79 1036.03 123.1 1035.79 123.26 cv
1035.56 123.41 1035.24 123.34 1035.09 123.11 cv
cp
f
872.42 274.32 mo
1024.88 116.9 li
1024.14 116.2 li
871.68 273.61 li
cp
873.22 267.1 mo
871.35 274.69 li
878.88 272.58 li
879.15 272.5 879.31 272.22 879.23 271.95 cv
879.16 271.68 878.87 271.52 878.6 271.6 cv
871.91 273.47 li
872.55 274.09 li
874.21 267.34 li
874.27 267.07 874.11 266.79 873.83 266.72 cv
873.56 266.66 873.28 266.82 873.22 267.1 cv
cp
f
1023.21 113.43 mo
1023.21 110.98 1025.2 108.99 1027.65 108.99 cv
1030.1 108.99 1032.09 110.98 1032.09 113.43 cv
1032.09 115.88 1030.1 117.87 1027.65 117.87 cv
1025.2 117.87 1023.21 115.88 1023.21 113.43 cv
cp
.48765 gry
ef
1023.21 113.43 mo
1023.21 110.98 1025.2 108.99 1027.65 108.99 cv
1030.1 108.99 1032.09 110.98 1032.09 113.43 cv
1032.09 115.88 1030.1 117.87 1027.65 117.87 cv
1025.2 117.87 1023.21 115.88 1023.21 113.43 cv
cp
.308342 gry
@
1034.49 406.95 mo
1034.49 404.5 1036.48 402.51 1038.93 402.51 cv
1041.38 402.51 1043.37 404.5 1043.37 406.95 cv
1043.37 409.4 1041.38 411.39 1038.93 411.39 cv
1036.48 411.39 1034.49 409.4 1034.49 406.95 cv
cp
.48765 gry
ef
1034.49 406.95 mo
1034.49 404.5 1036.48 402.51 1038.93 402.51 cv
1041.38 402.51 1043.37 404.5 1043.37 406.95 cv
1043.37 409.4 1041.38 411.39 1038.93 411.39 cv
1036.48 411.39 1034.49 409.4 1034.49 406.95 cv
cp
.308342 gry
@
872.47 289.45 mo
1036.06 403.39 li
1035.48 404.23 li
871.89 290.29 li
cp
874.64 296.38 mo
871.35 289.29 li
879.14 289.92 li
879.42 289.94 879.63 290.18 879.61 290.47 cv
879.59 290.75 879.34 290.96 879.06 290.93 cv
872.14 290.38 li
872.64 289.65 li
875.56 295.95 li
875.68 296.21 875.57 296.51 875.32 296.63 cv
875.06 296.75 874.76 296.64 874.64 296.38 cv
cp
.0614376 gry
f
GOTJNN+Times#20New#20Roman,Italic*1 [36 0 0 -36 0 0 ]msf
805.44 300.2 mo
(\2231\224)
[20.016 18 0 ]xsh
1132.89 171.78 mo
1132.89 169.31 1134.88 167.31 1137.33 167.31 cv
1139.78 167.31 1141.77 169.31 1141.77 171.78 cv
1141.77 174.25 1139.78 176.25 1137.33 176.25 cv
1134.88 176.25 1132.89 174.25 1132.89 171.78 cv
cp
.48765 gry
ef
1132.89 171.78 mo
1132.89 169.31 1134.88 167.31 1137.33 167.31 cv
1139.78 167.31 1141.77 169.31 1141.77 171.78 cv
1141.77 174.25 1139.78 176.25 1137.33 176.25 cv
1134.88 176.25 1132.89 174.25 1132.89 171.78 cv
cp
.308342 gry
@
.0614376 gry
GOTJNM+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
1274.26 124.68 mo
(x)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
1290.22 133.62 mo
(3)sh
GOTJNN+Times#20New#20Roman,Italic*1 [28.02 0 0 -28.02 0 0 ]msf
1302.22 124.68 mo
(\225)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
1321 124.68 mo
(f)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
1331.02 133.62 mo
(2)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
1274.26 242.32 mo
(f)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
1284.28 251.26 mo
(3)sh
1141.64 168.7 mo
1267.29 112.28 li
1266.87 111.34 li
1141.22 167.77 li
cp
1145.06 162.29 mo
1140.51 168.65 li
1148.28 169.48 li
1148.56 169.51 1148.82 169.31 1148.85 169.03 cv
1148.88 168.75 1148.67 168.5 1148.39 168.47 cv
1141.48 167.73 li
1141.85 168.54 li
1145.89 162.89 li
1146.05 162.66 1146 162.34 1145.77 162.17 cv
1145.54 162.01 1145.22 162.06 1145.06 162.29 cv
cp
f
1143.2 173.91 mo
1267.23 228.96 li
1266.82 229.9 li
1142.79 174.85 li
cp
1146.64 180.31 mo
1142.07 173.97 li
1149.84 173.11 li
1150.12 173.08 1150.37 173.28 1150.4 173.56 cv
1150.43 173.84 1150.23 174.09 1149.95 174.12 cv
1143.05 174.89 li
1143.41 174.08 li
1147.47 179.71 li
1147.64 179.94 1147.58 180.26 1147.36 180.43 cv
1147.13 180.59 1146.81 180.54 1146.64 180.31 cv
cp
f
GOTJNM+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
1149 361.8 mo
(x)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
1164.96 370.74 mo
(3)sh
GOTJNN+Times#20New#20Roman,Italic*1 [28.02 0 0 -28.02 0 0 ]msf
1176.96 361.8 mo
(\225)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
1195.74 361.8 mo
(f)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
1205.76 370.74 mo
(2)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [36 0 0 -36 0 0 ]msf
1165.84 479.96 mo
(f)sh
GOTJNM+TimesNewRomanPS-ItalicMT*1 [24 0 0 -24 0 0 ]msf
1175.86 488.9 mo
(4)sh
1043.18 403.79 mo
1142.02 349.38 li
1141.53 348.48 li
1042.69 402.89 li
cp
1046.07 397.12 mo
1042.05 403.83 li
1049.87 404.02 li
1050.15 404.03 1050.38 403.81 1050.39 403.53 cv
1050.4 403.24 1050.17 403.01 1049.89 403 cv
1042.95 402.83 li
1043.37 403.6 li
1046.94 397.64 li
1047.08 397.4 1047.01 397.09 1046.76 396.94 cv
1046.52 396.8 1046.21 396.88 1046.07 397.12 cv
cp
f
1043.18 410.06 mo
1158.84 466.58 li
1158.39 467.5 li
1042.73 410.97 li
cp
1046.39 416.58 mo
1042.05 410.07 li
1049.85 409.49 li
1050.13 409.47 1050.37 409.68 1050.39 409.97 cv
1050.41 410.25 1050.2 410.49 1049.92 410.51 cv
1042.99 411.02 li
1043.38 410.23 li
1047.24 416.01 li
1047.39 416.24 1047.33 416.56 1047.09 416.72 cv
1046.86 416.87 1046.54 416.81 1046.39 416.58 cv
cp
f
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/GOTJNO+TimesNewRomanPSMT*1 uf
/GOTJNO+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
/GOTJNN+Times#20New#20Roman,Italic*1 uf
/GOTJNN+Times#20New#20Roman,Italic uf
/PBAAAA+Times#20New#20Roman,Italic uf
/GOTJNM+TimesNewRomanPS-ItalicMT*1 uf
/GOTJNM+TimesNewRomanPS-ItalicMT uf
/TimesNewRomanPS-ItalicMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF

%%EndDocument
 @endspecial 1046 1822 a FE(Fig.)13 b(2:)27 b(Refutation)h(trees)f(of)h
(core)e(re\014nemen)n(t)i(example)523 2125 y(and)42 b(apply)g(our)g
(GB-core)e(algorithm)h(on)h Ft(f)p Fw(f)2061 2095 y Fo(0)2052
2145 y FD(1)2089 2125 y Fw(;)14 b(f)2176 2095 y Fo(0)2167
2145 y FD(2)2203 2125 y Fw(;)g(f)2290 2095 y Fo(0)2281
2145 y FD(3)2318 2125 y Fw(;)g(f)2405 2095 y Fo(0)2396
2145 y FD(4)2433 2125 y Ft(g)p FE(.)42 b(The)g(result)g(is)g(sho)n(wn)g
(in)523 2224 y(Fig.2\(b\).)32 b(W)-7 b(e)31 b(reac)n(h)g(a)g(\014xp)r
(oin)n(t,)g(and)g(the)h(core)e Ft(f)p Fw(f)2231 2194
y Fo(0)2222 2245 y FD(1)2259 2224 y Fw(;)14 b(f)2346
2194 y Fo(0)2337 2245 y FD(3)2374 2224 y Fw(;)g(f)2461
2194 y Fo(0)2452 2245 y FD(4)2488 2224 y Ft(g)29 b FE(=)g
Ft(f)p Fw(f)2736 2236 y FD(2)2773 2224 y Fw(;)14 b(f)2851
2236 y FD(3)2887 2224 y Fw(;)g(f)2965 2236 y FD(4)3002
2224 y Ft(g)31 b FE(is)h(pro)n(v)n(ed)523 2324 y(to)c(b)r(e)g(minimal.)
523 2591 y Fx(6)112 b(Exp)s(erimen)m(t)38 b(results)523
2792 y FE(W)-7 b(e)36 b(ha)n(v)n(e)e(implemen)n(ted)j(our)e(core)f
(extraction)h(approac)n(h)e(\(the)k(GB-Core)d(algorithm\))523
2892 y(using)28 b(the)h Fb(Singular)f FE(sym)n(b)r(olic)g(algebra)f
(computation)i(system)f([v.)h(3-1-6])d([12)o(].)j(With)523
2991 y(our)g(to)r(ol)h(implemen)n(tation,)h(w)n(e)e(ha)n(v)n(e)g(p)r
(erformed)h(exp)r(erimen)n(ts)g(to)g(extract)f(a)h(minimal)523
3091 y(unsat)g(core)g(from)g(a)g(giv)n(en)g(set)g(of)g(p)r(olynomials.)
g(Our)g(exp)r(erimen)n(ts)g(run)g(on)g(a)g(desktop)523
3190 y(with)i(3.5GHz)g(In)n(tel)g(Core)1388 3154 y FD(TM)1531
3190 y FE(i7-4770K)c(Quad-core)i(CPU,)i(16)f(GB)h(RAM)g(and)g(64-bit)
523 3290 y(Ubun)n(tu)c(Lin)n(ux)g(OS.)648 3390 y(Gr\177)-42
b(obner)27 b(basis)i(is)f(not)h(an)g(e\016cien)n(t)g(engine)f(for)h
(solving)f(con)n(temp)r(orary)e(CNF-SA)-7 b(T)523 3490
y(b)r(enc)n(hmarks)31 b(that)h(are)e(of)i(large)e(size.)h(In)h(order)e
(to)i(v)-5 b(alidate)31 b(our)g(approac)n(h,)f(w)n(e)h(use)g(a)523
3589 y(customized)24 b(b)r(enc)n(hmark)g(library:)g("aim-100")d(is)k
(revised)f(from)g(ramdon)g(3-SA)-7 b(T)24 b(b)r(enc)n(h-)523
3689 y(mark)34 b("aim-50/100",)d("subset")j(is)h(generated)e(for)i(a)f
(random)g(subset)h(sum)g(problem,)523 3789 y("co)r(c)n(ktail")23
b(is)h(revised)g(from)h(a)f(mixed)h(factorization/random)d(3-SA)-7
b(T)24 b(b)r(enc)n(hmark,)g(and)523 3888 y("phole4/5")d(are)h
(generated)h(b)n(y)g(adding)g(redundandan)n(t)f(clauses)h(to)g(pigeon)g
(hole)g(b)r(enc)n(h-)523 3988 y(marks.)c(Moreo)n(v)n(er,)f(w)n(e)i
(created)g("3)t Ft(\002)t FE(3,)g(5)t Ft(\002)t FE(5)f(SMPO")h(b)r(enc)
n(hmarks)f(that)i(corresp)r(ond)e(to)523 4087 y(a)28
b(equiv)-5 b(alence)29 b(c)n(hec)n(king)e(instances)i(of)f(sequen)n
(tial)g(Galois)g(\014eld)h(normal)f(basis)g(mo)r(dulo)523
4187 y(m)n(ultiplier)22 b(implemen)n(tations)h([13)o(])f(against)f(a)h
(golden)g(mo)r(del)g(sp)r(ec.)g(Similarly)-7 b(,)22 b(the)h("2)p
Ft(\002)p FE(2)523 4287 y(MasVMon")i(b)r(enc)n(hmark)g(is)h(the)h
(miter)f(circuit)g(of)g(a)g(Mastro)n(vito)e(m)n(ultiplier)i(compared)
523 4386 y(against)i(a)g(Mon)n(tgomery)g(m)n(ultiplier.)h(The)g(CNF)g
(form)n(ulae)f(are)g(translated)g(as)h(p)r(olyno-)523
4486 y(mial)22 b(constrain)n(ts)e(o)n(v)n(er)g Fr(F)1342
4498 y FD(2)1401 4486 y FE(\(as)h(sho)n(wn)g(in)i([6)o(]\),)f(and)g
(the)g(GB-Core)f(algorithm)f(is)i(applied.)648 4526 y(In)e(T)-7
b(able)20 b(1,)g(w)n(e)g(list)h(the)f(details)g(of)h(our)e(exp)r
(erimen)n(tal)h(results.)g(In)g(the)h(table,)f(#P)n(olys)523
4625 y(denotes)29 b(the)h(giv)n(en)f(n)n(um)n(b)r(er)g(of)g(p)r
(olynomials)g(from)g(whic)n(h)h(a)f(core)f(is)h(to)h(b)r(e)g
(extracted.)523 4725 y(#MUS)i(is)f(the)g(minimal)h(core)e(extracted)g
(b)n(y)h(Haifa-MUC.)g(#calls)g(to)g(the)g(GB)g(engine)523
4825 y(corresp)r(onds)j(to)h(the)h(n)n(um)n(b)r(er)f(of)h(GB)g
(iterations)e(needed)i(to)f(arriv)n(e)f(at)h(a)h(irreducible)523
4924 y(core.)29 b(The)h(second)g(last)g(column)g(is)g(sho)n(wn)f(to)h
(depict)h(the)f(scop)r(e)g(of)g(reduction)g(in)g(core)1922
5173 y(12)p eop end
%%Page: 13 13
TeXDict begin 13 12 bop 1035 518 a FE(T)-7 b(able)27
b(1:)h FB(Results)d(of)i(running)e(b)r(enc)n(hmarks)g(using)h(our)g(to)
r(ol)p 583 549 2736 4 v 582 640 4 92 v 645 750 a(Benc)n(hmark)p
1177 640 V 1194 640 V 1207 704 a(#)1207 795 y(P)n(olys)p
1429 640 V 1443 704 a(#)1443 795 y(MUS)p 1642 640 V 1655
704 a(Size)g(of)g(core)1655 795 y(b)n(y)f(our)g(to)r(ol)p
2090 640 V 2103 704 a(#)h(calls)h(of)2103 795 y(GB)g(engine)p
2491 640 V 2505 613 a(#)e(redundan)n(t)2505 704 y(p)r(olynomials)2505
795 y(b)n(y)f(quotien)n(t)2505 887 y(cancellation)p 2987
640 V 3000 704 a(Run)n(time)3000 795 y(\(sec\))p 3317
640 V 582 731 V 1177 731 V 1194 731 V 1429 731 V 1642
731 V 2090 731 V 2491 731 V 2987 731 V 3317 731 V 582
823 V 1177 823 V 1194 823 V 1429 823 V 1642 823 V 2090
823 V 2491 823 V 2987 823 V 3317 823 V 582 914 V 1177
914 V 1194 914 V 1429 914 V 1642 914 V 2090 914 V 2491
914 V 2987 914 V 3317 914 V 583 917 2736 4 v 583 934
V 582 1025 4 92 v 670 998 a(5)18 b FA(\002)f FB(5)26
b(SMPO)p 1177 1025 V 1194 1025 V 164 w(240)p 1429 1025
V 110 w(137)p 1642 1025 V 216 w(137)p 2090 1025 V 349
w(8)p 2491 1025 V 391 w(57)p 2987 1025 V 299 w(3160)p
3317 1025 V 583 1029 2736 4 v 582 1120 4 92 v 749 1093
a(aim-100)p 1177 1120 V 1194 1120 V 263 w(79)p 1429 1120
V 148 w(22)p 1642 1120 V 254 w(22)p 2090 1120 V 368 w(1)p
2491 1120 V 411 w(0)p 2987 1120 V 355 w(43)p 3317 1120
V 583 1123 2736 4 v 582 1215 4 92 v 670 1187 a(3)18 b
FA(\002)f FB(3)26 b(SMPO)p 1177 1215 V 1194 1215 V 183
w(17)p 1429 1215 V 167 w(2)p 1642 1215 V 292 w(2)p 2090
1215 V 387 w(1)p 2491 1215 V 411 w(0)p 2987 1215 V 326
w(0.07)p 3317 1215 V 582 1306 V 596 1279 a(2)16 b FA(\002)h
FB(2)26 b(MasVMon)n(t)p 1177 1306 V 1194 1306 V 109 w(27)p
1429 1306 V 148 w(23)p 1642 1306 V 254 w(23)p 2090 1306
V 368 w(2)p 2491 1306 V 411 w(0)p 2987 1306 V 345 w(2.3)p
3317 1306 V 582 1397 V 776 1370 a(subset)p 1177 1397
V 1194 1397 V 270 w(100)p 1429 1397 V 148 w(6)p 1642
1397 V 292 w(6)p 2090 1397 V 387 w(1)p 2491 1397 V 411
w(0)p 2987 1397 V 345 w(2.4)p 3317 1397 V 582 1489 V
752 1461 a(co)r(c)n(ktail)p 1177 1489 V 1194 1489 V 247
w(135)p 1429 1489 V 148 w(4)p 1642 1489 V 292 w(4)p 2090
1489 V 387 w(2)p 2491 1489 V 411 w(1)p 2987 1489 V 375
w(5)p 3317 1489 V 582 1580 V 772 1553 a(phole4)p 1177
1580 V 1194 1580 V 267 w(104)p 1429 1580 V 129 w(10)p
1642 1580 V 254 w(16)p 2090 1580 V 368 w(1)p 2491 1580
V 411 w(0)p 2987 1580 V 345 w(4.4)p 3317 1580 V 582 1671
V 772 1644 a(phole5)p 1177 1671 V 1194 1671 V 267 w(169)p
1429 1671 V 129 w(19)p 1642 1671 V 254 w(25)p 2090 1671
V 368 w(3)p 2491 1671 V 411 w(2)p 2987 1671 V 355 w(14)p
3317 1671 V 583 1675 2736 4 v 523 1951 a FE(size)38 b(due)g(to)g
(Theorem)g(2)g({)f(i.e.)i(ho)n(w)e(man)n(y)h(p)r(olynomials)f(ha)n(v)n
(e)g(zero-en)n(tries)f(in)j(the)523 2051 y(matrix)34
b Fw(M)9 b FE(.)34 b(The)h(data)f(sho)n(ws)f(that)i(in)g(most)g(of)f
(these)h(cases,)e(our)h(to)r(ol)g(can)g(pro)r(duce)523
2151 y(a)27 b(minimal)h(core)f(when)h(our)f(iterations)g(con)n(v)n
(erge.)e(F)-7 b(rom)28 b(the)g(exp)r(erimen)n(tal)f(results)g(w)n(e)523
2250 y(can)21 b(also)f(mak)n(e)h(the)h(observ)-5 b(ation)19
b(that)j(the)g(GB-core)e(algorithm,)g(particularly)g(Theorem)523
2350 y(2,)30 b(o\013ers)f(quite)h(a)f(lot)h(of)g(scop)r(e)f(for)h(iden)
n(tifying)g(redundan)n(t)f(p)r(olynomials)g(that)h(can)g(b)r(e)523
2449 y(eliminated)22 b(from)g(the)h(core)d(|)j(without)f(resorting)e
(to)i(a)g(brute-force)f(mem)n(b)r(ership)h(c)n(hec)n(k)523
2549 y(of)28 b(ev)n(ery)e(p)r(olynomial)h Fw(f)1307 2561
y Fv(i)1357 2549 y Ft(2)d Fw(F)30 b Ft(\000)18 b(f)p
Fw(f)1685 2561 y Fv(i)1712 2549 y Ft(g)p FE(.)523 2827
y Fx(7)112 b(Conclusions)523 3038 y FE(This)35 b(pap)r(er)f(addressed)g
(the)h(problem)f(of)h(iden)n(tifying)g(an)f(infeasible)h(core)e(of)i(a)
f(set)h(of)523 3138 y(m)n(ultiv)-5 b(ariate)33 b(p)r(olynomials,)g
(with)i(co)r(e\016cien)n(ts)e(from)h(a)f(\014eld,)h(that)g(ha)n(v)n(e)f
(no)h(common)523 3237 y(zeros.)24 b(The)i(problem)f(is)g(p)r(osed)g(in)
h(the)g(con)n(text)f(of)g(computational)g(algebraic)e(geometry)523
3337 y(and)32 b(solv)n(ed)f(using)g(the)i(Gr\177)-42
b(obner)31 b(basis)g(algorithm.)g(W)-7 b(e)32 b(sho)n(w)f(that)i(b)n(y)
e(recording)g(the)523 3437 y(data)f(pro)r(duced)h(b)n(y)g(the)g(Buc)n
(h)n(b)r(erger's)e(algorithm)g({)i(the)g Fw(S)5 b(pol)r(y)s
FE(\()p Fw(f)2727 3449 y Fv(i)2753 3437 y Fw(;)14 b(f)2831
3449 y Fv(j)2866 3437 y FE(\))31 b(pairs,)f(as)g(w)n(ell)523
3564 y(as)i(the)g(p)r(olynomials)g(of)g Fw(F)44 b FE(used)32
b(in)h(the)f(division)g(pro)r(cess)f Fw(S)5 b(pol)r(y)s
FE(\()p Fw(f)2771 3576 y Fv(i)2797 3564 y Fw(;)14 b(f)2875
3576 y Fv(j)2910 3564 y FE(\))2994 3517 y Fv(F)2973 3564
y Ft(\000)-44 b(!)3077 3576 y FD(+)3163 3564 y FE(1)32
b({)f(w)n(e)523 3663 y(can)25 b(iden)n(tify)i(certain)e(conditions)g
(under)g(whic)n(h)h(a)f(p)r(olynomial)g(can)h(b)r(e)g(discarded)e(from)
523 3763 y(a)36 b(core.)f(An)i(algorithm)e(w)n(as)h(implemen)n(ted)h
(within)g(the)f(Singular)g(computer)g(algebra)523 3863
y(to)r(ol)27 b(and)g(some)g(exp)r(erimen)n(ts)g(w)n(ere)g(conducted)g
(to)g(v)-5 b(alidate)27 b(the)h(approac)n(h.)e(While)i(the)523
3962 y(use)f(of)g(GB)g(engines)g(for)g(SA)-7 b(T)27 b(solving)f(has)h
(a)g(ric)n(h)f(history)-7 b(,)27 b(the)g(problem)g(of)g(unsat)g(core)
523 4062 y(iden)n(ti\014cation)e(hasn't)h(b)r(een)g(fully)g(addressed)e
(b)n(y)h(the)h(SA)-7 b(T)26 b(comm)n(unit)n(y)-7 b(.)25
b(W)-7 b(e)26 b(hop)r(e)g(that)523 4161 y(this)35 b(pap)r(er)e(will)i
(kindle)f(some)g(in)n(terest)g(in)g(this)h(topic)f(whic)n(h)g(is)g(w)n
(orth)n(y)f(of)h(atten)n(tion)523 4261 y(from)27 b(the)h(SA)-7
b(T)28 b(comm)n(unit)n(y)-7 b(.)523 4539 y Fx(References)561
4742 y FB(1.)43 b(A.)28 b(Nadel,)h(V.)g(Ryv)n(c)n(hin,)e(and)h(O.)h
(Stric)n(hman,)f(\\Accelerated)i(deletion-based)f(extraction)663
4833 y(of)35 b(minimal)g(unsatis\014able)f(cores,")i
Fh(Journal)g(on)g(Satis\014ability,)f(Bo)l(ole)l(an)h(Mo)l(deling)f
(and)663 4924 y(Computation)p FB(,)27 b(v)n(ol.)f(9,)g(pp.)f(27{51,)j
(2014.)1922 5173 y FE(13)p eop end
%%Page: 14 14
TeXDict begin 14 13 bop 561 448 a FB(2.)43 b(A.)28 b(Belo)n(v,)h(I.)f
(Lynce,)g(and)g(J.)h(Marques-Silv)l(a,)g(\\T)-6 b(o)n(w)n(ards)30
b(e\016cien)n(t)e(m)n(us)g(extraction,")h Fh(AI)663 540
y(Communic)l(ations)p FB(,)d(v)n(ol.)g(25,)h(no.)f(2,)g(pp.)g(97{116,)i
(2012.)561 631 y(3.)43 b(D.)17 b(Co)n(x,)g(J.)h(Little,)g(and)f(D.)g
(O'Shea,)h Fh(Ide)l(als,)h(Varieties,)h(and)g(Algorithms:)g(An)g(Intr)l
(o)l(duction)663 722 y(to)25 b(Computational)h(Algebr)l(aic)g(Ge)l
(ometry)g(and)g(Commutative)f(Algebr)l(a)p FB(.)68 b(Springer,)23
b(2007.)561 814 y(4.)43 b(W.)24 b(W.)g(Adams)g(and)f(P)-6
b(.)24 b(Loustaunau,)h Fh(An)h(Intr)l(o)l(duction)h(to)g(Gr\177)-39
b(obner)28 b(Bases)p FB(.)72 b(American)663 905 y(Mathematical)27
b(So)r(ciet)n(y)-6 b(,)26 b(1994.)561 996 y(5.)43 b(M.)27
b(Clegg,)i(J.)e(Edmonds,)g(and)f(R.)h(Impagliazzo,)i(\\Using)e(the)f
(Gr\177)-38 b(obner)27 b(Basis)h(Algorithm)663 1088 y(to)e(Find)g(Pro)r
(ofs)i(of)f(Unsatis\014abilit)n(y)-6 b(,")27 b(in)f Fh(A)n(CM)i(Symp)l
(osium)g(on)g(The)l(ory)h(of)f(Computing)p FB(,)663 1179
y(1996,)f(pp.)e(174{183.)561 1270 y(6.)43 b(C.)29 b(Condrat)h(and)f(P)
-6 b(.)29 b(Kalla,)i(\\A)e(Gr\177)-38 b(obner)29 b(Basis)i(Approac)n(h)
d(to)h(CNF)g(form)n(ulae)i(Prepro-)663 1362 y(cessing,")21
b(in)d Fh(International)23 b(Confer)l(enc)l(e)g(on)e(T)-6
b(o)l(ols)22 b(and)g(A)n(lgorithms)g(for)f(the)i(Construction)663
1453 y(and)28 b(A)n(nalysis)g(of)f(Systems)p FB(,)g(2007,)h(pp.)d
(618{631.)561 1544 y(7.)43 b(C.)38 b(Zengler)g(and)g(W.)f(Kuc)n(hlin,)h
(\\Extending)f(Clause)i(Learning)f(of)h(SA)-6 b(T)37
b(Solv)n(ers)h(with)663 1636 y(Bo)r(olean)27 b(Gr\177)-38
b(obner)26 b(Basis,")i(in)e Fh(Intl.)g(Workshop)j(Comp.)e(A)n(lgbr.)h
(Sci.)f(Comp.)p FB(,)e(2010.)561 1727 y(8.)43 b(J.)32
b(Lv,)f(P)-6 b(.)32 b(Kalla,)h(and)e(F.)h(Enescu,)f(\\E\016cien)n(t)i
(Gr\177)-38 b(obner)31 b(Basis)i(Reductions)e(for)i(Formal)663
1818 y(Veri\014cation)22 b(of)g(Galois)i(Field)e(Arithmetic)f
(Circuits,")j(in)d Fh(IEEE)j(T)-6 b(r)l(ans.)24 b(on)g(CAD)p
FB(,)e(v)n(ol.)g(32,)663 1910 y(no.)k(9,)g(2013,)i(pp.)d(1409{1420.)561
2001 y(9.)43 b(B.)37 b(Buc)n(h)n(b)r(erger,)g(\\Ein)g(Algorithm)n(us)h
(zum)e(Au\016nden)f(der)i(Basiselemen)n(te)h(des)f(Restk-)663
2092 y(lassenringes)20 b(nac)n(h)e(einem)h(n)n(ulldimensionalen)g(P)n
(olynomideal,")i(Ph.D.)e(dissertation,)h(Uni-)663 2183
y(v)n(ersit)n(y)25 b(of)h(Innsbruc)n(k,)e(1965.)523 2275
y(10.)43 b(A.)28 b(Gio)n(vini,)h(T.)g(Mora,)g(G.)g(Niesi,)g(L.)f
(Robbiano,)h(and)f(C.)h(T)-6 b(ra)n(v)n(erso,)29 b(\\"One)f(sugar)h
(cub)r(e,)663 2366 y(please")e(or)f(Selection)h(Strategies)g(in)f(the)g
(Buc)n(h)n(b)r(erger)g(Algorithm,")h(in)f Fh(ISSA)n(C)i('91:)f(Pr)l(o-)
663 2457 y(c)l(e)l(e)l(dings)h(of)e(the)i(1991)f(international)h(symp)l
(osium)g(on)e(Symb)l(olic)h(and)g(algebr)l(aic)h(c)l(omputa-)663
2549 y(tion)p FB(.)77 b(New)26 b(Y)-6 b(ork,)25 b(NY,)g(USA:)g(A)n(CM)h
(Press,)h(1991,)g(pp.)f(49{54.)523 2640 y(11.)43 b(J.-C.)30
b(F)-6 b(aug)n(~)-36 b(ere,)31 b(\\A)e(New)h(E\016cien)n(t)g(Algorithm)
g(for)h(Computing)f(Gr\177)-38 b(obner)30 b(Bases)h(\(F)3281
2648 y FC(4)3315 2640 y FB(\),")663 2731 y Fh(Journal)d(of)f(Pur)l(e)i
(and)f(Applie)l(d)f(A)n(lgebr)l(a)p FB(,)g(v)n(ol.)f(139,)h(pp.)f
(61{88,)i(June)d(1999.)523 2823 y(12.)43 b(W.)54 b(Dec)n(k)n(er,)h
(G.-M.)g(Greuel,)g(G.)g(P\014ster,)g(and)g(H.)f(Sc)n(h\177)-38
b(onemann,)54 b(\\)p Fa(Singular)g FB(3-)663 2914 y(1-3)63
b(|)g(A)f(computer)h(algebra)i(system)e(for)h(p)r(olynomial)g
(computations,")g(2011,)663 3005 y(h)n(ttp://www.singular.uni-kl.de.)
523 3097 y(13.)43 b(G.)20 b(B.)h(Agnew,)g(R.)e(C.)i(Mullin,)g(I.)f(On)n
(yszc)n(h)n(uk,)f(and)g(S.)h(A.)g(V)-6 b(anstone)33 b(\\An)19
b(implemen)n(tation)663 3188 y(for)26 b(a)f(fast)h(public-k)n(ey)e
(cryptosystem,")h Fh(Journal)j(of)f(CR)-6 b(YPTOLOGY)p
FB(,)25 b(v)n(ol.)g(3,)h(no.)g(2,)f(pp.)663 3279 y(63{79,)j(1991.)1922
5173 y FE(14)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
